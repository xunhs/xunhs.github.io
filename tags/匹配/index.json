[
    {
        "content": " \u201c\u4e66\u91cc\u603b\u7231\u5199\u51fa\u559c\u51fa\u671b\u5916\u7684\u508d\u665a\u201d-\u6162\u6162\u559c\u6b22\u4f60\u3002\u957f\u6c5f\u5927\u6865\uff0c\u6c5f\u6c49\u8def\u626b\u8857\u3002\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u6162\u6162\u559c\u6b22\u4f60 - \u83ab\u6587\u851a\",\rartist: \"\u83ab\u6587\u851a\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E6%85%A2%E6%85%A2%E5%96%9C%E6%AC%A2%E4%BD%A0%20-%20%E8%8E%AB%E6%96%87%E8%94%9A-9cc1e4-Ag.mp3\",\rcover: \"https://p2.music.126.net/VYZejIv5M-K4RsHKkyXQFQ==/109951165958895028.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E6%85%A2%E6%85%A2%E5%96%9C%E6%AC%A2%E4%BD%A0-%E8%8E%AB%E6%96%87%E8%94%9A-752aee-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r \u57ce\u5e02\u4e00\u89d2\u7684\u5fd9\u788c  \u7ec8\u4e8e\u6253\u5361\u4e86\u5fc3\u5fc3\u5ff5\u7684\u82b1\u7532\u7c89\n  \u5feb\u526a\n \u8fd9\u5c31\u662f\u7231\u5417  \u5e26\u7740\u4f60\u7684\u5bb6\u4eba\u6765\u770b\u6c5f\u6ee9\u5427\n  \u5e26\u7740\u4f60\u7684\u7231\u4eba\u4e5f\u6765\u6c5f\u6ee9\u5427\n \u795d\u798f\n \u5c0f\u5973\u5b69\u662f\u6700\u9753\u7684\u8857\u62cdmodel\uff01\u54c8\u54c8 \u88ab\u5979\u59d0\u59d0\uff08\u4e5f\u53ef\u80fd\u662f\u5979\u5988\u5988\uff09\u53d1\u73b0\u4e86\u6211\u5728\u62cd\u5979 \u8fd8\u8bf4\u6ca1\u4e8b\u4f60\u62cd\n \u6591\u9a6c\u7ebf \u52a8\u7269  \u88ab\u4e24\u53ea\ud83d\udd4a\u5582\u4e86\u72d7\u7cae\n  \u5f88\u6709\u610f\u601d\u7684\u5730\u94c1\u5ba3\u4f20\u753b\n A  \u4e0d\u540c\u89d2\u5ea6\u770b\u957f\u6c5f\u5927\u6865\uff08\u9f9f\u5c71\u516c\u56ed\uff09\n  \u5f88\u559c\u6b22\u8fd9\u6b3e\u6ee4\u955c\n  \u8f66\u6c34\u9a6c\u9f99\n  \u8fd9\u4e2a\u6ee4\u955c\u4e5f\u4e0d\u9519\n B C  \u6211\u88ab\u53d1\u73b0\u4e86\n D  \u7a7f\u68ad\n ",
        "description": "",
        "id": 0,
        "section": "posts",
        "tags": [
            "\u626b\u8857",
            "\u76f8\u518c"
        ],
        "title": "\u626b\u8857\u65e5\u8bb0\uff1a\u4e66\u91cc\u603b\u7231\u5199\u51fa\u559c\u51fa\u671b\u5916\u7684\u508d\u665a",
        "uri": "/posts/journals/2021-07-10-%E6%89%AB%E8%A1%97%E6%97%A5%E8%AE%B0%E4%B9%A6%E9%87%8C%E6%80%BB%E7%88%B1%E5%86%99%E5%87%BA%E5%96%9C%E5%87%BA%E6%9C%9B%E5%A4%96%E7%9A%84%E5%82%8D%E6%99%9A/"
    },
    {
        "content": " \u6b63\u5219\u8868\u8fbe\u5f0f\u672d\u8bb0\n \u53c2\u8003\u94fe\u63a5\uff1a\n\u5165\u95e8\u6559\u7a0b\n\u5728\u7ebf\u7ec3\u4e60\n\u8be6\u89e3\u53ca\u8d44\u6599\u6574\u7406\n\u57fa\u672c\u8bed\u6cd5 \u5b57\u7b26\u5206\u7c7b(char class) \u5206\u7c7b\u7b26[]\n\u8fd9\u4e2a\u7b26\u53f7\u7528\u6765\u8868\u793a\u903b\u8f91\u5173\u7cfb\u6216\uff0c\u6bd4\u5982[abc]\u8868\u793aa\u6216\u8005b\u6216c.[-.]\u8868\u793a\u7b26\u53f7-\u6216\u8005.\u53f7\n\u6ce8\u610f\u8fd9\u91cc\uff0c\u5728[]\u4e2d\u7684.\u53f7\u4ee3\u8868\u7684\u5c31\u662f\u8fd9\u4e2a\u7b26\u53f7\uff0c\u4f46\u662f\u5982\u679c\u5728\u5176\u5916\u9762\uff0c\u8868\u793a\u4e2a\u5339\u914d\u6240\u6709\u3002 \u6240\u4ee5\u5982\u679c\u4e0d\u5728[]\u4e4b\u4e2d\uff0c\u60f3\u8981\u5339\u914d'.'\uff0c\u5c31\u8981\u901a\u8fc7\u8f6c\u610f\u7b26\u53f7\\.\n\u5339\u914d\u6240\u6709\u53ef\u80fd\u7684\u7535\u8bdd\u53f7\u7801  These are some phone numbers 915-134-3122. Also,\nyou can call me at 643.123.1333 and of course,\nI&rsquo;m always reachable at (212)867-5509\n  \u7b2c\u4e00\u6b65\uff1a\u5339\u914d\u8fde\u5b57\u7b26-\u7684\u60c5\u51b5: \\d{3}-\\d{3}-\\d{4} \u7b2c\u4e8c\u6b65\uff1a\u5339\u914d\u8fde\u5b57\u7b26-\u4e0e.\u7684\u60c5\u51b5: \\d{3}[-.]\\d{3}[-.]\\d{4} \u7b2c\u4e09\u6b65\uff1a\u5339\u914d\u62ec\u53f7: \\(?\\d{3}[-.)]\\d{3}[-.]\\d{4}  []\u7684\u7279\u6b8a\u8bed\u6cd5  \u8fde\u63a5\u7b26-\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\u65f6:\n\u6bd4\u5982[-.]\u7684\u542b\u4e49\u662f\u8fde\u5b57\u7b26-\u6216\u8005\u70b9\u7b26.\u3002 \u4f46\u662f\uff0c\u5982\u679c\u5f53\u8fde\u5b57\u7b26\u4e0d\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\u65f6\uff0c\u6bd4\u5982[a-z]\uff0c\u8fd9\u5c31\u8868\u793a\u662f\u4ece\u5b57\u6bcda\u5230\u5b57\u7b26z\u3002 []\u4e2d\u7684^\u8868\u793a\u975e:\n^\u5728\u4e4b\u524d\u4ecb\u7ecd\u4e2d\uff0c\u662f\u8868\u793a\u4e00\u884c\u5f00\u5934\uff0c\u4f46\u662f\u5728[]\u4e2d\uff0c\u6709\u7740\u4e0d\u540c\u7684\u542b\u4e49\u3002 [ab] \u8868\u793aa\u6216\u8005b [^ab] \u5565\u90fd\u884c\uff0c\u53ea\u8981\u4e0d\u662fa\u6216b(anythings except a and b)\uff0c\u76f8\u5f53\u4e8e\u53d6\u53cd []\u548c():\n\u9664\u4e86\u4f7f\u7528[]\u8868\u793a\u6216\u903b\u8f91,()\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u7528\u6cd5\u662f(a|b)\u8868\u793aa\u6216\u8005b  \u4e00\u4e2a\u4f8b\u5b50 \u5339\u914d\u6240\u6709email:\n gaoyaqi411@126.com dyumc@google.net\nsam@sjtu.edu\n \u601d\u8def\uff1a\n \u4efb\u4f55\u4e00\u4e2a\u4ee5words\u5f00\u5934\u7684\uff0c\u4e00\u4e2a\u6216\u66f4\u591a \\w+ \u7d27\u63a5\u7740\u662f\u4e00\u4e2a@\u7b26\u53f7 \\w+@ \u63a5\u7740\u6709\u4e00\u4e2a\u6216\u8005\u66f4\u591a\u7684words \\w+@\\w+ \u63a5\u7740\u4e00\u4e2a.\u6807\u70b9 \\w+@\\w+\\. \u63a5\u7740\u4e00\u4e2acom net \u6216 edu \\w+@\\w+\\.(com|net|edu)  \u597d\u4e86\uff0c\u8fd9\u6837\u51e0\u53ef\u4ee5\u5339\u914d\u4ee5\u4e0a\u7684\u6240\u6709\u90ae\u7bb1\u4e86\u3002\u4f46\u662f\u8fd8\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u56e0\u4e3a\u90ae\u7bb1\u7528\u6237\u540d\u662f\u53ef\u4ee5\u6709.\u7684\uff0c\u6bd4\u5982vincent.ko@126.com,\u4fee\u590d\u5982\u4e0b\uff1a [\\w.]+@\\w+\\.(com|net|edu)\n\u5206\u7ec4\u6355\u83b7(capturing groups) \u7535\u8bdd\u53f7\u7801\u7684\u4f8b\u5b50\n 212-555-1234\n915-412-1333\n \\d{3}-(\\d{3})-(\\d{4})\u90a3\u4e48\u5206\u7ec4\u5c31\u662f\u4e0b\u9762\u7684\u60c5\u51b5\uff1a\n212-555-1234 Group0 555 Group1 1234 Group2 \u9009\u62e9\u5206\u7ec4 \u8fd9\u91cc\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u7b2c\u4e00\u79cd\u4f7f\u7528$\u7b26\u53f7\uff0c\u6bd4\u5982$1 \u4ee3\u8868555,$2\u4ee3\u88681234\uff1b\u7b2c\u4e8c\u79cd\uff0c\u4f7f\u7528,\u6bd4\u5982\\1\u4ee3\u8868555\u3002\u4e24\u79cd\u7684\u4f7f\u7528\u573a\u666f\u4e0d\u4e00\u6837\n$\u9009\u62e9\u7b26\u662f\u5728\u66ff\u6362\u7684\u65f6\u5019\u8fdb\u884c\u7684\u6807\u5fd7\u6216\u9009\u62e9\uff0c\u4f46\u662f\u5982\u679c\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u672c\u8eab\uff0c\u5c31\u8981\u4f7f\u7528\\\u9009\u62e9\u4e86\n\u4f8b\u5982\uff0c\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u60f3\u8981\u4fdd\u7559\u533a\u53f7\uff0c\u628a\u540e\u9762\u7684\u7535\u8bdd\u53f7\u7801\u53d8\u4e3a\u901a\u7528\u6027\u7684\uff1a212-xxx-xxxx\u7684\u5f62\u5f0f\uff0c\u7528\u5230replace\u51fd\u6570\u8fdb\u884c\u64cd\u4f5c\uff1a\nreg: \\(?(\\d{3})[-.)]\\d{3}[-.]\\d{4} replace: $1-xxx-xxxx $\u66ff\u6362   \u73b0\u5728\u6709\u4e00\u4e2a\u540d\u5355\u5217\u8868\uff0c\u4f46\u662f\u59d3\u548c\u540d\u79f0\u662f\u53cd\u7684\uff0c\u6211\u9700\u8981\u628a\u4ed6\u4ea4\u6362\u8fc7\u6765\n shiffina, Daniel\nshifafl, Daniell\nshquer, Danny\n&hellip;\n   \u5b9e\u73b0\u65b9\u6cd5:  ``` reg: (\\w+),\\s(\\w+) replace: $2 $1 ```   \n\u6ce8\u610f\uff1a$0 \u662f\u6240\u6709\u5339\u914d\u5230\u7684\uff0c\u6240\u4ee5\u7b2c\u4e00\u4e2a\u52a0\u62ec\u53f7\u7684\u662f$1\n  \u5339\u914dmarkdown\u4e2d\u7684link\u6807\u7b7e\uff0c\u5e76\u66ff\u6362\u4e3ahtml\u6807\u7b7e\n [google](http://google.com), [test]\n[itp](http://itp.nyu.edu)\n[Coding Rainbow](http://codingrainbow.com)\n \u7b2c\u4e00\u4e2a\u60f3\u8003\u8651\u5339\u914d[google]\u8fd9\u4e2a\u4e1c\u897f\uff0c\u7acb\u9a6c\u60f3\u5230\u6b63\u5219\u8868\u8fbe\u5f0f\\[.*\\]\u3002\u7b2c\u4e00\u884c\u7684\u5185\u5bb9\u4f1a\u5168\u90e8\u5339\u914d\u4e0b\u6765\uff0c\u800c\u4e0d\u80fd\u533a\u5206[google]\u548c[test]\u3002 \u4e4b\u6240\u4ee5\u8fd9\u6837\uff0c\u662f\u56e0\u4e3a.\u662f\u8d2a\u5a6a\u7684\uff0c\u4ed6\u8868\u793a\u6240\u6709\uff0c\u6240\u6709\u80fd\u5339\u914d\u5230\u7684\uff0c\u6240\u4ee5\u5f53\u7136\u4e5f\u5305\u62ec\u4e86]\uff0c\u4e00\u76f4\u5230\u8fd9\u4e00\u884c\u7684\u6700\u540e\u4e00\u4e2a]\uff0c\u5b83\u624d\u505c\u6b62\u3002\u6240\u4ee5\u4e3a\u4e86\u8ba9\u5b83\u80fd\u6b63\u786e\u5339\u914d\uff0c\u9700\u8981\u53bb\u6389\u8fd9\u79cd\u8d2a\u5a6a\u7684\u5c5e\u6027\u3002\u8fd9\u91cc\u7528\u5230\uff1f \u3002 \u5f53?\u653e\u5728\u4e86quantifiers\u7b26\u53f7\u540e\uff0c\u8868\u793a\u53bb\u6389\u8d2a\u5a6a\u5c5e\u6027\uff0c\u5339\u914d\u5230\u7ec8\u6b62\u6761\u4ef6\uff0c\u5373\u53ef\u505c\u4e0b\u3002\u5373\\[.*?\\]\n  \u5b9e\u73b0\u65b9\u6cd5:  ``` reg: \\[(.*?)\\]\\((http.*?)\\) replace: &lt;a href=&quot;$2&quot;&gt;$1&lt;/a&gt; ```   \n  \u4f7f\u7528\\\u9009\u62e9\u5668  This is is a a dog , I think think this is is really\na a good good dog. Don&rsquo;t you you thinks so so ?\n \u6211\u4eec\u60f3\u8981\u5339\u914d\u6bd4\u5982is is so so\u8fd9\u6837\u8fde\u7eed\u7684\u5e8f\u5217:(\\b\\w+\\b)\\s\\1\n\u5173\u4e8e(\u5b50\u8868\u8fbe\u5f0f)\u7684\u6269\u5c55 \u5e38\u7528\u6b63\u5219\u8868\u8fbe\u5f0f  \u4e2d\u6587\n[\\u4e00-\\u9fa5]  ",
        "description": "",
        "id": 1,
        "section": "posts",
        "tags": [
            "\u5339\u914d",
            "\u5b57\u7b26\u4e32",
            "\u672d\u8bb0",
            "\u6b63\u5219",
            "\u6b63\u5219\u8868\u8fbe\u5f0f",
            "\u901a\u914d\u7b26",
            "\u8bed\u6cd5"
        ],
        "title": "\u672d\u8bb0\uff1a\u6b63\u5219\u8868\u8fbe\u5f0f",
        "uri": "/posts/notes/%E6%9C%AD%E8%AE%B0%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"
    },
    {
        "content": "unipath   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  from pathlib import Path path = Path(&#34;../root&#34;) new_path = path / &#34;new_dir&#34; / &#34;file&#34; # \u8def\u5f84\u62fc\u63a5 # \u57fa\u672c\u5c5e\u6027: path.suffix\u3000#\u6587\u4ef6\u540e\u7f00 path.stem\u3000#\u6587\u4ef6\u540d\u4e0d\u5e26\u540e\u7f00 path.name\u3000#\u5e26\u540e\u7f00\u7684\u5b8c\u6574\u6587\u4ef6\u540d path.parent\u3000#\u8def\u5f84\u7684\u4e0a\u7ea7\u76ee\u5f55 # \u57fa\u672c\u51fd\u6570: path.iterdir()\u3000#\u904d\u5386\u76ee\u5f55\u7684\u5b50\u76ee\u5f55\u6216\u8005\u6587\u4ef6 path.glob(pattern)\u3000#\u8fc7\u6ee4\u76ee\u5f55(\u8fd4\u56de\u751f\u6210\u5668) # -- example -- Path(&#39;.&#39;).glob(&#39;*.py&#39;) # \u904d\u5386py\u6587\u4ef6 # &gt;&gt;&gt; [Path(&#39;pathlib.py&#39;), Path(&#39;setup.py&#39;), Path(&#39;test_pathlib.py&#39;)] Path(&#39;.&#39;).glob(&#39;*/*.py&#39;) # &gt;&gt;&gt; [Path(&#39;docs/conf.py&#39;)] Path(&#39;.&#39;).glob(&#39;**/*.py&#39;) # \u9012\u5f52\u904d\u5386py\u6587\u4ef6 # &gt;&gt;&gt; [Path(&#39;build/lib/pathlib.py&#39;), Path(&#39;docs/conf.py&#39;),  # Path(&#39;pathlib.py&#39;), Path(&#39;setup.py&#39;), Path(&#39;test_pathlib.py&#39;)] # --- path.exists()\u3000#\u5224\u65ad\u8def\u5f84\u662f\u5426\u5b58\u5728 path.is_dir()\u3000#\u5224\u65ad\u662f\u5426\u662f\u76ee\u5f55 path.is_file() #\u5224\u65ad\u662f\u5426\u662f\u6587\u4ef6 path.mkdir(parents=False, exist_ok=False)\u3000#\u521b\u5efa\u76ee\u5f55 # If parents is true, any missing parents of this path are created as needed # If exist_ok is true, FileExistsError exceptions will be ignored path.unlink()\u3000#\u5220\u9664\u6587\u4ef6\u6216\u76ee\u5f55(\u76ee\u5f55\u975e\u7a7a\u89e6\u53d1\u5f02\u5e38) path.open(mode=&#39;r&#39;, encoding=None)\u3000#\u6253\u5f00\u6587\u4ef6(\u652f\u6301with) path.with_name()\u3000#\u66f4\u6539\u5b8c\u6574\u6587\u4ef6\u540d\u79f0 path.with_suffix()\u3000#\u66f4\u6539\u540e\u7f00 path.with_stem() #\u66f4\u6539\u6587\u4ef6\u540d\u4e0d\u5e26\u540e\u7f00 # -- example -- Path(&#39;c:/Downloads/draft.txt&#39;).with_stem(&#39;final&#39;) # &gt;&gt;&gt; Path(&#39;c:/Downloads/final.txt&#39;) # ---   ",
        "description": "",
        "id": 2,
        "section": "moments",
        "tags": [
            "Python",
            "unipath",
            "\u8def\u5f84\u64cd\u4f5c",
            "Path"
        ],
        "title": "Python\u8def\u5f84\u64cd\u4f5c:unipath\u5e38\u7528\u65b9\u6cd5",
        "uri": "/moments/python%E8%B7%AF%E5%BE%84%E6%93%8D%E4%BD%9C-unipath%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"
    },
    {
        "content": "1 2 3 4 5 6 7  # https://zhuanlan.zhihu.com/p/30670193 # pip install PySocks import socks import socket socks.set_default_proxy(socks.SOCKS5, &#39;192.168.123.155&#39;, 7891) socket.socket = socks.socksocket   ",
        "description": "",
        "id": 3,
        "section": "moments",
        "tags": null,
        "title": "Python\u8bbe\u7f6e\u5168\u5c40\u4ee3\u7406",
        "uri": "/moments/2021-07-03-python%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80%E4%BB%A3%E7%90%86/"
    },
    {
        "content": "  \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u63a8\u5f00\u4e16\u754c\u7684\u95e8\",\rartist: \"\u6768\u4e43\u6587\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E6%8E%A8%E5%BC%80%E4%B8%96%E7%95%8C%E7%9A%84%E9%97%A8%20-%20%E6%9D%A8%E4%B9%83%E6%96%87-eefcf7.mp3\",\rcover: \"http://p3.music.126.net/4ESdAPfVH-tAMl-pRYNE3A==/3399689972238493.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E6%8E%A8%E5%BC%80%E4%B8%96%E7%95%8C%E7%9A%84%E9%97%A8-%E6%9D%A8%E4%B9%83%E6%96%87-270481-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2021.7.1 \u5efa\u515a\u767e\u5e74\uff1a\u8c01\u5984\u60f3\u6b3a\u8d1f\u4e2d\u56fd\u5fc5\u5c06\u78b0\u5f97\u5934\u7834\u8840\u6d41\uff01 2021.7.2 \u5fc3\u788e\u5230\u592a\u7a7a \u5916\u661f\u4eba\u62ff\u6765\u7814\u7a76 \u53d1\u73b0\u53ea\u6709\u4f60\u7684\u540d\u5b57 2021.7.3 \u4e00\u53e3\u6c14\u770b\u5b8c\u5143\u9f99\u7b2c\u4e00\u5b63 \ud83d\ude02 2021.7.4 playground \u5b8c\u6210:\rKeras example-Text classification from scratch, my code: https://colab.research.google.com/drive/1HN6aPjVsoevc51eVYMQ_B2EKCYXzIx_R?usp=sharing 2021.7.5 \u201c\u4e0d\u52a1\u6b63\u4e1a\u201d \u5c31\u7231\u778e\u6298\u817e\u554a\u554a \ud83c\udf73 2021.7.6 You&rsquo;re a bright young man. This monkey business is in your blood, under your skin. You\u2019re not getting out, you\u2019re just getting in. I\u2019ve every faith in you. 2021.7.7 \u7ec8\u4e8e\u628a\u6b63\u5219\u8868\u8fbe\u5f0f\u641e\u660e\u767d\u4e86\u4e00\u70b9\u70b9\u3002\u522b\u8bf4\u8fd8\u633a\u6709\u610f\u601d 2021.7.8 \u7761\u7720\u8d8a\u6765\u8d8a\u5dee\u4e86 2021.7.9 \u8bd5\u8bd5\u53ef\u4ee5\u591a\u4e45\u4e0d\u53d1\u670b\u53cb\u5708; \u4e0d\u662f\u6240\u6709\u7684\u9c7c\u90fd\u4f1a\u751f\u6d3b\u5728\u540c\u4e00\u7247\u6d77\u91cc 2021.7.10 \u626b\u8857\u65e5\u8bb0 1\uff1a\u66f8\u88e1\u7e3d\u611b\u5beb\u5230\u559c\u51fa\u671b\u5916\u7684\u508d\u665a 2021.7.11 \u4e0b\u6b21\u786e\u5b9e\u53ef\u4ee5\u597d\u597d\u8bd5\u63a2\u4e00\u4e0b\u767d\u9152\u7684\u809a\u91cf \u5c11\u5403\u70b9\u83dc 2021.7.12 \u6709\u4e9b\u8bdd\u4f60\u9009\u62e9\u4e0d\u5bf9\u4ed6\u8bf4 2021.7.13 \u4eca\u5929\u9ad8\u8001\u5e08\u6765\u5730\u5927\u4f5c\u62a5\u544a\uff0c\u7ec8\u4e8e\u6709\u673a\u4f1a\u4e0e\u9ad8\u8001\u5e08\u5728\u7ebf\u4e0b\u89c1\u9762\u3002\u6ca1\u6709\u60f3\u8c61\u4e2d\u90a3\u79cd\u5c34\u5c2c\uff0c\u62a5\u544a\u7ed3\u675f\u540e\u9ad8\u8001\u5e08\u8fd8\u7279\u610f\u548c\u6211\u8ba8\u8bba\u5b9e\u9a8c\u7684\u8fdb\u5c55\uff0c\u611f\u89c9\u6bd4\u7ebf\u4e0a\u4ea4\u6d41\u66f4\u52a0\u4eb2\u5207\u4e00\u4e9b\u3002\u6bd4\u8f83\u597d\u73a9\u7684\u662f\u4e00\u4e2a\u6bd4\u55bb-\u7f51\u53cb\u5954\u73b0\u3002\u53e6\u4e00\u70b9\u611f\u89e6\u6bd4\u8f83\u6df1\u7684\u662f\u5173\u8001\u5e08\u6700\u540e\u62a5\u544a\u7684\u603b\u7ed3\uff0c\u5f15\u7533\u5230\u7814\u7a76\u6280\u672f\u53ca\u65b9\u5411\u7684\u524d\u77bb\u6027\uff0c\u548c\u5730\u7406\u7a7a\u95f4\u601d\u7ef4\u4e0e AI \u601d\u7ef4\u7ed3\u5408\u7684\u95ee\u9898\u3002\u975e\u5e38\u5f15\u4eba\u6df1\u601d\u3002\u5173\u8001\u5e08\u63d0\u53ca\u57f9\u517b\u4e00\u79cd\u524d\u77bb\u6027\u7684\u7d20\u517b\uff0c\u5c06\u524d\u77bb\u6027\u8003\u8651\u8fdb\u7814\u7a76\u8bfe\u9898\u7684\u89c4\u5212\u5f53\u4e2d\uff0c\u4f8b\u5982\u9ad8\u8001\u5e08\u505a\u7684\u7a7a\u95f4\u9690\u79c1\u4fdd\u62a4(geoprivacy)\u7684\u7814\u7a76\uff0c\u5728\u5f53\u524d\u6ef4\u6ef4\u4e8b\u4ef6\u8fd9\u4e2a\u65f6\u95f4\u8282\u70b9\u4fbf\u663e\u5f97\u5341\u5206\u91cd\u8981\uff0c\u5373\u4f53\u73b0\u7814\u7a76\u7684\u524d\u77bb\u6027\u3002\u5728\u6211\u4eec\u89c4\u5212\u4ee5\u540e\u7684\u7814\u7a76\u8bfe\u9898\u7684\u65f6\u5019\uff0c\u6bd4\u5982\u81ea\u5df1\u535a\u58eb\u4e4b\u540e\u7684\u7814\u7a76\u8bfe\u9898\uff0c\u9700\u8981\u597d\u597d\u8003\u8651\u8fd9\u79cd\u524d\u77bb\u6027\uff0c\u56e0\u4e3a\u8fd9\u79cd\u524d\u77bb\u6027\u7684\u95ee\u9898\u201c\u6bd4\u8f83\u5bb9\u6613\u53d7\u5230\u5173\u6ce8\u201d\u3002\u603b\u4e4b\uff0c\u975e\u5e38\u5145\u5b9e\u7684\u4e00\u6b21\u62a5\u544a\u542c\u8bb2\uff0c\u4e5f\u5e0c\u671b\u81ea\u5df1\u4e0b\u534a\u5e74\u7684\u8d74\u7f8e\u8ba1\u5212\u80fd\u591f\u5b9e\u73b0\uff0c\u52a0\u6cb9\uff01\u2728\u2728\u2728 2021.7.14 \u5bf9\u524d\u7aef\u5176\u5b9e\u4e00\u76f4\u86ee\u611f\u5174\u8da3\uff0c\u5148 mark \u4e00\u4e0b\uff0c\u8981\u5b66\u7684\u4e1c\u897f\u592a\u591a\u4e86\r\u4ece 0 \u5f00\u59cb\u624b\u628a\u624b\u5e26\u4f60\u642d\u5efa\u4e00\u5957\u89c4\u8303\u7684 Vue3.x \u5de5\u7a0b\u5316\u9879\u76ee + 1.8W \u5b57|\u4e86\u4e0d\u8d77\u7684 TypeScript \u5165\u95e8\u6559\u7a0b\uff08\u7b2c\u4e8c\u7248\uff09 + TypeScript Playground + Vue \u5b98\u7f51\u6559\u7a0b + \u5b9e\u6218\uff1aTodo List \u4ece\u7ec4\u4ef6\u5230\u5e94\u7528 + \u5ed6\u96ea\u5cf0\u7684 Javascript \u5165\u95e8\u6559\u7a0b 2021.7.15 \u52a0\u6cb9 \u628a\u624b\u5934\u7684\u5de5\u4f5c\u4e00\u9f13\u4f5c\u6c14\u7684\u641e\u5b8c\uff01\ud83d\udd96  ",
        "description": "",
        "id": 4,
        "section": "posts",
        "tags": [
            "Keras",
            "\u5efa\u515a\u767e\u5e74",
            "\u6298\u817e",
            "\u6b63\u5219",
            "\u4e0d\u53d1\u670b\u53cb\u5708",
            "\u626b\u8857\u65e5\u8bb0",
            "\u7f51\u53cb\u5954\u73b0",
            "\u8d74\u7f8e\u8ba1\u5212"
        ],
        "title": "2021-7",
        "uri": "/posts/journals/2021-7/"
    },
    {
        "content": " \u4f60\u82e5\u662f\u559c\u6b22\u82b1\uff0c\u5c31\u628a\u5b83\u6390\u4e0b\u6765\u653e\u5728\u74f6\u5b50\u91cc\u517b\u7740\uff1b\u4f60\u8981\u662f\u559c\u6b22\u6811\uff0c\u4e5f\u53ef\u4ee5\u628a\u5b83\u6316\u51fa\u6765\u683d\u8fdb\u81ea\u5bb6\u9662\u5b50\u53bb\uff1b\u4f46\u6709\u7684\u4e1c\u897f\u4e0d\u884c\u3002\u4e0d\u884c\u5c31\u662f\u4e0d\u884c\u3002\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"Rolling Days\",\rartist: \"\u591c\u542c\u00b7\u5730\u5927\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/Rolling%20days-%E5%A4%9C%E5%90%AC%E5%9C%B0%E5%A4%A7-2021-01-25-53d952-Ag.mp3\",\rcover: \"\",\rlrc: \"\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r \u542c\u4e86\u5f88\u591a\u904d\u7684\u4f24\u611f\u6587\u5b66\u3002\u6765\u6e90\uff1ahttps://mp.weixin.qq.com/s/UoNeEWS8xX3pik8WiHjLIQ\n \u6211\u77e5\u9053\u6211\u4eec\u7684\u670b\u53cb\u4e0d\u540c\uff0c\u6211\u4eec\u7684\u57ce\u5e02\u4e0d\u540c\uff0c\u6211\u4eec\u7684\u5904\u5883\u4e0d\u540c\u4eba\u751f\u7684\u65b9\u5411\u4e0d\u540c\uff0c\u4f46\u6211\u52aa\u529b\u5f00\u8f9f\u65b0\u7684\u8f68\u9053\u4ee5\u6c42\u8d70\u8fdb\u4f60\u7684\u4e16\u754c\uff0c\u50cf\u662f\u4e00\u68f5\u6811\u751f\u62c9\u786c\u626f\u6539\u53d8\u751f\u957f\u7684\u65b9\u5411\uff0c\u60f3\u8981\u53bb\u89e6\u78b0\u56f4\u5899\u4e4b\u5916\u7684\u98de\u9e1f\u3002 \u4f60\u82e5\u662f\u559c\u6b22\u82b1\uff0c\u5c31\u628a\u5b83\u6390\u4e0b\u6765\u653e\u5728\u74f6\u5b50\u91cc\u517b\u7740\uff1b\u4f60\u8981\u662f\u559c\u6b22\u6811\uff0c\u4e5f\u53ef\u4ee5\u628a\u5b83\u6316\u51fa\u6765\u683d\u8fdb\u81ea\u5bb6\u9662\u5b50\u53bb\uff1b\u4f46\u6709\u7684\u4e1c\u897f\u4e0d\u884c\u3002\u4e0d\u884c\u5c31\u662f\u4e0d\u884c\u3002 ",
        "description": "",
        "id": 6,
        "section": "moments",
        "tags": null,
        "title": "Rolling Days",
        "uri": "/moments/2021-06-28-rolling-days/"
    },
    {
        "content": "1 2 3 4  # jupyter  jupyter.xunhs.cyou # ssh ssh -p 21039 summer@43.249.192.204   ",
        "description": "",
        "id": 7,
        "section": "moments",
        "tags": null,
        "title": "\u8fdc\u7a0b",
        "uri": "/moments/2021-06-21-%E8%BF%9C%E7%A8%8B/"
    },
    {
        "content": "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  import requests def tg_push(message, parse_mode=&#39;HTML&#39;): # https://blog.jialezi.net/?post=168 # https://core.telegram.org/bots/api#sendmessage proxy_pre_str = &#39;https://thingproxy.freeboard.io/fetch/&#39; # sendMessage\uff08\u76f4\u63a5\u6587\u672c\uff0c\u652f\u6301MarkdownV2/HTML\uff09 req_body_str = &#39;https://api.telegram.org/bot1790677966:AAH_jczd4hiHl159Yi5RkuRdhfju12hwA64/sendMessage&#39; chat_id = 1753106187 req_data = { &#39;chat_id&#39;: chat_id, &#39;text&#39;: str(message), &#39;parse_mode&#39;: parse_mode } return requests.post(url=proxy_pre_str+req_body_str, data=req_data)   ",
        "description": "",
        "id": 9,
        "section": "moments",
        "tags": null,
        "title": "Telegram Bot",
        "uri": "/moments/2021.6.17-telegram-bot/"
    },
    {
        "content": " \rSakuraFrp\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7528\u7684\u5185\u7f51\u7a7f\u900f\u5de5\u5177\uff0c\u672c\u6587\u8bb0\u5f55\u914d\u7f6e\u8fc7\u7a0b\uff0c\u5305\u542bssh\u548chttp\u4e24\u7c7b\u914d\u7f6e\u6d41\u7a0b\u3002\n \u5b9e\u4f8b\u4e00\uff1a\u5185\u7f51\u7a7f\u900fopenwrt ssh \uff08\u6811\u8393\u6d3e3B+\uff09 \u521b\u5efa\u96a7\u9053  \u7a7f\u900f\u8282\u70b9\uff1a\u666e\u901a\u9ad8\u9632\u5373\u53ef \u96a7\u9053\u7c7b\u578b\uff1aTCP \u672c\u5730\u5730\u5740\uff1a\u6ce8\u610f\u9700\u586b\u5199\u771f\u5b9eip\u5730\u5740\uff0c127.0.0.1\u6b64\u5904\u4e0d\u9002\u7528 \u672c\u5730\u7aef\u53e3\uff1a22  \n\u8fd0\u884c\u5b89\u88c5 Linux\u4e00\u952e\u5b89\u88c5  Linux \u81ea\u52a8\u5b89\u88c5\u811a\u672c\uff1abash &lt;(curl -s https://getfrp.sh) \u5b8c\u6210\u540e\u663e\u793a\uff1a 1 2 3  \u4f7f\u7528 systemctl stop frpc &amp;&amp; systemctl disable frpc \u547d\u4ee4\u505c\u6b62\u670d\u52a1 \u4f7f\u7528 systemctl status frpc \u547d\u4ee4\u67e5\u770b\u670d\u52a1\u72b6\u6001\u548c frpc \u65e5\u5fd7 \u4f7f\u7528 rm -f /lib/systemd/system/frpc.service \u547d\u4ee4\u5220\u9664\u670d\u52a1\u914d\u7f6e     \u6811\u8393\u6d3e\u7aef \u4e0b\u8f7d\u8f6f\u4ef6  uname -a\u67e5\u770b\u5185\u6838\uff1a  \u8fd4\u56de\uff1aLinux OpenWrt 5.4.124 #0 SMP Fri Jun 11 17:57:31 2021 aarch64 GNU/Linux aarch64\u5373arm64   \u524d\u5f80https://www.natfrp.com/tunnel/download/\uff0c\u9009\u62e9Linux (arm64)\uff0c\u9002\u7528\u4e8e\u6811\u8393\u6d3e3B+  \u8fd0\u884cfrpc  \u8d4b\u6743\uff1achmod 777 frpc_linux_arm64 \u8fd0\u884c\uff1a ./frpc_linux_arm64 -f 3ebb876549ee0ca6:1407145  \u5ba2\u6237\u7aef\u8fde\u63a5  \u9a8c\u8bc1\uff1a\u524d\u5f80\u96a7\u9053\u5217\u8868\u67e5\u770b\u96a7\u9053\u662f\u5426\u5728\u7ebf \u8fd0\u884c\uff1assh -p 13694 root@cn-zz-bgp-1.natfrp.cloud  \u5b9e\u4f8b\u4e8c\uff1a\u5185\u7f51\u7a7f\u900fjupyter notebook\uff08win10\uff09 \u6b64\u5904\u4ec5\u914d\u7f6e\u5185\u7f51\u7a7f\u900f\uff0c\u5047\u8bbe\u7cfb\u7edf\u5df2\u7ecf\u914d\u7f6e\u597djupyter\u73af\u5883(192.168.123.87:10086)\n\u521b\u5efa\u96a7\u9053  \u7a7f\u900f\u8282\u70b9\uff1a\u56fd\u5916\uff0c\u53ef\u5efa\u7ad9 \u96a7\u9053\uff1aHTTP \u672c\u5730\u7aef\u53e3\uff1a10086 \u7ed1\u5b9a\u57df\u540d\uff1ajupyter.xunhs.cyou  \n\u4e0b\u8f7d\u8f6f\u4ef6 \u672c\u6b21\u73af\u5883\u4e3awin10\uff0c\u4e0b\u8f7dwin10\u7248\u672c\u5373\u53ef\n\u8fd0\u884cfrpc  win10\u73af\u5883\u4e0b\u8be5\u8f6f\u4ef6\u4e00\u952e\u5b89\u88c5\uff0c\u914d\u7f6e\u8f83\u4e3a\u7b80\u5355 \u6839\u636e\u65e5\u5fd7\u63d0\u793a\uff0c\u6dfb\u52a0DNS\u8bb0\u5f55\uff0c\u672c\u4f8b\u4e2d\u4f7f\u7528\u7684\rnamesilo \u7b49\u5f85\u81f3\u5c1115\u5206\u949f\uff08\u534a\u5929\u4e5f\u662f\u6709\u53ef\u80fd\u7684\ud83d\ude02\uff09\u751f\u6548  \u5ba2\u6237\u7aef\u8fde\u63a5  \u6d4f\u89c8\u5668\u8f93\u5165 http://jupyter.xunhs.cyou \u5373\u53ef\u8bbf\u95ee  ",
        "description": "",
        "id": 11,
        "section": "posts",
        "tags": [
            "\u672d\u8bb0",
            "\u5185\u7f51\u7a7f\u900f",
            "frp"
        ],
        "title": "2021-06-15-SakuraFrp\u914d\u7f6e\u672d\u8bb0",
        "uri": "/posts/notes/2021-06-15-sakurafrp%E9%85%8D%E7%BD%AE%E6%9C%AD%E8%AE%B0/"
    },
    {
        "content": " \u4e00\u4e9b\u53d1\u8868\u5728\u201c\u597d\u671f\u520a\u4f46\u5f88\u6709\u610f\u601d\u201d\u7684\u8bba\u6587&quot;\n 2021-Staying at Home Is a Privilege: Evidence from Fine-Grained Mobile Phone Location Data in the United States during the COVID-19 Pandemic 2021-Sensing Mixed Urban Land-Use Patterns Using Municipal Water Consumption Time Series ",
        "description": "",
        "id": 12,
        "section": "posts",
        "tags": [
            "\u672d\u8bb0"
        ],
        "title": "2021-06-11-\u8bba\u6587\u6574\u7406\uff1a\u4e00\u4e9b\u53d1\u8868\u5728\u201c\u597d\u671f\u520a\u4f46\u5f88\u6709\u610f\u601d\u201d\u7684\u8bba\u6587",
        "uri": "/posts/notes/2021-06-11-%E8%AE%BA%E6%96%87%E6%95%B4%E7%90%86-%E4%B8%80%E4%BA%9B%E5%8F%91%E8%A1%A8%E5%9C%A8%E5%A5%BD%E6%9C%9F%E5%88%8A%E4%BD%86%E5%BE%88%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84%E8%AE%BA%E6%96%87/"
    },
    {
        "content": " \u8bb0\u5f55\u51fa\u79df\u8f66\u6570\u636e\u5904\u7406\u57fa\u672c\u6d41\u7a0b\u53ca\u90e8\u5206\u53ef\u89c6\u5316\u5206\u6790\u3002\n \u6570\u636e\u51c6\u5907\u53ca\u521d\u59cb\u5316 \u6837\u4f8b\u6570\u636e  \u6765\u6e90: https://www.cs.rutgers.edu/~dz220/data.html \u91c7\u96c6\u4fe1\u606f: 2013-10-22,\u6df1\u5733\u5e02 \u5b57\u6bb5: Taxi ID, Time, Latitude, Longitude, Occupancy Status, Speed;(Occupancy Status: 1-with passengers &amp; 0-with passengers;)  22223, 21:09:38, 114.116631, 22.582466, 19\n   \u521d\u59cb\u5316 1 2 3 4 5 6 7 8 9 10 11 12  import pandas as pd data_fp = &#39;Taxidata.gz&#39; data_df = pd.read_csv(data_fp, names=[&#39;taxi_id&#39;, &#39;time&#39;, &#39;lat&#39;, &#39;lon&#39;, &#39;status&#39;, &#39;speed&#39;]) data_df.head() # \u6570\u636e\u6e05\u7406 # \u6839\u636e\u72b6\u6001\u8fdb\u884c\u6761\u4ef6\u7b5b\u9009\uff0c\u6392\u9664\u9519\u8bef\u5b57\u6bb5 # \u6309id\u3001\u65f6\u95f4\u6392\u5e8f data_df = data_df.query(&#34;status in [0, 1]&#34;)\\ .sort_values(by=[&#39;taxi_id&#39;, &#39;time&#39;])\\ .reset_index(drop=True)   \u63d0\u53d6OD \u6839\u636e\u72b6\u6001\u7684\u53d8\u5316\u786e\u5b9a\u4e0a\u8f66\u70b9\u548c\u4e0b\u8f66\u70b9\u3002\u4e3b\u8981\u53c2\u8003\uff1ahttps://github.com/ni1o1/pygeo-tutorial/blob/master/1-taxigps_to_od.ipynb\n\u7b5b\u9009\uff0c\u6392\u9664\u5f02\u5e38 1 2 3 4 5 6 7 8 9 10  #status\u7528\u5230\u7684\u6761\u4ef6\u662f\uff1a #1.\u540e\u4e00\u4f4d\u548c\u524d\u4e00\u4f4d\u76f8\u7b49 #2.\u4f46\u662f\u540e\u4e00\u4f4d\u4e0e\u4e2d\u95f4\u4e00\u4f4d\u4e0d\u7b49 #3.\u524d\u4e00\u6761\u6570\u636e\uff0c\u540e\u4e00\u6761\u6570\u636e\u7684\u8f66\u724c\u76f8\u7b49 #4.\u4e2d\u95f4\u4e00\u6761\u6570\u636e\uff0c\u540e\u4e00\u6761\u6570\u636e\u7684\u8f66\u724c\u76f8\u7b49 data_df = data_df[-((data_df[&#39;status&#39;].shift(-1) == data_df[&#39;status&#39;].shift())&amp; (data_df[&#39;status&#39;].shift(-1) != data_df[&#39;status&#39;])&amp; (data_df[&#39;taxi_id&#39;].shift(-1) == data_df[&#39;taxi_id&#39;].shift())&amp; (data_df[&#39;taxi_id&#39;].shift(-1) == data_df[&#39;taxi_id&#39;]))]   \u4e58\u5ba2\u4e0a\u4e0b\u8f66\u7684\u72b6\u6001\u53d8\u5316\u8bc6\u522b 1 2 3 4 5 6 7  data_df.loc[:,&#39;status1&#39;] = data_df[&#39;status&#39;].shift(-1) data_df.loc[:,&#39;taxi_id1&#39;] = data_df[&#39;taxi_id&#39;].shift(-1) data_df.loc[:,&#39;lon1&#39;] = data_df[&#39;lon&#39;].shift(-1) data_df.loc[:,&#39;lat1&#39;] = data_df[&#39;lat&#39;].shift(-1) data_df.loc[:,&#39;time1&#39;] = data_df[&#39;time&#39;].shift(-1) data_df.loc[:,&#39;StatusChange&#39;] = data_df[&#39;status1&#39;]-data_df[&#39;status&#39;]   \u5c06\u4e0a\u4e0b\u8f66\u72b6\u6001\u6574\u7406\u4e3aOD 1 2 3 4 5 6 7 8 9 10 11  data_df = data_df[((data_df[&#39;StatusChange&#39;] == 1)|(data_df[&#39;StatusChange&#39;] == -1)) &amp;(data_df[&#39;taxi_id&#39;] == data_df[&#39;taxi_id1&#39;])] data_df = data_df[[&#39;taxi_id&#39;,&#39;time&#39;,&#39;lon&#39;,&#39;lat&#39;,&#39;StatusChange&#39;]] data_df = data_df.rename(columns = {&#39;lon&#39;:&#39;o_lon&#39;,&#39;lat&#39;:&#39;o_lat&#39;, &#39;time&#39;: &#39;o_time&#39;}) data_df[&#39;d_lon&#39;] = data_df[&#39;o_lon&#39;].shift(-1) data_df[&#39;d_lat&#39;] = data_df[&#39;o_lat&#39;].shift(-1) data_df[&#39;d_time&#39;] = data_df[&#39;o_time&#39;].shift(-1) data_df = data_df[data_df[&#39;StatusChange&#39;] == 1] data_df = data_df.drop(&#39;StatusChange&#39;,axis = 1).dropna().reset_index(drop=True)   \u8ba1\u7b97trip\u65f6\u8017 pd.to_datetime\u597d\u7528\u4f46\u662f\u592a\u8017\u65f6\u4e86\uff0c\u76f4\u63a5\u7528\u5b57\u7b26\u4e32\u89e3\u6790\u5427\n1 2 3 4 5 6 7 8 9  # \u8ba1\u7b97\u8017\u65f6\uff0corder_time\u5355\u4f4d: s # \u8fc7\u6ee4\u6389\u5c0f\u4e8e 5min\u7684\u8ba2\u5355 data_df[&#39;order_time&#39;] = data_df[&#39;d_time&#39;].str.slice(0,2).astype(&#39;int&#39;)*3600+\\ data_df[&#39;d_time&#39;].str.slice(3,5).astype(&#39;int&#39;)*60+\\ data_df[&#39;d_time&#39;].str.slice(6,8).astype(&#39;int&#39;)-\\ data_df[&#39;o_time&#39;].str.slice(0,2).astype(&#39;int&#39;)*3600-\\ data_df[&#39;o_time&#39;].str.slice(3,5).astype(&#39;int&#39;)*60-\\ data_df[&#39;o_time&#39;].str.slice(6,8).astype(&#39;int&#39;) data_df = data_df.query(&#34;order_time &gt; 300&#34;)   \u6301\u4e45\u5316 1  data_df.to_csv(&#39;trip_od.csv&#39;, header=True, index=False)   \u53ef\u89c6\u5316\u5206\u6790 \u5217\u4e3e\u90e8\u5206\u53ef\u89c6\u5316\u5206\u6790\ntrip\u4e0a\u8f66\u65f6\u95f4(\u4ee5\u6bcf\u5c0f\u65f6\u5206\u7ec4) 1 2 3 4 5 6 7 8 9  tirp_df[&#39;o_hour&#39;] = tirp_df.o_time.str.slice(0,2) hour_count_df = tirp_df.groupby([&#39;o_hour&#39;])[&#39;taxi_id&#39;].count().reset_index() fig = plt.figure(figsize=(8,6),dpi=300) #\u8bbe\u7f6e\u753b\u5e03\u5927\u5c0f\u53ca\u5206\u8fa8\u7387 ax = fig.add_subplot(2,1,1) #\u521b\u5efa\u4e00\u4e2a2\u884c1\u5217\u7684\u5b50\u56fe\uff0c\u7ed8\u5236\u7b2c1\u5f20\u5b50\u56fe sns.barplot(x=&#39;o_hour&#39;, y=&#39;taxi_id&#39;, data=hour_count_df) ax.set_xlabel(&#39;hour&#39;) ax.set_ylabel(&#39;trip count&#39;)   trip\u6301\u7eed\u65f6\u95f4(\u4ee5\u6bcf\u5c0f\u65f6\u5206\u7ec4) 1 2 3 4 5 6  fig = plt.figure(figsize=(15,12),dpi=300) ax = fig.add_subplot(2,1,1) trip_df = trip_df.sort_values([&#39;o_hour&#39;]) ax = sns.boxplot(x=&#34;o_hour&#34;, y=&#34;order_time&#34;, data=trip_df) ax.set_xlabel(&#39;hour&#39;) ax.set_ylabel(&#39;trip time(min)&#39;)   ",
        "description": "",
        "id": 13,
        "section": "posts",
        "tags": [
            "\u672d\u8bb0",
            "\u51fa\u79df\u8f66",
            "\u6570\u636e\u5904\u7406",
            "pandas"
        ],
        "title": "2021-06-08-\u51fa\u79df\u8f66\u6570\u636e\u5904\u7406\u672d\u8bb0",
        "uri": "/posts/notes/2021-06-08-%E5%87%BA%E7%A7%9F%E8%BD%A6%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%9C%AD%E8%AE%B0/"
    },
    {
        "content": " \u547d\u786c\u3002\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u547d\u786c\",\rartist: \"\u4fa7\u7530\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs/image_host@master/media/%5B%E7%B2%B5%5D%5BMP3%5D%20Justin%20%E5%81%B4%E7%94%B0%20-%20%E5%91%BD%E7%A1%AC%20%5B%E6%AD%8C%E8%A9%9E%E5%90%8C%E6%AD%A5%5D-42c3c7.mp3\",\rcover: \"https://p2.music.126.net/nILZy88CcFsE-n93fvScUw==/109951165125397735.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E5%91%BD%E7%A1%AC-%E4%BE%A7%E7%94%B0-62bdd7-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2021.6.1 \u7761\u4e0d\u9192\u3002 2021.6.2 \u559d\u5b8c\u8fd9\u4e48\u591a\u9152\u4f1a\u96be\u53d7\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u4f5c\u5462\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u62d2\u7edd\u5462\u2513(\u00a0\u00b4\u2200`\u00a0)\u250f 2021.6.3 \u4e0d\u8981\u542c\u89c1\u4f60\u771f\u7684\u8bf4\u51fa\u53e3\uff0c\u518d\u7ed9\u6211\u4e00\u70b9\u6e29\u67d4 2021.6.4 \u56fd\u5185\u6295\u5f71\u5750\u6807\u7cfb: WGS 1984 UTM Zone 50N 2021.6.5 \u548c\u65b9\u65b9\u59d0\u51fa\u53bb\u7ea6\u7740\u5403\u4e86\u987f\u7d20\u83dc\uff0c\u5728\u5b9d\u901a\u5bfa\u9644\u8fd1\u3002\u8bf4\u5b9e\u8bdd\u4e0d\u592a\u559c\u6b22\u5403\u3002\u65b9\u65b9\u59d0\u5f00\u8f66\u7ea6\u5728\u6b66\u6c49\u4e1c\u7ad9\u63a5\u7684\u6211\uff0c\u89c1\u9762\u4e5f\u6ca1\u611f\u89c9\u751f\u758f\uff0c\u53ef\u80fd\u662f\u7ecf\u5e38\u4e00\u8d77\u6253\u6e38\u620f\u7684\u7f18\u6545\u5427\uff08\u6216\u8005\u76f4\u63a5\u5c31\u662f\u6211\u539a\u8138\u76ae\uff0c\u54c8\u54c8\uff09\u3002\u56de\u6765\u7684\u65f6\u5019\u6211\u5f00\u4e86\u4e00\u628a\uff0c\u611f\u89c9\u522b\u514b\u4fca\u6717\u5c31\u5f88\u4e0d\u9519\u554a\uff0c\u800c\u4e14\u5979\u8bf4\u4e0d\u5230\u5341\u4e07\u5757\u5c31\u62ff\u4e0b\u4e86\uff1f\u9a7e\u9a76\u611f\u86ee\u4e0d\u9519\u7684\u54ce\ud83e\udd14 2021.6.6 \u7a81\u7136\u60f3\u7ec3\u8179\u808c\u3002\u4e0d\u77e5\u9053\u8fd9\u4e2a\u60f3\u6cd5\u80fd\u575a\u6301\u591a\u4e45 2021.6.7 yy\u4e5f\u592a\u72e0\u4e86 \u7ed9\u522b\u4eba\u7684\u5b66\u751f\u62530\u5206 \u7ed9\u81ea\u5df1\u7684\u5b66\u751f\u6253100\u5206 \u771f\u60f3\u770b\u770b100\u5206\u7684\u8bba\u6587\u662f\u4ec0\u4e48\u4e9a\u5b50\ud83e\udd14 2021.6.8 \u65e0\u8bba\u201c\u975e\u5347\u5373\u8d70\u201d\u8fd9\u79cd\u5236\u5ea6\u6709\u591a\u7cdf\u7cd5\uff0c\u4e5f\u4e0d\u662f\u6740\u4eba\u7684\u7406\u7531\u3002\u4eba\u751f\u6ca1\u6709\u4e00\u52b3\u6c38\u9038\uff0c\u6162\u6162\u7684\uff0c\u5f88\u591a\u66fe\u7ecf\u7684\u94c1\u996d\u7897\u804c\u4e1a\u4e5f\u4f1a\u6d88\u5931\u3002\u975e\u5347\u5373\u8d70\u5bf9\u6211\u4eec\u56fd\u5bb6\u9ad8\u6821\u7684\u53d1\u5c55\u548c\u8fdb\u6b65\u610f\u4e49\u5f88\u5927\uff0c\u56e0\u4e3a\u5927\u6279\u5927\u6279\u7684\u9ad8\u6821\u6559\u5e08\u8fd8\u4e0d\u5982\u666e\u901a\u4e2d\u5c0f\u5b66\u6559\u5e08\u4ed8\u51fa\u7684\u52aa\u529b\u591a\uff0c\u79d1\u7814\u4e00\u65b9\u9762\u6c34\u4efd\u5927\uff0c\u53e6\u4e00\u65b9\u9762\u7ecf\u8d39\u548c\u751c\u5934\u90fd\u7ed9\u6709\u4e00\u4e9b\u8d44\u6e90\u548c\u6743\u5229\u7684\u4eba\u628a\u63a7\u7740\uff0c\u5f88\u591a\u9ad8\u6821\u4e00\u6f6d\u6b7b\u6c34\u3002\u5185\u5377\u771f\u7684\u5f88\u5377\uff0c\u6b8b\u9177\u662f\u771f\u7684\u6b8b\u9177\u3002\u4f46\u662f\u6211\u4eec\u8981\u6539\u53d8\u9ad8\u7b49\u6559\u80b2\u73b0\u72b6\uff0c\u53c8\u4e0d\u5f97\u4e0d\u505a\u51fa\u6539\u53d8\uff1bmark\u4e00\u4e0b\uff1a\r\u57ce\u5e02\u89c4\u5212\u4e0e\u8bbe\u8ba1\u5b66\u9662\u8d75\u9e4f\u519b\u6559\u6388\u8bfe\u9898\u7ec4\u62db\u8058\u535a\u58eb\u540e\u542f\u4e8b 2021.6.9 \u8d35\u6709\u6052\uff0c\u4f55\u5fc5\u4e09\u66f4\u8d77\u4e94\u66f4\u52e4;\u6700\u65e0\u76ca\uff0c\u53ea\u6015\u4e00\u65e5\u66dd\u5341\u65e5\u5bd2\u3002 2021.6.10 \u7a81\u7136\u501f\u5230\u8001\u5988\u7684\u6d88\u606f \u4ed6\u4eec\u51b3\u5b9a\u628a\u5e97\u9762\u8f6c\u8ba9\u4e86 \u800c\u4e14\u7aef\u5348\u524d\u5c31\u53ef\u4ee5\u56de\u5bb6 \u89c9\u5f97\u86ee\u610f\u5916\u7684 \u4ee5\u524d\u600e\u4e48\u8bf4\u90fd\u8bf4\u4e0d\u52a8 \u7a81\u7136\u7684\u6d88\u606f\u8ba9\u6211\u89c9\u5f97\u4ee5\u540e\u597d\u50cf\u90fd\u4e0d\u4f1a\u53bb\u6731\u6cb3\u90a3\u4e2a\u5730\u65b9 \u8fd8\u662f\u6709\u70b9\u611f\u60c5\u7684\ud83d\ude1e 2021.6.11 \u54c8\u54c8 \u521a\u6253\u7535\u8bdd\u95ee\u7238\u5988 \u5e97\u9762\u6ca1\u8f6c\u51fa\u53bb \u90a3\u4e2a\u4eba\u4e34\u65f6\u53cd\u6094\u4e86 \u5c34\u5c2c \u4e0d\u8fc7\u603b\u5f52\u662f\u597d\u4e8b \u6211\u548c\u7236\u6bcd\u5728\u8fd9\u65b9\u9762\u8fbe\u6210\u5171\u8bc6 2021.6.12 mark: 1) momepy; 2)\r\u4ea4\u901a\u77e5\u8bc6\u56fe\u8c31\u5e94\u7528 \u2014\u2014 \u516c\u4ea4\u51fa\u884c\u573a\u666f\u6316\u6398 2021.6.13 [Aria2 + Rclone + OneDrive + Olaindex] Aria2 + Rclone \u53ef\u4ee5\u5728\u4e0b\u8f7d\u4e4b\u540e\u81ea\u52a8\u4e0a\u4f20\u5230OneDrive \u7ed3\u5408Olaindex\u5c55\u793a\u64ad\u653e \u5c31\u5f88\u68d2\ud83e\udd20 Refer:https://p3terx.com/archives/docker-aria2-pro.html \u4ee5\u524d\u4e00\u5206\u94b1\u4e70\u76845T\u7684OneDrive\u627e\u5230\u4e86 \u6539\u4e86\u57df\u540d \u4e0d\u8fc7\u4ee5\u524d\u7684\u8d44\u6599\u8fd8\u5728 \u6b63\u597d\u53ef\u4ee5\u7528\u4e0a \u7528\u4f5c\u89c6\u9891\u64ad\u653e\u8fd8\u4e0d\u9519\u54c8 2021.6.14 \u6bcf\u4e2a\u4eba\u90fd\u4f1a\u6000\u5ff5\u4e00\u4e2a\u590f\u5929 2021.6.15 \u4f60\u662f\u4e0d\u662f\u7f51\u4e0a\u51b2\u6d6a\u51b2\u50bb\u4e86 2021.6.16 15\u5206\u949f\u793e\u533a\u751f\u6d3b\u5708 2021.6.17 \u5c0f\u6b65\u8fed\u4ee3\uff0c\u518d\u5927\u7684\u76ee\u6807\u4e5f\u80fd\u5206\u89e3\u6210\u5927\u91cf\u5c0f\u6b65\u9aa4\uff0c\u5b66\u4f1a\u73a9\u957f\u671f\u6e38\u620f 2021.6.18 \u56de\u5fc6\u91cc\u7684\u4eba 2021.6.19 \u8282\u98df\u592a\u997f\u4e86\ud83d\ude12\ud83d\ude12 2021.6.20 \u6bd5\u4e1a\u5feb\u4e50 \u672a\u6765\u53ef\u671f 2021.6.21 \u5b66\u6821\u62a5\u9500\uff1a1000\u5143\u4ee5\u4e0a\u9700\u8981\u53d1\u7968\u9a8c\u8bc1+\u5b66\u9662\u76d6\u7ae0 2021.6.22 \u4eca\u5929\u6765\u5317\u4eac \u6b63\u597d\u8d76\u4e0a\u5efa\u515a\u767e\u5e74\u5e86\u5178\u7684\u70df\u82b1\u5f69\u6392 \u4f4f\u7684\u9152\u5e97\u4e5f\u662f\u4e0d\u9519\u7684\u89c2\u666f\u5730\u70b9 \u6211\u662f\u4ec0\u4e48\u773c\u795e\u80fd\u591f\u5728\u7a97\u5e18\u7f1d\u91cc\u770b\u5230\u70df\u82b1 \u54c8\u54c8\u54c8 2021.6.23 \u665a\u4e0a\u4e0eZW\u7ea6\u996d \u591a\u5e74\u672a\u89c1 \u4ed6\u56e0\u4e3a\u80c3\u75c5\u548c\u8fd1\u671f\u7684\u7cdf\u7cd5\u4e8b\u60c5\u6298\u78e8\u7684\u7626\u9aa8\u5982\u67f4 \u542c\u7740\u4ed6\u7684\u7ecf\u5386\u5341\u5206\u9057\u61be \u4ed6\u7684\u8bb2\u8ff0\u3001\u4ed6\u7684\u8bdd\u975e\u5e38\u75db\u82e6 \u4ed6\u5728\u5bfb\u627e\u4e00\u79cd\u89e3\u8131 \u4e16\u4e8b\u65e0\u5e38 \u91cd\u5728\u4fdd\u6301\u4e00\u9897\u826f\u597d\u7684\u5fc3\u6001 \u53c8\u54ea\u6709\u8fd9\u4e48\u5bb9\u6613\u5462 2021.6.24 \u8fd4\u6c49 \u5728\u8f66\u4e0a\u8ffd\u7edd\u547d\u6bd2\u5e08\u5230\u7b2c\u4e94\u90e8 \u679c\u7136\u8fd9\u91cc\u9762\u6ca1\u6709\u4e00\u4e2a\u4eba\u662f\u597d\u4eba \u7b2c\u56db\u90e8\u672b\u53e4\u65af\u5c31\u8fd9\u4e48\u88ab\u70b8\u6b7b\u4e86 \u6000\u7279\u8001\u5e08\u6709\u4e9b\u8ba9\u4eba\u53c8\u7231\u53c8\u6068 \u8fd9\u4e2a\u5267\u770b\u7684\u6709\u4e9b\u75b2\u60eb \u7b2c\u4e94\u5b63\u7f13\u7f13\u518d\u770b\u5427 2021.6.25 \u8bba\u6587\u4e0d\u60f3\u6539\ud83d\ude14 2021.6.26 \u6211\u4e0d\u60f3\u601d\u8003\u8fd9\u4e48\u591a\uff0c\u60a3\u5f97\u60a3\u5931\u3002\u6211\u8981\u7ed9\u81ea\u5df1\u4e00\u4e2a\u4ea4\u4ee3\uff0c\u4e5f\u7ed9\u522b\u4eba\u4e00\u4e2a\u4ea4\u4ee3\uff0c\u4e0d\u7559\u9057\u61be\u3002 2021.6.27 \u5b9a\u671f\u7684\u7292\u52b3\u81ea\u5df1\u662f\u6709\u5fc5\u8981\u7684 2021.6.28 \u63a7\u5236\u4e0d\u4f4f\u81ea\u5df1\ud83d\ude22 2021.6.29 \u6c5f\u6e56\u518d\u89c1 2021.6.30 \u4e0d\u60f3\u5199\u8bba\u6587\u7684\u65f6\u5019\u5c31\u6765\u8dd1\u6b65\u5427  ",
        "description": "",
        "id": 14,
        "section": "posts",
        "tags": [
            "\u6295\u5f71\u5750\u6807\u7cfb",
            "\u522b\u514b\u4fca\u6717",
            "\u9752\u6912",
            "\u522b\u4e86\u6731\u6cb3",
            "\u4ea4\u901a\u77e5\u8bc6\u56fe\u8c31",
            "\u738b\u601d\u806a\u6897",
            "\u6bd5\u4e1a\u5b63",
            "\u62a5\u9500",
            "\u5317\u4eac",
            "\u7edd\u547d\u6bd2\u5e08",
            "\u60a3\u5f97\u60a3\u5931",
            "\u8dd1\u6b65"
        ],
        "title": "2021-6",
        "uri": "/posts/journals/2021-06-01-2021-6/"
    },
    {
        "content": " \rHugo\u4e2d\u6587\u5e2e\u52a9\u6587\u6863, \u8bb0\u5f55Hugo\u5b66\u4e60\u7b14\u8bb0\u3002\n Hugo\u5de5\u4f5c\u539f\u7406 \u57fa\u672c\u6982\u5ff5  \u6587\u7ae0\uff1amd\u6587\u4ef6 \u9875\u9762\uff1ahtml\u6587\u4ef6\uff0c\u9875\u9762=\u6587\u7ae0+\u6a21\u677f \u6a21\u677f\uff1alayouts\u76ee\u5f55\u4e0b\u6587\u4ef6  content\u76ee\u5f55\u7ed3\u6784\u548cURL\u7684\u5bf9\u5e94\u5173\u7cfb 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  \u2514\u2500\u2500 content \u251c\u2500\u2500 _index.md // [home] &lt;- https://example.com/ ** \u251c\u2500\u2500 about.md // [page] &lt;- https://example.com/about/ \u251c\u2500\u2500 posts | \u251c\u2500\u2500 _index.md // [section] &lt;- https://example.com/posts/ ** | \u251c\u2500\u2500 firstpost.md // [page] &lt;- https://example.com/posts/firstpost/ | \u251c\u2500\u2500 happy | | \u251c\u2500\u2500 _index.md // [section] &lt;- https://example.com/posts/happy/ ** | | \u2514\u2500\u2500 ness.md // [page] &lt;- https://example.com/posts/happy/ness/ | \u2514\u2500\u2500 secondpost.md // [page] &lt;- https://example.com/posts/secondpost/ \u2514\u2500\u2500 quote \u251c\u2500\u2500 _index.md // [section] &lt;- https://example.com/quote/ ** \u251c\u2500\u2500 first.md // [page] &lt;- https://example.com/quote/first/ \u2514\u2500\u2500 second.md // [page] &lt;- https://example.com/quote/second/ // hugo\u9ed8\u8ba4\u751f\u6210\u7684\u9875\u9762, \u6ca1\u6709\u5bf9\u5e94\u7684markdown\u6587\u7ae0 \u5206\u7c7b\u5217\u8868\u9875\u9762 // [taxonomyTerm] &lt;- https://example.com/categories/ ** \u67d0\u4e2a\u5206\u7c7b\u4e0b\u7684\u6240\u6709\u6587\u7ae0\u7684\u5217\u8868 // [taxonomy] &lt;- https://example.com/categories/one-category ** \u6807\u7b7e\u5217\u8868\u9875\u9762 // [taxonomyTerm] &lt;- https://example.com/tags/ ** \u67d0\u4e2a\u6807\u7b7e\u4e0b\u7684\u6240\u6709\u6587\u7ae0\u7684\u5217\u8868 // [taxonomy] &lt;- https://example.com/tags/one-tag **   \u9875\u9762\u548c\u6a21\u677f\u7684\u5bf9\u5e94\u5173\u7cfb  []\u4e2d\u6807\u6ce8\u7684\u662f\u9875\u9762\u7684kind\u5c5e\u6027\uff0c\u6574\u4f53\u4e0a\u5206\u4e3a\u4e24\u7c7b\uff1asinge\uff08\u5355\u9875\u9762-page\uff09\u548clist\uff08\u5217\u8868\u9875-home,section,taxonomyTerm, taxonomy\uff09 site homepage(\u9996\u9875), section page(\u6587\u7ae0\u76ee\u5f55\u9875), taxonomy list(\u67d0\u4e00\u5206\u7c7b\u7684\u6587\u7ae0\u5217\u8868), taxonomy terms list(\u6240\u6709\u7684\u5206\u7c7b) \u5217\u8868\u9875\u9762\u53ef\u4ee5\u6709\u5173\u8054\u7684content files, \u5373_index.md\u6587\u4ef6  content\u76ee\u5f55\u4e0b\u7684_index.md\u548c\u9996\u9875\u76f8\u5173 \u5404\u4e2a\u5b50\u76ee\u5f55\u4e0b\u7684_index.md\u548c\u5bf9\u5e94\u7684section page\u76f8\u5173 taxonomy list \u548c taxonomy terms list\u9700\u8981\u5728content\u76ee\u5f55\u4e0b\u9762\u521b\u5efa\u7279\u5b9a\u540d\u79f0\u7684\u76ee\u5f55(tags\u6216categories)\u5e76\u5728\u91cc\u9762\u6dfb\u52a0_index.md\u6587\u4ef6   _index.html\u7528\u6765\u751f\u6210\u5bf9\u5e94\u7684\u5217\u8868\u9875\u9762\uff0c\u6709\u65e0\u8be5\u6587\u4ef6\u5747\u53ef\u751f\u6210\u3002\u4f46\u6709\u7684\u8bdd\u53ef\u6839\u636e\u6587\u4ef6\u4e2d\u7684FrontMatter\u7684\u8bbe\u7f6e\u751f\u6210\u4e2a\u6027\u9875\u9762\u3002  baseof.html baseof.html\u4e3a\u57fa\u7840\u6a21\u677f\u9875\uff0c\u4efb\u4f55\u9875\u9762\u90fd\u4ee5\u5b83\u4e3a\u6a21\u677f\u3002\u5728\u57fa\u7840\u6a21\u677f\u9875\u4e2d\u4f7f\u7528block\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5360\u4f4d\u7b26, \u5f53\u6a21\u677f\u9875\u4f7f\u7528\u4e86\u4e00\u4e2a\u57fa\u7840\u6a21\u677f\u9875\u65f6, \u6a21\u677f\u9875\u7684\u89e3\u6790\u540e\u7684\u5185\u5bb9\u4f1a\u5d4c\u5165\u5230\u57fa\u7840\u6a21\u677f\u9875\u9762\u4e2dblock\u7684\u4f4d\u7f6e\u3002\u53c2\u8003\uff1ahttps://hugo.aiaide.com/post/%E5%9F%BA%E7%A1%80%E6%A8%A1%E6%9D%BF-baseof.html/\ngetCSV\u83b7\u53d6\u5916\u63f4\u6570\u636e \u53c2\u8003\uff1ahttps://hugo.aiaide.com/post/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE-hugo%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93/\n",
        "description": "",
        "id": 16,
        "section": "posts",
        "tags": [
            "Hugo",
            "\u672d\u8bb0",
            "\u535a\u5ba2"
        ],
        "title": "2021-05-21-hugo\u5b66\u4e60\u672d\u8bb0",
        "uri": "/posts/notes/2021-05-21-hugo%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0/"
    },
    {
        "content": " Paper writing notes about urban functional regionalization.\n \u672d\u8bb0 \u6982\u5ff5/\u5b9a\u4e49  Regionalization  the task of partitioning a set of contiguous areas into spatial clusters or regions a type of clustering method that defines spatially contiguous and homogeneous groups, also known as regions. partition the geographic space into a set of homogeneous and geographically contiguous regions aptly described as \u2018spatially constrained clustering algorithms\u2019    2017-Creating multithemed ecological regions for macroscale ecology: Testing a flexible, repeatable, and accessible clustering method  Ecology and Evolution (\u4e2d\u79d1\u96623-4\u533a) \u903b\u8f91\u6e05\u6670\uff0c\u5199\u4f5c\u86ee\u597d\u7684\uff0c\u503c\u5f97\u501f\u9274 regionalization\u7684\u5206\u6790\u5957\u8def\u503c\u5f97\u501f\u9274  Abstract  spatially constrained spectral clustering algorithm: a spatially constrained spectral clustering algorithm that balances geospatial homogeneity and region contiguity to create ecological regions using multiple terrestrial, climatic, and freshwater geospatial data Identify the most influential geospatial features: identified which of the geospatial features were most influential in creating the resulting regions capture regional variation: tested the ability of these ecological regions to capture regional variation in water nutrients and clarity for ~6,000 lakes  Introduction  Para. 1: \u751f\u6001\u80cc\u666f\uff0c\u770b\u8d77\u6765\u6709\u70b9\u5403\u529b  understand and predict ecosystem at broad spatial and temporal scales translating fine\u2010scaled understanding to macroscales is difficult spatial heterogeneity among ecosystems   Para. 2:\uff08\u751f\u6001\u80cc\u666f\u4e0b\u7684\uff09\u533a\u57df\u5316\u65b9\u6cd5\u4ecb\u7ecd  a regionalization framework that classifies the landscape into ecological regions under the assumption that ecosystems within regions are more similar (in properties and in responding to stressors) than those across regions   Para. 3:\u76ee\u524d\u7814\u7a76\u65b9\u6cd5\u6f5c\u5728\u5730\u9650\u5236\u5f53\u524d\u7684\u5e94\u7528  existing ecological regions have characteristics that potentially limit their general application. limitations in the availability of broad\u2010scale geospatial data subjectively using paper maps, leading to regions that cannot be reproduced or easily modified for new purposes   Para. 4: \u8fd9\u4e00\u6bb5\u7684\u903b\u8f91\u8fd8\u662f\u86ee\u6e05\u6670\u7684\uff0c\u8bb2\u533a\u57df\u5316\u65b9\u6cd5\u8fd8\u662f\u5e7f\u6cdb\u5e94\u7528\u6ef4\uff0c\u4f46\u662f\u5462\u6709A\u548cB\u4e24\u4e2a\u5c40\u9650\uff0c\u4f46\u662f\u8fd9\u4e24\u70b9\u53c8\u5f88\u91cd\u8981\uff0c\u600e\u4e48\u529e\u5462\uff0c\u90a3\u5f53\u7136\u662f\u7814\u7a76\u4e00\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\u5566\u3002  historic regionalization frameworks are widely used there have been advances in statistical and computational approaches for delineating objective and reproducible ecological regions most of these newer methods have not been broadly disseminated(\u4f20\u64ad) to or available in a form easily adoptable by the ecological community. many of these methods are optimized to maximize landscape homogeneity, they do not always create contiguous regions Region contiguity is useful for two important reasons.  First, such regions help account for broad\u2010scale spatial autocorrelation that is common among ecosystems. Second, contiguous regions are useful for management because they allow managers to apply similar practices to nearby but unstudied ecosystems.   Therefore, we need methods that create contiguous and homogeneous regions, as well as dissemination of these approaches to the ecological community.   Para. 5: \u8fd9\u4e00\u6bb5\u7684\u5199\u4f5c\u903b\u8f91\u771f\u7684\u592a\u7231\u4e86\uff01\u53ef\u4ee5\u5f53\u5199\u4f5c\u6a21\u677f\uff01\ud83d\udc9b  \u4e00\u53e5\u8bdd\u9648\u8ff0\uff0c\u6211\u4eec\u505a\u4e86\u5565\uff1a  \u5e94\u7528\u4e00\u4e2a\u65b0\u7684\u65b9\u6cd5\uff1aapply a newly published computer science clustering algorithm that creates customized ecological regions \u770b\u5b83\u80fd\u4e0d\u80fd\u7528\uff1atest its use for macrosystems ecology research \u4eba\u4eba\u53ef\u7528\uff1amake it available in an online repository \u62d4\u9ad8\uff1ahelp fill the need for adaptable and flexible methods for creating regions   \u5173\u4e8e\u7a7a\u95f4\u9650\u5236\u7b97\u6cd5\u7684\u63cf\u8ff0\uff1aa flexible method that allows users to impose restrictions on whether spatially adjacent points should be in the same region, thereby influencing the clustering process to create homogeneous regions that are also geographically connected (i.e., contiguous). \u8bba\u6587\u91cc\u8bb2\u5230\uff0c\u7a7a\u95f4\u9650\u5236\u7684\u8c31\u805a\u7c7b\u7b97\u6cd5\u4e0d\u662f\u8fd9\u7bc7\u6587\u7ae0\u63d0\u51fa\u7684\uff0c\u4f46\u662f\u6211\u4eec\u6269\u5c55\u4e86\u4ed6\u7684\u5e94\u7528\uff1a  This method was developed and tested using terrestrial landscape data for three U.S. states and was found to outperform three other algorithms for delineating ecological regions we expand on this previous work to:  \u66f4\u5927\u8303\u56f4\uff01\u2014\u2014 create ecological regions with a wider range of nationally available data \u8c01\u66f4\u91cd\u8981\uff01\u2014\u2014 examine which of the 52 geospatial features were most influential in creating these regions to determine how important individual geophysical features are for ecological region delineation \u7a7a\u95f4\u5dee\u5f02\uff01\u2014\u2014 test the ability of the resulting 100 ecological regions to capture regional variation in lake characteristics that were not used to develop the regions     \u4eba\u4eba\u53ef\u7528\uff1aWe make this algorithm freely available with an accessible user interface for other researchers to use and modify, including the ability to: create different numbers/sizes of regions; use a subset of themes or different combinations of measures of the terrestrial, atmospheric, and freshwater landscapes; and create regions for a different spatial extent (e.g., state, nation, and continent). \u62d4\u9ad8\uff1aThis objective and reproducible method and available code for creating ecological regions are designed to support a wide range of macroscale ecology applications.    Materials and Methods  \u7814\u7a76\u5355\u5143\u2014\u2014base geographic unit:  the U.S. Geological Survey 12\u2010digit hydrologic(\u6c34\u6587\u7684) unit (HU\u201012), which is based on river basins There are 20,257 HU\u201012s in the study extent, ranging in land area from 0.35 to 1,276 km2   \u5355\u5143\u7279\u5f81\u2014\u2014natural geographic variables:  52 grouped into three themes: terrestrial landscape features, climate features, and freshwater landscape features   LAGOS\u2010NE dataset:  includes lake\u2010specific water quality and chemistry data compiled from 54 individual datasets for a subset of ~10,000 lakes in the study extent for independently testing the ecological regions created in this study   Schematic illustrating the procedure for creating ecological regions:  \u9884\u5904\u7406\u8fc7\u7a0b\u2014\u2014Data preprocessing: remove HU\u201012s that included spatially isolated landscape features (e.g., islands and peninsulas) fill in missing values in the geospatial database through interpolation remove egregious outliers PCA scores: \u964d\u7ef4    two matrixs and joint similarity matrix:\n feature similarity matrix: a landscape feature similarity matrix that measures landscape homogeneity was computed using the Gaussian radial basis function spatial constraint matrix: a binary\u2010valued spatial constraint matrix was constructed based on HU\u201012 contiguity (i.e., 1 if the HU\u201012s share a border; 0 if the HU\u201012s do not share a border). The spatial constraint matrix is used to guide the clustering process into finding spatially contiguous regions. Hadamard product:    spectral clustering algorithm:  two metrics for evaluating a regionalization framework: within-cluster sum-of-square error (SSW) to quantify the landscape homogeneity within the regions, A lower SSW implies higher homogeneity of landscape features within regions percentage of spatial constraints preserved by the clustering algorithm(PctML), a measure of cluster contiguity. This metric ranges from 0 to 1 and the higher the metric, the more spatially contiguous were the resulting regions. created nine sets of ecological regions:    number of regions:\n \u805a\u7c7b\u8fc7\u7a0b\u4e2d\u786e\u5b9a\u805a\u7c7b\u6570\u7684\u4f20\u7edf\u65b9\u6cd5\u2014\u2014standard approach to choose the optimal number of clusters  plot values of an internal cluster validity index such as SSW against the number of regions and identify the inflection point in the monotonically decreasing curve (\u8bc6\u522b\u5355\u8c03\u9012\u51cf\u66f2\u7ebf\u7684\u62d0\u70b9) \u5b58\u5728\u7684\u4e0d\u8db3\uff1a  this approach is subjective and the inflection point may not always be easily identified it does not consider the statistical significance of the regions compared to purely random clustering (i.e., no consideration of landscape homogeneity or region contiguity). Worse still, the monotonically decreasing relationship between SSW and number of regions is observed even for purely random clustering (i.e., no consideration of landscape homogeneity or region contiguity).     \u6587\u4e2d\u4f18\u5316\u7684\u65b9\u6cd5\uff1acompared the SSW of the regions created with spatially constrained spectral clustering against the average SSW for 200 randomly created sets of regions to ensure that the improvement in SSW as the number of regions increases was statistically significant  computed the ratio of slopes for the two approaches as the number of regions increases If the constrained spectral clustering approach provides little improvement in SSW compared to the random clustering approach, then this ratio approaches 1 on plots of empirical curves and indicates an optimal number of regions. the number of regions increased from 5 to 1,000\uff08with a step size of 5 from 5 to 600 clusters, a step size of 10 from 610 to 800 clusters, and a step size of 50 from 850 to 1,000 clusters\uff09      Determining drivers of ecological regions: evaluated the relative importance of the 52 geospatial variables for region formation using a random forest algorithm The OOB error estimate Gini impurity criterion    Testing the ability of ecological regions to capture regional variation: examining SSW for the two lake characteristics examined the ratio of SSW:SSB in order to compare relative amounts of within\u2010 and among\u2010region heterogeneity across response variables and ecological regions      2020-E\ufb03cient regionalization for spatially explicit neighborhood delineation  IJGIS: https://doi.org/10.1080/13658816.2020.1759806 \u751f\u8bcd\u591a\u7684\u6211\u90fd\u89c9\u5f97\u81ea\u5df1\u4e0d\u662fGIS \u8fd9\u4e2a\u4e13\u4e1a\u7684\u4e86\u3002  Abstract  Neighborhood delineation \u27a1\ufe0f identify the most appropriate spatial unit in urban social science reasearch the true number of neighborhoods (k parameter) Existing approaches  pre-speci\ufb01cation of a k-parameter either nonspatial or lead to noncontiguous or overlapping regions   In this paper  propose the use of max-p-regions for neighborhood delineation: the geographic space can be partitioned into a set of homogeneous and geographically contiguous neighborhoods computational challenges for large-scale neighborhood delineation    Introduction  Para. 1:  An increasingly important technique in the \ufb01eld of GIScience: the identi\ufb01cation of distinct sub-regions or neighborhoods within a study area using unsupervised learning methods generally categorized as regionalization methods aim to partition the geographic space into a set of homogeneous and geographically contiguous regions regionalization algorithms might be more aptly described as \u2018spatially constrained clustering algorithms\u2019   Para. 2:  One important application of spatially constrained clustering the total number, spatial con\ufb01guration, and internal composition of neighborhoods are all unknown a priori \uff08\u90bb\u91cc\u7684\u603b\u6570\u3001\u7a7a\u95f4\u7ed3\u6784\u548c\u5185\u90e8\u7ec4\u6210\u90fd\u662f\u5148\u9a8c\u7684\uff09.   Para. 3:  The \ufb01rst application: regionalization is leveraged method of data processing used to develop new primitive spatial units(\u57fa\u7840\u7684\u7a7a\u95f4\u5355\u5143) that have better statistical reliability Spielman and Singleton (2015): social surveys (e.g. the census)   Para. 4:  The second application: regionalization is used to identify unique and discrete social neighborhoods according to their demographic composition Rey et al. (2011): geodemographic analysis, examine the dynamic footprint of social neighborhoods over time   Para. 5:  there is a clear need for exploration and development of novel approaches to regionalization that are scalable, e\ufb03cient, and able to ingest vast amounts of data in short cycles. max-p-regions proposed a new e\ufb03cient algorithm to address the computational challenges    2021-A quantitative comparison of regionalization methods  IJGIS: https://doi.org/10.1080/13658816.2021.1905819 \u5206\u533a\u65b9\u6cd5\u6bd4\u8f83\u5168\u9762\u7684\u4e00\u5957\u7efc\u8ff0 \u8fd9\u662f\u6211\u89c1\u8fc7IJGIS\u6700\u957f\u7684Introduction\u4e86  Abstract  Regionalization: the task of partitioning a set of contiguous areas into spatial clusters or regions yet few quantitative comparisons have been conducted the number of regions the simulated benchmark data set Model families are defined with respect to regions\u2019 shapes, value-mixing between regions, and the number of underlying spatial clusters internal and external measures of regionalization quality investigate the computational efficiency implications on defining ecological regions  Introduction  Para. 1: \u4e3b\u8981\u8bb2\u5206\u533a\u7684\u610f\u4e49\u548c\u5e94\u7528  Datadriven regions  public health  Applications:  spatial groups of disease incidence epidemiological analysis (\u6d41\u884c\u75c5\u5b66\u5206\u6790)   Significances:  classifying disease prevalence delineate areas prone to a specific disease type     regions on social networks  defined based on the similarity of people\u2019s interests to define communities   location-allocation problems  Applications  renewable source optimization to serve cities\u2019 energy demands environmental planning   Significances  optimize energy consumption and data routing     regions for dynamic systems  delineate climate zones   define socio-economic regions ecological regions \uff08\u751f\u6001\u5206\u533a\uff09 electoral and school districting     Para. 2: \u5206\u533a\u95ee\u9898\u7684\u6570\u5b66\u5b9a\u4e49  solve a constrained optimization problem to maximize within-region similarity and between-region dissimilarity under spatially derived constraints n spatial units; vector xi with p variables; partition the data into k regions; distance measure the spatial constraint defined by geographical adjacency.   Para. 3: Regionalization\u65b9\u6cd5\u5206\u7c7b  spatially implicit models  generally based on traditional and non-spatial clustering methods producing a first solution that is afterwards updated by enforcing the spatial constraints force the regions to be as homogeneous as possible, but the spatial contiguity is not always guaranteed an ad hoc post-processing step   spatially explicit models  models spatial constraints explicitly to ensure spatial contiguity within the resulting regions grouped as exact, heuristic, and mixed-heuristic models  Exact models search for the optimal regions among all possible regionalizations Heuristic models constrain the search space for the optimal solution to find regions efficiently mixed-heuristic models aim to combine heuristic models\u2019 computational efficiency with exact models\u2019 compactness   Others:  segmentation algorithms graph-based partitioning algorithms       Para. 4&amp;5:\u4e00\u4e9b\u5176\u4ed6\u7684\u65b9\u6cd5\uff0c\u672c\u6587\u4e0d\u8d58\u8ff0  seeded region growing (SRG) algorithms automated zoning procedure (AZP) spatially explicit regionalization methods: finding underlying regions with constraints related to regions without the definition of a target number of regions Spatially implicit regionalization methods suffer from subjectivity due to the ad-hoc post processing required to ensure spatial contiguity   Para. 6:\u663e\u5f0f\u5206\u533a\u65b9\u6cd5\u7684\u7f3a\u9677  spatially explicit regionalization methods:  exact methods are computationally intensive heuristic models:  their solution\u2019s optimality is not guaranteed constrained search space can result in heterogeneous regions where spatial units in the same region are significantly dissimilar       Para. 7&amp;8&amp;9: In this paper:  present a quantitative review expand and complement a recent paper conduct a rigorous statistical analysis of regionalization algorithms analyze the computational performance compare the performance of the state-of-the-art regionalization methods with SKATER evaluate algorithm performance quantitatively  degrees of separability between the spatial clusters number of underlying regions realizations for a given scenario   define data-driven ecoregions:  consider the utility of different regionalization algorithms on regionbuilding to define ecoregions compare our results to a widely known, expert-defined regionalization of ecoregions     Para. 10: Contributions  comparative performance of a large set of regionalization methods Demonstrate results from a large set of supervised and unsupervised regionalization quality metrics Perform sensitivity analysis to evaluate the algorithm performance for different scenarios Evaluate the performance of the different algorithms for an increasing number of spatial units Discuss the implications of performance disparities from the synthetic study    Methodology   unsupervised evaluation metrics:\n Calinski-Harabasz index  quantifies the value-based compactness (\u7d27\u51d1\u5ea6) of k regions by comparing the average of within and between region sum of squares The Calinski-Harabasz index will be high for a region map containing distinct (dissimilar) regions that consist of similar spatial units.   Sum-Squared Errors:    SKATER\n it excels across most of our evaluation criteria when compared to the other regionalization techniques for cases where data do not possess well-defined regions, tree-based methodologies such as SKATER can define the regions with the most homogeneity.    2019-A regionalization method for clustering and partitioning based on trajectories from NLP perspective  IJGIS:https://doi.org/10.1080/13658816.2019.1643025 \u624b\u673a\u4fe1\u4ee4\u8f68\u8ff9+Word2Vec \u6700\u5f00\u59cb\u770b\u7684\uff0c\u5173\u4e8e\u5206\u533a\u7684\u51e0\u7bc7\u6587\u7ae0\u4e4b\u4e00  Abstract  a novel regionalization method to cluster similar areal units and visualize the spatial structure by considering all trajectories in an area into a word embedding model. the result depicts the underlying socio-economic structure at multiple spatial scales evaluate its performance by predicting the next location of an individual\u2019s trajectory  2019-Hierarchical community detection and functional area identification with OSM roads and complex graph theory  IJGIS: https://doi.org/10.1080/13658816.2019.1584806 \u5173\u4e8e\u793e\u533a\u68c0\u6d4b\uff0c\u6211\u7684\u201c\u5165\u5751\u201d\u8bfb\u7269  Abstract  urban road network structure \u27a1\ufe0f understanding the distribution of urban functional area communities of urban road roads Infomap commnity detection algorithm results:  the distribution of communities at different levels explored the functional area characteristics at the communities scale can be used as a basic unit    2021-Partitioning urban road network based on travel speed correlation  International Journal of Transportation Science and Technology: https://doi.org/10.1016/j.ijtst.2021.01.002 \u4e86\u89e3\u5b66\u4e60\u4e0b\u4ea4\u901a\u9886\u57df\u80cc\u666f \u6807\u51c6\u7684abstract\u6a21\u677f  Abstract  urban traf\ufb01c management urban road network partition existing study  the spatial relationship of road sections are introduced fails to capture the travel speed correlation between road sections with far distance   this paper  travel speed correlation between road sections fast unfolding method is used to divide urban road network into sub-partitions of densely correlated road sections A case study is conducted by using taxi GPS dataset in Shanghai   Results:  the travel speed will generate high correlation even if the road sections are not spatially connected or close divides the road network in Shanghai into 77 sub-partitions with strong intro-correlation of travel speed pattern Comparing the result with Ncut algorithm with different spatial constraints, generate evenly distributed and spatially compact sub-partitions.    Introduction  Para. 1: \u4ea4\u901a\u5206\u533a\u7684\u610f\u4e49  increasingly serious problems in cities: urban congestion, extra gas emissions and low transportation ef\ufb01ciency Urban road network partitioning is a fundamental step in traffic management, control, simulation and policymaking.  the citywide management strategy is hierarchical and regionalized. ensuring that the road sections with a similar travel speed pattern are in the same sub-partition applying the same controlling strategy is the \ufb01rst step to guarantee the effectiveness of the overall controlling system     Para. 2&amp;3&amp;4&amp;5: \u9762\u4e34\u6311\u6218\u2014\u2014facing the following challenges  the \ufb01rst challenge is how the partition method considers the urban traf\ufb01c characteristic the second challenge is how the partition method divides the road network so that a network partition can be spatially compact or continuous  the most existing road network partitioning approaches heavily depend on topological relationships of road segments when spatial constraints are imposed on the relationship between road sections, the relationship between non-spatial continuous or adjacent road sections will inevitably be ignored.   the travel speed of road sections highly related to each other   Para. 6:  A methodology framework: capture and quantitatively express the travel speed correlation the road network partition methodology proposed is based on traf\ufb01c \ufb02ow characteristics handle a citywide road network and generates the road network partition with a short computing time    Others:  potential control strategies to alleviate traf\ufb01c congestion should be designed based on the sub-partition of the urban road network  if a cluster contains subregions with signi\ufb01cantly different levels of congestion, the control strategies will be inef\ufb01cient road network partitioning is the \ufb01rst step to space-parallel distributed transportation simulation   the principle of road network partitioning:  Non-overlapping Travel characteristic based Spatially compact balanced size   Framework:  ",
        "description": "",
        "id": 18,
        "section": "posts",
        "tags": [
            "\u672d\u8bb0",
            "Regionalization",
            "Urban functions"
        ],
        "title": "2021-05-09: Urban Functional Regionalization",
        "uri": "/posts/notes/2021-05-09-urban-functional-regionalization/"
    },
    {
        "content": " Wedding.\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u7b49\u4e00\u5206\u949f\",\rartist: \"\u5f90\u8a89\u6ed5\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%AD%89%E4%B8%80%E5%88%86%E9%92%9F-%E5%BE%90%E8%AA%89%E6%BB%95.mp3\",\rcover: \"https://p2.music.126.net/Z3UPSHkpGsKQ8Md4v3cDAQ==/109951165455249371.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%AD%89%E4%B8%80%E5%88%86%E9%92%9F%20Wait%20One%20Minute-%E5%BE%90%E8%AA%89%E6%BB%95-5083c6-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2021.5.1 \u674e\u5947\u624d\u5a5a\u793c\uff1b\u8c61\u68cb\u662f\u738b\u8005\u7684\u6e38\u620f\uff0c\u6587\u660e\u4e0e\u6740\u622e\u5e76\u5b58\u3002 2021.5.2 \u4eba\u751f\u5728\u4e16\uff0c\u4f60\u53ea\u8981\u9700\u8981\u77e5\u9053\u4e24\u4ef6\u4e8b\uff1a\u4e00\u3001\u8fd9\u4e2a\u4e16\u754c\u4e0a\u7edd\u5bf9\u5b58\u5728\u4e0d\u9700\u8981\u8bfb\u4e66\u4e5f\u5f88\u806a\u660e\uff0c\u4e0d\u9700\u8981\u52aa\u529b\u4e5f\u8fc7\u5f97\u5f88\u597d\uff0c\u751a\u81f3\u4e0d\u9700\u8981\u94b1\u5c31\u8fc7\u5f97\u5f88\u5feb\u4e50\u7684\u4eba\u3002\u4e8c\u3001\u8fd9\u4e2a\u4eba\u7edd\u5bf9\u4e0d\u662f\u4f60\u3002 2021.5.3 \u8fd4\u6c49\u3002\u8d81\u7740\u4e09\u5929\u5c0f\u5047\u671f\uff0c\u8ffd\u4e86\u4e00\u4e2a\u5948\u975e\u7684\u5c0f\u7f8e\u5267-\u201c\u540e\u7ffc\u5f03\u5175\u201d\uff0c\u4e4b\u540e\u4e5f\u770b\u4e86\u4e9b\u5f71\u8bc4\uff0c\u5341\u5206\u611f\u89e6\u3002\u5929\u624d\u7684\u80cc\u540e\uff0c\u603b\u6709\u4e9b\u4e0d\u540c\u5bfb\u5e38\u7684\u9645\u9047\u3002\u4ece\u5c0f\u88ab\u9057\u5f03\u3001\u9547\u5b9a\u5242\u4e0a\u763e\u3001\u9157\u9152\u4ee5\u53ca\u5fc3\u4e2d\u6597\u4e89\u7684\u201c\u6076\u9b54\u201d\u3002\u5929\u624d\u4e0e\u75af\u5b50\uff0c\u4e00\u5206\u4e4b\u9694\u3002\u5e78\u4e8f\u5728\u5979\u8ff7\u832b\u65f6\uff0c\u4ecd\u6709\u4e00\u7fa4\u597d\u53cb\u5728\u5e2e\u5979\uff0c\u627e\u5bfb\u5230\u81ea\u6211\uff0c\u6ca1\u6709\u8d70\u5230\u8ff7\u5931\u7684\u5883\u5730\u3002\u770b\u4e86\u77e5\u4e4e\u4e0a\u4e00\u4e9b\u5929\u624d\uff0c\u4ece\u5c0f\u5929\u8d4b\u60ca\u4eba\uff0c\u4f46\u540e\u671f\u8ff7\u5931\u81ea\u6211\uff0c\u96be\u4ee5\u4e0d\u8ba9\u4f60\u60cb\u60dc\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5973\u4e3b\u5bf9\u56fd\u9645\u8c61\u68cb\u7684\u70ed\u7231\uff0c\u8d85\u4e4e\u4e86\u6211\u5bf9\u4e00\u4ef6\u4e8b\u7269\u7684\u7406\u89e3\u3002\u540c\u6837\u6211\u4e5f\u559c\u6b22\u4e2d\u56fd\u8c61\u68cb\uff0c\u5305\u62ec\u559c\u6b22\u5176\u4ed6\u4e8b\u7269\uff0c\u4f46\u662f\u6211\u6ca1\u6709\u50cf\u5979\u4e00\u822c\u7684\u70ed\u7231\u548c\u6267\u7740\u3002\u4e5f\u8bb8\u8fd9\u5c31\u662f\u70ed\u7231\u548c\u6d88\u9063\u7684\u533a\u522b\u5427\u3002\u5f88\u7fa1\u6155\u54ea\u4e9b\uff0c\u53ef\u4ee5\u627e\u5230\u81ea\u5df1\u4e00\u751f\u70ed\u7231\u5e76\u613f\u4ed8\u51fa\u4e00\u751f\u53bb\u8ffd\u5bfb\u7406\u60f3\u7684\u4eba\uff0c\u6216\u8005\u8fd9\u662f\u5929\u624d\u7684\u201c\u4e13\u5229\u201d\u5427 2021.5.4 \u53ea\u6709\u4eba\u7c7b\u624d\u4f1a\u5931\u7720\uff1b\u6211\u4eec\u4eca\u5929\u6240\u505a\u7684\u4e00\u5207\uff0c\u65e0\u4e0a\u5149\u8363\uff01\u2014\u2014\u300a\u5efa\u519b\u5927\u4e1a\u300b 2021.5.5 \u8054\u901a\u624b\u673a\u53f7\u66f4\u6539\u4e3a8\u5143\u4fdd\u53f7\u5957\u9910\uff0c\u53ef\u80fd\u6162\u6162\u4e0d\u7528\u8fd9\u4e2a\u53f7\u7801\u4e86\u5427\u3001 2021.5.6 1\uff09\u6628\u5929\u559d\u5b8c\u9152\u809a\u5b50\u8fd8\u662f\u4e0d\u8212\u670d\uff0c\u4e00\u65e9\u4e0a\u5565\u90fd\u6ca1\u5e72\ud83d\ude11\uff1b2\uff09\u5927\u6982\u662f\u6211\u8d70\u4e00\u7a0b\uff0c\u56de\u671b\u4e00\u7a0b\uff0c\u671f\u5f85\u4e00\u7a0b\uff0c\u843d\u7a7a\u4e00\u7a0b\u3002\u76ee\u4e4b\u6240\u53ca\u6ca1\u6709\u4ed6\uff0c\u7ffb\u5c71\u8d8a\u5cad\u4e5f\u6ca1\u6709\u4ed6\u3002\u53ef\u4ed6\u5206\u660e\u5728\u8fd9\u4e16\u4e0a\uff0c\u66f4\u5728\u6211\u5fc3\u5c16\u3002&ndash;\u300a\u9ec4\u660f\u300b 2021.5.7 \u4e2d\u5348\u7761\u9192\u51b2\u676f\u5496\u5561\u5f88\u6e05\u9192\uff0c\u4f46\u662f\u8001\u95f9\u809a\u5b50\ud83d\ude1f \u5634\u998b+bad\u80a0\u80c3 2021.5.8 \u5c0a\u91cd\u662f\u76f8\u4e92\u7684\uff0c\u4f60\u5bf9\u6211\u4ec0\u4e48\u6001\u5ea6\uff0cSo Do I. 2021.5.9 1\uff09\u7591\u72af\u8ffd\u8e2a\uff0c\u8c46\u74e3\u641e\u7b11\u8bc4\u4ef7\uff1a\u6280\u672f\u5b85\u75c5\u5a07\u548c\u786c\u6c49\u524d\u7279\u5de5\u7684\u7231\u60c5\u6545\u4e8b\uff1b\u7ebd\u7ea6\u6d3b\u96f7\u950b\uff01\uff1b2\uff09Urban functional Regionalization \u27a1\ufe0f what about the next CEUS 2021.5.10 1\uff09GeoDa \u73b0\u5728\u505a\u7684\uff0c\u771f\u7684\u5f88\u597d\u7528\u5440 Cluster, Spatial Analysis etc. \u5e94\u6709\u5c3d\u6709\uff1b2\uff09\u6240\u6709\u4eba\u90fd\u60f3\u62ef\u6551\u4e16\u754c\uff0c\u5374\u6ca1\u4eba\u5e2e\u5988\u5988\u6d17\u7897\ud83d\ude02\uff1b3\uff09\u8eab\u4e3a\u4e00\u4e2aGIS\u4e13\u4e1a\u7684\u535a\u58eb\u751f\uff0c\u7adf\u7136\u8fd8\u8981Google\u68c0\u7d22\u201carcgis \u6295\u5f71\u8f6c\u5730\u7406\u201d\u8fd9\u7c7b\u95ee\u9898\u3002\u6211\u670d\u4e86\u6211\u81ea\u5df1\u3002\u554aawsl&hellip;\u987a\u4fbf\u8d34\u51fa\u6765\u89e3\u51b3\u65b9\u6848\uff1ahttps://blog.csdn.net/weixin_44630029/article/details/104805195 2021.5.11 1\uff09\u4e3a\u4e00\u5f20\u8138\u53bb\u517b\u4e00\u8eab\u4f24\uff1b2\uff09Geoda documentation: https://geodacenter.github.io/documentation.html 2021.5.12 \u53d1\u73b0\u81ea\u5df1\u771f\u7684\u4f1a\u56e0\u4e3a\u8bfb\u5230\u4e00\u7bc7\u903b\u8f91\u4e25\u8c28\u3001\u5199\u4f5c\u5de7\u5999\u7684\u8bba\u6587\u800c\u9ad8\u5174\u3002 2021.5.13 \u7a81\u7136\u597d\u5927\u96e8\u3002\u4e00\u628a\u5c0f\u4f1e\u8fde\u81ea\u5df1\u7684\u906e\u4e0d\u4f4f 2021.5.14 1\uff09\u5982\u679c\u4f60\u80fd\u8ba9\u5979\u964d\u843d\uff1b2\uff09\u8c08\u5230\u672a\u6765\uff08\u8fd1\u4e09\u5e74\uff09\u7684\u53d1\u5c55\uff0c\u6211\u6ca1\u6709\u4e00\u70b9\u5934\u7eea\u3002\u662f\u4e0d\u662f\u8be5\u597d\u597d\u8003\u8651\u4e00\u4e0b\u3002 2021.5.15 1\uff09\u7a81\u7136\u53d1\u73b0\u597d\u50cf\u53ea\u8981\u5fd9\u8d77\u6765\u5c31\u6765\u4e0d\u53ca\u53bb\u4f24\u611f\u90a3\u4e9b\u6709\u7684\u6ca1\u7684\u7684\u4e8b\u60c5 \u6211\u4eec\u6709\u65f6\u53ef\u80fd\u4f1a\u56e0\u4e3a\u4e00\u4e9b\u5c0f\u4e8b\u800c\u70e6\u607c \u751a\u81f3\u4f1a\u5fe7\u8651\u5f88\u4e45 \u4f46\u8981\u77e5\u9053 \u8fd9\u5f88\u591a\u65f6\u5019\u90fd\u662f\u56e0\u4e3a\u6211\u4eec\u592a\u95f2 \u56e0\u4e3a\u95f2\u4e0b\u6765\u624d\u53bb\u6709\u65f6\u95f4\u4f24\u611f \u8fd9\u4f24\u611f\u53ef\u80fd\u6765\u6e90\u4e8e\u67d0\u4e00\u9996\u6b4c \u67d0\u4e00\u4ef6\u4e8b\u4ea6\u6216\u8005\u67d0\u4e2a\u4eba \u53ef\u7b49\u8fc7\u53bb\u4e00\u6bb5\u65f6\u95f4\u6211\u4eec\u518d\u56de\u60f3\u8d77\u6765 \u597d\u50cf\u5f53\u65f6\u6211\u4eec\u6240\u6709\u5fe7\u8651\u7684\u90fd\u4e0d\u7b97\u4ec0\u4e48 \u751a\u81f3\u6709\u53ef\u80fd\u4f1a\u66f4\u52a0\u6000\u5ff5 \u6240\u4ee5\u90a3\u4e9b\u5bf9\u81ea\u5df1\u4e0d\u518d\u6709\u610f\u4e49\u7684\u4eba\u4e0d\u8981\u63a5\u53d7 \u56e0\u4e3a\u6709\u4e9b\u4eba\u7684\u76f8\u9047\u786e\u5b9e\u662f\u6ca1\u6709\u610f\u4e49\u7684 &ndash;QQ\u97f3\u4e50\u8bc4\u8bba\uff1b2\uff09\u4eca\u5929\u8001\u5f90\u53eb\u53bb\u4ed6\u4eec\u8001\u540c\u5b66\u7684\u4e00\u4e2a\u5c40\uff0c\u5e08\u5144\u559d\u9152\uff0c\u6211\u5f00\u8f66\u56de\u6765\u3002\u4e03\u4e2a\u4eba\uff1a\u6709\u505a\u79d1\u7814\u7684\u3001\u6709\u505a\u884c\u653f\u7684\u3001\u6709\u5f00\u516c\u53f8\u7684\uff0c\u542c\u7740\u4ed6\u4eec\u5206\u4eab\u751f\u6d3b\u3001\u5b66\u4e60\u4e2d\u7684\u5404\u79cd\u4e8b\u60c5\u3002\u5f53\u7136\u5410\u69fd\u6bd4\u8f83\u591a\uff0c\u6bd5\u7adf\u4ed6\u4eec\u6bd4\u8f83\u719f\u7edc\u3002\u4e0d\u662f\u90a3\u79cd\u51e1\u5c14\u8d5b\u5bb4\u4f1a\u3002\u4ece\u5b66\u6821\u5404\u79cd\u6742\u4e8b\u8c08\u5230\u7ed3\u5a5a\u751f\u5b50\uff0c\u80b2\u513f\u7b49\u7b49\u3002\u633a\u6709\u610f\u601d\u7684\u3002\u672c\u6765\u665a\u4e0a\u4e0d\u5584\u4e8e\u5f00\u8f66\uff0c\u53c8\u52a0\u4e0a\u4e9b\u5c0f\u96e8\uff0c\u56de\u6765\u7684\u8def\u4e0a\u975e\u5e38\u8c28\u614e\u3002\u665a\u4e0a\u5f00\u8f66\u786e\u5b9e\u4f1a\u66f4\u7d2f\u3002\u5fc3\u91cc\u6709\u4e9b\u8bdd\uff0c\u4f46\u662f\u4e0d\u77e5\u9053\u8be5\u600e\u4e48\u8bf4\u3002\u4e0d\u77e5\u8be5\u5982\u4f55\u8868\u8fbe\u3002 2021.5.16 \u8fd9\u4e24\u5929\u628apytorch-lighting\u5e93\u719f\u6089\u4e86\u4e0b\u3001 2021.5.17 \u5f00\u59cb\u52a8\u7b14\u3001 2021.5.18 \u57fa\u4e8eonedrive\u642d\u5efa\rolaindex\uff0c\u7a0d\u4f5c\u90e8\u5206\u4fee\u6539\uff0c\u4ed6\u7684\u56fe\u5e8a\u5176\u5b9e\u8fd8\u53ef\u4ee5\u4e0a\u4f20\u5176\u4ed6\u4e1c\u897f\uff0c\u6bd4\u5982mp3\u5565\u7684\uff0c\u7406\u8bba\u4e0a\u90fd\u80fd\u4e0a\u4f20\uff0c\u65b9\u4fbf\uff0c\u9650\u5236\u4e0d\u8d85\u8fc74m\u3001 2021.5.19 rm -R \u4e00\u8eab\u8f7b\u677e 2021.5.20 \u5927\u6982\u5c31\u662f\u4e03\u6708\u6a90\u89d2\u7684\u732b\uff0c\u8bef\u95ef\u4e86\u5341\u4e00\u6708\u521d\u51ac\u7684\u7a97\u5934\uff0c\u6320\u5f97\u5fc3\u5e95\u75d2\u75d2\u7684\uff0c\u4e16\u4eba\u5c06\u8fd9\u79cd\u60c5\u611f\uff0c\u79f0\u4f5c\u559c\u6b22? 2021.5.21 \u4e94\u6708\u4efd\u7684\u805a\u4f1a\uff1a\u6d77\u5e95\u635e+ktv+\u6c5f\u6c49\u8def\u5c0f\u5403\u270c\ufe0f 2021.5.22 \u53ea\u613f\u541b\u5fc3\u4f3c\u6211\u5fc3\uff0c\u5b9a\u4e0d\u8d1f\u76f8\u601d\u610f-\u8336\u989c\u60a6\u8272\u7684\u8336\u5305\u5f88\u9999~\uff1b\u63a8\uff1a\r\u5317\u4eac\u5916\u56fd\u8bed\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9\u3002conda\u6e90\u66f4\u65b0\u6781\u5feb\uff0c\u4e0d\u65ad\u5305 2021.5.23 \u5b66\u6821\u7684\u76f8\u58f0\u793e\u6765\u65b0\u6821\u533a\u6f14\u51fa\uff0c\u6f14\u7684\u5f88\u68d2\uff0c\u86ee\u641e\u7b11\u7684\ud83e\udd21 2021.5.24 1\uff09\u6628\u5929\u665a\u4e0a\u8d2a\u5403\u5965\u5229\u5965\u997c\u5e72\uff0c\u4eca\u5929\u4e00\u65e9\u8d77\u6765\u5237\u7259\u7259\u75bc\uff0c\u5403\u4ec0\u4e48\u90fd\u7259\u75bc\uff0c\u4e0d\u80fd\u5077\u61d2\u4e86\uff0c\u771f\u7684\u8be5\u7ea6\u65f6\u95f4\u68c0\u67e5\u7259\u9f7f\uff012\uff09\u4ece\u6b64\u65e0\u5fc3\u7231\u826f\u591c \u4efb\u4ed6\u660e\u6708\u4e0b\u897f\u697c 2021.5.25 1\uff09\u7ec8\u4e8e\u628a\u501f\u6b3e\u7ed9\u8fd8\u6e05\u4e86\uff012\uff09\u53bb\u6b66\u5927\u53e3\u8154\u68c0\u67e5\u4e3a\u4ec0\u4e48\u7259\u75bc\uff0c\u67e5\u4e86\u534a\u5929\u4e5f\u6ca1\u67e5\u51fa\u7259\u9f7f\u4ec0\u4e48\u95ee\u9898\uff0c\u5efa\u8bae\u53bb\u7259\u5468\u79d1\u6302\u4e2a\u53f7\u68c0\u67e5\u4e00\u4e0b\uff1b\u7259\u5468\u79d1\u4eba\u592a\u591a\u4e86\uff0c\u9971\u6ee1\uff0c\u65e0\u8010\u6253\u7b97\u56de\u5b66\u6821\uff1b\u60f3\u7740\u597d\u4e0d\u5bb9\u6613\u51fa\u6765\u4e00\u8d9f\uff0c\u53bb\u505a\u4e86\u4e00\u4e0b\u76f2\u4eba\u6309\u6469\uff0c\u6309\u6309\u8170\u597d\u8212\u670d\u554a\u3002\u7136\u540e\u8def\u8fc7\u5149\u8c37\u53bb\u770b\u4e00\u4e0b\u6700\u8fd1\u521a\u51fa\u7684\u901f\u5ea6\u4e0e\u6fc0\u60c59.\u5dee\u70b9\u5305\u573a\u4e86\uff0c\u4e0d\u8fc7\u89c9\u5f97\u597d\u65e0\u804a\u3002\u53ea\u662f\u80fd\u56de\u5fc6\u8d77\u4ee5\u524d\u7684\u4e00\u4e9b\u4e8b\u60c5\u3002\u56de\u5b66\u6821\u8ddf\u8001\u5988\u89c6\u9891\uff0c\u8bf4\u5230\u7259\u75bc\u7684\u4e8b\u60c5\u3002\u7ed3\u679c\u6211\u5988\u4e0a\u6765\u5c31\u8bf4\u662f\u4e0a\u706b\u5566\u3002\u6211\u4e00\u542c\uff0c\u5728\u4e00\u60f3\u524d\u4e24\u5929\u53bb\u5403\u6d77\u5e95\u635e\uff0c\u6700\u8fd1\u4e00\u76f4\u548c\u7ea2\u8336\u3002\u611f\u89c9\u786e\u5b9e\u662f\u8fd9\u4e48\u56de\u4e8b\uff0c\u800c\u4e14\u533b\u751f\u4e5f\u6ca1\u6709\u67e5\u51fa\u7259\u9f7f\u6709\u4ec0\u4e48\u6bdb\u75c5\u5440\ud83e\udd14 \u5148\u4e70\u70b9\u6d88\u708e\u836f\u8bd5\u8bd5\u5427 \u53cd\u6b63\u9884\u7ea6\u6302\u53f7\u662f\u5728\u5468\u4e94\u3002\u7259\u75bc\u4e24\u5929\u4e5f\u8ba9\u81ea\u5df1\u5f20\u5f20\u8bb0\u6027\uff0c\u4e00\u76f4\u62d6\u7740\u53bb\u770b\u7259\u3001\u505a\u6d17\u7259\u4e0d\u53bb\u3002\u975e\u7b49\u7740\u96be\u53d7\u624d\u597d\uff01 2021.5.26 \u679c\u7136\u662f\u4e0a\u706b\u4e86\u3002\u5403\u70b9\u6d88\u708e\u836f\u548c\u53bb\u706b\u836f\u597d\u591a\u4e86\uff0c\u54ce\ud83d\ude0c 2021.5.27 \u7530\u5e08\u5085\u9999\u8fa3\u867e\u87f9-\u5faa\u793c\u95e8\u5df7\u5b50 2021.5.28 \u4e3b\u52a8 2021.5.29 \u86ee\u53ef\u7231\u7684\u4e00\u4e2a\u5973\u5b69\u5b50\ud83d\udc67\ud83c\udffb 2021.5.30 \u5929\u6c14\u708e\u70ed\u7684\u4e00\u5929 2021.5.31 \u71e5\u70ed\u7684\u590f\u5929\u3001  ",
        "description": "",
        "id": 20,
        "section": "posts",
        "tags": [
            "\u7f8e\u5267",
            "\u95f9\u809a\u5b50",
            "\u7591\u72af\u8ffd\u8e2a",
            "GeoDa",
            "\u672a\u6765\u89c4\u5212",
            "\u7259\u75bc"
        ],
        "title": "2021-5",
        "uri": "/posts/journals/2021-05-02-2021-5/"
    },
    {
        "content": " Hi there, I&rsquo;m Ethan (Sheng Hu, \u80e1\u80dc).\n I&rsquo;m a Student, GISer and Explorer!  I am a PhD student in the School of Geography and Information Engineering at China University of Geosciences, Wuhan. My research interest includes the geospatial data mining and modeling in urban areas through the application of innovative geographic information system (GIS) and GeoAI methods. I am an AI fan! I\u2019m currently learning everything\ud83e\udd14 CV: zh; en  Connect with me  EMAIL: gishusheng@outlook.com QQ: 278738411  Publications \rAn overview of my publications:\n Hu, Sheng, Song Gao, Liang Wu, Yongyang Xu, Ziwei Zhang, Haifu Cui, Xi Gong. \u201cUrban function classification at road segment level using taxi trajectory data: A graph convolutional neural network approach\u201d. Computers, Environment and Urban Systems 87 (2021): 101619. Hu, Sheng, Yongyang Xu, Liang Wu, Xincai Wu, Run Wang, Ziwei Zhang, Rujuan Lu, and Wei Mao. &ldquo;A framework to detect and understand thematic places of a city using geospatial data.&rdquo; Cities 109: 103012. Hu, Sheng, Zhanjun He, Liang Wu, Li Yin, Yongyang Xu, and Haifu Cui. &ldquo;A framework for extracting urban functional regions based on multiprototype word embeddings using points-of-interest data.&rdquo; Computers, Environment and Urban Systems 80 (2020): 101442. Wu, Liang, Sheng Hu, Li Yin, Yazhou Wang, Zhanlong Chen, Mingqiang Guo, Hao Chen, and Zhong Xie. &ldquo;Optimizing cruising routes for taxi drivers using a spatio-temporal trajectory model.&rdquo; ISPRS International Journal of Geo-Information 6, no. 11 (2017): 373. Cui, Haifu, Liang Wu, Sheng Hu, Rujuan Lu, and Shanlin Wang. &ldquo;Recognition of Urban Functions and Mixed Use Based on Residents\u2019 Movement and Topic Generation Model: The Case of Wuhan, China.&rdquo; Remote Sensing 12, no. 18 (2020): 2889. Cui, Haifu, Liang Wu, Zhanjun He, Sheng Hu, Kai Ma, Li Yin, and Liufeng Tao. &ldquo;Exploring Multidimensional Spatiotemporal Point Patterns Based on an Improved Affinity Propagation Algorithm.&rdquo; International journal of environmental research and public health 16, no. 11 (2019): 1988. Wu, Liang, Fei Deng, Zhong Xie, Sheng Hu, Shu Shen, Junming Shi, and Dan Liu. &ldquo;Spatial analysis of severe fever with thrombocytopenia syndrome virus in China using a geographically weighted logistic regression model.&rdquo; International journal of environmental research and public health 13, no. 11 (2016): 1125.  Awards and Honors  Jun.2017 Outstanding Graduate Awards of China University of Geosciences, Wuhan Apr.2020 Outstanding Doctoral Innovation Fund of China University of Geosciences, Wuhan Jun.2020 Third prize in the final, Huawei Cloud Cup: Shenzhen Open Data Application Innovation Competition Nov.2020 High School GIS New Talent, awarded by National University GIS Forum Dec.2020 National Scholarship for Graduate Students   \r\r.dplayer {\rposition: relative;\rwidth: 80%;\rheight: auto;\rmargin: 3% auto;\rtext-align: center;\r}\r\r\rfunction loadDPlayer(){\rlet dp = new DPlayer({\rcontainer: document.getElementById(\"dplayer_a\"),\rloop: false ,\rscreenshot: true,\rvideo: {\rurl: \"http://106.75.233.64:10028/%e6%88%91%e7%9a%84%e8%a7%86%e9%a2%91/%e5%a4%96%e9%93%be/Wakin.Chau.Any.song.reminds.you.or.me.mp4\"\r},\rsubtitle: {\rurl: \"http://106.75.233.64:10028/%e6%88%91%e7%9a%84%e8%a7%86%e9%a2%91/%e5%a4%96%e9%93%be/Wakin.Chau.Any.song.reminds.you.or.me.vtt\"\r}\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadDPlayer, !1);\r ",
        "description": "",
        "id": 22,
        "section": "",
        "tags": null,
        "title": "About Me",
        "uri": "/about/"
    },
    {
        "content": " GIS\u64cd\u4f5c\u2014\u2014OSM\u8def\u7f51\u5316\u7b80\uff0c\u63d0\u53d6\u4e2d\u5fc3\u7ebf\u3002\u57fa\u672c\u601d\u8def\u5c31\u662f\u9053\u8def\u81a8\u80c0\uff0c\u7136\u540e\u63d0\u53d6\u4e2d\u5fc3\u7ebf\u3002\n \u7c7b\u4f3c\u8fd9\u79cd\u6548\u679c\uff1a\u8def\u7f51\u5904\u7406 \u9053\u8def\u9884\u5904\u7406\uff0c\u53bb\u9664\u6742\u4e71\u9053\u8def\uff1b\u63d0\u53d6\u4e3b\u5e72\u9053\uff08\u53ef\u9009\uff09\u27a1\ufe0f KowloonEdges.shp\n\u5efa\u7acb\u7f13\u51b2\u533a\uff08Buffer\uff09 \u8bbe\u7f6e\u7f13\u51b2\u8ddd\u79bb\uff0c\u5efa\u7acb\u7f13\u51b2\u533a\u3002(\u9999\u6e2f\u7684\u8def\u7f51\u8f83\u5bc6\u96c6\uff0c\u5b9e\u4f8b\u4e2d\u8bbe\u7f6e\u768415m) \u27a1\ufe0f KowloonEdgesBuffer.shp\n\u7f13\u51b2\u533a\u8ddd\u79bb\u6839\u636e\u5b9e\u9645\u6548\u679c\u8bbe\u7f6e\u3002\n\u878d\u5408\uff08Dissolve\uff09 \u6839\u636e\u76f8\u540c\u5c5e\u6027\u8fdb\u884c\u878d\u5408\uff0c\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u8857\u9053\u540d\u5b57\u3002\u27a1\ufe0f KEBDissolve.shp\n\u65b0\u5efa (New)  \u65b0\u5efa\u7ebf\u56fe\u5c42\uff08KECenterline.shp\uff09\uff0c\u4f5c\u4e3a\u5bb9\u5668\u4fdd\u5b58\u4e2d\u5fc3\u7ebf\u3002 \u65b0\u5efaraster.gdb\uff0c\u4f5c\u4e3a\u5bb9\u5668\u4fdd\u5b58\u4e2d\u95f4\u5904\u7406\u7684\u6805\u683c\u3002\uff08\u8fd9\u91cc\u5176\u5b9e\u662f\u8f6f\u4ef6bug\u7684\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\uff0c\u5728\u91cd\u5206\u7c7b\u7684\u65f6\u5019\u53ea\u80fd\u4fdd\u5b58\u5230gdb\u4e2d\uff0c\u539f\u56e0\u672a\u77e5\u3002\uff09  \u9762\u8f6c\u6805\u683c (To Raster) cellsize\u53ef\u4ee5\u8c03\u8282\u3002\u5b9e\u4f8b\u4e2d\u8bbe\u7f6e\u7684\u4e3a0.0001 \u27a1\ufe0f dissolve2raster\n\u91cd\u5206\u7c7b\uff08Reclassify\uff09 NoData\u8bbe\u7f6e\u4e3a0\uff08\u5fc5\u987b\uff09\uff0c\u5176\u4ed6\u5747\u8bbe\u7f6e\u4e3a1.\u7ed3\u679c\u5982\u4e0b\uff1a \u27a1\ufe0f reclassify\n\u63d0\u53d6\u4e2d\u5fc3\u7ebf \u64cd\u4f5c\u53c2\u8003\uff1ahttp://www.doc88.com/p-2307739648492.html\n \u81ea\u5b9a\u4e49-\u6269\u5c55\u6a21\u5757-ArcScan (\u6253\u94a9) Editor-\u5f00\u59cb\u7f16\u8f91-KECenterline.shp \u663e\u793aArcScan\u5de5\u5177\u6761 Vectorization\u8bbe\u7f6eMaximum Line Width\u3002\u5b9e\u4f8b\u4e2d\u4f7f\u7528\u7684\u9ed8\u8ba4\u7ebf\u5bbd\uff0c\u53ef\u6839\u636e\u60c5\u51b5\u8c03\u8282\u3002 \u533a\u57df\u751f\u6210\u4e2d\u5fc3\u7ebf \u624b\u52a8\u8c03\u8282\u90e8\u5206\u7ec6\u8282  ",
        "description": "",
        "id": 25,
        "section": "posts",
        "tags": [
            "GIS",
            "osm",
            "\u4e2d\u5fc3\u7ebf",
            "\u8def\u7f51"
        ],
        "title": "GIS\u64cd\u4f5c\u2014\u2014OSM\u8def\u7f51\u5316\u7b80\uff0c\u63d0\u53d6\u4e2d\u5fc3\u7ebf",
        "uri": "/2021/04/07/567/"
    },
    {
        "content": " papers about understanding urban physical environment using street view images. From Fan Zhang&rsquo;s Researchgate project.\n \u672f\u8bed  \u8857\u666f\u5f71\u50cf street view imagery \u8bc4\u4f30\u5efa\u6210\u73af\u5883 audit various built environments \u8bc4\u4f30&hellip;\u7684\u9002\u5e94\u6027\u548c\u76f4\u63a5\u5f71\u54cd assess their suitability for physical activity as well as their directly effect on public health evaluate the walkability of the urban physical environment \u7ecf\u9a8c\u8bc1\u636e empirical evidence \u5173\u7cfb\u5173\u8054  explore the association between walkability and older adults' depression explore the linkage between A and B    \u57fa\u4e8e\u8857\u666f\u56fe\u50cf\u7684\u57ce\u5e02\u73af\u5883\u8bc4\u4ef7\u7814\u7a76\u7efc\u8ff0  \u5730\u7403\u4fe1\u606f\u79d1\u5b66-\u5f20\u4e3d\u82f1\uff0c\u88f4\u97ec \u57ce\u5e02\u8857\u666f\u56fe\u50cf\u5177\u6709\u5982\u4e0b\u4f18\u52bf\uff1a  \u8857\u666f\u56fe\u50cf\u4ee5\u884c\u4eba\u7684\u89c6\u89d2\u8be6\u7ec6\u7cfb\u7edf\u5730\u8bb0\u5f55\u4e86\u57ce\u5e02\u8857\u9053\u7ea7\u522b\u7684\u666f\u8c61\uff0c\u56fe\u50cf\u4e2d\u5305\u542b\u7684\u57ce\u5e02\u57fa\u7840\u8bbe\u65bd\u4fe1\u606f\u4e30\u5bcc\uff0c\u63d0\u4f9b\u4e86\u8857\u9053\u5c42\u7ea7\u7684\u4eba\u9020\u666f\u89c2\u548c\u81ea\u7136\u666f\u89c2\uff0c\u80fd\u591f\u76f4\u89c2\u51c6\u786e\u5730\u53cd\u6620\u57ce\u5e02\u7684\u7acb\u9762\u4fe1\u606f\uff1b \u8857\u666f\u56fe\u50cf\u8986\u76d6\u8303\u56f4\u5e7f\u3001\u6570\u636e\u91cf\u5927\u3002\u8c37\u6b4c\u8857\u666f\u8986\u76d6\u4e86 114 \u4e2a\u56fd\u5bb6\u548c\u5730\u533a\u7684\u57ce\u5e02\uff0c\u767e\u5ea6\u8857\u666f\u8986\u76d6\u4e86\u4e2d\u56fd 372 \u5ea7\u57ce\u5e02\uff0c\u8fd9\u4e3a\u4e0d\u540c\u56fd\u5bb6\u4e4b\u95f4\u6216\u8005\u540c\u4e00\u56fd\u5bb6\u7684\u4e0d\u540c\u57ce\u5e02\u4e4b\u95f4\u7684\u73af\u5883\u8bc4\u4ef7\u7814\u7a76\u63d0\u4f9b\u4e86\u575a\u5b9e\u7684\u6570\u636e\u6e90\uff1b \u6570\u636e\u6536\u96c6\u6548\u7387\u9ad8\uff0c\u6210\u672c\u4f4e\u3002\u5730\u56fe\u5546\u63d0\u4f9b API \u5f00\u53d1\u63a5\u53e3\uff0c\u53ef\u4ee5\u514d\u8d39\u4e0b\u8f7d\u8857\u666f\u56fe\u50cf\uff0c\u901a\u8fc7\u8857\u666f\u56fe\u50cf\u8fdb\u884c\u6570\u636e\u6536\u96c6\u6210\u672c\u4f4e\uff0c\u6d41\u7a0b\u903b\u8f91\u7b80\u5355\uff0c\u540c\u65f6\u4fbf\u4e8e\u76d1\u7763\u548c\u8d28\u91cf\u63a7\u5236\uff0c\u5e76\u80fd\u89e3\u51b3\u4e00\u4e9b\u73b0\u573a\u91c7\u96c6\u6570\u636e\u7684\u5e72\u6270\u6027\u4ee5\u53ca\u4e0e\u5b9e\u5730\u8c03\u67e5\u9ad8\u72af\u7f6a\u7387\u8857\u533a\u7684\u4eba\u5458\u5b89\u5168\u95ee\u9898\u7684\u62c5\u5fe7\u3002   \u57fa\u4e8e\u8857\u666f\u56fe\u50cf\u7684\u57ce\u5e02\u73af\u5883\u8bc4\u4ef7\r  A review of urban physical environment sensing using street view imagery in public health studies  ANNALS OF GIS-Yuhao Kang Applications of street view imagery for health research  Physiological-related applications  walkable environment-walkability cycling behaviours obesity and food environment physical injury   psychological-related applications  mental health perception and sentiment (how people think about their surroundings)     comparison between street view imagery and remote sensing imagery  \r\n",
        "description": "",
        "id": 27,
        "section": "posts",
        "tags": [
            "street view images",
            "urban physical environment"
        ],
        "title": "Papers Reading-Understanding urban physical environment using street view images",
        "uri": "/2021/04/02/551/"
    },
    {
        "content": " Hope\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u7231\u6c5f\u5c71\u66f4\u7231\u7f8e\u4eba\",\rartist: \"\u963f\u867e\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%88%B1%E6%B1%9F%E5%B1%B1%E6%9B%B4%E7%88%B1%E7%BE%8E%E4%BA%BA-%E9%98%BF%E8%99%BE.mp3\",\rcover: \"https://p1.music.126.net/D-SblQlmpCq08BK4v5Bcdg==/109951164929103689.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%88%B1%E6%B1%9F%E5%B1%B1%E6%9B%B4%E7%88%B1%E7%BE%8E%E4%BA%BA-%E9%98%BF%E8%99%BE-f75b93-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2021.4.1 \u5de5\u6b32\u5584\u5176\u4e8b\uff0c\u5fc5\u5148\u5229\u5176\u5668 2021.4.2 Mark Fan Zhang: Understanding urban physical environment using street view images; People who said that. 2021.4.3 \u7262\u8bb0\u611f\u6069\uff0c\u5e0c\u671b\u4ee5\u540e\u53d8\u6210\u4ec0\u4e48\u6837\u5b50\uff0c\u90fd\u53ef\u4ee5\u6c38\u8fdc\u8bb0\u4f4f\u8fd9\u70b9\u3002? 2021.4.4 \u5b66\u672f\u5e3d\u5b50 2021.4.5 \u8d85\u4ece\u4e0a\u6d77\u8fc7\u6765\u529e\u4e8b \u665a\u4e0a\u4e00\u8d77\u7ec4\u4e86\u4e2a\u5c40 \u8fd8\u8981\u6d69\u5b50 \u7e41 \u90fd\u6709\u5404\u81ea\u7684\u70e6\u607c \u5927\u5bb6\u7684\u65b9\u5411\u4e5f\u4e0d\u540c \u4f46\u662f\u5927\u5bb6\u90fd\u5728\u52aa\u529b \u7e41\u7e41\u5e74\u5e95\u5c31\u80fd\u5c31\u80fd\u62a5\u4e0a\u5b69\u5b50\u4e86 \u8d85\u4e5f\u8bf4\u5e74\u5e95\u56de\u6b66\u6c49 \u7ed3\u5a5a \u6d69\u5b50\u548c\u5973\u670b\u53cb\u76f8\u5904\u7684\u5f88\u597d \u4e0d\u5f97\u4e0d\u63d0\u5230\u81ea\u5df1 \u53cd\u6b63\u4ed6\u4eec\u804a\u5929 \u6211\u5403\u7684\u86ee\u9999\u7684 \u54c8\u54c8 \u6211\u4e5f\u4e0d\u77e5\u9053\u81ea\u5df1\u5230\u5e95\u60f3\u8981\u4ec0\u4e48 \u8fc7\u4e24\u5929\u7b54\u8fa9\u52a0\u6cb9\u9e2d \u4e89\u53d6\u4e0d\u505a\u70ae\u7070? 2021.4.6 \u8e0f\u8e0f\u5b9e\u5b9e \u81ea\u7136\u5fc3\u6001 2021.4.7 \u96be\u4ee5\u53d6\u820d 2021.4.8 \u6211\u4e5f\u4f1a\u56e0\u4e3a\u4e00\u4e2a\u4eba\u597d\u770b\u6216\u6709\u8da3\u800c\u559c\u6b22\u4e0a\u5bf9\u65b9\uff0c\u4f46\u771f\u6b63\u80fd\u591f\u6301\u7eed\u5438\u5f15\u6211\u7684\uff0c\u4e0d\u662f\u666e\u4e16\u4ef7\u503c\u4e2d\u8868\u73b0\u51fa\u6765\u7684\u4e1c\u897f\uff0c\u662f\u90a3\u4e9b\u53ea\u6709\u6211\u80fd\u770b\u89c1\u7684\u90a3\u90e8\u5206\uff0c\u662f\u90a3\u4e9b\u7406\u667a\u5916\u58f3\u4e2d\u8eb2\u7740\u7684\u75af\u72c2\uff0c\u6e29\u67d4\u4e4b\u4e0b\u7684\u9634\u623e\uff0c\u575a\u5f3a\u80cc\u540e\u7684\u654f\u611f\u548c\u8106\u5f31\uff0c\u591c\u665a\u65f6\u7684\u6c89\u9ed8\u4e0d\u8bed\uff0c\u4ee5\u53ca\u8fd9\u4e9b\u5149\u8292\u80cc\u540e\u7684\u90a3\u4e9b\u4ec5\u5bf9\u6211\u53ef\u89c1\u7684\u53ef\u7231\u4e0e\u5929\u771f\u3002-\u6458\u81ea\u670b\u53cb\u5708 2021.4.9 \u7b54\u8fa9\u7ed3\u675f\u597d\u7d2f 2021.4.10 \u4e00\u5468\u4e00\u6b21\u7fbd\u6bdb\u7403~? 2021.4.11 Mark ArcGIS RS Tutorial: https://introduction-to-remote-sensing-learngis.hub.arcgis.com/ \u4e86\u89e3RS\u53caARCGIS Pro\u5f88\u68d2\u7684\u6559\u7a0b 2021.4.12 \u4e0d\u8981\u603b\u662f\u505a\u51fa\u6000\u624d\u4e0d\u9047\u7684\u6837\u5b50\uff0c\u4f60\u771f\u7684\u6709\u624d\u534e\uff0c\u60f3\u91ca\u653e\u624d\u534e\uff0c\u5c31\u4f4e\u5934\u5b66\u4e60\u522b\u4eba\u7684\u4f18\u70b9\uff0c\u4fdd\u6301\u8c28\u614e\u8c26\u865a 2021.4.13 Windows shortcuts on macOS: https://ke-complex-modifications.pqrs.org/#windows_shortcuts_on_macos; \u7814\u7a76\u751f\u6807\u5175\u6ca1\u9009\u4e0a? 2021.4.14 faiss\u5bfc\u5165\u65f6\u62a5\u9519\uff0c\u5c1d\u8bd5\u89e3\u51b3\u65b9\u6848:https://zhuanlan.zhihu.com/p/346728479; Siamese Network\u2014\u2014\u5c0f\u6837\u672c\u5b66\u4e60 2021.4.15 \u56db\u6708\u8fc7\u534a \u9759\u5019\u7f8e\u7b7e\u6d88\u606f; \u76ee\u5149\u6bd4\u6708\u8272\u5bc2\u5bde 2021.4.16 \u4f60\u7a7f\u7684\u6bd4\u5973\u751f\u8fd8\u597d\u770b\uff1f\uff1f\uff1f\u8fd9\u79cd\u5938\u4eba\u65b9\u5f0f\u771f\u72ec\u7279 2021.4.17 ??\u2014\u2014\u5411\u65e5\u8475\u53d1\u82bd\u4e86 2021.4.18 \u8111\u56de\u8def\u65b0\u5947; Markdown\u7f16\u8f91\u5668\u89c4\u8303\uff1a\u6dfb\u52a0\u5757\u4ee3\u7801\u8981\u52a0Tab\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u7f29\u8fdb\u95ee\u9898\uff01 2021.4.19 \u6821\u56ed\u5e7f\u64ad\u91cc\u653e\u5230\u597d\u51e0\u9996\u81ea\u5df1\u559c\u6b22\u7684\u6b4c\uff0c\u5fc3\u60c5\u5c31\u5f88\u597d\u554a\ud83d\ude2d\uff1b\u535a\u5ba2\u7684Emoji\u88ab\u5403\u4e86\uff0c\u5168\u90fd\u6210\u95ee\u53f7\u4e86? 2021.4.20 \u628a\u95f2\u7f6e\u7684\u6811\u8393\u6d3e3B\u5237\u4e86\rOpenWrt\u8f6f\u8def\u7531\uff0c\u914d\u7f6e\u4e86\u4e00\u756a,\u4f5c\u4e3a\u4e3b\u8def\u7531\u5668\uff08\u5c0f\u7c73\u8def\u7531\u56684\u5343\u5146\uff09\u7684\u65c1\u8def\u7531\u3002\u4f53\u9a8c\u8fd8\u4e0d\u9519\u54c8\u3002\u53c2\u8003\u6559\u7a0b\uff1ahttps://rongtianjie.me/archives/207 2021.4.21 Mark-\u56fe\u4e4b\u5178: http://www.tuzhidian.com/ \u4f5c\u8005\u4ecb\u7ecd\uff1a\u81f4\u529b\u4e8e\u4ecb\u7ecd\u53ef\u89c6\u5316\u56fe\u8868\u53ca\u5176\u5e94\u7528\u573a\u666f\u3002\u6211\u4eec\u5bf9\u5e38\u89c1\u56fe\u8868\u8fdb\u884c\u4e86\u6574\u7406\u5f52\u7c7b\uff0c\u5e76\u8be6\u7ec6\u603b\u7ed3\u4e86\u56fe\u8868\u7684\u6b63\u786e\u7528\u6cd5\uff0c\u5982\u6570\u636e\u7c7b\u578b\u3001\u9002\u7528\u573a\u666f\u3001\u4e0d\u9002\u7528\u573a\u666f\u7b49\u3002\u540c\u65f6\uff0c\u6211\u4eec\u8fd8\u641c\u96c6\u4e86\u8bb8\u591a\u6709\u8da3\u7684\u56fe\u8868\u8bbe\u8ba1\u4f5c\u54c1\u548c\u56fe\u8868\u6559\u7a0b\uff0c\u5e2e\u52a9\u5927\u5bb6\u5236\u4f5c\u51fa\u9ad8\u6548\u3001\u7f8e\u89c2\u7684\u53ef\u89c6\u5316\u3002 2021.4.22 \u62b5\u676d\u3002 2021.4.23 \u542c\u8d39\u817e\u8001\u5e08\u8bb2\u7684\u5f88\u7ecf\u5178\u7684\u4e00\u53e5\uff1a\u4e00\u5f00\u59cb\u6211\u4e5f\u4e0d\u77e5\u9053\u6211\u505a\u7684\uff08\u7814\u7a76\uff09\u6709\u4ec0\u4e48\u610f\u4e49\uff0c\u4e00\u8fb9\u505a\u4e00\u8fb9\u627e\u5bfb[\u5927\u4f53\u610f\u601d\u662f\u8fd9\u6837\u5b50]\u3002 2021.4.24 \u4eca\u5929\u59da\u5c27\u8001\u5e08\u4f5c\u62a5\u544a\uff0c\u5728Embedding\u90a3\u4e00\u5757\u8fd8\u7279\u610f\u63d0\u4e86\u4e00\u53e5\u6211\uff0c\u771f\u5fc3\u975e\u5e38\u611f\u6fc0[\u6536\u4e70\u4eba\u5fc3\u5f88\u6210\u529f]\u3002\u89c1\u4e86\u5f20\u4fee\u8fdc\u535a\u58eb\uff0c\u8981\u4e86\u8054\u7cfb\u65b9\u5f0f\uff0c\u975e\u5e38\u5f00\u5fc3. 2021.4.25 \u8fd4\u6c49\u3002 2021.4.26 \u5982\u679c\u751f\u547d\u6ca1\u6709\u9057\u61be\u6ca1\u6709\u6ce2\u6f9c \u4f60\u4f1a\u4e0d\u4f1a\u6c38\u8fdc\u6ca1\u6709\u8bf4\u518d\u89c1\u7684\u4e00\u5929 \u53ef\u80fd\u5e74\u5c11\u7684\u5fc3\u592a\u67d4\u8f6f \u7ecf\u4e0d\u8d77\u98ce\u7ecf\u4e0d\u8d77\u6d6a 2021.4.27 ArcGIS Desktop 10.7 \u5b89\u88c5\u5305\u4e0d\u5927 \u7834\u89e3\u65b9\u4fbf \u4e0d\u7528\u7e41\u7410\u7684\u7834\u89e3\u8fc7\u7a0b \u76f4\u63a5\u66ff\u6362\u4e00\u4e2a\u6587\u4ef6\u5c31\u53ef\u4ee5\u4e86 2021.4.28 hugo\u8fc1\u79fb; \u5212\u6c34\u7684\u4e00\u5929\ud83e\udd37\ud83c\udffb\u200d\u2640\ufe0f 2021.4.29 \ud83c\udff8 2021.4.30 life as a feather, stiff as a board.  ",
        "description": "",
        "id": 28,
        "section": "posts",
        "tags": [
            "\u676d\u5dde",
            "\u6e05\u660e",
            "\u7814\u7a76\u751f\u6807\u5175\u8bc4\u9009",
            "\u8def\u7531\u5668"
        ],
        "title": "2021-4",
        "uri": "/posts/journals/2021-04-01-2021-4/"
    },
    {
        "content": " \u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u7b14\u8bb0\u3002\u8bb0\u5f55\u5e38\u7528\u6570\u636e\u96c6\u3001\u4efb\u52a1\u53ca\u7f51\u7edc\u67b6\u6784\u3002\n \u4e3b\u8981\u53c2\u8003\u94fe\u63a5\uff1a\n Paper Study with DGL Official DGL Examples and Modules DGL\u7528\u6237\u6307\u5357 OGB Dataset \u56fe\u57fa\u51c6\u6570\u636e\u96c6(OGB)  \u5e38\u7528\u6570\u636e \u5f15\u6587\u7f51\u7edc\uff08Cora\u3001PubMed\u3001Citeseer\uff09 Cora\u4e3a\u4f8b\uff1a\nCora\u6570\u636e\u96c6\u7531\u673a\u5668\u5b66\u4e60\u8bba\u6587\u7ec4\u6210\uff0c\u662f\u8fd1\u5e74\u6765\u56fe\u6df1\u5ea6\u5b66\u4e60\u5f88\u559c\u6b22\u4f7f\u7528\u7684\u6570\u636e\u96c6\u3002\u5728\u6570\u636e\u96c6\u4e2d\uff0c\u8bba\u6587\u5206\u4e3a\u4ee5\u4e0b\u4e03\u7c7b\u4e4b\u4e00:\u57fa\u4e8e\u6848\u4f8b\u3001\u9057\u4f20\u7b97\u6cd5\u3001\u795e\u7ecf\u7f51\u7edc\u3001\u6982\u7387\u65b9\u6cd5\u3001\u5f3a\u5316\u5b66\u4e60\u3001\u89c4\u5219\u5b66\u4e60\u3001\u7406\u8bba\u3002\u8bba\u6587\u7684\u9009\u62e9\u65b9\u5f0f\u662f\uff0c\u5728\u6700\u7ec8\u8bed\u6599\u5e93\u4e2d\uff0c\u6bcf\u7bc7\u8bba\u6587\u5f15\u7528\u6216\u88ab\u81f3\u5c11\u4e00\u7bc7\u5176\u4ed6\u8bba\u6587\u5f15\u7528\u3002\u6574\u4e2a\u8bed\u6599\u5e93\u4e2d\u67092708\u7bc7\u8bba\u6587\u3002\u5728\u8bcd\u5e72\u5835\u585e\u548c\u53bb\u9664\u8bcd\u5c3e\u540e\uff0c\u53ea\u5269\u4e0b1433\u4e2a\u72ec\u7279\u7684\u5355\u8bcd\u3002\u6587\u6863\u9891\u7387\u5c0f\u4e8e10\u7684\u6240\u6709\u5355\u8bcd\u90fd\u88ab\u5220\u9664\u3002cora\u6570\u636e\u96c6\u5305\u542b1433\u4e2a\u72ec\u7279\u5355\u8bcd\uff0c\u6240\u4ee5\u7279\u5f81\u662f1433\u7ef4\u30020\u548c1\u63cf\u8ff0\u7684\u662f\u6bcf\u4e2a\u5355\u8bcd\u5728paper\u4e2d\u662f\u5426\u5b58\u5728\u3002\n\u6570\u636e\u96c6\u5212\u5206\uff1aCora\u6570\u636e\u542b\u67092708\u4e2a\u6837\u672c\uff0c\u5212\u5206\u4e3alabeled data, test data and unlabeled data.\u6587\u4ef6\u5217\u8868  ind.dataset_str.x =&gt; \u8bad\u7ec3\u5b9e\u4f8b\u7684\u7279\u5f81\u5411\u91cf\uff0c\u662fscipy.sparse.csr.csr_matrix\u7c7b\u5bf9\u8c61\uff0cshape:(140, 1433)\uff1b140\u4e2a\u6837\u672c\uff0c\u6bcf\u7c7b\u968f\u673a\u9009\u62e920\u4e2a\u6837\u672c\uff0c\u4e00\u5171\u5305\u542b7\u4e2a\u7c7b\u522b\uff0c\u56e0\u6b64\u8bad\u7ec3\u96c6\u542b\u6709140\u4e2a\u6837\u672c\uff08\u5373labeled \u6837\u672c\uff09\uff1b  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  with open(&#34;data/ind.cora.x&#34;, &#39;rb&#39;) as f: data = pkl.load(f, encoding=&#39;latin1&#39;) print(type(data)) #&amp;lt;class &#39;scipy.sparse.csr.csr_matrix&#39;&amp;gt; print(data.shape) #(140, 1433)-ind.cora.x\u662f140\u884c\uff0c1433\u5217\u7684 print(data[1]) nonzero=data.nonzero() print(nonzero) print(data.toarray()) ------- # print(data[1]) # \u53d8\u91cfdata\u662f\u4e2ascipy.sparse.csr.csr_matrix\uff0c\u7c7b\u4f3c\u7a00\u758f\u77e9\u9635\uff0c\u8f93\u51fa\u5f97\u5230\u7684\u662f\u77e9\u9635\u4e2d\u975e0\u7684\u884c\u5217\u5750\u6807\u53ca\u503c # (0, 19) 1.0 # (0, 88) 1.0 # (0, 149) 1.0 # (0, 212) 1.0 # (0, 233) 1.0 # (0, 332) 1.0 # (0, 336) 1.0 # (0, 359) 1.0 # (0, 472) 1.0 # (0, 507) 1.0 # (0, 548) 1.0 # ... ------- # print(nonzero) # \u8f93\u51fa\u975e\u96f6\u5143\u7d20\u5bf9\u5e94\u7684\u884c\u5750\u6807\u548c\u5217\u5750\u6807, nonzero\u662f\u4e2atuple # (array([ 0, 0, 0, ..., 139, 139, 139], dtype=int32), array([ 19, 81, 146, ..., 1263, 1274, 1393], dtype=int32)) ------- # print(data.toarray()) # [[0. 0. 0. ... 0. 0. 0.] # [0. 0. 0. ... 0. 0. 0.] # [0. 0. 0. ... 0. 0. 0.] # ... # [0. 0. 0. ... 0. 1. 0.] # [0. 0. 0. ... 0. 0. 0.] # [0. 1. 0. ... 0. 0. 0.]]    ind.dataset_str.tx =&gt; \u6d4b\u8bd5\u5b9e\u4f8b\u7684\u7279\u5f81\u5411\u91cf,shape:(1000, 1433)\uff1b\u968f\u673a\u9009\u53d61000\u4e2a\u6837\u672c\uff08\u5373test \u6837\u672c\uff09\uff1b ind.dataset_str.allx =&gt; \u6709\u6807\u7b7e\u7684+\u65e0\u6807\u7b7e\u8bad\u7ec3\u5b9e\u4f8b\u7684\u7279\u5f81\u5411\u91cf\uff0c\u662find.dataset_str.x\u7684\u8d85\u96c6\uff0cshape:(1708, 1433)\uff1b\u6392\u9664\u6d4b\u8bd5\u6837\u672c\u4e2d\u9009\u53d6\u76841000\u4e2a\u6837\u672c\uff0c\u9009\u53d6\u7684\u5269\u4f59\u6837\u672c\uff08\u5373labeled + unlabeled \u6837\u672c\uff09\u3002 ind.dataset_str.y =&gt; \u8bad\u7ec3\u5b9e\u4f8b\u7684\u6807\u7b7e\uff0c\u72ec\u70ed\u7f16\u7801\uff0cnumpy.ndarray\u7c7b\u7684\u5b9e\u4f8b\uff0c\u662fnumpy.ndarray\u5bf9\u8c61\uff0cshape\uff1a(140, 7)  1 2 3 4 5  with open(&#34;data/ind.cora.y&#34;, &#39;rb&#39;) as f: data = pkl.load(f, encoding=&#39;latin1&#39;) print(type(data)) # &amp;lt;class &#39;numpy.ndarray&#39;&amp;gt; print(data.shape) # (140, 7) print(data[1]) # [0 0 0 0 1 0 0]    ind.dataset_str.ty =&gt; \u6d4b\u8bd5\u5b9e\u4f8b\u7684\u6807\u7b7e\uff0c\u72ec\u70ed\u7f16\u7801\uff0cnumpy.ndarray\u7c7b\u7684\u5b9e\u4f8b,shape:(1000, 7) ind.dataset_str.ally =&gt; \u5bf9\u5e94\u4e8eind.dataset_str.allx\u7684\u6807\u7b7e\uff0c\u72ec\u70ed\u7f16\u7801,shape:(1708, 7) ind.dataset_str.graph =&gt; \u56fe\u6570\u636e\uff0ccollections.defaultdict\u7c7b\u7684\u5b9e\u4f8b\uff0c\u683c\u5f0f\u4e3a {index\uff1a[index_of_neighbor_nodes]}  1 2 3 4 5 6 7 8 9 10 11 12 13 14  with open(&#34;data/ind.cora.graph&#34;, &#34;rb&#34;) as f: data = pkl.load(f, encoding=&#34;latin1&#34;) print(type(data)) # &amp;lt;class &#39;collections.defaultdict&#39;&amp;gt; print(data) ------ # { # 0: [633, 1862, 2582], # 1: [2, 652, 654], # 2: [1986, 332, 1666, 1, 1454], # ..., # 2706: [165, 2707, 1473, 169], # 2707: [598, 165, 1473, 2706], # }    ind.dataset_str.test.index =&gt; \u6d4b\u8bd5\u5b9e\u4f8b\u7684id\uff0c1000\u884c(1708-2707)  \u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u4e2d\uff0c\u4e00\u76f4\u8ff7\u60d1\u7684mask\u7684index    idx_test = test_idx_range.tolist() #1708-2707\uff0c\u51711000\u4e2a = \u8ba1\u7b97\u6d4b\u8bd5acc   idx_train = range(len(y)) #0-139\uff0c\u5171140\u4e2a = \u8bad\u7ec3\u8fc7\u7a0b\u8ba1\u7b97loss\uff0c\u7528\u4e8e\u53cd\u5411\u4f20\u64ad   idx_val = range(len(y), len(y)+500)#140-539\uff0c\u5171500\u4e2a = \u8bad\u7ec3\u8fc7\u7a0b\u8ba1\u7b97acc    \u751f\u7269\u5316\u5b66\u7ed3\u6784\uff08PPI\u3001NCI-1\u3001NCI-109\u3001MUTAG\u3001QM9\u3001Tox21\uff09   \u53c2\u8003\uff1a   \u6570\u636e\u63cf\u8ff0\uff1ahttps://www.jianshu.com/p/67137451b67f\uff1bhttps://my.oschina.net/chengsen/blog/4545191   TUDataset\uff1ahttps://chrsmrrs.github.io/datasets/docs/datasets/     \u5e38\u7528\u7f51\u7edc MLP Linear + BatchNorm1d\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  class MLP(nn.Module): &#34;&#34;&#34;MLP with linear output&#34;&#34;&#34; def __init__(self, num_layers, input_dim, hidden_dim, output_dim): &#34;&#34;&#34;MLP layers construction Paramters --------- num_layers: int The number of linear layers input_dim: int The dimensionality of input features hidden_dim: int The dimensionality of hidden units at ALL layers output_dim: int The number of classes for prediction &#34;&#34;&#34; super(MLP, self).__init__() self.linear_or_not = True # default is linear model self.num_layers = num_layers self.output_dim = output_dim if num_layers &amp;lt; 1: raise ValueError(&#34;number of layers should be positive!&#34;) elif num_layers == 1: # Linear model self.linear = nn.Linear(input_dim, output_dim) else: # Multi-layer model self.linear_or_not = False self.linears = torch.nn.ModuleList() self.batch_norms = torch.nn.ModuleList() self.linears.append(nn.Linear(input_dim, hidden_dim)) for layer in range(num_layers - 2): self.linears.append(nn.Linear(hidden_dim, hidden_dim)) self.linears.append(nn.Linear(hidden_dim, output_dim)) for layer in range(num_layers - 1): self.batch_norms.append(nn.BatchNorm1d((hidden_dim))) def forward(self, x): if self.linear_or_not: # If linear model return self.linear(x) else: # If MLP h = x for i in range(self.num_layers - 1): h = F.relu(self.batch_norms[i](self.linears[i](h))) return self.linears[-1](h)   GCN GraphSAGE 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  import torch import torch.nn as nn import torch.nn.functional as F from dgl.nn.pytorch.conv import SAGEConv class GraphSAGE(nn.Module): def __init__( self, in_feats, n_hidden, n_layers, out_feats, activation, dropout, aggregator_type, ): super(GraphSAGE, self).__init__() self.layers = nn.ModuleList() self.dropout = nn.Dropout(dropout) self.activation = activation # input layer self.layers.append(SAGEConv(in_feats, n_hidden, aggregator_type)) # hidden layers for i in range(n_layers - 1): self.layers.append(SAGEConv(n_hidden, n_hidden, aggregator_type)) # output layer self.layers.append(SAGEConv(n_hidden, out_feats, aggregator_type)) def forward(self, graph, inputs): h = self.dropout(inputs) for l, layer in enumerate(self.layers): h = layer(graph, h) if l != len(self.layers) - 1: h = self.activation(h) h = self.dropout(h) return h model = GraphSAGE( in_feats=dataset.dim_nfeats, n_hidden=32, n_layers=2, out_feats=dataset.gclasses, activation=F.relu, dropout=0.5, aggregator_type=&#34;gcn&#34;, )   GIN 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177  &#34;&#34;&#34; How Powerful are Graph Neural Networks https:&amp;#47;&amp;#47;arxiv.org/abs/1810.00826 https://openreview.net/forum?id=ryGs6iA5Km Author&#39;s implementation: https://github.com/weihua916/powerful-gnns &#34;&#34;&#34; from dgl.nn.pytorch.conv import GINConv from dgl.nn.pytorch.glob import SumPooling, AvgPooling, MaxPooling class ApplyNodeFunc(nn.Module): &#34;&#34;&#34;Update the node feature hv with MLP, BN and ReLU.&#34;&#34;&#34; def __init__(self, mlp): super(ApplyNodeFunc, self).__init__() self.mlp = mlp self.bn = nn.BatchNorm1d(self.mlp.output_dim) def forward(self, h): h = self.mlp(h) h = self.bn(h) h = F.relu(h) return h class MLP(nn.Module): &#34;&#34;&#34;MLP with linear output&#34;&#34;&#34; def __init__(self, num_layers, input_dim, hidden_dim, output_dim): &#34;&#34;&#34;MLP layers construction Paramters --------- num_layers: int The number of linear layers input_dim: int The dimensionality of input features hidden_dim: int The dimensionality of hidden units at ALL layers output_dim: int The number of classes for prediction &#34;&#34;&#34; super(MLP, self).__init__() self.linear_or_not = True # default is linear model self.num_layers = num_layers self.output_dim = output_dim if num_layers &amp;lt; 1: raise ValueError(&#34;number of layers should be positive!&#34;) elif num_layers == 1: # Linear model self.linear = nn.Linear(input_dim, output_dim) else: # Multi-layer model self.linear_or_not = False self.linears = torch.nn.ModuleList() self.batch_norms = torch.nn.ModuleList() self.linears.append(nn.Linear(input_dim, hidden_dim)) for layer in range(num_layers - 2): self.linears.append(nn.Linear(hidden_dim, hidden_dim)) self.linears.append(nn.Linear(hidden_dim, output_dim)) for layer in range(num_layers - 1): self.batch_norms.append(nn.BatchNorm1d((hidden_dim))) def forward(self, x): if self.linear_or_not: # If linear model return self.linear(x) else: # If MLP h = x for i in range(self.num_layers - 1): h = F.relu(self.batch_norms[i](self.linears[i](h))) return self.linears[-1](h) class GIN(nn.Module): &#34;&#34;&#34;GIN model&#34;&#34;&#34; def __init__(self, num_layers, num_mlp_layers, input_dim, hidden_dim, output_dim, final_dropout, learn_eps, graph_pooling_type, neighbor_pooling_type): &#34;&#34;&#34;model parameters setting Paramters --------- num_layers: int The number of linear layers in the neural network num_mlp_layers: int The number of linear layers in mlps input_dim: int The dimensionality of input features hidden_dim: int The dimensionality of hidden units at ALL layers output_dim: int The number of classes for prediction final_dropout: float dropout ratio on the final linear layer learn_eps: boolean If True, learn epsilon to distinguish center nodes from neighbors If False, aggregate neighbors and center nodes altogether. neighbor_pooling_type: str how to aggregate neighbors (sum, mean, or max) graph_pooling_type: str how to aggregate entire nodes in a graph (sum, mean or max) &#34;&#34;&#34; super(GIN, self).__init__() self.num_layers = num_layers self.learn_eps = learn_eps # List of MLPs self.ginlayers = torch.nn.ModuleList() self.batch_norms = torch.nn.ModuleList() for layer in range(self.num_layers - 1): if layer == 0: mlp = MLP(num_mlp_layers, input_dim, hidden_dim, hidden_dim) else: mlp = MLP(num_mlp_layers, hidden_dim, hidden_dim, hidden_dim) self.ginlayers.append( GINConv(ApplyNodeFunc(mlp), neighbor_pooling_type, 0, self.learn_eps)) self.batch_norms.append(nn.BatchNorm1d(hidden_dim)) # Linear function for graph poolings of output of each layer # which maps the output of different layers into a prediction score self.linears_prediction = torch.nn.ModuleList() for layer in range(num_layers): if layer == 0: self.linears_prediction.append( nn.Linear(input_dim, output_dim)) else: self.linears_prediction.append( nn.Linear(hidden_dim, output_dim)) self.drop = nn.Dropout(final_dropout) if graph_pooling_type == &#39;sum&#39;: self.pool = SumPooling() elif graph_pooling_type == &#39;mean&#39;: self.pool = AvgPooling() elif graph_pooling_type == &#39;max&#39;: self.pool = MaxPooling() else: raise NotImplementedError def forward(self, g, h): # list of hidden representation at each layer (including input) hidden_rep = [h] for i in range(self.num_layers - 1): h = self.ginlayers[i](g, h) h = self.batch_norms[i](h) h = F.relu(h) hidden_rep.append(h) score_over_layer = 0 # perform pooling over all nodes in each graph in every layer for i, h in enumerate(hidden_rep): pooled_h = self.pool(g, h) score_over_layer += self.drop(self.linears_prediction[i](pooled_h)) return score_over_layer model = GIN( args.num_layers, args.num_mlp_layers, dataset.dim_nfeats, args.hidden_dim, dataset.gclasses, args.final_dropout, args.learn_eps, args.graph_pooling_type, args.neighbor_pooling_type, ).to(args.device)   \u4efb\u52a1 \u8282\u70b9\u5206\u7c7b \u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4\uff0c\u6700\u5e38\u89c1\u548c\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4efb\u52a1\u4e4b\u4e00\u5c31\u662f\u8282\u70b9\u5206\u7c7b\u3002 \u56fe\u6570\u636e\u4e2d\u7684\u8bad\u7ec3\u3001\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5177\u6709\u4ece\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u7c7b\u522b\u4e2d\u5206\u914d\u7684\u4e00\u4e2a\u7c7b\u522b\uff0c\u5373\u6b63\u786e\u7684\u6807\u6ce8\u3002 \u8282\u70b9\u56de\u5f52\u4efb\u52a1\u4e5f\u7c7b\u4f3c\uff0c\u8bad\u7ec3\u3001\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u6807\u6ce8\u4e86\u4e00\u4e2a\u6b63\u786e\u7684\u6570\u5b57\u3002\u4e3a\u4e86\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u7c7b\uff0c\u56fe\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u4e86\u6d88\u606f\u4f20\u9012\u673a\u5236\uff0c\u5229\u7528\u8282\u70b9\u81ea\u8eab\u7684\u7279\u5f81\u548c\u5176\u90bb\u8282\u70b9\u53ca\u8fb9\u7684\u7279\u5f81\u6765\u8ba1\u7b97\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a\u3002 \u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u91cd\u590d\u591a\u8f6e\uff0c\u4ee5\u5229\u7528\u66f4\u5927\u8303\u56f4\u7684\u90bb\u5c45\u4fe1\u606f\u3002\ncora\u6570\u636e\u96c6\u4e0a\u8282\u70b9\u5206\u7c7b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202  &#34;&#34;&#34; Inductive Representation Learning on Large Graphs Paper: http://papers.nips.cc/paper/6703-inductive-representation-learning-on-large-graphs.pdf Code: https://github.com/williamleif/graphsage-simple Simple reference implementation of GraphSAGE. &#34;&#34;&#34; import argparse import time import dgl import networkx as nx import numpy as np import torch import torch.nn as nn import torch.nn.functional as F from dgl import DGLGraph from dgl.data import load_data, register_data_args from dgl.nn.pytorch.conv import SAGEConv class GraphSAGE(nn.Module): def __init__( self, in_feats, n_hidden, n_classes, n_layers, activation, dropout, aggregator_type, ): super(GraphSAGE, self).__init__() self.layers = nn.ModuleList() self.dropout = nn.Dropout(dropout) self.activation = activation # input layer self.layers.append(SAGEConv(in_feats, n_hidden, aggregator_type)) # hidden layers for i in range(n_layers - 1): self.layers.append(SAGEConv(n_hidden, n_hidden, aggregator_type)) # output layer self.layers.append( SAGEConv(n_hidden, n_classes, aggregator_type) ) # activation None def forward(self, graph, inputs): h = self.dropout(inputs) for l, layer in enumerate(self.layers): h = layer(graph, h) if l != len(self.layers) - 1: h = self.activation(h) h = self.dropout(h) return h def evaluate(model, graph, features, labels, nid): model.eval() with torch.no_grad(): logits = model(graph, features) logits = logits[nid] labels = labels[nid] _, indices = torch.max(logits, dim=1) correct = torch.sum(indices == labels) return correct.item() * 1.0 / len(labels) def main(args): # load and preprocess dataset data = load_data(args) g = data[0] features = g.ndata[&#34;feat&#34;] labels = g.ndata[&#34;label&#34;] train_mask = g.ndata[&#34;train_mask&#34;] val_mask = g.ndata[&#34;val_mask&#34;] test_mask = g.ndata[&#34;test_mask&#34;] in_feats = features.shape[1] n_classes = data.num_classes n_edges = data.graph.number_of_edges() print( &#34;&#34;&#34;----Data statistics------&#39; #Edges %d#Classes %d#Train samples %d#Val samples %d#Test samples %d&#34;&#34;&#34; % ( n_edges, n_classes, train_mask.int().sum().item(), val_mask.int().sum().item(), test_mask.int().sum().item(), ) ) if args.gpu &amp;lt; 0: cuda = False else: cuda = True torch.cuda.set_device(args.gpu) features = features.cuda() labels = labels.cuda() train_mask = train_mask.cuda() val_mask = val_mask.cuda() test_mask = test_mask.cuda() print(&#34;use cuda:&#34;, args.gpu) train_nid = train_mask.nonzero().squeeze() val_nid = val_mask.nonzero().squeeze() test_nid = test_mask.nonzero().squeeze() # graph preprocess and calculate normalization factor g = dgl.remove_self_loop(g) n_edges = g.number_of_edges() if cuda: g = g.int().to(args.gpu) # create GraphSAGE model model = GraphSAGE( in_feats, args.n_hidden, n_classes, args.n_layers, F.relu, args.dropout, args.aggregator_type, ) if cuda: model.cuda() # use optimizer optimizer = torch.optim.Adam( model.parameters(), lr=args.lr, weight_decay=args.weight_decay ) # initialize graph dur = [] for epoch in range(args.n_epochs): model.train() if epoch &amp;gt;= 3: t0 = time.time() # forward logits = model(g, features) loss = F.cross_entropy(logits[train_nid], labels[train_nid]) optimizer.zero_grad() loss.backward() optimizer.step() if epoch &amp;gt;= 3: dur.append(time.time() - t0) acc = evaluate(model, g, features, labels, val_nid) print( &#34;Epoch {:05d}| Time(s) {:.4f}| Loss {:.4f}| Accuracy {:.4f}| &#34; &#34;ETputs(KTEPS) {:.2f}&#34;.format( epoch, np.mean(dur), loss.item(), acc, n_edges / np.mean(dur) / 1000 ) ) print() acc = evaluate(model, g, features, labels, test_nid) print(&#34;Test Accuracy {:.4f}&#34;.format(acc)) parser = argparse.ArgumentParser(description=&#34;GraphSAGE&#34;) register_data_args(parser) parser.add_argument(&#34;--dropout&#34;, type=float, default=0.5, help=&#34;dropout probability&#34;) parser.add_argument(&#34;--gpu&#34;, type=int, default=-1, help=&#34;gpu&#34;) parser.add_argument(&#34;--lr&#34;, type=float, default=1e-2, help=&#34;learning rate&#34;) parser.add_argument( &#34;--n-epochs&#34;, type=int, default=200, help=&#34;number of training epochs&#34; ) parser.add_argument( &#34;--n-hidden&#34;, type=int, default=16, help=&#34;number of hidden gcn units&#34; ) parser.add_argument( &#34;--n-layers&#34;, type=int, default=1, help=&#34;number of hidden gcn layers&#34; ) parser.add_argument( &#34;--weight-decay&#34;, type=float, default=5e-4, help=&#34;Weight for L2 loss&#34; ) parser.add_argument( &#34;--aggregator-type&#34;, type=str, default=&#34;gcn&#34;, help=&#34;Aggregator type: mean/gcn/pool/lstm&#34;, ) # \u8bbe\u7f6e\u53c2\u6570 args = parser.parse_args(args=[&#34;--dataset&#34;, &#34;cora&#34;, &#34;--gpu&#34;, &#34;0&#34;]) print(args) main(args) ------ # output Epoch 00000 | Time(s) nan | Loss 1.9592 | Accuracy 0.0580 | ETputs(KTEPS) nan Epoch 00001 | Time(s) nan | Loss 1.9487 | Accuracy 0.0580 | ETputs(KTEPS) nan ... Epoch 00198 | Time(s) 0.0105 | Loss 0.3375 | Accuracy 0.7980 | ETputs(KTEPS) 1006.57 Epoch 00199 | Time(s) 0.0105 | Loss 0.3457 | Accuracy 0.7960 | ETputs(KTEPS) 1006.80 Test Accuracy 0.8220   \u8fb9\u5206\u7c7b/\u56de\u5f52 \u6709\u65f6\u7528\u6237\u5e0c\u671b\u9884\u6d4b\u56fe\u4e2d\u8fb9\u7684\u5c5e\u6027\u503c\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u7528\u6237\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u8fb9\u5206\u7c7b/\u56de\u5f52\u7684\u6a21\u578b\u3002\u591a\u5c42GNN\u540c\u6837\u4e5f\u53ef\u4ee5\u88ab\u7528\u4e8e\u8ba1\u7b97\u4efb\u4f55\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a\uff0c \u5e76\u4ece\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a\uff0c\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u5bf9\u8fb9\u5c5e\u6027\u7684\u9884\u6d4b\u3002\u5bf9\u4e00\u6761\u8fb9\u8ba1\u7b97\u9884\u6d4b\u503c\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u5c06\u9884\u6d4b\u8868\u793a\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u51fd\u6570\u7684\u8f93\u5165\u4e3a\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a\uff0c \u8f93\u5165\u8fd8\u53ef\u4ee5\u5305\u62ec\u8fb9\u81ea\u8eab\u7684\u7279\u5f81\u3002\n\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b \u8282\u70b9\u5206\u7c7b\u6a21\u578b\u4e2d\u8ba1\u7b97\u4e86\u8282\u70b9\u7684\u8868\u793a\uff0c\u90a3\u4e48\u7528\u6237\u53ea\u9700\u8981\u518d\u7f16\u5199\u4e00\u4e2aapply_edges()\u65b9\u6cd5\u8ba1\u7b97\u8fb9\u9884\u6d4b\u7684\u7ec4\u4ef6\u5373\u53ef\u8fdb\u884c\u8fb9\u5206\u7c7b/\u56de\u5f52\u4efb\u52a1\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u8fb9\u56de\u5f52\u4efb\u52a1\uff0c\u5982\u679c\u7528\u6237\u60f3\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u4e00\u4e2a\u5206\u6570\uff0c\u53ef\u6309\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9\u6bcf\u4e00\u6761\u8fb9\u8ba1\u7b97\u5b83\u7684\u4e24\u7aef\u8282\u70b9\u9690\u85cf\u8868\u793a\u7684\u70b9\u79ef\u6765\u4f5c\u4e3a\u5206\u6570\u3002\n1 2 3 4 5 6 7 8  import dgl.function as fn class DotProductPredictor(nn.Module): def forward(self, graph, h): # h\u662f\u4ece5.1\u8282\u7684GNN\u6a21\u578b\u4e2d\u8ba1\u7b97\u51fa\u7684\u8282\u70b9\u8868\u793a with graph.local_scope(): graph.ndata[&#39;h&#39;] = h graph.apply_edges(fn.u_dot_v(&#39;h&#39;, &#39;h&#39;, &#39;score&#39;)) return graph.edata[&#39;score&#39;]   \u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528MLP(\u591a\u5c42\u611f\u77e5\u673a)\u5bf9\u6bcf\u6761\u8fb9\u751f\u6210\u4e00\u4e2a\u5411\u91cf\u8868\u793a(\u4f8b\u5982\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u672a\u7ecf\u8fc7\u5f52\u4e00\u5316\u7684\u7c7b\u522b\u7684\u5206\u5e03)\uff0c \u5e76\u5728\u4e0b\u6e38\u4efb\u52a1\u4e2d\u4f7f\u7528\u3002\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  class MLPPredictor(nn.Module): def __init__(self, in_features, out_classes): super().__init__() self.W = nn.Linear(in_features * 2, out_classes) def apply_edges(self, edges): h_u = edges.src[&#39;h&#39;] h_v = edges.dst[&#39;h&#39;] score = self.W(torch.cat([h_u, h_v], 1)) return {&#39;score&#39;: score} def forward(self, graph, h): # h\u662f\u4ece5.1\u8282\u7684GNN\u6a21\u578b\u4e2d\u8ba1\u7b97\u51fa\u7684\u8282\u70b9\u8868\u793a with graph.local_scope(): graph.ndata[&#39;h&#39;] = h graph.apply_edges(self.apply_edges) return graph.edata[&#39;score&#39;]   \u6784\u5efa\u7ed9\u5b9a\u8ba1\u7b97\u8282\u70b9\u548c\u8fb9\u4e0a\u8868\u793a\u7684\u6a21\u578b\u3002\n1 2 3 4 5 6 7 8  class Model(nn.Module): def __init__(self, in_features, hidden_features, out_features): super().__init__() self.sage = SAGE(in_features, hidden_features, out_features) self.pred = DotProductPredictor() def forward(self, g, x): h = self.sage(g, x) return self.pred(g, h)   \u94fe\u8def\u9884\u6d4b \u5728\u67d0\u4e9b\u573a\u666f\u4e2d\uff0c\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u9884\u6d4b\u7ed9\u5b9a\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8fb9\uff0c\u8fd9\u6837\u7684\u4efb\u52a1\u79f0\u4f5c\u94fe\u8def\u9884\u6d4b\uff08\u6216\u94fe\u63a5\u9884\u6d4b\uff09\u00a0\u4efb\u52a1\u3002\u90e8\u5206\u7406\u8bba\u57fa\u7840\u89c1DGL-\u7528\u6237\u6307\u53575.3\u94fe\u8def\u9884\u6d4b\u3002\n\u94fe\u8def\u9884\u6d4b\u662f\u4e00\u79cd\u5b9a\u4e49\u5728\u8fb9\u4e0a\u7684\u4efb\u52a1\uff0c\u7ed9\u5b9a\u4e24\u4e2a\u8282\u70b9vi\u548cvj,\u94fe\u8def\u9884\u6d4b\u7684\u76ee\u6807\u662f\u5224\u65ad\u8fd9\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u6709\u8fde\u63a5eij\u6216\u5b83\u4eec\u4e4b\u95f4\u7684\u8fde\u63a5\u5c5e\u4e8e\u4ec0\u4e48\u7c7b\u522b\u3002\u94fe\u8def\u9884\u6d4b\u548c\u5de5\u4e1a\u754c\u8054\u7cfb\u5341\u5206\u7d27\u5bc6\uff0c\u5f88\u591a\u63a8\u8350\u7cfb\u7edf\u662f\u57fa\u4e8e\u94fe\u8def\u9884\u6d4b\u7684\uff0c\u77e5\u8bc6\u56fe\u8c31\u8865\u5168\u4e2d\u5bf9\u5b9e\u4f53\u5173\u7cfb\u7684\u9884\u6d4b\u4e5f\u88ab\u8ba4\u4e3a\u662f\u4e00\u79cd\u94fe\u8def\u9884\u6d4b\u7684\u95ee\u9898\u3002\n\u53c2\u8003\u8d44\u6599\uff1a\n \u57fa\u7840\u77e5\u8bc6 \u8bc4\u4ef7\u6307\u6807\uff1aR1\uff0cR2  cora\u6570\u636e\u96c6\u4e0a\u94fe\u8def\u9884\u6d4b Refer: https://docs.dgl.ai/en/latest/new-tutorial/4_link_predict.html\nimport itertools import dgl import numpy as np import scipy.sparse as sp import torch import torch.nn as nn import torch.nn.functional as F from dgl.nn.pytorch.conv import SAGEConv from sklearn.metrics import roc_auc_score &#39;&#39;&#39; ### Overview of LinkPrediction on Cora #### Task: predicting whether a citation relationship, either citing or being cited, between two papers exists in a citation network. #### Idea: formulates the link prediction problem as a binary classification problem #### Steps: - Treat the edges in the graph as positive examples. - Sample a number of non-existent edges (i.e. node pairs with no edges between them) as negative examples. - Divide the positive examples and negative examples into a training set and a test set. - Evaluate the model with any binary classification metric such as Area Under Curve (AUC). &#39;&#39;&#39; import dgl.data dataset = dgl.data.CoraGraphDataset() g = dataset[0] &#39;&#39;&#39; ### Prepare training and testing sets randomly picks 10% of the edges for positive examples in the test set, and leave the rest for the training set. It then samples the same number of edges for negative examples in both sets. &#39;&#39;&#39; # Split edge set for training and testing u, v = g.edges() # source nodes and destination nodes eids = np.arange(g.number_of_edges()) # edge ids eids = np.random.permutation(eids) # randomly shuffle the arrange test_size = int(len(eids) * 0.1) # the number of test sets train_size = g.number_of_edges() - test_size # . test_pos_u, test_pos_v = ( u[eids[:test_size]], v[eids[:test_size]], ) # recording the position of test sets train_pos_u, train_pos_v = u[eids[test_size:]], v[eids[test_size:]] # 1. Find all negative edges and 2. split them for training and testing adj = sp.coo_matrix( (np.ones(len(u)), (u.numpy(), v.numpy())) ) # construct a coordinate matrix, coo_matrix((data, (row indices, col indices))) adj_neg = 1 - adj.todense() - np.eye(g.number_of_nodes()) neg_u, neg_v = np.where(adj_neg != 0) neg_eids = np.random.choice(len(neg_u), g.number_of_edges() // 2) test_neg_u, test_neg_v = neg_u[neg_eids[:test_size]], neg_v[neg_eids[:test_size]] train_neg_u, train_neg_v = neg_u[neg_eids[test_size:]], neg_v[neg_eids[test_size:]] # When training, you will need to remove the edges in the test set from the original graph. train_g = dgl.remove_edges(g, eids[:test_size]) # constructs the positive graph and the negative graph for the training set and the test set respectively train_pos_g = dgl.graph((train_pos_u, train_pos_v), num_nodes=g.number_of_nodes()) train_neg_g = dgl.graph((train_neg_u, train_neg_v), num_nodes=g.number_of_nodes()) test_pos_g = dgl.graph((test_pos_u, test_pos_v), num_nodes=g.number_of_nodes()) test_neg_g = dgl.graph((test_neg_u, test_neg_v), num_nodes=g.number_of_nodes()) # building models # produces a scalar score on each edge by concatenating the incident nodes\u2019 features and passing it to an MLP class MLPPredictor(nn.Module): def __init__(self, h_feats): super().__init__() self.W1 = nn.Linear(h_feats * 2, h_feats) self.W2 = nn.Linear(h_feats, 1) def apply_edges(self, edges): &#34;&#34;&#34; Computes a scalar score for each edge of the given graph. Parameters ---------- edges : Has three members ``src``, ``dst`` and ``data``, each of which is a dictionary representing the features of the source nodes, the destination nodes, and the edges themselves. Returns ------- dict A dictionary of new edge features. &#34;&#34;&#34; h = torch.cat([edges.src[&#34;h&#34;], edges.dst[&#34;h&#34;]], 1) return {&#34;score&#34;: self.W2(F.relu(self.W1(h))).squeeze(1)} def forward(self, g, h): with g.local_scope(): g.ndata[&#34;h&#34;] = h g.apply_edges(self.apply_edges) return g.edata[&#34;score&#34;] # builds a model consisting of two GraphSAGE layers, each computes new node representations by aggregating neighbor information class GraphSAGE(nn.Module): def __init__( self, in_feats, n_hidden, n_layers, activation, dropout, aggregator_type, ): super(GraphSAGE, self).__init__() self.layers = nn.ModuleList() self.dropout = nn.Dropout(dropout) self.activation = activation # input layer self.layers.append(SAGEConv(in_feats, n_hidden, aggregator_type)) # hidden layers for i in range(n_layers - 1): self.layers.append(SAGEConv(n_hidden, n_hidden, aggregator_type)) def forward(self, graph, inputs): h = self.dropout(inputs) for l, layer in enumerate(self.layers): h = layer(graph, h) if l != len(self.layers) - 1: h = self.activation(h) h = self.dropout(h) return h model = GraphSAGE( in_feats=train_g.ndata[&#34;feat&#34;].shape[1], n_hidden=32, n_layers=2, activation=F.relu, dropout=0.5, aggregator_type=&#34;gcn&#34;, ) pred = MLPPredictor(32) def compute_loss(pos_score, neg_score): scores = torch.cat([pos_score, neg_score]) labels = torch.cat( [torch.ones(pos_score.shape[0]), torch.zeros(neg_score.shape[0])] ) return F.binary_cross_entropy_with_logits(scores, labels) def compute_auc(pos_score, neg_score): scores = torch.cat([pos_score, neg_score]).numpy() labels = torch.cat( [torch.ones(pos_score.shape[0]), torch.zeros(neg_score.shape[0])] ).numpy() return roc_auc_score(labels, scores) # calcuate hits@k - accuracy # refer: # 1. https://github.com/snap-stanford/ogb/blob/master/ogb/linkproppred/evaluate.py # 2. https://github.com/snap-stanford/ogb/issues/105 def eval_hits(y_pred_pos, y_pred_neg, type_info=&#34;torch&#34;, K=100): &#34;&#34;&#34; compute Hits@K For each positive target node, the negative target nodes are the same. y_pred_neg is an array. rank y_pred_pos[i] against y_pred_neg for each i &#34;&#34;&#34; if len(y_pred_neg) &amp;lt; K: return {&#34;hits@{}&#34;.format(K): 1.0} if type_info == &#34;torch&#34;: kth_score_in_negative_edges = torch.topk(y_pred_neg, K)[0][-1] hitsK = float(torch.sum(y_pred_pos &amp;gt; kth_score_in_negative_edges).cpu()) / len( y_pred_pos ) # type_info is numpy else: kth_score_in_negative_edges = np.sort(y_pred_neg)[-K] hitsK = float(np.sum(y_pred_pos &amp;gt; kth_score_in_negative_edges)) / len( y_pred_pos ) return hitsK optimizer = torch.optim.Adam( itertools.chain(model.parameters(), pred.parameters()), lr=0.01 ) # training loooooooooooop for e in range(301): # forward h = model(train_g, train_g.ndata[&#34;feat&#34;]) pos_score = pred(train_pos_g, h) neg_score = pred(train_neg_g, h) loss = compute_loss(pos_score, neg_score) # backward optimizer.zero_grad() loss.backward() optimizer.step() with torch.no_grad(): pos_score = pred(test_pos_g, h) neg_score = pred(test_neg_g, h) auc = compute_auc(pos_score, neg_score) test_hits = eval_hits(pos_score, neg_score) if e % 5 == 0: print( &#34;In epoch {}, train loss: {}, test auc: {}, hits@100: {}&#34;.format( e, loss, auc, test_hits, ) )   \u6574\u56fe\u5206\u7c7b \u8bb8\u591a\u573a\u666f\u4e2d\u7684\u56fe\u6570\u636e\u662f\u7531\u591a\u4e2a\u56fe\u7ec4\u6210\uff0c\u800c\u4e0d\u662f\u5355\u4e2a\u7684\u5927\u56fe\u6570\u636e\u3002\u4f8b\u5982\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u7fa4\u793e\u533a\u3002 \u901a\u8fc7\u7528\u56fe\u523b\u753b\u540c\u4e00\u793e\u533a\u91cc\u4eba\u4e0e\u4eba\u95f4\u7684\u53cb\u8c0a\uff0c\u53ef\u4ee5\u5f97\u5230\u591a\u5f20\u7528\u4e8e\u5206\u7c7b\u7684\u56fe\u3002 \u5728\u8fd9\u4e2a\u573a\u666f\u91cc\uff0c\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u53ef\u4ee5\u8bc6\u522b\u793e\u533a\u7684\u7c7b\u578b\uff0c\u5373\u6839\u636e\u7ed3\u6784\u548c\u6574\u4f53\u4fe1\u606f\u5bf9\u56fe\u8fdb\u884c\u5206\u7c7b\u3002\u6574\u56fe\u5206\u7c7b\u4e0e\u8282\u70b9\u5206\u7c7b\u6216\u94fe\u63a5\u9884\u6d4b\u7684\u4e3b\u8981\u533a\u522b\u662f\uff1a\u9884\u6d4b\u7ed3\u679c\u523b\u753b\u4e86\u6574\u4e2a\u8f93\u5165\u56fe\u7684\u5c5e\u6027\u3002 \u4e0e\u4e4b\u524d\u7684\u4efb\u52a1\u7c7b\u4f3c\uff0c\u7528\u6237\u8fd8\u662f\u5728\u8282\u70b9\u6216\u8fb9\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u3002\u4f46\u4e0d\u540c\u7684\u662f\uff0c\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u8fd8\u9700\u8981\u5f97\u5230\u6574\u4e2a\u56fe\u7684\u8868\u793a\u3002GIN\u6570\u636e\u96c6\u6574\u56fe\u5206\u7c7bimport sys import numpy as np from tqdm import tqdm import torch import torch.nn as nn import torch.optim as optim import torch.nn.functional as F import argparse from dgl.data import GINDataset class Parser: def __init__(self, description, args_list=[]): &#34;&#34;&#34; arguments parser &#34;&#34;&#34; self.parser = argparse.ArgumentParser(description=description) self.args = None self._parse(args_list) def _parse(self, args_list): # dataset self.parser.add_argument( &#34;--dataset&#34;, type=str, default=&#34;MUTAG&#34;, choices=[&#34;MUTAG&#34;, &#34;COLLAB&#34;, &#34;IMDBBINARY&#34;, &#34;IMDBMULTI&#34;], help=&#34;name of dataset (default: MUTAG)&#34;, ) self.parser.add_argument( &#34;--batch_size&#34;, type=int, default=32, help=&#34;batch size for training and validation (default: 32)&#34;, ) self.parser.add_argument( &#34;--fold_idx&#34;, type=int, default=0, help=&#34;the index(&amp;lt;10) of fold in 10-fold validation.&#34;, ) self.parser.add_argument(&#34;--filename&#34;, type=str, default=&#34;&#34;, help=&#34;output file&#34;) # device self.parser.add_argument( &#34;--disable-cuda&#34;, action=&#34;store_true&#34;, help=&#34;Disable CUDA&#34; ) self.parser.add_argument( &#34;--device&#34;, type=int, default=0, help=&#34;which gpu device to use (default: 0)&#34; ) # net self.parser.add_argument( &#34;--num_layers&#34;, type=int, default=5, help=&#34;number of layers (default: 5)&#34; ) self.parser.add_argument( &#34;--num_mlp_layers&#34;, type=int, default=2, help=&#34;number of MLP layers(default: 2). 1 means linear model.&#34;, ) self.parser.add_argument( &#34;--hidden_dim&#34;, type=int, default=64, help=&#34;number of hidden units (default: 64)&#34;, ) # graph self.parser.add_argument( &#34;--graph_pooling_type&#34;, type=str, default=&#34;sum&#34;, choices=[&#34;sum&#34;, &#34;mean&#34;, &#34;max&#34;], help=&#34;type of graph pooling: sum, mean or max&#34;, ) self.parser.add_argument( &#34;--neighbor_pooling_type&#34;, type=str, default=&#34;sum&#34;, choices=[&#34;sum&#34;, &#34;mean&#34;, &#34;max&#34;], help=&#34;type of neighboring pooling: sum, mean or max&#34;, ) self.parser.add_argument( &#34;--learn_eps&#34;, action=&#34;store_true&#34;, help=&#34;learn the epsilon weighting&#34; ) # learning self.parser.add_argument( &#34;--seed&#34;, type=int, default=0, help=&#34;random seed (default: 0)&#34; ) self.parser.add_argument( &#34;--epochs&#34;, type=int, default=350, help=&#34;number of epochs to train (default: 350)&#34;, ) self.parser.add_argument( &#34;--lr&#34;, type=float, default=0.01, help=&#34;learning rate (default: 0.01)&#34; ) self.parser.add_argument( &#34;--final_dropout&#34;, type=float, default=0.5, help=&#34;final layer dropout (default: 0.5)&#34;, ) # done self.args = self.parser.parse_args(args_list) # default args args = Parser(description=&#34;GIN&#34;, args_list=[]).args print(args) # set up seeds, args.seed supported torch.manual_seed(seed=args.seed) np.random.seed(seed=args.seed) is_cuda = not args.disable_cuda and torch.cuda.is_available() if is_cuda: args.device = torch.device(&#34;cuda:&#34; + str(args.device)) torch.cuda.manual_seed_all(seed=args.seed) else: args.device = torch.device(&#34;cpu&#34;) import math from torch.utils.data.sampler import SubsetRandomSampler from sklearn.model_selection import StratifiedKFold import dgl from dgl.dataloading import GraphDataLoader class GINDataLoader(): def __init__(self, dataset, batch_size, device, collate_fn=None, seed=0, shuffle=True, split_name=&#39;fold10&#39;, fold_idx=0, split_ratio=0.7): self.shuffle = shuffle self.seed = seed self.kwargs = {&#39;pin_memory&#39;: True} if &#39;cuda&#39; in device.type else {} labels = [l for _, l in dataset] if split_name == &#39;fold10&#39;: train_idx, valid_idx = self._split_fold10( labels, fold_idx, seed, shuffle) elif split_name == &#39;rand&#39;: train_idx, valid_idx = self._split_rand( labels, split_ratio, seed, shuffle) else: raise NotImplementedError() train_sampler = SubsetRandomSampler(train_idx) valid_sampler = SubsetRandomSampler(valid_idx) self.train_loader = GraphDataLoader( dataset, sampler=train_sampler, batch_size=batch_size, collate_fn=collate_fn, **self.kwargs) self.valid_loader = GraphDataLoader( dataset, sampler=valid_sampler, batch_size=batch_size, collate_fn=collate_fn, **self.kwargs) def train_valid_loader(self): return self.train_loader, self.valid_loader def _split_fold10(self, labels, fold_idx=0, seed=0, shuffle=True): &#39;&#39;&#39; 10 flod &#39;&#39;&#39; assert 0 &amp;lt;= fold_idx and fold_idx &amp;lt; 10, print( &#34;fold_idx must be from 0 to 9.&#34;) skf = StratifiedKFold(n_splits=10, shuffle=shuffle, random_state=seed) idx_list = [] for idx in skf.split(np.zeros(len(labels)), labels): # split(x, y) idx_list.append(idx) train_idx, valid_idx = idx_list[fold_idx] print( &#34;train_set : test_set = %d: %d&#34;, len(train_idx), len(valid_idx)) return train_idx, valid_idx def _split_rand(self, labels, split_ratio=0.7, seed=0, shuffle=True): num_entries = len(labels) indices = list(range(num_entries)) np.random.seed(seed) np.random.shuffle(indices) split = int(math.floor(split_ratio * num_entries)) train_idx, valid_idx = indices[:split], indices[split:] print( &#34;train_set : test_set = %d: %d&#34;, len(train_idx), len(valid_idx)) return train_idx, valid_idx &#34;&#34;&#34; How Powerful are Graph Neural Networks https:&amp;#47;&amp;#47;arxiv.org/abs/1810.00826 https://openreview.net/forum?id=ryGs6iA5Km Author&#39;s implementation: https://github.com/weihua916/powerful-gnns &#34;&#34;&#34; from dgl.nn.pytorch.conv import GINConv from dgl.nn.pytorch.glob import SumPooling, AvgPooling, MaxPooling class ApplyNodeFunc(nn.Module): &#34;&#34;&#34;Update the node feature hv with MLP, BN and ReLU.&#34;&#34;&#34; def __init__(self, mlp): super(ApplyNodeFunc, self).__init__() self.mlp = mlp self.bn = nn.BatchNorm1d(self.mlp.output_dim) def forward(self, h): h = self.mlp(h) h = self.bn(h) h = F.relu(h) return h class MLP(nn.Module): &#34;&#34;&#34;MLP with linear output&#34;&#34;&#34; def __init__(self, num_layers, input_dim, hidden_dim, output_dim): &#34;&#34;&#34;MLP layers construction Paramters --------- num_layers: int The number of linear layers input_dim: int The dimensionality of input features hidden_dim: int The dimensionality of hidden units at ALL layers output_dim: int The number of classes for prediction &#34;&#34;&#34; super(MLP, self).__init__() self.linear_or_not = True # default is linear model self.num_layers = num_layers self.output_dim = output_dim if num_layers &amp;lt; 1: raise ValueError(&#34;number of layers should be positive!&#34;) elif num_layers == 1: # Linear model self.linear = nn.Linear(input_dim, output_dim) else: # Multi-layer model self.linear_or_not = False self.linears = torch.nn.ModuleList() self.batch_norms = torch.nn.ModuleList() self.linears.append(nn.Linear(input_dim, hidden_dim)) for layer in range(num_layers - 2): self.linears.append(nn.Linear(hidden_dim, hidden_dim)) self.linears.append(nn.Linear(hidden_dim, output_dim)) for layer in range(num_layers - 1): self.batch_norms.append(nn.BatchNorm1d((hidden_dim))) def forward(self, x): if self.linear_or_not: # If linear model return self.linear(x) else: # If MLP h = x for i in range(self.num_layers - 1): h = F.relu(self.batch_norms[i](self.linears[i](h))) return self.linears[-1](h) class GIN(nn.Module): &#34;&#34;&#34;GIN model&#34;&#34;&#34; def __init__(self, num_layers, num_mlp_layers, input_dim, hidden_dim, output_dim, final_dropout, learn_eps, graph_pooling_type, neighbor_pooling_type): &#34;&#34;&#34;model parameters setting Paramters --------- num_layers: int The number of linear layers in the neural network num_mlp_layers: int The number of linear layers in mlps input_dim: int The dimensionality of input features hidden_dim: int The dimensionality of hidden units at ALL layers output_dim: int The number of classes for prediction final_dropout: float dropout ratio on the final linear layer learn_eps: boolean If True, learn epsilon to distinguish center nodes from neighbors If False, aggregate neighbors and center nodes altogether. neighbor_pooling_type: str how to aggregate neighbors (sum, mean, or max) graph_pooling_type: str how to aggregate entire nodes in a graph (sum, mean or max) &#34;&#34;&#34; super(GIN, self).__init__() self.num_layers = num_layers self.learn_eps = learn_eps # List of MLPs self.ginlayers = torch.nn.ModuleList() self.batch_norms = torch.nn.ModuleList() for layer in range(self.num_layers - 1): if layer == 0: mlp = MLP(num_mlp_layers, input_dim, hidden_dim, hidden_dim) else: mlp = MLP(num_mlp_layers, hidden_dim, hidden_dim, hidden_dim) self.ginlayers.append( GINConv(ApplyNodeFunc(mlp), neighbor_pooling_type, 0, self.learn_eps)) self.batch_norms.append(nn.BatchNorm1d(hidden_dim)) # Linear function for graph poolings of output of each layer # which maps the output of different layers into a prediction score self.linears_prediction = torch.nn.ModuleList() for layer in range(num_layers): if layer == 0: self.linears_prediction.append( nn.Linear(input_dim, output_dim)) else: self.linears_prediction.append( nn.Linear(hidden_dim, output_dim)) self.drop = nn.Dropout(final_dropout) if graph_pooling_type == &#39;sum&#39;: self.pool = SumPooling() elif graph_pooling_type == &#39;mean&#39;: self.pool = AvgPooling() elif graph_pooling_type == &#39;max&#39;: self.pool = MaxPooling() else: raise NotImplementedError def forward(self, g, h): # list of hidden representation at each layer (including input) hidden_rep = [h] for i in range(self.num_layers - 1): h = self.ginlayers[i](g, h) h = self.batch_norms[i](h) h = F.relu(h) hidden_rep.append(h) score_over_layer = 0 # perform pooling over all nodes in each graph in every layer for i, h in enumerate(hidden_rep): pooled_h = self.pool(g, h) score_over_layer += self.drop(self.linears_prediction[i](pooled_h)) return score_over_layer dataset = GINDataset(args.dataset, not args.learn_eps) trainloader, validloader = GINDataLoader( dataset, batch_size=args.batch_size, device=args.device, seed=args.seed, shuffle=True, split_name=&#34;fold10&#34;, fold_idx=args.fold_idx, ).train_valid_loader() # or split_name=&#39;rand&#39;, split_ratio=0.7 model = GIN( args.num_layers, args.num_mlp_layers, dataset.dim_nfeats, args.hidden_dim, dataset.gclasses, args.final_dropout, args.learn_eps, args.graph_pooling_type, args.neighbor_pooling_type, ).to(args.device) criterion = nn.CrossEntropyLoss() # defaul reduce is true optimizer = optim.Adam(model.parameters(), lr=args.lr) scheduler = optim.lr_scheduler.StepLR(optimizer, step_size=50, gamma=0.5) def train(args, net, trainloader, optimizer, criterion, epoch): net.train() running_loss = 0 total_iters = len(trainloader) for graphs, labels in trainloader: # batch graphs will be shipped to device in forward part of model labels = labels.to(args.device) graphs = graphs.to(args.device) feat = graphs.ndata.pop(&#39;attr&#39;) outputs = net(graphs, feat) loss = criterion(outputs, labels) running_loss += loss.item() # backprop optimizer.zero_grad() loss.backward() optimizer.step() # the final batch will be aligned running_loss = running_loss / total_iters return running_loss def eval_net(args, net, dataloader, criterion): net.eval() total = 0 total_loss = 0 total_correct = 0 for data in dataloader: graphs, labels = data graphs = graphs.to(args.device) labels = labels.to(args.device) feat = graphs.ndata.pop(&#39;attr&#39;) total += len(labels) outputs = net(graphs, feat) _, predicted = torch.max(outputs.data, 1) total_correct += (predicted == labels.data).sum().item() loss = criterion(outputs, labels) # crossentropy(reduce=True) for default total_loss += loss.item() * len(labels) loss, acc = 1.0*total_loss / total, 1.0*total_correct / total net.train() return loss, acc for epoch in range(args.epochs): train(args, model, trainloader, optimizer, criterion, epoch) scheduler.step() train_loss, train_acc = eval_net(args, model, trainloader, criterion) valid_loss, valid_acc = eval_net(args, model, validloader, criterion) print( &#34;Epoch: {}, train set - average loss: {:.4f}, accuracy: {:.0f}%, valid set - average loss: {:.4f}, accuracy: {:.0f}%&#34;.format( epoch, train_loss, 100.0 * train_acc, valid_loss, 100.0 * valid_acc ) )   ",
        "description": "",
        "id": 30,
        "section": "posts",
        "tags": null,
        "title": "GNN-\u5b66\u4e60\u672d\u8bb0",
        "uri": "/posts/notes/2021-03-24-gnn-%E5%AD%A6%E4%B9%A0%E6%9C%AD%E8%AE%B0/"
    },
    {
        "content": " \u6df1\u5733\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u9519\u4f4d\u65f6\u7a7a\",\rartist: \"\u827e\u8fb0\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E9%94%99%E4%BD%8D%E6%97%B6%E7%A9%BA-e8e8ac-Ag.mp3\",\rcover: \"https://p2.music.126.net/8C0lwLE88j9ZwLyPQ9a4FA==/109951165595770076.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E9%94%99%E4%BD%8D%E6%97%B6%E7%A9%BA-%E8%89%BE%E8%BE%B0-abeb9a-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2021.3.1 Using Pytorch to implement GCNN: PyTorch Geometric\uff1b nni\uff1a\u673a\u5668\u5b66\u4e60AutoML\u6a21\u578b\u53c2\u6570\u641c\u7d22\uff0c\u7279\u5f81\u5de5\u7a0b\u5de5\u5177 2021.3.2 \u6df1\u5733 VS CSC \u54c8\u54c8\uff1b\u5d29\u6e83\u4e86\uff0c\u8dd1\u7684\u795e\u7ecf\u7f51\u7edc\u6ca1\u6709\u4f20\u7edf\u7684\u673a\u5668\u5b66\u4e60\u7684\u6a21\u578b\u597d\uff0c\u7b80\u76f4\u5c31\u662f\u5dee\u8fdc\u4e86\u3002 2021.3.3 Mac\u81ea\u5e26\u8bcd\u5178\u8f6c\u6362\uff1a\r\u5de5\u5177DictUnifier; \u5b57\u5178\u6e90 2021.3.4 Clash for Window: \u517c\u987eProfiles\u66f4\u65b0\u548c\u81ea\u5b9a\u4e49\u89c4\u5219; \u79fb\u52a8\u8f68\u8ff9\u5206\u6790\u5e93: scikit-mobility\uff0c\u4ee5\u540e\u51fa\u79df\u8f66\u8f68\u8ff9\u5206\u6790\u7528\u5b83\u8bd5\u8bd5\u3002 2021.3.5 namesoil\u6dfb\u52a0\u5b50\u57df\u540d\uff0c\u76f4\u63a5\u5728\u57df\u540d\u89e3\u6790\u91cc\u9762\u6dfb\u52a0\u5b50\u57df\u540d\u5373\u53ef\uff0c\u5e76\u6307\u5411\u670d\u52a1\u5668\u5730\u5740\u3002\u7b49\u5f8515\u5206\u949f\u5de6\u53f3\u751f\u6548\uff1b\u4eba\u751f\u96be\u6d4b \u547d\u9014\u591a\u821b? 2021.3.6 \u7cbe\u795e\u4e16\u754c\u4e30\u5bcc\uff0c\u611f\u6027\u4e14\u65e0\u8da3 2021.3.7 WSL2 \u5185\u5b58\u8bbe\u7f6e\uff1ahttps://mourinaruto.github.io/2020/11/01/reduce-the-memory-usage-of-wsl2/; \u6837\u672c\u91cf\u5c11 \u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u7528ml\u5427? 2021.3.8 \u4f60\u5f88\u5728\u4e4e\u670b\u53cb\u5bf9\u4f60\u7684\u770b\u6cd5\u5417\uff1f\u5176\u5b9e\u4f60\u4e5f\u77e5\u9053\u662f\u5728\u5f00\u73a9\u7b11\u3001\u51c6\u5907\u660e\u5929\u5f00\u9898 2021.3.9 \u987a\u5229\u5f00\u9898? \u665a\u996d\u548c\u8001\u677f\u4eec\u5403\u996d \u56fd\u7a961573\u5450 \u8fd9\u9152\u539f\u4ef7\u4e09\u5343\u5462 \u8001\u5e08\u4eec\u534a\u5f00\u73a9\u7b11\u7684\u8bb2\u4e86\u5f88\u591a\u4eba\u751f\u5fe0\u544a \u975e\u5e38\u503c\u5f97\u6df1\u601d \u52a0\u6cb9\u5427 \u9a9a\u5e74 \u54c8\u54c8 2021.3.10 \u91cd\u9022 2021.3.11 \u7b49\u5f85 2021.3.12 \u7ea6\u5b9a 2021.3.13 \u518d\u611f\u6027\u7684\u51b2\u52a8\u4e00\u6b21 \u6743\u5f53\u53bb\u6563\u6563\u5fc3 \u8bb0\u4f4f\u4e0d\u8981\u88ab\u81ea\u5df1\u611f\u52a8 2021.3.14 \u62b5\u6df1 2021.3.15 \u5411\u5f80\u5df2\u4e45\u7684\u6df1\u5927\u8fdb\u4e0d\u53bb\uff0c\u53ea\u80fd\u5728\u5468\u8fb9\u8f6c\u60a0\u3002\u518d\u8bbf\u6df1\u5733\u6e7e\u516c\u56ed\uff0c\u8fd9\u6b21\u4ee5\u9a91\u884c\u4ee3\u6b65\uff0c\u5929\u6c14\u66f4\u52a0\u6674\u6717\uff0c\u5341\u5206\u60ec\u610f\uff1b\u9759\u82e5\u5904\u5b50\uff0c\u52a8\u82e5\u8131\u5154? 2021.3.16 \u798f\u7530-\u666f\u7530-\u76ca\u7530-\u76d0\u7530\uff0c\u6df1\u5733\u7684\u201c\u7530\u201d\u5b57\u7cfb\u5217? 2021.3.17 \u8fd4\u6c49\uff0c\u5404\u81ea\u597d\u597d\u52aa\u529b\uff0c\u672a\u6765\u53ef\u671f? 2021.3.18 Mark\u4e00\u4e0b\u65e0\u76d1\u7763\u5bf9\u6bd4\u5b66\u4e60\uff1ahttps://zhuanlan.zhihu.com/p/334732028 2021.3.19 \u9752\u57ce\u5c71\u4e0b\u767d\u7d20\u8d1e 2021.3.20 \u65e0\u8da3\u3002\u65e0\u8da3\u554a 2021.3.21 \u9c81\u5df7\u5e7f\u573a\u542c\u8bf4\u5012\u95ed\u4e86\uff0c\u4eca\u5929\u8fc7\u53bb\u597d\u591a\u4eba\u5728\u6e05\u4ed3\u3002\u597d\u4e45\u6ca1\u89c1\u8fc7\u5149\u8c37\u8fd9\u4e48\u591a\u4eba\u7684\u573a\u666f\u4e86\u3002\u5fd8\u8bb0\u4e86\u9c81\u5df77\u697c\u7684\u7535\u5f71\u9662\u53eb\u4ec0\u4e48\u540d\u5b57\uff0c\u603b\u89c9\u5f97\u5f88\u719f\u6089\uff0c\u86ee\u6000\u5ff5\u4ee5\u524d\u7684\u5728\u5357\u671b\u5c71\u8bfb\u7814\u7684\u65e5\u5b50\u3002\u534a\u79cb\u5c71\u7684\u725b\u6392\u8fd8\u662f\u86ee\u597d\u5403\u7684\u3002 2021.3.22 \u53f0\u5927\u59dc\u6210\u7ff0\u52a9\u6559\u8bb2\u7684GNN\u86ee\u597d\u7684\uff0c\u77e5\u8bc6\u70b9\u5f88\u4ed4\u7ec6\u3002\u4f46\u662f\u80fd\u611f\u89c9\u5230\uff0c\u4e0b\u9762\u7684\u540c\u5b66\u6709\u4e9b\u542c\u4e0d\u61c2\uff0c\u6216\u8005\u4e0e\u52a9\u6559\u4ea4\u4e92\u6709\u70b9\u5c11\uff0c\u52a9\u6559\u7565\u5fae\u6709\u4e9b\u5931\u671b\u5427\u3002 2021.3.23 \u54ea\u6709\u90a3\u4e48\u5bb9\u6613\u505a\u5230\u5b8c\u7f8e? 2021.3.24 GNN\u5f88\u6709\u63a2\u7d22\u7684\u7a7a\u95f4\u554a\uff0c\u6a21\u578b\u4f17\u591a\uff0c\u5e94\u7528\u5e7f\u6cdb\u3002\u5148\u4ecedgl\u94fe\u8def\u9884\u6d4b\u95ee\u9898\u5f00\u59cb\uff0c\u8dd1\u8dd1banchmark 2021.3.25 \u4eca\u5929\u6253\u4e86\u65b0\u51a0\u75ab\u82d7? 2021.3.26 \u627e\u94fe\u8def\u9884\u6d4b\u7684demo\uff0cOGB\u7684\u4f8b\u5b50\u90fd\u8dd1\u4e0d\u52a8\uff0c\u8981\u4e0d\u662f\u5185\u5b58\u6ea2\u51fa\u5c31\u662f\u8dd1\u51e0\u4e2a\u5c0f\u65f6\u6ca1\u8fdb\u5ea6\u3002\u4e0b\u5348\u5728dgl\u7684\u82f1\u6587\u6587\u6863\u590d\u73b0\u4e86\u57fa\u4e8ecora\u7684\u5c0fdemo\uff0c\u8fd8\u7b97\u4e0d\u9519\uff0c\u57fa\u672c\u7406\u89e3\u4e86\u3002 2021.3.27 \u9488\u4e0d\u6233? 2021.3.28 Predicting spatial interaction using gnn + poi tfidf features \u534a\u5929\u62d6\u62d6\u62c9\u62c9 \u505a\u597d\u4e86\u8bad\u7ec3\u6570\u636e\u96c6 2021.3.29 Mark \u81ea\u76d1\u7763\u5b66\u4e60\u5217\u8868\uff1b \u53d6\u60a6\u81ea\u5df1\uff0c\u662f\u7ec8\u8eab\u6d6a\u6f2b\u7684\u5f00\u59cb 2021.3.30 \u673a\u5668\u5b66\u4e60\u7ed3\u679c\u53ef\u89c6\u5316\rsklearn-evaluation 2021.3.31 3\u6708\u5728\u614c\u5fd9\u6574\u7406\u7533\u8bf7\u6750\u6599\u4e2d\u7ed3\u675f\u3002  ",
        "description": "",
        "id": 34,
        "section": "posts",
        "tags": [
            "GNN",
            "\u6d77",
            "\u6df1\u5733",
            "\u75ab\u82d7"
        ],
        "title": "2021-3",
        "uri": "/posts/journals/2021-03-01-2021-3/"
    },
    {
        "content": " \u4f7f\u7528ArcGIS Pro\u6805\u683c\u5207\u5272\u5de5\u5177\u505a\u5206\u5757\u88c1\u526a\uff0c\u5e76\u4f7f\u7528\u5207\u5272\u597d\u7684\u5206\u5757\u505aImage Embeddings\u3002\u8bb0\u5f55\u64cd\u4f5c\u8fc7\u7a0b\u53ca\u6ce8\u610f\u4e8b\u9879\u3002\n Raster Split \u6570\u636e\u51c6\u5907  \u5317\u4eac\u5e02\u57ce\u533a\u6805\u683c\u6570\u636e\uff08From \u6c34\u7ecf\u6ce8\uff1aGoogle Maps\uff09 \u5317\u4eac\u5e02\u4e94\u73af\u77e2\u91cf\u6570\u636e\uff08\u7814\u7a76\u8303\u56f4\uff09\n  \u5206\u5757\u88c1\u526a  \u751f\u6210\u5916\u5305\u77e9\u5f62\uff1a\u4f7f\u7528\u5317\u4eac\u5e02\u4e94\u73af\u77e2\u91cf\u6570\u636e\u751f\u6210\u5916\u5305\u77e9\u5f62\n \u63a9\u819c\u63d0\u53d6\uff1a\u4f7f\u7528\u5916\u5305\u77e9\u5f62\u5207\u5272\u6805\u683c\u5f71\u50cf\n \u5206\u5757\u88c1\u526a\n\u8bbe\u7f6e\u5206\u5757\u5927\u5c0f\uff0c\u81ea\u52a8\u88c1\u526a\u5f71\u50cf\uff1b\u683c\u5f0f\u9009\u62e9tif\u683c\u5f0f\n \u6ce8\u610f\uff1aArcGIS Pro\u8fdb\u884c\u6b64\u64cd\u4f5c\u65f6\u5b58\u5728Bug\uff08\u5f02\u5e38\u9519\u8bef\uff08\u6216\u8005\u5df2\u5b8c\u6210\uff0c\u65e0\u7ed3\u679c\uff09\uff09\uff0c\u5728\u73af\u5883\u53d8\u91cf\u4e2d\u8bbe\u7f6e\u5e76\u884c\u53c2\u6570\u4e3a0\u5373\u53ef ArcGIS Pro\u66f4\u65b0\u540e\u6ca1\u6709\u51fa\u73b0\u8be5\u95ee\u9898\n \u751f\u6210\u6587\u4ef6\u5982\u4e0b\uff1a\n    \u540e\u5904\u7406\u53ca\u83b7\u53d6\u4e2d\u5fc3\u5750\u6807  \u83b7\u53d6\u4e2d\u5fc3\u5750\u6807\uff0c\u4fbf\u4e8e\u540e\u7eed\u7a7a\u95f4\u5173\u8054\u64cd\u4f5c  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  from osgeo import gdal import geopandas as gpd import pandas as pd from pathlib import Path import os from tqdm import tqdm patch_size = 256 split_raster_dir = Path(&#39;/workspace&#39;, &#39;ImagePatchEmbedding&#39;, &#39;SplitingPatch&#39;, &#39;BJR5_256&#39;) all_tif = [_ for _ in split_raster_dir.glob(&#39;*.TIF&#39;)] for tif_path in tqdm(all_tif): ds = gdal.Open(str(tif_path)) width = ds.RasterXSize height = ds.RasterYSize ds = None if width != patch_size or height != patch_size: # delete path_stem = tif_path.stem path_parent = tif_path.parent _l = [&#39;.tfw&#39;, &#39;.TIF&#39;, &#39;.TIF.aux.xml&#39;, &#39;.TIF.ovr&#39;] for _ in _l: d_fp = Path(path_parent, f&#39;{path_stem}{_}&#39;) os.remove(d_fp) _dict = { &#39;rs_stem&#39;: [], &#39;centralx&#39;: [], &#39;centraly&#39;: [], } all_tif = [_ for _ in split_raster_dir.glob(&#39;*.TIF&#39;)] for tif_path in tqdm(all_tif): path_stem = tif_path.stem ds = gdal.Open(str(tif_path)) width = ds.RasterXSize height = ds.RasterYSize gt = ds.GetGeoTransform() minx = gt[0] miny = gt[3] + width*gt[4] + height*gt[5] maxx = gt[0] + width*gt[1] + height*gt[2] maxy = gt[3] centralx = (minx + maxx) / 2 centraly = (miny + maxy) / 2 _dict[&#39;rs_stem&#39;].append(path_stem) _dict[&#39;centralx&#39;].append(centralx) _dict[&#39;centraly&#39;].append(centraly) bj_rs_split_df = pd.DataFrame(_dict) bj_rs_split_df.head() bj_arial_image_split_fp = Path(split_raster_dir.parent, &#39;BJR5_256_patch_location.txt&#39;) bj_rs_split_df.to_csv(bj_arial_image_split_fp, header=True, index=False)   \u5bfc\u5165ArcGIS\uff1a\n GeoTiff\u8f6crgb\uff08JPG\u56fe\u7247\uff09\n\u4f7f\u7528\u4e00\u4e9b\u65b9\u5f0f\uff08rasterio\u7b49\uff09\u8f6c\u6362\u4e3ajpg\u683c\u5f0f\u540e\uff0c\u8f6c\u6362\u540e\u7684jpg\u56fe\u7247\u4e00\u7247\u6f06\u9ed1\uff0c\u53c2\u8003\r\u89e3\u91ca\u3002\u9700\u8fdb\u884crgb\u8f6c\u6362\uff0c\u53c2\u8003\r\u65b9\u6cd5\uff1a  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  # -*- coding: UTF-8 -*- import numpy as np import os from PIL import Image from osgeo import gdal from pathlib import Path from tqdm import tqdm def readTif(imgPath, bandsOrder=[1,2,3]): &#34;&#34;&#34; \u8bfb\u53d6GEO tif\u5f71\u50cf\u7684\u524d\u4e09\u4e2a\u6ce2\u6bb5\u503c\uff0c\u5e76\u6309\u7167R.G.B\u987a\u5e8f\u5b58\u50a8\u5230\u5f62\u72b6\u4e3a\u3010\u539f\u957f*\u539f\u5bbd*3\u3011\u7684\u6570\u7ec4\u4e2d :param imgPath: \u56fe\u50cf\u5b58\u50a8\u5168\u8def\u5f84 :param bandsOrder: RGB\u5bf9\u5e94\u7684\u6ce2\u6bb5\u987a\u5e8f\uff0c\u5982\u9ad8\u5206\u4e8c\u53f7\u591a\u5149\u8c31\u5305\u542b\u84dd\uff0c\u7eff\uff0c\u7ea2\uff0c\u8fd1\u7ea2\u5916\u56db\u4e2a\u6ce2\u6bb5\uff0cRGB\u5bf9\u5e94\u7684\u6ce2\u6bb5\u4e3a3\uff0c2\uff0c1 :return: R.G.B\u4e09\u7ef4\u6570\u7ec4 &#34;&#34;&#34; dataset = gdal.Open(imgPath, gdal.GA_ReadOnly) cols = dataset.RasterXSize rows = dataset.RasterYSize data = np.empty([rows, cols, 3], dtype=float) for i in range(3): band = dataset.GetRasterBand(bandsOrder[i]) oneband_data = band.ReadAsArray() data[:, :, i] = oneband_data return data def stretchImg(imgPath, resultPath, lower_percent=0.5, higher_percent=99.5): &#34;&#34;&#34; #\u5c06\u5149\u8c31DN\u503c\u6620\u5c04\u81f30-255\uff0c\u5e76\u4fdd\u5b58 :param imgPath: \u9700\u8981\u8f6c\u6362\u7684tif\u5f71\u50cf\u8def\u5f84\uff08***.tif\uff09 :param resultPath: \u8f6c\u6362\u540e\u7684\u6587\u4ef6\u5b58\u50a8\u8def\u5f84(***.jpg) :param lower_percent: \u4f4e\u503c\u62c9\u4f38\u6bd4\u7387 :param higher_percent: \u9ad8\u503c\u62c9\u4f38\u6bd4\u7387 :return: \u65e0\u8fd4\u56de\u53c2\u6570\uff0c\u76f4\u63a5\u8f93\u51fa\u56fe\u7247 &#34;&#34;&#34; RGB_Array=readTif(imgPath) band_Num = RGB_Array.shape[2] JPG_Array = np.zeros_like(RGB_Array, dtype=np.uint8) for i in range(band_Num): minValue = 0 maxValue = 255 #\u83b7\u53d6\u6570\u7ec4RGB_Array\u67d0\u4e2a\u767e\u5206\u6bd4\u5206\u4f4d\u4e0a\u7684\u503c low_value = np.percentile(RGB_Array[:, :,i], lower_percent) high_value = np.percentile(RGB_Array[:, :,i], higher_percent) temp_value = minValue + (RGB_Array[:, :,i] - low_value) * (maxValue - minValue) / (high_value - low_value) temp_value[temp_value &lt; minValue] = minValue temp_value[temp_value &gt; maxValue] = maxValue JPG_Array[:, :, i] = temp_value outputImg = Image.fromarray(np.uint8(JPG_Array)) outputImg.save(resultPath) def Batch_Convert_tif_to_jpg(imgdir, savedir): #\u83b7\u53d6\u6587\u4ef6\u5939\u4e0b\u6240\u6709tif\u6587\u4ef6\u540d\u79f0\uff0c\u5e76\u5b58\u5165\u5217\u8868 all_tif = [_ for _ in split_raster_dir.glob(&#39;*.TIF&#39;)] for tif in tqdm(all_tif): stretchImg(str(tif), str(tif.with_suffix(&#39;.jpg&#39;))) print(&#34;\u5b8c\u6210\u6240\u6709\u56fe\u7247\u8f6c\u6362!&#34;) Batch_Convert_tif_to_jpg(split_raster_dir, split_raster_dir)    \u5220\u9664\u591a\u4f59\u6587\u4ef6  1 2 3 4 5 6  # del extra files, only keep jpg _del = [&#39;.tfw&#39;, &#39;.TIF&#39;, &#39;.TIF.aux.xml&#39;, &#39;.TIF.ovr&#39;] all_jpg = [_ for _ in split_raster_dir.glob(&#39;*.jpg&#39;)] for jpg in tqdm(all_jpg): for _p in _del: os.remove(jpg.with_suffix(_p))   Image Embeddings Image Embedding\u521d\u8877\u662f\u4f7f\u7528Embedding\u7684\u65b9\u5f0f\u5bf9\u56fe\u50cf\u8fdb\u884c\u8868\u793a\uff0c\u540e\u7eed\u53ef\u5e94\u7528\u4e8e\u56fe\u7247\u68c0\u7d22\u7b49\u5e94\u7528\u3002\u6b64\u5904\u53c2\u8003(https://github.com/rom1504/image_embeddings)\u5b9e\u73b0\u8be5\u529f\u80fd\u3002\u5728\u672c\u673a\u914d\u7f6e\u73af\u5883\u7684\u8fc7\u7a0b\u4e2d\uff0cfaiss\u8fd9\u4e2a\u5305\u59cb\u7ec8\u62a5\u9519\uff0c\u4e14\u7f51\u4e0a\u5e76\u65e0\u89e3\u51b3\u65b9\u6848\u3002\u6545\u4f7f\u7528Google Calab\u5728\u7ebfJupyter Notebook\u7684\u5e73\u53f0\u8fdb\u884c\u64cd\u4f5c\u3002\n\u6570\u636e\u51c6\u5907  \u538b\u7f29\u6570\u636e\u5e76\u4e0a\u4f20\u81f3Google \u4e91\u7aef\u786c\u76d8 \u5c06\u4f5c\u8005\u5206\u4eab\u7684using_the_lib.ipynb\u4fdd\u5b58\u81f3\u81ea\u5df1\u7684Google\u4e91\u7aef\u786c\u76d8 \u5b89\u88c5repo: !pip install -U image_embeddings \u6302\u5728Google\u4e91\u7aef\u786c\u76d8 1 2  from google.colab import drive drive.mount(&#39;/content/drive&#39;)    \u89e3\u538b\uff1a!unzip &quot;/content/drive/MyDrive/DataUploads/ImageEmbeddings/RasterSplitJPG.zip&quot; -d &quot;/content/drive/MyDrive/DataUploads/ImageEmbeddings/&quot; \u8f7d\u5165repo\u53ca\u8def\u5f84\uff1a 1 2 3 4 5 6 7  # Let&#39;s define some paths where to save images, tfrecords and embeddings from pathlib import Path import image_embeddings home = Path(&#34;/content/drive/MyDrive/&#34;) path_images = str(Path(home, &#34;DataUploads/ImageEmbeddings/RasterSplitJPG/&#34;)) path_tfrecords = str(Path(home, &#34;Colab Notebooks/ImageEmbeddings/tfrecords&#34;)) path_embeddings = str(Path(home, &#34;Colab Notebooks/ImageEmbeddings/embeddings&#34;))    \u91cd\u547d\u540d*.JPG(\u539f\u4f5c\u8005\u4ee3\u7801\u4e2d\u64cd\u4f5c\u7684\u662f*.jpeg\u683c\u5f0f\uff0cJPG\u53ef\u4ee5\u8bfb\u53d6\uff0c\u4f46\u662f\u5728\u540e\u7eed\u56fe\u7247\u663e\u793a\u64cd\u4f5c\u4e2d\u4f1a\u63d0\u793a\u8def\u5f84\u9519\u8bef) 1 2 3 4 5 6  # rename *.JPG with *,jpeg import os root_path = Path(&#34;/content/drive/MyDrive/DataUploads/ImageEmbeddings/RasterSplitJPG&#34;) for fp in root_path.glob(&#34;*.JPG&#34;): stem = fp.stem os.rename(fp, Path(root_path, f&#34;{stem}.jpeg&#34;))      Build embeddings  Transform image to tf records\uff1aTf record is an efficient format to store image, it&rsquo;s better to use than raw image file for inference 1  image_embeddings.inference.write_tfrecord(image_folder=path_images, output_folder=path_tfrecords, num_shards=10)    Build embeddings\uff1aHere, efficientnet is used, but the code is particularly simple, and any other model could be used. The input is tfrecords and the output is embeddings 1 2  # \u5982\u51fa\u73b0\u5185\u5b58\u6ea2\u51fa\u9519\u8bef\uff0c\u53ef\u9002\u5f53\u964d\u4f4ebatch size image_embeddings.inference.run_inference(tfrecords_folder=path_tfrecords, output_folder=path_embeddings, batch_size=500)      Image Search  Read the embeddings and build an index with it. The knn index is built using faiss which makes it possible to search embeddings in log(N) with lot of options to reduce memory footprint 1 2  [id_to_name, name_to_id, embeddings] = image_embeddings.knn.read_embeddings(path_embeddings) index = image_embeddings.knn.build_index(embeddings)    Search in the index  example 1 1 2 3 4 5 6 7 8 9  name_to_id[&#39;BJ_5R_AI_189&#39;] # \u5de5\u4e1a\u533a &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 7440 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; p=7440 print(id_to_name[p]) image_embeddings.knn.display_picture(path_images, id_to_name[p]) results = image_embeddings.knn.search(index, id_to_name, embeddings[p]) image_embeddings.knn.display_results(path_images, results)    ![](https://cdn.jsdelivr.net/gh/xunhs/image_host@master/PicX/20210228114254.png)  example 2 1 2 3 4 5 6 7 8 9  name_to_id[&#39;BJ_5R_AI_636&#39;] # \u7eff\u5730 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 5553 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; p=5553 print(id_to_name[p]) image_embeddings.knn.display_picture(path_images, id_to_name[p]) results = image_embeddings.knn.search(index, id_to_name, embeddings[p]) image_embeddings.knn.display_results(path_images, results)    ![](https://cdn.jsdelivr.net/gh/xunhs/image_host@master/PicX/20210228114532.png)  example 3 1 2 3 4 5 6 7 8 9  name_to_id[&#39;BJ_5R_AI_1423&#39;] # \u5c45\u4f4f\u533a &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 3818 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; p=3818 print(id_to_name[p]) image_embeddings.knn.display_picture(path_images, id_to_name[p]) results = image_embeddings.knn.search(index, id_to_name, embeddings[p]) image_embeddings.knn.display_results(path_images, results)    ![](https://cdn.jsdelivr.net/gh/xunhs/image_host@master/PicX/20210228114703.png)  \u6548\u679c\u8fd8\u662f\u86ee\u597d\u7684   Combination of images\uff1aAny vector in the same space can be used as query For example I could have 2 image and want to find some example that are closeby to the 2, Let&rsquo;s just average them and see that happens ! 1 2 3 4 5 6 7 8  p1 = 7440 p2 = 5553 image1 = id_to_name[p1] image2 = id_to_name[p2] image_embeddings.knn.display_picture(path_images, image1) image_embeddings.knn.display_picture(path_images, image2) results = image_embeddings.knn.search(index, id_to_name, (embeddings[p1] + embeddings[p2])/2, 7) image_embeddings.knn.display_results(path_images, results)    ![](https://cdn.jsdelivr.net/gh/xunhs/image_host@master/PicX/20210228114940.png) \u53ef\u4ee5\u68c0\u7d22\u51fa\u6df7\u5408\u5de5\u4e1a\u533a\u548c\u7eff\u5730\u7684\u533a\u57df  Normalize embedding: We get mostly one of the picture. One thing that can be done to improve this is to normalize the embeddings to get a better mix  Normalize 1 2 3 4 5 6 7  import numpy as np def normalized(a, axis=-1, order=2): l2 = np.atleast_1d(np.linalg.norm(a, order, axis)) l2[l2==0] = 1 return a / np.expand_dims(l2, axis) normalized_embeddings = normalized(embeddings, 1) index_normalized = image_embeddings.knn.build_index(normalized_embeddings)    Normalize Index 1 2 3 4 5 6 7 8  p1 = 7440 p2 = 5553 image1 = id_to_name[p1] image2 = id_to_name[p2] image_embeddings.knn.display_picture(path_images, image1) image_embeddings.knn.display_picture(path_images, image2) results = image_embeddings.knn.search(index_normalized, id_to_name, (normalized_embeddings[p1] + normalized_embeddings[p2])/2, 7) image_embeddings.knn.display_results(path_images, results)    ![](https://cdn.jsdelivr.net/gh/xunhs/image_host@master/PicX/20210228115412.png) \u4f5c\u8005\u8bf4\u6b63\u5219\u5316\uff08normalize\uff09embeddings\u540e\u53ef\u4ee5\u63d0\u9ad8\u6df7\u5408\u68c0\u7d22\u7684\u7cbe\u5ea6\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u786e\u5b9e\u6709\u6240\u63d0\u9ad8    Exporting the embeddings to numpy 1 2 3  from image_embeddings.knn import embeddings_to_numpy path_embeddings_numpy = f&#34;{home}/{dataset}/embeddings_numpy&#34; embeddings_to_numpy(path_embeddings, path_embeddings_numpy)      ",
        "description": "",
        "id": 35,
        "section": "posts",
        "tags": [
            "Embedding",
            "GIS"
        ],
        "title": "ArcGIS Pro\u6805\u683c\u5207\u5272\u53ca\u5e94\u7528\u4e8eImage Embeddings\u672d\u8bb0",
        "uri": "/2021/02/27/414/"
    },
    {
        "content": " \u672c\u6587\u5bf9POI-type Embedding\u7684\u6784\u5efa\u6d41\u7a0b\u8fdb\u884c\u6574\u7406\u3002\n POI\u6570\u636e\u51c6\u5907  \u9ad8\u5fb7\u5730\u56fe\u5174\u8da3\u70b92018-POI\uff08Point of Interest\uff09\u6570\u636e\uff0c\u6570\u636e\u5171\u4eab\u5730\u5740\uff1ahttps://opendata.pku.edu.cn/dataset.xhtml?persistentId=doi:10.18170/DVN/WSXCNM \u6570\u636e\u5165\u5e93\uff08\u8fd9\u91cc\u4f7f\u7528\u7684\u662fES\uff0c\u65b9\u4fbf\u5feb\u901f\u67e5\u8be2\u53ca\u53ef\u89c6\u5316\uff09\uff08\u53c2\u8003\u4e4b\u524d\u5199\u7684ES\u64cd\u4f5c\u7684\u6587\u7ae0\uff09  \u6784\u5efa\u8bed\u6599\u5e93  \u751f\u6210\u968f\u673a\u70b9\n \u6784\u5efa\u968f\u673a\u70b9\u8bed\u6599\u5e93  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54  # Building K-NN Corpus # \u6839\u636e\u968f\u673a\u70b9\u4ee5\u53ca\u6307\u5b9a\u8ddd\u79bb\uff0c\u5bfb\u627e\u9644\u8fd1POI\u70b9\uff0c\u6784\u5efa\u201c\u8bed\u6599\u5e93\u201d # \u6b64\u5904POI type\u9009\u62e9\u7684\u662f\u9ad8\u5fb7\u5730\u56fe\u7684type3 # %% import geopandas as gpd from tqdm import tqdm import os, joblib from elasticsearch import Elasticsearch from elasticsearch_dsl import Search client = Elasticsearch(hosts=&#34;192.168.123.87:9200&#34;) # %% random_points_fp = os.path.join(&#39;.&#39;, &#39;RandomPoints.shp&#39;) random_points_gdf = gpd.read_file(random_points_fp) random_points_gdf.head() # %% def get_neighbors(client, index, geo_point, distance, geo_unit=&#34;m&#34;): s = Search(using=client, index=index) s = s.filter( &#34;geo_distance&#34;, distance=f&#34;{distance}{geo_unit}&#34;, wgs_location=geo_point ) _sort_json = { &#34;_geo_distance&#34;: { &#34;wgs_location&#34;: geo_point, &#34;order&#34;: &#34;asc&#34;, &#34;unit&#34;: geo_unit, &#34;mode&#34;: &#34;min&#34;, &#34;distance_type&#34;: &#34;arc&#34;, } } s = s.sort(_sort_json) total = s.count() s = s[0:total] response = s.execute() return total, response # %% index = &#34;\u5317\u4eac\u5e02&#34; distance = 500 geo_unit = &#34;m&#34; corpus_dict = {} for (point_id, lat, lon) in tqdm(zip(random_points_gdf[&#39;PointID&#39;], random_points_gdf[&#39;lat&#39;], random_points_gdf[&#39;lon&#39;])): geo_point = {&#34;lat&#34;: lat, &#34;lon&#34;: lon} total, neighbors = get_neighbors(client, index, geo_point, distance, geo_unit) if total &gt; 10: # \u81f3\u5c1110\u4e2a\u70b9 corpus_dict[point_id] = [] for p in neighbors.hits.hits: distance = p.sort[0] corpus_dict[point_id].append(p._source.type_3) # %% # \u4fdd\u5b58\u53d8\u91cf corpus_fp = os.path.join(&#39;.&#39;, &#39;EmbeddingCorpus.dat&#39;) joblib.dump(value=corpus_dict, filename=corpus_fp) # # \u8f7d\u5165\u53d8\u91cf # corpus_fp = os.path.join(&#39;.&#39;, &#39;EmbeddingCorpus.dat&#39;) # corpus_dict = joblib.load(corpus_fp)   \u4f7f\u7528gensim\u8fdb\u884cPOI-type embedding\u7684\u8bad\u7ec3 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  import os, joblib from gensim.models.word2vec import Word2Vec import logging import json # \u8f7d\u5165\u53d8\u91cf corpus_fp = os.path.join(&#39;.&#39;, &#39;EmbeddingCorpus.dat&#39;) corpus_dict = joblib.load(corpus_fp) _corpora = corpus_dict.values() &#39;&#39;&#39; \u8bed\u6599\u5e93\u6a21\u677f\u5982\u4e0b _corpora= [ [type1, type2, ...,], [], ... ] &#39;&#39;&#39; # %% #\u83b7\u53d6\u65e5\u5fd7\u4fe1\u606f logging.basicConfig( format=&#39;%(asctime)s: %(levelname)s: %(message)s&#39;, level=logging.INFO) def func(corpora, path_name, model_size=100): model = Word2Vec(corpora, size=model_size, # \u7279\u5f81\u5411\u91cf\u7684\u7ef4\u5ea6 min_count=1, # \u9700\u8981\u8ba1\u7b97\u8bcd\u5411\u91cf\u7684\u6700\u5c0f\u8bcd\u9891 window=5, # \u8bcd\u5411\u91cf\u4e0a\u4e0b\u6587\u6700\u5927\u8ddd\u79bb sample = 1e-3, # \u9ad8\u9891\u8bcd\u6c47\u7684\u968f\u673a\u964d\u91c7\u6837\u7684\u914d\u7f6e\u9608\u503c sg=1, # 0: CBOW; 1: Skip-Gram hs = 1, #\u4e3a 1 \u7528hierarchical softmax 0 negative sampling iter=100, # \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5\u4e2d\u8fed\u4ee3\u7684\u6700\u5927\u6b21\u6570 workers=8 # \u5f00\u542f\u7ebf\u7a0b\u4e2a\u6570 ) model.save(r&#39;Embedding{}.word2vec&#39;.format(path_name)) # \u4fdd\u5b58\u5411\u91cf words = [] for c in corpora: words.extend(c) words = list(set(words)) print(&#39;\u603b\u5171{}\u4e2a\u5355\u8bcd&#39;.format(len(words))) with open(r&#39;Embedding{}.json&#39;.format(path_name), &#39;w+&#39;, encoding=&#39;utf8&#39;) as fp: save_json = {} for w in words: save_json[w] = [float(_) for _ in model.wv[w]] json.dump(save_json, fp) model_size = 128 # \u8bcd\u5411\u91cf\u7684\u7ef4\u5ea6 func(_corpora, &#39;POI&#39;, model_size)   \u5411\u91cf\u67e5\u8be2\u68c0\u7d22 1 2 3 4 5 6 7 8 9 10 11  from gensim.models import KeyedVectors from gensim.models.word2vec import Word2Vec # \u8f7d\u5165\u9884\u8bad\u7ec3 # \u65b9\u5f0f\u4e00\uff1a\u8f7d\u5165\u5df2\u8bad\u7ec3\u6a21\u578b w2v_model = Word2Vec.load(&#39;Embedding128.word2vec&#39;) # \u65b9\u5f0f\u4e8c\uff1a\u8f7d\u5165\u5df2\u8bad\u7ec3\u5411\u91cf\uff08\u5982OpenNE\u5bfc\u51fa\u7684\u5411\u91cf\uff09 with open(&#39;/workspace/UrbanFunctionalRegionalization/result/openne/deepwalk_sz_ep10.txt&#39;, &#39;r&#39;) as fp: w2v_wv = KeyedVectors.load_word2vec_format(fp, binary=False) # w2v_wv\u4e3aKeyedVectors\u683c\u5f0f\uff0c\u5373\u7b49\u540c\u4e8ew2v_model.wv    \u83b7\u53d6\u5355\u8bcd\u5217\u8868\uff1aword_list = w2v_model.wv.index2word \u6216 word_list = w2v_wv.index2word \u83b7\u53d6\u5355\u8bcd\u5411\u91cf\uff1aw2v_model.wv.get_vector('\u673a\u573a\u76f8\u5173') w2v_wv.get_vector('\u673a\u573a\u76f8\u5173') \u67e5\u8be2\u4e24\u4e2a\u8bcd\u7684\u76f8\u4f3c\u5ea6\uff1a  1 2 3  s_word_1 = &#34;\u673a\u573a\u76f8\u5173&#34; s_word_2 = &#34;\u8111\u79d1\u533b\u9662&#34; f_word_sim = w2v_model.similarity(s_word_1, s_word_2)    \u67e5\u8be2\u5355\u8bcd\u6700\u76f8\u4f3c\u7684\u5355\u8bcd\uff08\u9ed8\u8ba4\u524d10\uff09\uff1aw2v_model.most_similar(&quot;\u8111\u79d1\u533b\u9662&quot;)  POI-type Embedding\u6848\u4f8b\uff1a\u5e94\u7528\u4e8e\u57ce\u5e02\u529f\u80fd\u533a\u5206\u7c7b  POI\u6570\u636e\u4e0e\u533a\u5757\u6570\u636e\uff08\u5982\u4ea4\u901a\u5206\u6790\u5c0f\u533aTAZ\uff0c\u7a7a\u95f4\u683c\u7f51\u7b49\uff09\u8fdb\u884c\u7a7a\u95f4\u5173\u8054\uff08spatial join\uff09  POI\u7a7a\u95f4\u5173\u8054\u7ed3\u679c\uff1aPOIJoinTaz.shp \u4ea4\u901a\u5206\u6790\u5c0f\u533a\uff08with functions\uff09\uff1aeulucJoinTaz.shp   \u8ba1\u7b97doc embedding\uff0c\u8fd9\u91cc\u4f7f\u7528\u7b80\u5355\u4f7f\u7528\u7684mean embedding  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  from gensim.models.word2vec import Word2Vec import geopandas as gpd import pandas as pd import numpy as np import os w2v_model = Word2Vec.load(&#39;Embedding128.word2vec&#39;) root_dir = os.path.join(&#39;..&#39;, &#39;OriginalPublicData&#39;) POI_gdf = gpd.read_file(os.path.join(root_dir, &#39;POIJoinTaz.shp&#39;)) taz_gdf = gpd.read_file(os.path.join(root_dir, &#39;eulucJoinTaz.shp&#39;)) # %% taz_group = POI_gdf.groupby(by=[&#39;TAZ_FID&#39;]) # \u8ba1\u7b97mean embedding mean_feature_dict = {} vector_list = [] for (taz_FID, taz_sub_gdf) in taz_group: type_list = taz_sub_gdf[&#39;type_3&#39;] for t in type_list: try: v = w2v_model.wv.get_vector(t) except: pass vector_list.append(v) mean_feature_dict[taz_FID] = np.mean(np.array(vector_list), axis=0) # %% # mean_feature_dict \u8f6c\u4e3a DataFrame \u4fdd\u5b58 _dict = {} _dict[&#39;taz_fid&#39;] = [] for i in range(128): feature_name = f&#39;feature_{i}&#39; _dict[feature_name] = [] for _fid, mean_feature in mean_feature_dict.items(): _dict[&#39;taz_fid&#39;].append(_fid) for i, f in enumerate(list(mean_feature)): feature_name = f&#39;feature_{i}&#39; _dict[feature_name].append(f) mean_feature_df = pd.DataFrame(_dict) mean_feature_path = os.path.join(&#39;.&#39;, &#39;TAZDocEmbedding.txt&#39;) mean_feature_df.to_csv(mean_feature_path, header=True, index=False)    \u6784\u5efa\u5206\u7c7b\u5668  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152  # \u5206\u7c7b import geopandas as gpd import pandas as pd import os from sklearn import preprocessing from sklearn.model_selection import StratifiedKFold from sklearn.model_selection import cross_val_score from sklearn.linear_model import Ridge from sklearn.linear_model import LogisticRegression from sklearn.tree import DecisionTreeClassifier from sklearn.neighbors import KNeighborsClassifier from sklearn.discriminant_analysis import LinearDiscriminantAnalysis from sklearn.naive_bayes import GaussianNB from sklearn.svm import SVC from sklearn.ensemble import AdaBoostClassifier from sklearn.ensemble import GradientBoostingClassifier from sklearn.ensemble import RandomForestClassifier from sklearn.ensemble import ExtraTreesClassifier from sklearn.model_selection import train_test_split from sklearn.metrics import classification_report, confusion_matrix # %% taz_doc_embedding_path = os.path.join(&#39;.&#39;, &#39;TAZDocEmbedding.txt&#39;) taz_doc_embedding_df = pd.read_csv(taz_doc_embedding_path, header=0) root_dir = os.path.join(&#39;..&#39;, &#39;OriginalPublicData&#39;) taz_gdf = gpd.read_file(os.path.join(root_dir, &#39;eulucJoinTaz.shp&#39;)) classifier_df = pd.merge(taz_doc_embedding_df, taz_gdf[[&#39;TAZ_FID&#39;, &#39;Level1&#39;, &#39;Level2&#39;]], left_on= &#39;taz_fid&#39;, right_on=&#39;TAZ_FID&#39;, how=&#39;inner&#39;) # %% # \u6784\u5efa\u8bad\u7ec3\u6570\u636e\u96c6 # \u6837\u672c\u4e0d\u5e73\u8861\u95ee\u9898\uff0c\u589e\u52a0\u5c0f\u6837\u672c\u7684\u6837\u672c\u91cf sample_1 = classifier_df.query(&#39;Level1 == 1&#39;).sample(n=500, random_state=2021) sample_2 = classifier_df.query(&#39;Level1 == 5&#39;).sample(n=500, random_state=2021) sample_3 = classifier_df.query(&#39;Level1 == 2&#39;) sample_4 = classifier_df.query(&#39;Level1 == 3&#39;) concat_list = [sample_1, sample_2] + [sample_3] * 2 + [sample_4] * 4 classifier_df = pd.concat(concat_list, axis=0) feature_names = list(taz_doc_embedding_df.columns)[1:] x = classifier_df[feature_names] scaler = preprocessing.StandardScaler().fit(x) x = scaler.transform(x) y = classifier_df[&#39;Level1&#39;] train_x, test_x, train_y, test_y = train_test_split(x, y, test_size=0.3, random_state=2021) # %% # \u6a21\u578b\u9009\u62e9 models = [ (&#39;LR&#39; , LogisticRegression()), # (&#39;LDA&#39; , LinearDiscriminantAnalysis()), # (&#39;KNN&#39; , KNeighborsClassifier()), # (&#39;CART&#39; , DecisionTreeClassifier()), # (&#39;NB&#39; , GaussianNB()), (&#39;SVM&#39; , SVC(probability=True)), # (&#39;AB&#39; , AdaBoostClassifier()), # (&#39;GBM&#39; , GradientBoostingClassifier()), (&#39;RF&#39; , RandomForestClassifier()), # (&#39;ET&#39; , ExtraTreesClassifier()) ] def run_models(x, y, models): num_folds = 10 scoring = &#39;accuracy&#39; results = [] names = [] for name, model in models: kfold = StratifiedKFold(n_splits=num_folds, random_state=2021) cv_results = cross_val_score(model, x, y, cv=kfold, scoring=scoring) results.append(cv_results) names.append(name) msg = &#34;%s: %f(%f)&#34; % (name, cv_results.mean(), cv_results.std()) print(msg) return names, results names, results = run_models(x, y, models) &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Results: LR: 0.356372 (0.070240) SVM: 0.333471 (0.061519) RF: 0.649130 (0.022192) &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; # %% # \u5206\u7c7b\u62a5\u544a model = RandomForestClassifier() model.fit(train_x, train_y) pred_test_y = model.predict(test_x) # \u83b7\u53d6\u6df7\u6dc6\u77e9\u9635 m = confusion_matrix(test_y, pred_test_y) print(&#39;\u6df7\u6dc6\u77e9\u9635\uff1a&#39;, m, sep=&#39;\\n&#39;) # \u83b7\u53d6\u5206\u7c7b\u62a5\u544a r = classification_report(test_y, pred_test_y) print(&#39;\u5206\u7c7b\u62a5\u544a\uff1a&#39;, r, sep=&#39;\\n&#39;) &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Results: \u6df7\u6dc6\u77e9\u9635\uff1a [[59 24 12 52] [12 97 0 14] [ 0 0 66 0] [49 28 13 59]] \u5206\u7c7b\u62a5\u544a\uff1a precision recall f1-score support 1 0.49 0.40 0.44 147 2 0.65 0.79 0.71 123 3 0.73 1.00 0.84 66 5 0.47 0.40 0.43 149 accuracy 0.58 485 macro avg 0.58 0.65 0.61 485 weighted avg 0.56 0.58 0.56 485 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; # %% # \u5c1d\u8bd5\u6a21\u578b\u878d\u5408 ensemble.stacking from sklearn.datasets import load_iris from sklearn.svm import LinearSVC from sklearn.linear_model import LogisticRegression from sklearn.preprocessing import StandardScaler from sklearn.pipeline import make_pipeline from sklearn.ensemble import StackingClassifier from sklearn.model_selection import train_test_split estimators = [ (&#39;rf&#39;, RandomForestClassifier(n_estimators=10, random_state=42)), (&#39;SVM&#39; , SVC(probability=True)) ] model = StackingClassifier( estimators=estimators, final_estimator=LogisticRegression() ) model.fit(train_x, train_y) pred_test_y = model.predict(test_x) # \u83b7\u53d6\u6df7\u6dc6\u77e9\u9635 m = confusion_matrix(test_y, pred_test_y) print(&#39;\u6df7\u6dc6\u77e9\u9635\uff1a&#39;, m, sep=&#39;\\n&#39;) # \u83b7\u53d6\u5206\u7c7b\u62a5\u544a r = classification_report(test_y, pred_test_y) print(&#39;\u5206\u7c7b\u62a5\u544a\uff1a&#39;, r, sep=&#39;\\n&#39;) &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Results: \u6df7\u6dc6\u77e9\u9635\uff1a [[61 22 8 56] [16 93 0 14] [ 0 0 64 2] [61 22 9 57]] \u5206\u7c7b\u62a5\u544a\uff1a precision recall f1-score support 1 0.44 0.41 0.43 147 2 0.68 0.76 0.72 123 3 0.79 0.97 0.87 66 5 0.44 0.38 0.41 149 accuracy 0.57 485 macro avg 0.59 0.63 0.61 485 weighted avg 0.55 0.57 0.56 485 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;   ",
        "description": "",
        "id": 36,
        "section": "posts",
        "tags": [
            "Embedding",
            "Gensim",
            "POIs",
            "Python",
            "\u57ce\u5e02\u529f\u80fd\u533a",
            "\u672d\u8bb0"
        ],
        "title": "POI-type Embedding\u6784\u5efa\u6d41\u7a0b\u672d\u8bb0",
        "uri": "/posts/notes/2021-02-24-gensim-embedding%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E6%95%B4%E7%90%86/"
    },
    {
        "content": " \u4f7f\u7528ArcGIS Pro\u6805\u683c\u5207\u5272\u5de5\u5177\u505a\u5206\u5757\u88c1\u526a\uff0c\u5e76\u4f7f\u7528\u5207\u5272\u597d\u7684\u5206\u5757\u505aImage Embeddings\u3002\u8bb0\u5f55\u64cd\u4f5c\u8fc7\u7a0b\u53ca\u6ce8\u610f\u4e8b\u9879\u3002\n Raster Split \u6570\u636e\u51c6\u5907  \u5317\u4eac\u5e02\u57ce\u533a\u6805\u683c\u6570\u636e\uff08From \u6c34\u7ecf\u6ce8\uff1aGoogle Maps\uff09 \u5317\u4eac\u5e02\u4e94\u73af\u77e2\u91cf\u6570\u636e\uff08\u7814\u7a76\u8303\u56f4\uff09\n  \u5206\u5757\u88c1\u526a  \u751f\u6210\u5916\u5305\u77e9\u5f62\uff1a\u4f7f\u7528\u5317\u4eac\u5e02\u4e94\u73af\u77e2\u91cf\u6570\u636e\u751f\u6210\u5916\u5305\u77e9\u5f62\n \u63a9\u819c\u63d0\u53d6\uff1a\u4f7f\u7528\u5916\u5305\u77e9\u5f62\u5207\u5272\u6805\u683c\u5f71\u50cf\n \u5206\u5757\u88c1\u526a\n\u8bbe\u7f6e\u5206\u5757\u5927\u5c0f\uff0c\u81ea\u52a8\u88c1\u526a\u5f71\u50cf\uff1b\u683c\u5f0f\u9009\u62e9tif\u683c\u5f0f\n \u6ce8\u610f\uff1aArcGIS Pro\u8fdb\u884c\u6b64\u64cd\u4f5c\u65f6\u5b58\u5728Bug\uff08\u5f02\u5e38\u9519\u8bef\uff08\u6216\u8005\u5df2\u5b8c\u6210\uff0c\u65e0\u7ed3\u679c\uff09\uff09\uff0c\u5728\u73af\u5883\u53d8\u91cf\u4e2d\u8bbe\u7f6e\u5e76\u884c\u53c2\u6570\u4e3a0\u5373\u53ef ArcGIS Pro\u66f4\u65b0\u540e\u6ca1\u6709\u51fa\u73b0\u8be5\u95ee\u9898\n \u751f\u6210\u6587\u4ef6\u5982\u4e0b\uff1a\n    \u540e\u5904\u7406\u53ca\u83b7\u53d6\u4e2d\u5fc3\u5750\u6807  \u83b7\u53d6\u4e2d\u5fc3\u5750\u6807\uff0c\u4fbf\u4e8e\u540e\u7eed\u7a7a\u95f4\u5173\u8054\u64cd\u4f5c  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49  from osgeo import gdal import geopandas as gpd import pandas as pd from pathlib import Path import os from tqdm import tqdm patch_size = 256 split_raster_dir = Path(&#39;/workspace&#39;, &#39;ImagePatchEmbedding&#39;, &#39;SplitingPatch&#39;, &#39;BJR5_256&#39;) all_tif = [_ for _ in split_raster_dir.glob(&#39;*.TIF&#39;)] for tif_path in tqdm(all_tif): ds = gdal.Open(str(tif_path)) width = ds.RasterXSize height = ds.RasterYSize ds = None if width != patch_size or height != patch_size: # delete path_stem = tif_path.stem path_parent = tif_path.parent _l = [&#39;.tfw&#39;, &#39;.TIF&#39;, &#39;.TIF.aux.xml&#39;, &#39;.TIF.ovr&#39;] for _ in _l: d_fp = Path(path_parent, f&#39;{path_stem}{_}&#39;) os.remove(d_fp) _dict = { &#39;rs_stem&#39;: [], &#39;centralx&#39;: [], &#39;centraly&#39;: [], } all_tif = [_ for _ in split_raster_dir.glob(&#39;*.TIF&#39;)] for tif_path in tqdm(all_tif): path_stem = tif_path.stem ds = gdal.Open(str(tif_path)) width = ds.RasterXSize height = ds.RasterYSize gt = ds.GetGeoTransform() minx = gt[0] miny = gt[3] + width*gt[4] + height*gt[5] maxx = gt[0] + width*gt[1] + height*gt[2] maxy = gt[3] centralx = (minx + maxx) / 2 centraly = (miny + maxy) / 2 _dict[&#39;rs_stem&#39;].append(path_stem) _dict[&#39;centralx&#39;].append(centralx) _dict[&#39;centraly&#39;].append(centraly) bj_rs_split_df = pd.DataFrame(_dict) bj_rs_split_df.head() bj_arial_image_split_fp = Path(split_raster_dir.parent, &#39;BJR5_256_patch_location.txt&#39;) bj_rs_split_df.to_csv(bj_arial_image_split_fp, header=True, index=False)   \u5bfc\u5165ArcGIS\uff1a\n GeoTiff\u8f6crgb\uff08JPG\u56fe\u7247\uff09\n\u4f7f\u7528\u4e00\u4e9b\u65b9\u5f0f\uff08rasterio\u7b49\uff09\u8f6c\u6362\u4e3ajpg\u683c\u5f0f\u540e\uff0c\u8f6c\u6362\u540e\u7684jpg\u56fe\u7247\u4e00\u7247\u6f06\u9ed1\uff0c\u53c2\u8003\r\u89e3\u91ca\u3002\u9700\u8fdb\u884crgb\u8f6c\u6362\uff0c\u53c2\u8003\r\u65b9\u6cd5\uff1a  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  # -*- coding: UTF-8 -*- import numpy as np import os from PIL import Image from osgeo import gdal from pathlib import Path from tqdm import tqdm def readTif(imgPath, bandsOrder=[1,2,3]): &#34;&#34;&#34; \u8bfb\u53d6GEO tif\u5f71\u50cf\u7684\u524d\u4e09\u4e2a\u6ce2\u6bb5\u503c\uff0c\u5e76\u6309\u7167R.G.B\u987a\u5e8f\u5b58\u50a8\u5230\u5f62\u72b6\u4e3a\u3010\u539f\u957f*\u539f\u5bbd*3\u3011\u7684\u6570\u7ec4\u4e2d :param imgPath: \u56fe\u50cf\u5b58\u50a8\u5168\u8def\u5f84 :param bandsOrder: RGB\u5bf9\u5e94\u7684\u6ce2\u6bb5\u987a\u5e8f\uff0c\u5982\u9ad8\u5206\u4e8c\u53f7\u591a\u5149\u8c31\u5305\u542b\u84dd\uff0c\u7eff\uff0c\u7ea2\uff0c\u8fd1\u7ea2\u5916\u56db\u4e2a\u6ce2\u6bb5\uff0cRGB\u5bf9\u5e94\u7684\u6ce2\u6bb5\u4e3a3\uff0c2\uff0c1 :return: R.G.B\u4e09\u7ef4\u6570\u7ec4 &#34;&#34;&#34; dataset = gdal.Open(imgPath, gdal.GA_ReadOnly) cols = dataset.RasterXSize rows = dataset.RasterYSize data = np.empty([rows, cols, 3], dtype=float) for i in range(3): band = dataset.GetRasterBand(bandsOrder[i]) oneband_data = band.ReadAsArray() data[:, :, i] = oneband_data return data def stretchImg(imgPath, resultPath, lower_percent=0.5, higher_percent=99.5): &#34;&#34;&#34; #\u5c06\u5149\u8c31DN\u503c\u6620\u5c04\u81f30-255\uff0c\u5e76\u4fdd\u5b58 :param imgPath: \u9700\u8981\u8f6c\u6362\u7684tif\u5f71\u50cf\u8def\u5f84\uff08***.tif\uff09 :param resultPath: \u8f6c\u6362\u540e\u7684\u6587\u4ef6\u5b58\u50a8\u8def\u5f84(***.jpg) :param lower_percent: \u4f4e\u503c\u62c9\u4f38\u6bd4\u7387 :param higher_percent: \u9ad8\u503c\u62c9\u4f38\u6bd4\u7387 :return: \u65e0\u8fd4\u56de\u53c2\u6570\uff0c\u76f4\u63a5\u8f93\u51fa\u56fe\u7247 &#34;&#34;&#34; RGB_Array=readTif(imgPath) band_Num = RGB_Array.shape[2] JPG_Array = np.zeros_like(RGB_Array, dtype=np.uint8) for i in range(band_Num): minValue = 0 maxValue = 255 #\u83b7\u53d6\u6570\u7ec4RGB_Array\u67d0\u4e2a\u767e\u5206\u6bd4\u5206\u4f4d\u4e0a\u7684\u503c low_value = np.percentile(RGB_Array[:, :,i], lower_percent) high_value = np.percentile(RGB_Array[:, :,i], higher_percent) temp_value = minValue + (RGB_Array[:, :,i] - low_value) * (maxValue - minValue) / (high_value - low_value) temp_value[temp_value &lt; minValue] = minValue temp_value[temp_value &gt; maxValue] = maxValue JPG_Array[:, :, i] = temp_value outputImg = Image.fromarray(np.uint8(JPG_Array)) outputImg.save(resultPath) def Batch_Convert_tif_to_jpg(imgdir, savedir): #\u83b7\u53d6\u6587\u4ef6\u5939\u4e0b\u6240\u6709tif\u6587\u4ef6\u540d\u79f0\uff0c\u5e76\u5b58\u5165\u5217\u8868 all_tif = [_ for _ in split_raster_dir.glob(&#39;*.TIF&#39;)] for tif in tqdm(all_tif): stretchImg(str(tif), str(tif.with_suffix(&#39;.jpg&#39;))) print(&#34;\u5b8c\u6210\u6240\u6709\u56fe\u7247\u8f6c\u6362!&#34;) Batch_Convert_tif_to_jpg(split_raster_dir, split_raster_dir)    \u5220\u9664\u591a\u4f59\u6587\u4ef6  1 2 3 4 5 6  # del extra files, only keep jpg _del = [&#39;.tfw&#39;, &#39;.TIF&#39;, &#39;.TIF.aux.xml&#39;, &#39;.TIF.ovr&#39;] all_jpg = [_ for _ in split_raster_dir.glob(&#39;*.jpg&#39;)] for jpg in tqdm(all_jpg): for _p in _del: os.remove(jpg.with_suffix(_p))   Image Embeddings Image Embedding\u521d\u8877\u662f\u4f7f\u7528Embedding\u7684\u65b9\u5f0f\u5bf9\u56fe\u50cf\u8fdb\u884c\u8868\u793a\uff0c\u540e\u7eed\u53ef\u5e94\u7528\u4e8e\u56fe\u7247\u68c0\u7d22\u7b49\u5e94\u7528\u3002\u6b64\u5904\u53c2\u8003(https://github.com/rom1504/image_embeddings)\u5b9e\u73b0\u8be5\u529f\u80fd\u3002\u5728\u672c\u673a\u914d\u7f6e\u73af\u5883\u7684\u8fc7\u7a0b\u4e2d\uff0cfaiss\u8fd9\u4e2a\u5305\u59cb\u7ec8\u62a5\u9519\uff0c\u4e14\u7f51\u4e0a\u5e76\u65e0\u89e3\u51b3\u65b9\u6848\u3002\u6545\u4f7f\u7528Google Calab\u5728\u7ebfJupyter Notebook\u7684\u5e73\u53f0\u8fdb\u884c\u64cd\u4f5c\u3002\n\u6570\u636e\u51c6\u5907  \u538b\u7f29\u6570\u636e\u5e76\u4e0a\u4f20\u81f3Google \u4e91\u7aef\u786c\u76d8 \u5c06\u4f5c\u8005\u5206\u4eab\u7684using_the_lib.ipynb\u4fdd\u5b58\u81f3\u81ea\u5df1\u7684Google\u4e91\u7aef\u786c\u76d8 \u5b89\u88c5repo: !pip install -U image_embeddings \u6302\u5728Google\u4e91\u7aef\u786c\u76d8 1 2  from google.colab import drive drive.mount(&#39;/content/drive&#39;)    \u89e3\u538b\uff1a!unzip &quot;/content/drive/MyDrive/DataUploads/ImageEmbeddings/RasterSplitJPG.zip&quot; -d &quot;/content/drive/MyDrive/DataUploads/ImageEmbeddings/&quot; \u8f7d\u5165repo\u53ca\u8def\u5f84\uff1a 1 2 3 4 5 6 7  # Let&#39;s define some paths where to save images, tfrecords and embeddings from pathlib import Path import image_embeddings home = Path(&#34;/content/drive/MyDrive/&#34;) path_images = str(Path(home, &#34;DataUploads/ImageEmbeddings/RasterSplitJPG/&#34;)) path_tfrecords = str(Path(home, &#34;Colab Notebooks/ImageEmbeddings/tfrecords&#34;)) path_embeddings = str(Path(home, &#34;Colab Notebooks/ImageEmbeddings/embeddings&#34;))    \u91cd\u547d\u540d*.JPG(\u539f\u4f5c\u8005\u4ee3\u7801\u4e2d\u64cd\u4f5c\u7684\u662f*.jpeg\u683c\u5f0f\uff0cJPG\u53ef\u4ee5\u8bfb\u53d6\uff0c\u4f46\u662f\u5728\u540e\u7eed\u56fe\u7247\u663e\u793a\u64cd\u4f5c\u4e2d\u4f1a\u63d0\u793a\u8def\u5f84\u9519\u8bef) 1 2 3 4 5 6  # rename *.JPG with *,jpeg import os root_path = Path(&#34;/content/drive/MyDrive/DataUploads/ImageEmbeddings/RasterSplitJPG&#34;) for fp in root_path.glob(&#34;*.JPG&#34;): stem = fp.stem os.rename(fp, Path(root_path, f&#34;{stem}.jpeg&#34;))      Build embeddings  Transform image to tf records\uff1aTf record is an efficient format to store image, it&rsquo;s better to use than raw image file for inference 1  image_embeddings.inference.write_tfrecord(image_folder=path_images, output_folder=path_tfrecords, num_shards=10)    Build embeddings\uff1aHere, efficientnet is used, but the code is particularly simple, and any other model could be used. The input is tfrecords and the output is embeddings 1 2  # \u5982\u51fa\u73b0\u5185\u5b58\u6ea2\u51fa\u9519\u8bef\uff0c\u53ef\u9002\u5f53\u964d\u4f4ebatch size image_embeddings.inference.run_inference(tfrecords_folder=path_tfrecords, output_folder=path_embeddings, batch_size=500)      Image Search  Read the embeddings and build an index with it. The knn index is built using faiss which makes it possible to search embeddings in log(N) with lot of options to reduce memory footprint 1 2  [id_to_name, name_to_id, embeddings] = image_embeddings.knn.read_embeddings(path_embeddings) index = image_embeddings.knn.build_index(embeddings)    Search in the index  example 1 1 2 3 4 5 6 7 8 9  name_to_id[&#39;BJ_5R_AI_189&#39;] # \u5de5\u4e1a\u533a &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 7440 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; p=7440 print(id_to_name[p]) image_embeddings.knn.display_picture(path_images, id_to_name[p]) results = image_embeddings.knn.search(index, id_to_name, embeddings[p]) image_embeddings.knn.display_results(path_images, results)    ![](https://cdn.jsdelivr.net/gh/xunhs/image_host@master/PicX/20210228114254.png)  example 2 1 2 3 4 5 6 7 8 9  name_to_id[&#39;BJ_5R_AI_636&#39;] # \u7eff\u5730 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 5553 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; p=5553 print(id_to_name[p]) image_embeddings.knn.display_picture(path_images, id_to_name[p]) results = image_embeddings.knn.search(index, id_to_name, embeddings[p]) image_embeddings.knn.display_results(path_images, results)    ![](https://cdn.jsdelivr.net/gh/xunhs/image_host@master/PicX/20210228114532.png)  example 3 1 2 3 4 5 6 7 8 9  name_to_id[&#39;BJ_5R_AI_1423&#39;] # \u5c45\u4f4f\u533a &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 3818 &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; p=3818 print(id_to_name[p]) image_embeddings.knn.display_picture(path_images, id_to_name[p]) results = image_embeddings.knn.search(index, id_to_name, embeddings[p]) image_embeddings.knn.display_results(path_images, results)    ![](https://cdn.jsdelivr.net/gh/xunhs/image_host@master/PicX/20210228114703.png)  \u6548\u679c\u8fd8\u662f\u86ee\u597d\u7684   Combination of images\uff1aAny vector in the same space can be used as query For example I could have 2 image and want to find some example that are closeby to the 2, Let&rsquo;s just average them and see that happens ! 1 2 3 4 5 6 7 8  p1 = 7440 p2 = 5553 image1 = id_to_name[p1] image2 = id_to_name[p2] image_embeddings.knn.display_picture(path_images, image1) image_embeddings.knn.display_picture(path_images, image2) results = image_embeddings.knn.search(index, id_to_name, (embeddings[p1] + embeddings[p2])/2, 7) image_embeddings.knn.display_results(path_images, results)    ![](https://cdn.jsdelivr.net/gh/xunhs/image_host@master/PicX/20210228114940.png) \u53ef\u4ee5\u68c0\u7d22\u51fa\u6df7\u5408\u5de5\u4e1a\u533a\u548c\u7eff\u5730\u7684\u533a\u57df  Normalize embedding: We get mostly one of the picture. One thing that can be done to improve this is to normalize the embeddings to get a better mix  Normalize 1 2 3 4 5 6 7  import numpy as np def normalized(a, axis=-1, order=2): l2 = np.atleast_1d(np.linalg.norm(a, order, axis)) l2[l2==0] = 1 return a / np.expand_dims(l2, axis) normalized_embeddings = normalized(embeddings, 1) index_normalized = image_embeddings.knn.build_index(normalized_embeddings)    Normalize Index 1 2 3 4 5 6 7 8  p1 = 7440 p2 = 5553 image1 = id_to_name[p1] image2 = id_to_name[p2] image_embeddings.knn.display_picture(path_images, image1) image_embeddings.knn.display_picture(path_images, image2) results = image_embeddings.knn.search(index_normalized, id_to_name, (normalized_embeddings[p1] + normalized_embeddings[p2])/2, 7) image_embeddings.knn.display_results(path_images, results)    ![](https://cdn.jsdelivr.net/gh/xunhs/image_host@master/PicX/20210228115412.png) \u4f5c\u8005\u8bf4\u6b63\u5219\u5316\uff08normalize\uff09embeddings\u540e\u53ef\u4ee5\u63d0\u9ad8\u6df7\u5408\u68c0\u7d22\u7684\u7cbe\u5ea6\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u786e\u5b9e\u6709\u6240\u63d0\u9ad8    Exporting the embeddings to numpy 1 2 3  from image_embeddings.knn import embeddings_to_numpy path_embeddings_numpy = f&#34;{home}/{dataset}/embeddings_numpy&#34; embeddings_to_numpy(path_embeddings, path_embeddings_numpy)      ",
        "description": "",
        "id": 37,
        "section": "posts",
        "tags": [
            "Elasticsearch",
            "POIs",
            "Python",
            "\u5174\u8da3\u70b9"
        ],
        "title": "POI\u6570\u636eElasticsearch\u5b58\u50a8\u53ca\u67e5\u8be2\u64cd\u4f5c\u672d\u8bb0",
        "uri": "/2021/02/23/368/"
    },
    {
        "content": " Another month in home.\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u957f\u9888\u9e7f\u53bb\u52a8\u7269\u56ed\u770b\u957f\u9888\u9e7f\",\rartist: \"\u65e9\u897f\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E9%95%BF%E9%A2%88%E9%B9%BF%E5%8E%BB%E5%8A%A8%E7%89%A9%E5%9B%AD%E7%9C%8B%E9%95%BF%E9%A2%88%E9%B9%BF-4260a5-Ag.mp3\",\rcover: \"https://p1.music.126.net/701M4SS3eDaiVxJ6o1DvIQ==/109951163446293619.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%BA%AF%E9%9F%B3%E4%B9%90-%E6%97%A0%E6%AD%8C%E8%AF%8D-3ca159-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2021.2.1 \u91cd\u65b0\u62fe\u8d77\u585e\u5c14\u8fbe\u4f20\u8bf4\uff1a\u8352\u91ce\u4e4b\u606f\u3002\u6e38\u620f\u662f\u597d\u6e38\u620f\uff0c\u4ee5\u524d\u6ca1\u6709\u597d\u597d\u73a9~ 2021.2.2 \u4e8c\u6708\u6625\u98ce\u4f3c\u526a\u5200 2021.2.3 ArcGIS Pro\u5f02\u5e38\u9519\u8bef\uff08\u6216\u8005\u5df2\u5b8c\u6210\uff0c\u65e0\u7ed3\u679c\uff09\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5728\u73af\u5883\u53d8\u91cf\u4e2d\u5c06\u5e76\u884c\u53c2\u6570\u8bbe\u7f6e\u4e3a0\uff0c\u4f8b\u5982\u5728\u5206\u5272\u6805\u683c\u5de5\u5177\u4e2d\u51fa\u73b0\u7684\u9519\u8bef\u3002 2021.2.4 \u73a9\u6e38\u620f\u73a9\u7684\u5934\u75bc\u3001\u773c\u775b\u75bc? 2021.2.5 \u585e\u5c14\u8fbe\u786e\u5b9e\u6709\u5f88\u591a\u5947\u5947\u602a\u602a\u7684\u8111\u6d1e\u3001\u8fd9\u5c31\u662f\u4ed6\u7684\u597d\u73a9\u4e4b\u5904\u5427\uff1bA:\u201c\u63a8\u8350\u4e00\u4e2a\u597d\u73a9\u7684\u722c\u5c71\u6e38\u620f\u5427\u3001\u201dB:\u201c\u585e\u5c14\u8fbe\u4f20\u8bf4-\u8352\u91ce\u4e4b\u606f\u201d&hellip; 2021.2.6 \u94c1\u7403\u5f00\u9053&hellip;\u8fd9\u8111\u6d1e\u771f\u7684\u662f\u670d\u4e86 \u54c8\u54c8\u54c8 2021.2.7 \u6bdb\u6bdb\u56de\u6765\u4e86 \u554a\u54c8 \u4eca\u5e74\u8fc7\u5e74\u548c\u8205\u8205\u5bb6\u4e00\u8d77\u8fc7\u3001 2021.2.8 \u6253\u5b8c\u98de\u9e1fboss \u5f00\u5b8c\u5168\u56fe \u60f3\u4f11\u606f\u4e00\u4e0b\u4e86 2021.2.9 CEUS\u7684\u7a3f\u5b50\u76f4\u63a5\u5c0f\u4fee\u4e86 \u800c\u4e14\u53ea\u6709\u4e00\u4e2a\u65e0\u5173\u7d27\u8981\u7684\u610f\u89c1 \u6211\u633a\u610f\u5916\u7684; \u4eca\u5929\u96be\u5f97\u548c\u8001\u5988\u51fa\u6765\u6e9c\u8fbe\u6e9c\u8fbe 2021.2.10 \u8bf4\u5b9e\u8bdd \u5f88\u611f\u6fc0\u9ad8\u8001\u5e08\u9010\u5b57\u9010\u53e5\u5e2e\u6211\u4fee\u6539\u8bba\u6587 \u800c\u4e14\u5927\u591a\u6570\u4ec5\u4ec5\u662f\u4e00\u4e9b\u8bed\u6cd5\u95ee\u9898 \u5f88\u611f\u6fc0\u8001\u5e08\u7684\u8010\u5fc3 \u6211\u81ea\u5df1\u5bf9\u5e08\u5f1f\u5e08\u59b9\u90fd\u505a\u4e0d\u5230\u8fd9\u884c\u7684\u7ec6\u5fc3\u548c\u8010\u5fc3 \u9ad8\u8001\u5e08\u66f4\u52a0\u4e25\u82db \u53ef\u80fd\u5e74\u8f7b\u8001\u5e08\u90fd\u8fd9\u6837\u5427 \u603b\u4e4b \u975e\u5e38\u611f\u6fc0 \u4e5f\u5f88\u671f\u5f85 2021.2.11 \u613f\u65b0\u5e74\u80dc\u65e7\u5e74 \u613f\u5c06\u6765\u80dc\u8fc7\u5f80 \u65b0\u5e74\u5feb\u4e50 2021.2.12 \u613f\u4f73\u4eba\u76f8\u4f34 \u591a\u6b22\u559c \u957f\u5b89\u5b81 2021.2.13 \u5f00\u53cc\u95ea\u7684\u65f6\u5019\u6253\u8f6c\u5411\u80fd\u770b\u89c1\u5417 2021.2.14 \u4eca\u5929\u56de\u5e97\u91cc\u4e86 2021.2.15 window10 \u7684\u66f4\u65b0\u7b56\u7565\u771f\u7684\u662f \u641e\u4e86\u534a\u5929\u6ca1\u5f04\u597d 2021.2.16 \u51e1\u5fc3\u6240\u5411\uff0c\u7d20\u5c65\u4ee5\u5f80\uff0c\u751f\u5982\u9006\u65c5\uff0c\u4e00\u82c7\u4ee5\u822a\uff1b\u53bb\u5e74\u4e70\u7684\u963f\u91cc\u4e91\u7684\u57df\u540d\uff0c\u7adf\u7136\u5356\u51fa\u53bb\u4e86 \u54c8 2021.2.17 \u201c\u4e0a\u6b21\u4f60\u8bf7\u6211 \u8fd9\u6b21\u6211\u8bf7\u4f60\u3002\u201d \u201c\u90a3\u4f60\u8981\u8bf7\u6211\u4ec0\u4e48\u5462\uff1f\u201d \u201c\u8bf7\u4f60\u52a1\u5fc5\u559c\u6b22\u6211\u3002\u201d 2021.2.18 window10 + wsl2 + nvidia-docker + ml-workspace-gpu\u7ec8\u4e8e\u914d\u7f6e\u597d\u4e86 \u65ad\u65ad\u7eed\u7eed\u641e\u4e86\u597d\u4e45\u7684\u4e8b\u60c5 \u524d\u51e0\u5929\u56e0\u4e3awindow10\u66f4\u65b0\u95ee\u9898\u6401\u7f6e\u4e86 \u4eca\u5929\u7a81\u53d1\u5947\u60f3\uff1a\u53ef\u4ee5\u4ece\u7f51\u4e0a\u4e0b\u8f7d21286\u7248\u672c\u7684\u955c\u50cf\u3002\u9042\u89e3\u51b3\u66f4\u65b0\u95ee\u9898\u3002\u540e\u987a\u5229\u5b89\u88c5nvidia-docker\u3002\u76ee\u524d\u611f\u89c9\u5f88\u68d2~\u5728\u6b64\u57fa\u7840\u4e0a\uff0c\u914d\u7f6e\u597d\u4e86ohmyzsh\uff0c\u4ee5\u53ca\u4e00\u952e\u914d\u7f6e\u4ee3\u7406\u7684\u811a\u672c\uff0cwindow\u66b4\u9732wsl2\u7aef\u53e3\u7684\u811a\u672c\u7b49issues\u3002\u611f\u89c9\u5f88\u68d2~\u7ec8\u4e8e\u5728win\u914d\u7f6e\u597d\u4e86~wsl2\u5927\u6cd5\u597d\uff01 2021.2.19 flask\u548cvue\uff0c\u5feb\u901f\u5f00\u53d1\u5e38\u7528\u5e94\u7528; \u4f7f\u7528Vue3+Vite+Tailwindcss+Pug\u723d\u5feb\u7684\u5f00\u53d1\u524d\u7aef\u9875\u9762 2021.2.20 \u4e0b\u4e86\u4e00\u5929\u7684\u68cb \u8111\u58f3\u75bc 2021.2.21 \u8fd4\u6821 2021.2.22 \u5c1d\u8bd5\u65b0\u53d1\u578b\uff1a\u94a2\u5939\u70eb 2021.2.23 Elasticsearch Search\u6316\u4e86\u4e00\u5929\u5751 2021.2.24 mark\u4e00\u4e2a\u7a20\u5bc6\u5411\u91cf\u68c0\u7d22\u5de5\u5177Faiss-\r\u6559\u7a0b\uff1b\u7b7e\u5230\u811a\u672c\u5165\u9b54\u4e86? 2021.2.25 \u7b7e\u5230\u811a\u672c\u4f18\u5316\u4e86\u4e0b\uff0c\u628ajs\u548cpy\u7684\u4e24\u4e2a\u7b7e\u5230\u5e93\u6574\u5408\u5230\u4e00\u4e2a\u5e93\u3002 2021.2.26 \u5143\u5bb5\u8282\uff1a\u6f6e\u6c55\u725b\u8089\u706b\u9505 + \u7535\u5f71\u300a\u4eba\u6f6e\u6c79\u6d8c\u300b+\u6c5f\u6ee9\u591c\u666f\uff1b\u62ff\u5230worldview2\u6570\u636e\u4e0d\u77e5\u9053\u600e\u4e48\u7528 2021.2.27 \u7761\u4e0d\u7740 \u8001\u60f3\u7740\u6700\u540e\u4e00\u5c40\u68cb\u7684\u8d25\u62db\uff1b\u6587\u7ae0\u89c1\u520a 2021.2.28 \u5b66\u6821\u98df\u5802\u65b0\u5f00\u7684\u62cc\u9762\u86ee\u597d\u5403\u7684  ",
        "description": "",
        "id": 39,
        "section": "posts",
        "tags": null,
        "title": "2021-2",
        "uri": "/2021/02/02/322/"
    },
    {
        "content": " \u5927\u79be\u8c61\u68cb\u89c6\u9891\u6574\u7406\n \u5148\u624b \u5217\u70ae  \r\u5217\u70ae\u8d70\uff0c\u6559\u4f60\u5f03\u5b50\u653b\u6740 \r\u6b63\u8c31\u4e2d\u70ae  \u4ed9\u4eba\u6307\u8def  \r\u5bf9\u8fc7\u5bab\u70ae: \u6b8b\u68cb\u70ae\u56de\u5bb6\uff0c\u8fdb\u53ef\u653b\uff0c\u9000\u53ef\u5b88 \r\u8f6c\u5c4f\u98ce\u9a6c \r\u4ed9\u4eba\u6307\u8def\u98de\u8c61\u5c40\u3001\u5bf9\u5352\u5e95\u70ae  \u540e\u624b \u987a\u70ae  \r\u3010\u8c61\u68cb\u987a\u70ae\u301121\u56de\u5408\u901f\u80dc \r\u5bf9\u4e94\u516b\u70ae  \u5352\u5e95\u70ae  \r\u5352\u5e95\u70ae\u5bf9\u6297\u4ed9\u4eba\u6307\u8def\uff1a\u6f14\u53d8\u4e3a\u987a\u70ae\u5bf9\u4e94\u516d\u70ae  \u6b63\u7740-\u5c4f\u98ce\u9a6c  \r\u5bf9\u8fc7\u5bab\u70ae \r\u5bf9\u987a\u8dd1  ",
        "description": "",
        "id": 42,
        "section": "posts",
        "tags": null,
        "title": "\u5927\u79be\u8c61\u68cb-\u672d\u8bb0",
        "uri": "/2021/01/21/295/"
    },
    {
        "content": " New year.\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"I Want to Break Free\",\rartist: \"Queen\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/I%20Want%20to%20Break%20Free-38e9ea-Ag.mp3\",\rcover: \"https://p1.music.126.net/CH42J3GFdTiSH97A7alSGQ==/18802748348472229.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/I%20Want%20To%20Break%20Free-Queen-1c1246-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2021.1.1 GEE\u9065\u611f\u5927\u6570\u636e\u5206\u6790\u5e73\u53f0: GEE\u5165\u95e8[3] | \u76f8\u5173\u5b66\u4e60\u7f51\u7ad9\uff1bMacbook Pro\u5230\u4e86 \u914d\u597d\u4e86\u65e5\u5e38\u73af\u5883 \u65e9\u4e70\u65e9\u4eab\u53d7~ 2021.1.2 \u6d77\u5e95\u635e + \u62c6\u5f39\u4e13\u5bb62 2021.1.3 \u5e74\u7ec8\u603b\u7ed3\u7ec4\u4f1a\uff1b\u7545\u5feb\u7684\u805a\u9910\uff0c\u597d\u4e45\u6ca1\u6709\u559d\u8fd9\u4e48\u591a\u4e86 2021.1.4 \u4f55\u53bb\u4f55\u4ece 2021.1.5 \u535a\u58eb\u8bba\u6587\u60f3\u5199\u597d\u771f\u7684\u597d\u96be\u554a?? 2021.1.6 \u4e0d\u662f\u5427 \u963fsir 2021.1.7 \u795e\u7ecf\u75c5? \u6709\u4e9b\u4eba\u5c31\u5f88\u6c14 2021.1.8 \u540c\u4e00\u4e2a\u661f\u7403 \u540c\u4e00\u6bb5\u65f6\u5149 \u662f\u6211\u7684\u8363\u5e78\uff5e \u8c22\u8c22\u4f60\u4eec\u7684\u793c\u7269 2021.1.9 Mark\u4e00\u4e0b\uff0cMac\u751f\u6001\u505a\u7684\u5f88??\u3002\u968f\u822a\u529f\u80fd\u4e00\u952e\u8054\u52a8Pad\u548cMac \u7231\u4e86\u7231\u4e86 2021.1.10 \u8c61\u68cb\u5e03\u5c40 \u5b9e\u64cd\u5f88\u96be\u554a 2021.1.11 \u665a\u4e0a\u51fa\u53d1 \u5373\u523b\u56de\u5bb6 2021.1.12 \u5728\u5bb6\u7b2c\u4e00\u5929 2021.1.13 \u5403\u4e86\u7761 \u7761\u4e86\u5403? 2021.1.14 \u95f9\u817e&hellip;\u8fc7\u53bb\u7684\u4e8b\u4e3a\u4ec0\u4e48\u8981\u6316\u51fa\u6765 2021.1.15 \u53cc\u9a6c\u996e\u6cc9 2021.1.16 \u4e2d\u56fd\u673a\u957f 2021.1.17 \u7eb8\u77ed\u60c5\u957f 2021.1.18 \u5f53\u65f6\u53ea\u9053\u662f\u5bfb\u5e38 2021.1.19 \u4e0d\u8981\u60f3\u592a\u591a\uff0c\u653e\u624b\u53bb\u505a~\u4e0d\u505a\u6c38\u8fdc\u4e0d\u4f1a\u6709\u7ed3\u679c 2021.1.20 \u5bfb\u627e\u95ee\u9898 \u89e3\u51b3\u95ee\u9898? 2021.1.21 21\u4e16\u7eaa\uff0c\u7b2c21\u5e74\u7684\u7b2c21\u5929\uff0c\u5728\u7b2c21\u65f6\u60f3\u89c1\u4f60\u3002 2021.1.22 \u60f3\u6539\u6d3e\u3002\u53bb\u54ea\u91cc\u5440\u3002\u4eba\u554a \u4e3a\u4ec0\u4e48\u603b\u662f\u7ea0\u7ed3\u7684\u4e2a\u4f53 2021.1.23 \u4e94\u6708\u96e8\u8ba9\u4e00\u6574\u4e2a\u4e0b\u5348\u90fd\u53d8\u5f97\u4f24\u611f 2021.1.24 Mark\u4e00\u4e0b\uff0cVR\u6e38\u620f-\u8282\u594f\u5149\u5251 2021.1.25 \u957f\u9888\u9e7f\u662f\u4e00\u5934\u56e0\u4e3a\u597d\u5947\u800c\u4f38\u957f\u8116\u5b50\u7684\u9a6c \u8863\u670d\u4e0a\u6709\u5f88\u591a\u6263\u5b50\u662f\u56e0\u4e3a\u5b83\u60f3\u5f53\u94a2\u7434 \u6cb3\u6d41\u603b\u5728\u7ed9\u5927\u6d77\u5199\u4e00\u5c01\u5f88\u957f\u7684\u4fe1 \u5947\u5999\u4e8b\u7269\u5c5e\u4e8e\u773c\u775b - \u957f\u9888\u9e7f\u53bb\u52a8\u7269\u56ed\u770b\u957f\u9888\u9e7f 2021.1.26 \u6211\u66fe\u89c9\u5f97\u53ea\u8981\u52aa\u529b\u5c31\u4e00\u5b9a\u4f1a\u5f97\u5230\u60f3\u8981\u7684\uff0c\u53ef\u662f\u4f60\u770b\u770b\uff0c\u4f60\u82e5\u662f\u559c\u6b22\u82b1\uff0c\u5c31\u628a\u5b83\u6390\u4e0b\u6765\u653e\u5728\u74f6\u5b50\u91cc\u517b\u7740\uff1b\u4f60\u8981\u662f\u559c\u6b22\u6811\uff0c\u4e5f\u53ef\u4ee5\u628a\u5b83\u6316\u51fa\u6765\u683d\u8fdb\u81ea\u5bb6\u9662\u5b50\u53bb\uff1b\u4f46\u6709\u7684\u4e1c\u897f\u4e0d\u884c\u3002\u4e0d\u884c\u5c31\u662f\u4e0d\u884c\u3002- \u591c\u542c\u00b7\u5730\u5927|Rolling days 2021.1.27 \u6309\u7167\u6559\u7a0b\u6210\u529f\u914d\u7f6e\u4e86\u4e00\u4e2aDNF70\u7248\u672c\u5355\u673a\u7684\u53f0\u670d\u6e38\u620f\uff0c\u4e0a\u624b\u7b80\u5355\u73a9\u4e86\u73a9\u3001\u5bf9\u4e8e\u8fd9\u4e2a\u6e38\u620f\uff0c\u7b97\u662f\u4e00\u79cd\u60c5\u7ed3\u5427\u3001\u4ece\u9ad8\u4e2d\u5230\u5927\u5b66\uff0c\u627f\u8f7d\u7684\u592a\u591a\u3002\u8fd8\u8bb0\u5f97\u9ad8\u4e2d\u7684\u65f6\u5019\uff0c\u8d70\u5728\u8def\u4e0a\u6a21\u4eff\u6e38\u620f\u91cc\u6280\u80fd\u7684\u52a8\u4f5c\uff0c\u60f3\u8d77\u6765\u5c31\u50bb\u4e4e\u4e4e\u7684\u3001\u7b2c\u4e00\u6b21\u901a\u5bb5\u53bb\u6253\u6e38\u620f\uff0c\u4e0e\u5f53\u65f6\u7684\u670b\u53cb\u4e00\u89c1\u9762\u5c31\u804a\u6e38\u620f\u3001\u56de\u5bb6\u540e\u6324\u65f6\u95f4\u5237\u4f1a\u56fe\u3002\u3002\u3002\u73b0\u5728\u90fd\u65f6\u5e38\u53bb\u5173\u6ce8\u8fd9\u4e2a\u6e38\u620f\u3002 2021.1.28 \u6bcf\u5929\u90fd\u5728\u522e\u80e1\u5b50\u548c\u61d2\u5f97\u522e\u80e1\u5b50\u4e4b\u95f4\u72b9\u8c6b\u4e0d\u51b3 2021.1.29 what should love be 2021.1.30 \u4fdd\u6301\u70ed\u60c5 \u5954\u8d74\u5c71\u6d77 2021.1.31 \u7c7b\u522b\u4e0d\u5e73\u8861\u5206\u7c7b\u95ee\u9898\u4e00\u6708\uff0c\u4f11\u606f\u7ed3\u675f~  ",
        "description": "",
        "id": 43,
        "section": "posts",
        "tags": null,
        "title": "2021-1",
        "uri": "/posts/journals/2021-01-01-2021-1/"
    },
    {
        "content": " \u9605\u8bfb\u6df1\u5733\u5927\u5b66\u4e50\u9633\u8001\u5e08\u516c\u4f17\u53f7\uff08\u4e50\u77e5\u534a\u70b9\uff09-\u4e13\u9898\u201c\u57ce\u5e02\u5206\u6790-\u6982\u5ff5\u8fa8\u6790\u201d\u672d\u8bb0\u3002\n \u8bc6\u522b\u57ce\u5e02\u5730\u57df-\u6982\u5ff5\u7bc7  \u5982\u4f55\u5b9a\u4e49\u201c\u57ce\u5e02\u201d\u662f\u5f00\u5c55\u57ce\u5e02\u7814\u7a76\u7684\u4e00\u4e2a\u8d77\u70b9\u6027\u57fa\u7840\u95ee\u9898\uff0c\u73b0\u6709\u7814\u7a76\uff1a  \u5434\u5fd7\u5f3a\u9662\u58eb\u56e2\u961f  \r\u94fe\u63a5 \u603b\u7ed3\u57ce\u9547\u7fa4\u53d1\u5c55\u7684\u65f6\u7a7a\u89c4\u5f8b \u6839\u636e\u9065\u611f\u5f71\u50cf\u8bc6\u522b\u5168\u7403\u4e0a\u4e07\u4e2a\u57ce\u5e0240\u5e74\u57ce\u5e02\u5efa\u6210\u533a\u7684\u7a7a\u95f4\u53d8\u5316   \u6e05\u534e\u5927\u5b66\u5730\u5b66\u7cfb(\u5bab\u9e4f)  \r\u94fe\u63a5 \u4ee5\u53ef\u6301\u7eed\u53d1\u5c55\u4e3a\u76ee\u6807 \u57fa\u4e8e\u9065\u611f\u6570\u636e\u63d0\u53d6\u4e86\u591a\u65f6\u76f8\u4eba\u9020\u4e0d\u900f\u6c34\u5c42\u63d0\u53d6\u5168\u7403\u57ce\u5e02\u8fb9\u754c\uff08urban boundary\uff09   \u5317\u4eac\u57ce\u5e02\u5b9e\u9a8c\u5ba4\uff08BCL\uff09  \r\u94fe\u63a5 \u4ee5\u5b9a\u4e49\u4e2d\u56fd\u57ce\u5e02\u4f53\u7cfb\u4e3a\u76ee\u6807 \u5229\u7528POI\u6570\u636e\u8bc6\u522b\u57ce\u5e02\u5f62\u6001(urban form) \u5229\u7528\u6ef4\u6ef4\u4e58\u8f66\u8bb0\u5f55\u3001\u516c\u4ea4\u7ebf\u8def\u548c\u4eba\u53e3\u5bc6\u5ea6\u7b49\u8bc6\u522b\u5168\u56fd\u57ce\u5e02\u529f\u80fd\u6027\u57ce\u5e02\u533a\u57df\uff08Functional Urban Area\uff09 \u5229\u7528\u9053\u8def\u4ea4\u53c9\u53e3\u5bc6\u5ea6\u7ed3\u5408POI\u548c\u70b9\u8bc4\u6570\u636e\u7b49\u8bc6\u522b\u4e2d\u56fd\u57ce\u5e022009-2014\u5e74\u7684\u53d8\u5316     \u5728\u57ce\u5e02\u5730\u7406\u5b66\u4e2d\uff0c\u4e00\u822c\u4ece\u884c\u653f\u5730\u57df\u3001\u5b9e\u4f53\u5730\u57df\u4ee5\u53ca\u529f\u80fd\u5730\u57df\u4e09\u4e2a\u7ef4\u5ea6\u5b9a\u4e49\u57ce\u5e02\uff1a  \u884c\u653f\u5730\u57df\uff08city\uff09\u5c31\u662f\u6cd5\u5f8b\u89c4\u5b9a\u7684\u884c\u653f\u533a\u5212\u8303\u56f4\u3002\u4f7f\u7528\u884c\u653f\u5730\u57df\u533a\u5206\u57ce\u4e61\u7684\u4e3b\u8981\u95ee\u9898\u662f\u8f83\u96be\u51c6\u786e\u63cf\u8ff0\u57ce\u5e02\u5316\u8fdb\u7a0b\uff0c\u56e0\u4e3a\u5f88\u591a\u884c\u653f\u533a\u5212\u9664\u4e86\u57ce\u5e02\u5e02\u533a\uff0c\u8fd8\u5305\u62ec\u8f96\u53bf\u7b49\u57ce\u5e02\u5316\u7a0b\u5ea6\u4e0d\u9ad8\u7684\u533a\u57df\u3002 **\u5b9e\u5730\u5730\u57df\uff08urbanized area\uff09**\u4e00\u822c\u7406\u89e3\u4e3a\u57ce\u5e02\u5efa\u6210\u533a\uff08built-up area\uff09\uff0c\u662f\u57ce\u5e02\u8bbe\u65bd\u7684\u96c6\u4e2d\u5730\uff0c\u53c8\u79f0\u666f\u89c2\u5730\u57df\u3002 **\u529f\u80fd\u5730\u57df\uff08metropolitan area\uff09**\u662f\u4e00\u65e5\u901a\u52e4\u3001\u4f11\u95f2\u7b49\u6d3b\u52a8\u7d27\u5bc6\u8054\u7cfb\u7684\u533a\u57df\uff0c\u901a\u5e38\u662f\u5bf9\u5b9e\u5730\u5730\u57df\u6838\u5fc3\u533a\u57df\u7684\u62d3\u5c55\u3002    \u8bc6\u522b\u57ce\u5e02\u5b9e\u4f53\u5730\u57df  \u5728\u5b9e\u9645\u60c5\u51b5\u4e2d\uff0c\u57ce\u5e02\u7684\u5b9e\u4f53\u5730\u57df\u5f88\u5c11\u548c\u884c\u653f\u8f96\u533a\u5b8c\u5168\u4e00\u81f4\uff1b\u9488\u5bf9\u57ce\u5e02\u7684\u7814\u7a76\uff0c\u66f4\u591a\u662f\u9488\u5bf9\u57ce\u5e02\u7684\u5b9e\u4f53\u5730\u57df\uff0c\u800c\u975e\u884c\u653f\u5730\u57df\u3002\u6240\u4ee5\uff0c\u51c6\u786e\u8bc6\u522b\u57ce\u5e02\u5b9e\u4f53\u5730\u57df\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\u3002 \u7ecf\u5178\u65b9\u6cd5/\u624b\u6bb5-\u5229\u7528\u9065\u611f\u5f71\u50cf\u6570\u636e\u8bc6\u522b\u4e0d\u900f\u6c34\u5c42\uff08impervious surface\uff09  \u4e0d\u900f\u6c34\u5c42\u4e00\u822c\u6307\u5efa\u7b51\u7269\u3001\u9053\u8def\u7b49\u963b\u6b62\u6c34\u6e17\u5165\u571f\u58e4\u7684\u5730\u8868\u8986\u76d6\u7269\uff0c\u4e0d\u900f\u6c34\u5c42\u4e5f\u4e0e\u57ce\u5e02\u70ed\u5c9b\u6548\u5e94\u76f4\u63a5\u76f8\u5173\uff0c\u56e0\u6b64\u662f\u5efa\u6210\u533a\u4e00\u4e2a\u6bd4\u8f83\u76f4\u89c2\u7684\u8868\u5f81\u3002 \u53ef\u8bc6\u522b\u4e0d\u900f\u6c34\u5c42\u7684\u9065\u611f\u6570\u636e\u4e3b\u8981\u5305\u62ec\u5149\u5b66\u5f71\u50cf\uff0c\u5982MODIS,\u3001Landsat\u3001QuickBird\u548cDMSP-OLS\u591c\u95f4\u706f\u5149\u6570\u636e\uff0c\u4ee5\u53ca\u96f7\u8fbe\u6570\u636e\u3001LiDAR\u7b49\u3002   \u5229\u7528\u9065\u611f\u6570\u636e\u96be\u4ee5\u8bc6\u522b\u201c\u9b3c\u57ce\u201d\uff08\u4eba\u7c7b\u6d3b\u52a8\u4e0d\u663e\u8457\u7684\u5730\u57df\uff09=&gt; \u4eba\u7c7b\u6d3b\u52a8\u6570\u636e\u6210\u4e3a\u8fd1\u5e74\u8bc6\u522b\u57ce\u5e02\u5efa\u6210\u533a\u7684\u4e00\u4e2a\u4e3b\u8981\u6570\u636e\u6e90\uff0c\u5982POI\u6570\u636e\u3001\u624b\u673a\u4f4d\u7f6e\u6570\u636e\u3001\u6c34\u7535\u6570\u636e\u7b49\u3002  \u8bc6\u522b\u57ce\u5e02\u529f\u80fd\u5730\u57df  \u5982\u679c\u8bc6\u522b\u51fa\u7684\u533a\u57df\u8d85\u8fc7\u4e86\u4e00\u4e2a\u57ce\u5e02\u7684\u884c\u653f\u8fb9\u754c\uff0c\u6d89\u53ca\u4e24\u4e2a\u6216\u66f4\u591a\u7684\u5730\u533a\uff0c\u8fd9\u6837\u7684\u533a\u57df\u5219\u53ef\u4ee5\u88ab\u79f0\u4e3a\uff08\u5927\uff09\u90fd\u5e02\u533a\uff08Metropolitan Area\u6216Metropolitan District\uff09\u3001\u90fd\u5e02\u8fde\u7ef5\u533a\uff08Metropolitan Interlocking Region\uff09\u6216\u90fd\u5e02\u5e26\uff08Megalopolis\uff09\u7b49\u3002\u800c\u8fde\u7ef5\u6210\u7247\u7684\u57ce\u5e02\u5b9e\u4f53\u5730\u57df\u5982\u679c\u4e0e\u5468\u8fb9\u5730\u533a\u6709\u65e5\u5e38\u901a\u52e4\u7b49\u8f83\u7d27\u5bc6\u7684\u8054\u7cfb\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5927\u7684\u533a\u57df\u5728\u56fd\u9645\u4e0a\u5e38\u88ab\u8ba4\u4e3a\u662f\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u7ecf\u6d4e\u7edf\u8ba1\u5355\u5143\uff0c\u5373\u201c\u57ce\u5e02\u529f\u80fd\u5730\u57df\u201d(FUA, Functional Urban Area) \u3002 FUA  \u4e3a\u4e86\u4fbf\u4e8e\u7edf\u8ba1\u548c\u8fdb\u884c\u57fa\u7840\u8bbe\u65bd\u3001\u4ea4\u901a\u3001\u4f4f\u623f\u3001\u6559\u80b2\u7b49\u4e8b\u52a1\u95f4\u7684\u534f\u8c03\u7ba1\u7406 \u7b80\u5355\u8bb2\uff0c\u6307\u4e00\u65e5\u6d3b\u52a8\uff0c\u5c24\u5176\u662f\u901a\u52e4\uff0c\u6240\u8986\u76d6\u7684\u8303\u56f4 \u7ecf\u5408\u7ec4\u7ec7\uff1adensely populated municipalities (urban cores) and adjacent municipalities with high levels of commuting towards the densely populated urban cores (hinterland) \u4e0e\u57ce\u5e02\u7fa4\u7684\u533a\u522b \u57ce\u5e02\u5b9e\u4f53\u5730\u57df\u800c\u8a00\uff0c\u57ce\u5e02\u529f\u80fd\u5730\u57df\u662f\u4e00\u4e2a\u66f4\u51c6\u786e\u548c\u5b8c\u6574\u7684\u7ecf\u6d4e\u5355\u5143\uff0c\u6240\u4ee5\u4e5f\u6709\u4ece\u7ecf\u6d4e\u5355\u5143\u7684\u89d2\u5ea6\u5b9a\u4e49FUA\uff1aFunctional urban areas are economic units characterised by a city (or core) and a commuting zone that is functionally interconnected to the city \u6709\u52a9\u4e8e\u7406\u89e3\u57ce\u5e02\u53d1\u5c55\u6a21\u5f0f   \u8bc6\u522b\u65b9\u6cd5  \u57ce\u5e02\u5b9e\u4f53\u5730\u57df\u548c\u57ce\u5e02\u529f\u80fd\u5730\u57df\u90fd\u662f\u4ee5\u4eba\u4e3a\u4e2d\u5fc3\u800c\u5b9a\u4e49\u7684\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u6709\u4eba\u7c7b\u6d3b\u52a8\u76f8\u5173\u7684\u6570\u636e\u5219\u53ef\u4ee5\u4ee3\u66ff\u9065\u611f\u548c\u5efa\u7b51\u7269\u8fd9\u7c7b\u76f8\u5bf9\u95f4\u63a5\u7684\u6570\u636e\uff0c\u7ed3\u679c\u53ef\u4ee5\u66f4\u51c6\u786e\u3002\u8bc6\u522b\u57ce\u5e02\u529f\u80fd\u5730\u57df\uff0c\u9664\u4e86\u884c\u653f\u8fb9\u754c\u6570\u636e\u5916\uff0c\u6309\u56fd\u9645\u73b0\u884c\u6807\u51c6\u8fd8\u9700\u8981\u4eba\u53e3\u548c\u901a\u52e4\u8fd9\u4e24\u7c7b\u6570\u636e\u3002 OECD\u5df2\u63d0\u4f9b\u8bc6\u522b\u57ce\u5e02\u529f\u80fd\u533a\u7684\u7b97\u6cd5\u6d41\u7a0b\u3002    \u5173\u4e8e\u201c\u57ce\u5e02\u529f\u80fd\u5206\u533a\u201d  \u201c\u57ce\u5e02\u529f\u80fd\u5206\u533a\u201d\uff08urban functional zones/ regions\uff09  \u76f8\u5bf9\u4e8e\u201c\u5c71\u6c34\u6797\u7530\u6e56\u8349\u201d\u5404\u7c7b\u975e\u5efa\u8bbe\u7528\u5730\uff0c\u57ce\u5e02\u7528\u5730\u7c7b\u578b\u901a\u5e38\u6307\u5c45\u4f4f\u7528\u5730\u3001\u5de5\u4e1a\u7528\u5730\u3001\u5546\u4e1a\u7528\u5730\u7b49\uff0c\u662f\u57ce\u5e02\u89c4\u5212\u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u547d\u9898\u3002 \u57ce\u5e02\u5efa\u8bbe\u7528\u5730\u6309\u529f\u80fd\u53ef\u5206\u4e3a\u5c45\u4f4f\u7528\u5730\u3001\u5de5\u4e1a\u7528\u5730\u3001\u516c\u5171\u7ba1\u7406\u4e0e\u516c\u5171\u670d\u52a1\u8bbe\u65bd\u7528\u5730\u3001\u7eff\u5730\u4e0e\u5e7f\u573a\u7528\u5730\u3001\u4ea4\u901a\u7528\u5730\u7b49\uff0c\u5305\u62ec\u201c\u7559\u767d\u7528\u5730\u201d\u51719\u5927\u7c7b\uff082020\u5e748\u670820\u65e5\u81ea\u7136\u8d44\u6e90\u90e8\u56fd\u571f\u7a7a\u95f4\u89c4\u5212\u5c40\u53d1\u5e03\u7684\u300a\u5e02\u7ea7\u56fd\u571f\u7a7a\u95f4\u603b\u4f53\u89c4\u5212\u7f16\u5236\u6307\u5357\uff08\u8bd5\u884c\uff09\u300b\uff08\u5f81\u6c42\u610f\u89c1\u7a3f\uff09\u300b\uff09 \u9065\u611f\u9886\u57df\u5bf9\u571f\u5730\u5229\u7528\u548c\u8986\u76d6\u53d8\u5316\uff08LUCC, Land-Useand Land-CoverChanges\uff09\u5df2\u7ecf\u6709\u51e0\u5341\u5e74\u7684\u57fa\u7840\uff0c\u5176\u57fa\u672c\u539f\u7406\u662f\u6839\u636e\u4e0d\u540c\u5730\u7269\u7684\u6ce2\u8c31\u7279\u5f81\u5efa\u7acb\u5224\u522b\u51fd\u6570\uff0c\u83b7\u5f97\u56fe\u50cf\u4e2d\u6bcf\u4e2a\u50cf\u5143\u5bf9\u5e94\u7684\u5730\u7269\u7c7b\u578b\u3002   \u67ef\u5e03\u897f\u8036-\u5149\u8f89\u57ce\u5e02 \u5206\u6790\u571f\u5730\u6df7\u5408\u5229\u7528\u6216\u5747\u8d28\u6027\u662f\u7814\u7a76\u793e\u533a\uff08\u6bd4\u598215\u5206\u949f\u751f\u6d3b\u5708\uff09\u548c\u57ce\u5e02\u7684\u5408\u7406\u7ed3\u6784\u548c\u5e03\u5c40\uff08size, scale\uff09(Batty, 2008) \u7b49\u95ee\u9898\u7684\u6838\u5fc3\u3002  \u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784  \u57ce\u5e02\u7814\u7a76\u7684\u4e00\u4e2a\u6838\u5fc3\u5173\u6ce8\u70b9\u662f\u57ce\u5e02\u5f62\u6001\u548c\u793e\u4f1a\u8fc7\u7a0b\u4e4b\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\u3002\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u4e3b\u8981\u6307\u57ce\u5e02\u8981\u7d20\u7684\u7a7a\u95f4\u5206\u5e03\u548c\u76f8\u4e92\u4f5c\u7528\u7684\u5185\u5728\u673a\u5236\uff0c\u5176\u7814\u7a76\u6846\u67b6\u548c\u5185\u5bb9\u4f53\u7cfb\u53ef\u4ece\u4e09\u4e2a\u5c42\u9762\u5c55\u5f00  \u5f62\u5f0f\u7814\u7a76\uff1a\u5206\u6790\u57ce\u5e02\u5404\u8981\u7d20\u7684\u7a7a\u95f4\u5206\u5e03\u683c\u5c40\u548c\u76f8\u4e92\u4f5c\u7528\u5173\u7cfb \u8fc7\u7a0b\u7814\u7a76\uff1a\u5206\u6790\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7684\u52a8\u6001\u53d8\u5316\u7279\u5f81\u4e0e\u89c4\u5f8b\uff0c\u5982\u897f\u65b9\u7684\u201c\u90ca\u533a\u5316\u201d\u3001\u201c\u591a\u6838\u5fc3\u201d\u7b49\u7a7a\u95f4\u7ed3\u6784\u7684\u6f14\u53d8\u89c4\u5f8b \u673a\u5236\u7814\u7a76\uff1a\u89e3\u91ca\u57ce\u5e02\u5f62\u6001\u548c\u57ce\u5e02\u5185\u90e8\u8981\u7d20\u7a7a\u95f4\u5206\u5e03\u7684\u53d8\u5316\u539f\u56e0\u4ee5\u53ca\u8fd9\u4e9b\u8981\u7d20\u4e4b\u95f4\u76f8\u4e92\u4f5c\u7528\u7684\u5185\u5728\u673a\u5236\uff0c\u5982\u53ef\u8fbe\u6027\u3001\u96c6\u805a\u673a\u5236\u3001\u8d44\u672c\u7684\u4f5c\u7528\u7b49   \u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7684\u5f62\u6210\u548c\u6f14\u5316\u5efa\u7acb\u5728\u793e\u4f1a\u8fc7\u7a0b\u7684\u7a7a\u95f4\u5c5e\u6027\u57fa\u7840\u4e0a\uff0c\u6d89\u53ca\u5230\u57ce\u5e02\u793e\u4f1a\u7a7a\u95f4\uff08urban social space\uff09\u5c42\u9762\u7684\u95ee\u9898\uff0c\u4e0d\u662f\u5355\u7eaf\u7684\u7269\u8d28\u7a7a\u95f4\u571f\u5730\u5229\u7528\u548c\u529f\u80fd\u5206\u533a\u95ee\u9898\u3002  \u540c\u5fc3\u5706\u6a21\u578b\uff08concentric zone model\uff09\u3001\u6247\u5f62\u6a21\u5f0f\uff08Sector model\uff09\u548c\u591a\u6838\u5fc3\u6a21\u5f0f\uff08Multiple nuclei model\uff09   \u54c8\u4f5b\u5927\u5b66\u7ecf\u6d4e\u7cfb\u5f00\u8bbe\u7684\uff08\u7f51\u7ea2\uff09\u65b0\u8bfe-Using Big Data Solve Economic and Social Problems\uff1ahttps://opportunityinsights.org/course/ \u7269\u8d28\u7a7a\u95f4\u3001\u793e\u4f1a\u7a7a\u95f4\u3001\u610f\u5411\u7a7a\u95f4\uff08\u4eba\u4eec\u5bf9\u5468\u56f4\u73af\u5883\u7684\u76f4\u63a5\u6216\u95f4\u63a5\u7ecf\u9a8c\u8ba4\u8bc6\u7684\u4e3b\u89c2\u7a7a\u95f4\uff09  ",
        "description": "",
        "id": 44,
        "section": "posts",
        "tags": [
            "\u57ce\u5e02\u529f\u80fd\u533a",
            "\u5b66\u4e60\u7b14\u8bb0",
            "\u9605\u8bfb\u7b14\u8bb0"
        ],
        "title": "\u8bc6\u522b\u57ce\u5e02\u5730\u57df-\u672d\u8bb0",
        "uri": "/2020/12/30/243/"
    },
    {
        "content": " \u57ce\u5e02\u6df7\u5408\u571f\u5730\u5229\u7528\u6587\u732e\u9605\u8bfb\u3002\n 2019-\u7528\u5730\u6df7\u5408\u4f7f\u7528\u7684\u56fd\u9645\u7ecf\u9a8c \uff1a\u6a21\u5f0f\u3001\u6d4b\u5ea6\u65b9\u6cd5\u548c\u6548\u679c  \u6e05\u534e\u5927\u5b66\u4e2d\u56fd\u65b0\u578b\u57ce\u9547\u5316\u7814\u7a76\u9662\u5f00\u653e\u57fa\u91d1\u9879\u76ee \u56fd\u9645\u57ce\u5e02\u89c4\u5212 http://tucsu.tsinghua.edu.cn/info/research_kfkt/3322  \u6458\u8981  \u5bf9\u7528\u5730\u6df7\u5408\u4f7f\u7528\u6a21\u5f0f\u3001\u6d4b\u5ea6\u65b9\u6cd5\u548c\u6548\u679c\u7684\u63a2\u8ba8\u76f8\u5bf9\u7f3a\u4e4f \u68b3\u7406\u56fd\u5916\u7528\u5730\u6df7\u5408\u4f7f\u7528\u7684\u6982\u5ff5\u5185\u6db5\u3001\u7c7b\u578b\u3001\u6d4b\u5ea6\u65b9\u6cd5\u548c\u6548\u679c\u5b9e\u8bc1  \u5f15\u8a00  \u591a\u6837\u5316\u529f\u80fd\u7684\u6709\u673a\u6df7\u5408\u53ef\u4ee5\u589e\u52a0\u533a\u57df\u5438\u5f15\u529b\u548c\u6d3b\u529b\uff0c \u521b\u9020\u6210\u529f\u7684\u793e\u533a \u56fd\u5bb6\u57ce\u5e02\u7a7a\u95f4\u53d1\u5c55\u5f62\u52bf\uff1a\u589e\u91cf\u89c4\u5212=&gt;\u5b58\u91cf\u89c4\u5212 \u7136\u800c\uff0c\u6211\u56fd\u76f8\u5173\u7814\u7a76\u4e3b\u8981\u4fa7\u91cd\u4e8e\u89c4\u5212\u5b9e\u8df5\u4e2d\u5bf9\u4e8e\u7528\u5730\u6df7\u5408\u4f7f\u7528\u7684\u653f\u7b56\u5f15\u5bfc\uff0c \u5bf9\u7528\u5730\u6df7\u5408\u4f7f\u7528\u6a21\u5f0f\u3001 \u6d4b\u5ea6\u65b9\u6cd5\u548c\u6548\u679c\u7684\u63a2\u8ba8\u76f8\u5bf9\u7f3a\u4e4f\u3002 \u672c\u6587\u4ecb\u7ecd\u7528\u5730\u6df7\u5408\u4f7f\u7528\u7684\u5b9e\u8df5\u548c\u7814\u7a76\u8fdb\u5c55  \u7528\u5730\u6df7\u5408\u4f7f\u7528\u7684\u5185\u6db5\u548c\u6a21\u5f0f  \u7528\u5730\u6df7\u5408\u4f7f\u7528\u5b9a\u4e49 \u6982\u5ff5\u5b9a\u4e49\u7684\u6a21\u7cca\u6027  \u7528\u5730\u529f\u80fd\u7684\u5185\u6db5\u4e0d\u7edf\u4e00 \u7528\u5730\u6df7\u5408\u7684\u7a7a\u95f4\u6761\u4ef6\u96be\u4ee5\u754c\u5b9a \u7528\u5730\u6df7\u5408\u7684\u7a7a\u95f4\u5c3a\u5ea6\u548c\u7c7b\u578b\u8f83\u4e3a\u4e30\u5bcc    \u6982\u5ff5\u5185\u6db5  \u5173\u4e8e\u7528\u5730\u529f\u80fd\u7684\u5206\u7c7b\uff1a\u591a\u6837\uff0c\u56fd\u9645\u6807\u51c6\uff0c\u56fd\u5185\u6807\u51c6 \u529f\u80fd\u8054\u7cfb\uff1a\u591a\u5c42\u6b21  \u540c\u4e00\u7c7b\u7528\u5730\u529f\u80fd\u7528\u9014\u591a\u6837\u6027\u7684\u6df7\u5408\uff0c\u4f8b\u5982\u4e0d\u540c\u4f4f\u623f\u5f62\u5f0f\u6216\u4e0d\u540c\u4f7f\u7528\u6743\u7684\u6df7\u5408 \u76f8\u517c\u5bb9\u7528\u5730\u529f\u80fd\u7684\u6df7\u5408\uff0c \u5982\u5c45\u4f4f\u4e0e\u5546\u4e1a\u529f\u80fd\u7684\u6df7\u5408 \u4e0d\u76f8\u517c\u5bb9\u7528\u5730\u529f\u80fd\u7684\u6df7\u5408    \u7528\u5730\u6df7\u5408\u7684\u7a7a\u95f4\u6761\u4ef6  \u7528\u5730\u6df7\u5408\u4f7f\u7528\u672c\u8d28\u4e0a\u662f\u57ce\u5e02\u529f\u80fd\u7ec4\u7ec7\u7684\u4e00\u79cd\u5f62\u5f0f\uff0c\u5f3a\u8c03\u529f\u80fd\u7684\u96c6\u805a\u548c\u534f\u540c\uff0c \u9700\u8981\u4e0e\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u76f8\u4e92\u4f5c\u7528 \u7f8e\u56fd\u57ce\u5e02\u571f\u5730\u5b66\u4f1a\uff1a\u7528\u5730\u6df7\u5408\u4f7f\u7528\u5728\u7a7a\u95f4\u4e0a\u548c\u529f\u80fd\u4e0a\u9700\u6574\u5408\u5f62\u6210\u9ad8\u5bc6\u5ea6\u3001 \u9ad8\u5f3a\u5ea6\u7684\u571f\u5730\u5229\u7528\u6a21\u5f0f\uff0c \u540c\u65f6\u5305\u542b\u8fde\u7eed\u7684\u6b65\u884c\u901a\u9053 \u4fdd\u969c\u7528\u5730\u6df7\u5408\u4f7f\u7528\u7684\u91cd\u8981\u7a7a\u95f4\u6761\u4ef6\uff1a\u808c\u7406\uff08grain\uff09\u3001 \u5bc6\u5ea6\uff08density\uff09\u3001 \u6e17\u900f\u6027\uff08permeability\uff09 \u548c\u4ea4\u7ec7\uff08interweaving\uff09  \u808c\u7406\u662f\u6307\u8857\u533a\u7684\u89c4\u6a21\u548c\u5212\u5206\u5f62\u5f0f\uff0c \u5f3a\u8c03\u7528\u5730\u529f\u80fd\u7684\u5c3a\u5ea6 \u5bc6\u5ea6\u4e5f\u4e0e\u7528\u5730\u6df7\u5408\u4f7f\u7528\u6709\u7740\u5bc6\u4e0d\u53ef\u5206\u7684\u5173\u7cfb\uff0c \u56e0\u4e3a\u7528\u5730\u6df7\u5408\u4f7f\u7528\u9700\u8981\u4e00\u5b9a\u7684\u529f\u80fd\u548c\u4eba\u53e3\u5bc6\u5ea6 \u6e17\u900f\u6027\u6307\u6b65\u884c\u7a7f\u8fc7\u533a\u57df\u53ef\u9009\u62e9\u7684\u901a\u9053\u6570\u91cf\uff0c \u5373\u6b65\u884c\u53ef\u8fbe\u6027\uff0c \u8f83\u5927\u7684\u6b65\u884c\u7a7f\u8d8a\u53ef\u80fd\u6027\u6709\u5229\u4e8e\u4fc3\u8fdb\u4e0d\u540c\u529f\u80fd\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c \u9f13\u52b1\u4eba\u4eec\u91c7\u7528\u6162\u884c\u4ea4\u901a \u4ea4\u7ec7\u5373\u4e00\u5b9a\u8303\u56f4\u5185\u529f\u80fd\u7684\u5206\u6563\u7a0b\u5ea6    \u7528\u5730\u6df7\u5408\u7684\u7c7b\u578b\u548c\u7a7a\u95f4\u5c3a\u5ea6  \u7528\u5730\u6df7\u5408\u4f7f\u7528\u7c7b\u578b\uff1a\u5171\u4eab\u5f0f\u6df7\u5408\u3001 \u6c34\u5e73\u65b9\u5411\u4e0a\u7684\u6df7\u5408\u3001\u5782\u76f4\u65b9\u5411\u4e0a\u7684\u6df7\u5408\u548c\u65f6\u95f4\u7ef4\u5ea6\u7684\u6df7\u5408\u7b49\u4e0d\u540c\u7c7b\u578b \u7528\u5730\u6df7\u5408\u4f7f\u7528\u5c3a\u5ea6\uff1a\u5efa\u7b51\u5c3a\u5ea6\u3001\u6805\u683c\u5355\u5143\u3001 \u8857\u533a\u5c3a\u5ea6\u3001 \u8c03\u67e5\u5c0f\u533a \u548c\u57ce\u5e02\u5c40\u90e8\u533a\u57df\u7b49\u4e0d\u540c\u7a7a\u95f4\u5c3a\u5ea6 \u8857\u533a\u662f\u7531\u5efa\u7b51\u7fa4\u4f53\u548c\u516c\u5171\u7a7a\u95f4\u5171\u540c\u7ec4\u6210\u7684\uff0c \u662f\u7528\u5730\u6df7\u5408\u4f7f\u7528\u7684\u6838\u5fc3\u7814\u7a76\u5c3a\u5ea6  \u6d4b\u5ea6\u65b9\u6cd5  \u5b9a\u91cf\u5316\u6d4b\u5ea6\u6df7\u5408\u7a0b\u5ea6 \u71b5\u503c\u6cd5\uff08entropy\uff09  \u6700\u5e38\u7528 \u71b5\u503c\u6cd5\u5e76\u975e\u4e25\u683c\u6d4b\u91cf\u6211\u4eec\u8ba4\u77e5\u7684\u6df7\u5408\u7a0b\u5ea6\uff0c \u5b83\u4e0d\u8003\u8651\u6df7\u5408\u6210\u5206\u7684\u6570\u91cf\uff0c \u53ea\u6d4b\u5ea6\u6df7\u5408\u6210\u5206\u7684\u5360\u6bd4\u662f\u5426\u5747\u8861 \u71b5\u503c\u6cd5\u4e0d\u8003\u8651\u4e0d\u540c\u7ec4\u6210\u6210\u5206\u548c\u4e0d\u540c\u6df7\u5408\u65b9\u5f0f\u7684\u4e0d\u540c\u5f71\u54cd \u7528\u5730\u529f\u80fd\u79cd\u7c7b\u7684\u9009\u53d6\u548c\u6d4b\u91cf\u533a\u57df\u7684\u9762\u79ef\u90fd\u4f1a\u663e\u8457\u5f71\u54cd\u71b5\u503c\u7684\u8ba1\u7b97   \u5206\u5f02\u5ea6\u6307\u6570  \u901a\u8fc7\u6d4b\u5ea6\u4e00\u4e2a\u6805\u683c\u5185\u7528\u5730\u529f\u80fd\u4e0e\u5468\u8fb9 8 \u4e2a\u6805\u683c\u7528\u5730\u529f\u80fd\u5206\u5e03\u7684\u76f8\u4f3c\u7a0b\u5ea6\uff0c \u53cd\u6620\u8be5\u6805\u683c\u7684\u6df7\u5408\u7a0b\u5ea6\u3002 \u76f8\u6bd4\u71b5\u503c\u6cd5\uff0c \u5206\u5f02\u5ea6\u6307\u6570\u53ef\u4ee5\u6d4b\u5ea6\u66f4\u7cbe\u7ec6\u5c3a\u5ea6\u7684\u7528\u5730\u6df7\u5408\u4f7f\u7528\u7a0b\u5ea6\uff0c \u5f3a\u8c03\u7528\u5730\u529f\u80fd\u7ec4\u5408\u7684\u5dee\u5f02\u6027\u800c\u975e\u5747\u8861\u6027\u3002 \u7f3a\u9677 \uff1a \u4e00\u65b9\u9762\u5176\u4e5f\u4e0d\u8003\u8651\u4e0d\u540c\u6df7\u5408\u529f\u80fd\u548c\u4e0d\u540c\u6df7\u5408\u65b9\u5f0f\u7684\u4e0d\u540c\u5f71\u54cd \uff1b \u53e6\u4e00\u65b9\u9762\u6d4b\u7b97\u7ed3\u679c\u53d7\u6805\u683c\u5212\u5206\u7684\u5f71\u54cd\u8f83\u5927\uff0c \u4e0d\u80fd\u53cd\u6620\u7814\u7a76\u533a\u57df\u4e0e\u5468\u8fb9\u533a\u57df\u529f\u80fd\u7ec4\u6210\u76f8\u540c\u7684\u6df7\u5408   \u57fa\u4e8e\u76ee\u7684\u5730\u7684\u7528\u5730\u6df7\u5408\u4f7f\u7528\u6d4b\u5ea6\u6cd5  \u6d4b\u91cf\u7814\u7a76\u533a\u57df\uff08 \u4e3b\u8981\u662f\u5c45\u4f4f\u5730\uff09 \u5230\u5404\u529f\u80fd\u7684\u6700\u8fd1\u8ddd\u79bb\uff0c \u6216\u4e00\u5b9a\u8303\u56f4\u5185\u5404\u529f\u80fd\u7684\u5bc6\u5ea6\u6216\u6570\u91cf\uff0c \u53cd\u6620\u7814\u7a76\u533a\u57df\u7684\u6df7\u5408\u7a0b\u5ea6\u3002 \u4eba\u4eec\u6162\u884c\u4ea4\u901a\u51fa\u884c\u610f\u613f\uff0c\u6709\u52a9\u4e8e\u5206\u6790\u7528\u5730\u6df7\u5408\u4f7f\u7528\u5bf9\u4e8e\u4ea4\u901a\u51fa\u884c\u7684\u5f71\u54cd\u6548\u7528 \u53ea\u8003\u8651\u67d0\u4e2a\u7279\u6b8a\u529f\u80fd\u53c8\u96be\u4ee5\u53cd\u6620\u6df7\u5408\u7a0b\u5ea6   \u4ee3\u7528\u6307\u6807\u6cd5\uff08proxies\uff09  \u4e0d\u662f\u57fa\u4e8e\u7528\u5730\u529f\u80fd\u7684\u6570\u91cf\uff0c \u800c\u662f\u901a\u8fc7\u6d4b\u7b97\u67d0\u4e9b\u88ab\u8ba4\u4e3a\u4e0e\u7528\u5730\u6df7\u5408\u4f7f\u7528\u5177\u6709\u663e\u8457\u8054\u7cfb\u7684\u6307\u6807\u6765\u53cd\u6620\u6df7\u5408\u7a0b\u5ea6 \u4f8b\u5982\u804c\u4f4f\u6bd4\u3001 \u4f4f\u623f\u7684\u5e74\u9f84\u3001 \u5730\u5757\u7684\u5927\u5c0f\u3001 \u6162\u884c\u4ea4\u901a\u901a\u52e4\u7684\u5360\u6bd4\u7b49 \u5b83\u4eec\u5e76\u4e0d\u662f\u6df7\u5408\u7a0b\u5ea6\u7684\u76f4\u63a5\u53cd\u6620   \u5176\u4ed6\u6307\u6807\uff1a\u529f\u80fd\u5360\u6bd4\u3001 \u5e73\u8861\u6307\u6570\uff08balance index\uff09\u3001 \u8d6b\u82ac\u8fbe\u5c14 - \u8d6b\u5e0c\u66fc\u6307\u6570\uff08Herfindahl-Hirschman index\uff09\u3001 \u963f\u7279\u91d1\u68ee\u6307\u6570\uff08Atkinson index\uff09\u3001 \u57fa\u5c3c\u7cfb\u6570\uff08Gini index\uff09 \u548c\u6df7\u5408\u6307\u6570\uff08mixed-use index\uff09 \u7b49\u65b9\u6cd5 \u7279\u5b9a\u6761\u4ef6\u4e0b\u6700\u9002\u5b9c\u7684\u7528\u5730\u6df7\u5408\u4f7f\u7528\u6d4b\u5ea6\u65b9\u6cd5  \u7528\u5730\u6df7\u5408\u7684\u6548\u679c\u9a8c\u8bc1  \u7528\u5730\u6df7\u5408\u4f7f\u7528\u5c06\u4e0d\u540c\u529f\u80fd\u805a\u96c6\u5728\u4e00\u8d77\uff0c\u53ef\u5728\u8f83\u5c0f\u7684\u8303\u56f4\u5185\u6ee1\u8db3\u4eba\u4eec\u7684\u4e0d\u540c\u9700\u6c42\uff0c \u589e\u52a0\u4e86\u533a\u57df\u591a\u6837\u6027\u7684\u540c\u65f6\u51cf\u5c11\u4e86\u51fa\u884c\u8ddd\u79bb \u968f\u7740\u533a\u57df\u591a\u6837\u6027\u7684\u589e\u52a0\uff0c \u7528\u5730\u6df7\u5408\u4f7f\u7528\u6ee1\u8db3\u4e86\u4eba\u4eec\u4e0d\u540c\u65f6\u95f4\u7684\u4e0d\u540c\u9700\u6c42\uff0c \u65e2\u589e\u52a0\u4e86\u533a\u57df\u5438\u5f15\u529b\u53c8\u589e\u52a0\u4e86\u533a\u57df\u6d3b\u529b\uff0c \u6700\u7ec8\u8425\u9020\u4e86\u5b89\u5168\u800c\u53c8\u5177\u6709\u7ecf\u6d4e\u6d3b\u529b\u7684\u533a\u57df  \u5bf9\u6162\u884c\u4ea4\u901a\u51fa\u884c\u7684\u4fc3\u8fdb  \u7528\u5730\u6df7\u5408\u4f7f\u7528\u7f29\u77ed\u4e86\u673a\u52a8\u8f66\u51fa\u884c\u8ddd\u79bb\u548c\u51fa\u884c\u65f6\u95f4 \u7528\u5730\u6df7\u5408\u4f7f\u7528\u53ef\u4ee5\u4fc3\u8fdb\u4f7f\u7528\u6162\u884c\u4ea4\u901a\u8fdb\u884c\u5a31\u4e50\u4f11\u95f2\u7b49\u6d3b\u52a8\u7684\u51fa\u884c\u9891\u7387\uff0c \u589e\u52a0\u516c\u5171\u4ea4\u901a\u7684\u4f7f\u7528\u65f6\u95f4\uff0c\u4f46\u8ddd\u79bb\u662f\u4e00\u4e2a\u8f83\u4e3a\u91cd\u8981\u7684\u56e0\u7d20 \u7528\u5730\u6df7\u5408\u4f7f\u7528\u53ef\u4ee5\u63d0\u9ad8\u6162\u884c\u4ea4\u901a\u7684\u5206\u62c5\u7387 \u5b9e\u8bc1\u7814\u7a76\u8bc1\u660e\u4e86\u7528\u5730\u6df7\u5408\u4f7f\u7528\u5bf9\u4e8e\u6162\u884c\u4ea4\u901a\u51fa\u884c\u5177\u6709\u79ef\u6781\u4f5c\u7528  \u5bf9\u5c45\u6c11\u5065\u5eb7\u6d3b\u52a8\u7684\u4fc3\u8fdb  \u7528\u5730\u6df7\u5408\u4f7f\u7528\u5bf9\u4e8e\u4f53\u80b2\u6d3b\u52a8\u6709\u79ef\u6781\u4f5c\u7528\uff0c \u53ef\u4ee5\u589e\u52a0\u6d3b\u52a8\u65f6\u95f4\u548c\u8fd0\u52a8\u91cf \u51cf\u8f7b\u7a7a\u6c14\u6c61\u67d3\uff0c \u53ef\u4ee5\u964d\u4f4e\u6c2e\u6c27\u5316\u7269\u3001 \u6325\u53d1\u6027\u6709\u673a\u5316\u5408\u7269\u7b49\u6709\u5bb3\u6c14\u4f53\u7684\u6392\u653e \u7b49\u7b49  \u5bf9\u57ce\u5e02\u5b89\u5168\u6027\u7684\u63d0\u9ad8  \u7528\u5730\u6df7\u5408\u4f7f\u7528\u4e0e\u57ce\u5e02\u5b89\u5168\u5173\u7cfb \u7f3a\u4e4f\u9ad8\u8d28\u91cf\u7684\u5b9e\u8bc1\u7814\u7a76  \u5176\u4ed6\u6548\u679c  \u5173\u4e8e\u57ce\u5e02\u6d3b\u529b  \u5c06\u5546\u5e97\u3001 \u9910\u996e\u7b49\u8bbe\u65bd\u4e0e\u5c45\u4f4f\u3001 \u5de5\u4f5c\u7b49\u4ea7\u751f\u5927\u91cf\u4eba\u6d41\u7684\u4e3b\u8981\u7528\u5730\u529f\u80fd\u6df7\u5408\uff0c \u53ef\u4ee5\u8425\u9020\u4e0d\u540c\u65f6\u95f4\u6bb5\u5177\u6709\u7a33\u5b9a\u4eba\u6d41\u7684\u793e\u533a \u7531\u4e8e\u6570\u636e\u6240\u9650\uff0c \u9ad8\u5bc6\u5ea6\u548c\u6df7\u5408\u529f\u80fd\u5bf9\u57ce\u5e02\u6d3b\u529b\u7684\u5f71\u54cd\u5f88\u96be\u88ab\u5b9e\u8bc1   \u5173\u4e8e\u7ecf\u6d4e\u6d3b\u52a8  \u4eba\u4eec\u613f\u610f\u4e3a\u7528\u5730\u6df7\u5408\u4f7f\u7528\u533a\u57df\u7684\u4f4f\u5b85\u8d1f\u62c5\u66f4\u591a\u7684\u8d39\u7528\uff0c \u4e0e\u516c\u56ed\u548c\u5546\u4e1a\u7528\u5730\u529f\u80fd\u6df7\u5408\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u623f\u4ef7   ",
        "description": "",
        "id": 45,
        "section": "posts",
        "tags": [
            "\u57ce\u5e02\u529f\u80fd\u533a",
            "\u6df7\u5408\u571f\u5730\u5229\u7528",
            "\u8bba\u6587\u9605\u8bfb",
            "\u9605\u8bfb\u7b14\u8bb0"
        ],
        "title": "Papers Reading: Urban Mixed Land Use",
        "uri": "/2020/12/18/128/"
    },
    {
        "content": "  \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"Late Night Melancholy\",\rartist: \"Rude Boy\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/Late%20Night%20Melancholy-bf9546-Ag.mp3\",\rcover: \"https://p2.music.126.net/FVJFW5FG7B2f-JtHH8BNVQ==/109951165685423491.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%BA%AF%E9%9F%B3%E4%B9%90-%E6%97%A0%E6%AD%8C%E8%AF%8D-3ca159-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.12.1 \u5165\u624bsteam\u7b2c\u4e00\u6b3e\u6e38\u620f\u2014\u2014\u57ce\u5e02\u5929\u9645\u7ebf\u3002\u6253\u6298\u540e\u8fd8\u662f\u86ee\u4fbf\u5b9c 2020.12.2 \u4ece\u73b0\u5728\u5f00\u59cb\u5efa\u9020\u4e00\u4e2a\u793e\u755c\u517b\u6b96\u5708 2020.12.3 \u8bba\u6587\u89c1\u520a\u5566\uff1b\u4e00\u98df\u5802\u4e09\u697c\u7684\u70e7\u70e4\u86ee\u597d\u5403\u7684\u5440 2020.12.4 Be the type of person you want to meet. 2020.12.5 \u4e3a\u4ec0\u4e48\u7231\u60c5\u91cc\u9762\uff0c\u603b\u8981\u6709\u4eba\u53d7\u4f24\u3001 2020.12.6 \u9047\u5230\u8d35\u4eba\u5148\u7acb\u4e1a\uff0c\u9047\u5230\u826f\u4eba\u5148\u6210\u5bb6\uff0c\u9047\u5230\u5bcc\u5a46\u6210\u5bb6\u7acb\u4e1a? 2020.12.7 \u4e2d\u767e\u7f57\u68ee\u7684\u867e\u4ec1\u5473\u996d\u56e2\u5f88\u597d\u5403\u5440\u3001\u6211\u90fd\u60f3\u81ea\u5df1\u505a\u5c0f\u996d\u56e2;\r\u548c\u5f26\u56fe\u7ed8\u5236-Chord diagram with Bokeh;\u770b\u522b\u4eba\u8bba\u6587\u91cc\u9762\u7684\u65b9\u6cd5\u7684\u6700\u5927\u611f\u89e6\u662f\uff1a\u6211\u53bb\uff0c\u8fd8\u53ef\u4ee5\u8fd9\u6837\u73a9\uff1f 2020.12.8 \u6bcf\u6b21\u7a7f\u8fd9\u6761\u706f\u82af\u7ed2\u7684\u88e4\u5b50\uff0c\u4eff\u4f5b\u90fd\u5728\u63d0\u9192\u6211\u8170\u771f\u7684\u5f88\u5bbd;5km+1\ud83c\udfc3 2020.12.9 \u82b1\u56ed\u7684\u7eaf\u725b\u5976\u597d\u559d\u5440 2020.12.10 \u770b\u5230Reviewer\u7684\u610f\u89c1\u4e4b\u540e\u5c31\u4e5f\u5f88\u5e73\u9759\u4e86\u554a\u3002 2020.12.11 \u7389\u7f6e\u6d69\u4e8c\u201c\u4e13\u8f91\u201d 2020.12.12 Recording. 2020.12.13 \u5996\u98ce\u4e0e\u521d\u96ea\u76f8\u9047 2020.12.14 \u6765\u5230\u5317\u4eac\uff0c\u6ca1\u6709\u60f3\u8c61\u4e2d\u51b7\u3001\u4ecd\u662f\u90a3\u4e48\u964c\u751f\u3002 2020.12.15 \u5306\u5306\u4ece\u5317\u4eac\u56de\u5230\u6b66\u6c49\uff0c\u660e\u660e\u53ef\u4ee5\u591a\u7559\u4e00\u5929\u7b2c\u4e8c\u5929\u518d\u8d70\uff0c\u800c\u4e14\u665a\u4e0a\u56de\u5b66\u6821\u4e5f\u4e0d\u65b9\u9762\uff0c\u4f46\u662f\u4ecd\u8981\u79bb\u5f00\u3002\u4e0d\u6653\u5f97\u4e3a\u4f55\u4ee5\u524d\u90a3\u4e48\u559c\u6b22\u51fa\u5dee\uff0c\u559c\u6b22\u5404\u5904\u8dd1\u7684\u81ea\u5df1\uff0c\u73b0\u5728\u5982\u6b64\u4e0d\u613f\u7559\u5728\u8fd9\u91cc\u3002 2020.12.16 \u4e0d\u53ea\u662f\u4e0a\u706b\uff0c\u8fd8\u6709\u5404\u79cd\u706b\u6c14\u3001easy easy\uff01\ud83d\ude29 2020.12.17 \u4e70\u4e86\u4e00\u4e2aucloud\u670d\u52a1\u5668\uff0c\u4e09\u5e74\u7684\uff0c\u914d\u4e86\u4e00\u4e2a\u57df\u540d\uff0c\u6211\u53c8\u8fc1\u5230wordpress\u5566\u3002\u6b63\u5728\u505a\u8fc1\u79fb\u5de5\u4f5c\u3001 2020.12.18 \u55ef \u4e00\u70b9\u90fd\u4e0d\u7d27\u5f20 \u5c31\u8fde\u540d\u5b57\u90fd\u6ca1\u4ecb\u7ecd 2020.12.19 \u6ca1\u90a3\u4e48\u5728\u4e4e \u662f\u4e0d\u7d27\u5f20\u7684\u6700\u597d\u529e\u6cd5\u5427 2020.12.20 \u5c82\u66f0\u65e0\u8863\uff1f\u4e0e\u5b50\u540c\u888d\u3002\u738b\u4e8e\u5174\u5e08\uff0c\u4fee\u6211\u6208\u77db\u3002\u4e0e\u5b50\u540c\u4ec7\u3002- \u300a\u5927\u79e6\u8d4b\u300b\uff1bMark\u4e00\u4e0b\uff0c\u53ef\u89c6\u5316\u65b9\u6848\u53ca\u5b9e\u73b0\uff0c\u53ef\u4ee5\u653e\u5728\u8bba\u6587\u91cc\u9762(https://github.com/CNFeffery/FefferyViz)\u3002 2020.12.21 \u4eba\u4eec\u603b\u662f\u5e0c\u671b\u5bfb\u6c42\u4ed6\u4eba\u7684\u7406\u89e3\uff0c\u5374\u4ece\u6765\u4e0d\u4f1a\u4e3b\u52a8\u6362\u4f4d\u601d\u8003\uff0c\u7406\u89e3\u4ed6\u4eba\u3001\u4e0d\u5bf9\uff0c\u4e0d\u662f\u5176\u4ed6\u4eba\uff0c\u662f\u4f60\u3002 2020.12.22 \u5fc3\u5b89\u7406\u5f97 2020.12.23 \u5fcd\u522b\u79bb \u4e0d\u5fcd\u5374\u53c8\u522b\u79bb\uff1bceus\u5927\u4fee\u63d0\u4ea4\u3002 2020.12.24 PrettyErrors =&gt; \u4f7fPython\u62a5\u9519\u4fe1\u606f\u66f4\u52a0\u53ef\u8bfb\uff1b\u6700\u7ec8\u535a\u5ba2\u65b9\u6848\uff1aWordPress(Theme: Argon) + Ucloud\u4e91\u670d\u52a1\u5668 + namesilo\u8d2d\u4e70\u57df\u540d\uff08\u56fd\u5185\u57df\u540d\u8981\u5907\u6848\uff0c\u53ef\u60dc\u4e86\u6211\u82b1\u4e86\u5c06\u8fd1100\u5757\u4e70\u7684\u4e24\u4e2a\u57df\u540d\uff09 2020.12.25 \u60f3\u5f00\u542f\u4e2awsl2\u652f\u6301Docker\u7684\u6700\u65b0\u7248\u672c\uff0c\u611f\u6168Window 10\u7684\u8bbe\u7f6e\u771f\u662f\u201csao\u201d\uff0c\u4e00\u73af\u6263\u7740\u4e00\u73af\u3002 2020.12.26 \u56e2\u961f\u5de5\u4f5c\u603b\u7ed3 2020.12.27 \u897f\u88c5\u9769\u9886  ",
        "description": "",
        "id": 47,
        "section": "posts",
        "tags": null,
        "title": "2020-12",
        "uri": "/posts/journals/2020-12-01-2020-12/"
    },
    {
        "content": " \u539f\u6587\u6765\u6e90\uff1a\r\u76f8\u673a\u64cd\u4f5c\u5165\u95e8\u6307\u5357(\u7d22\u5c3c\u7bc7)\u3002\u672c\u6587\u4e3a\u9605\u8bfb\u539f\u6587\u6307\u5357\u672d\u8bb0\u3002\n \u76ee\u5f55 \u6444\u5f71\u57fa\u7840\u77e5\u8bc6 \u6444\u5f71\u7684\u6838\u5fc3\u2014\u66dd\u5149  \u66dd\u5149\uff1a\u901a\u4fd7\u7684\u7406\u89e3\u4e3a\uff1a\u201c\u76f8\u673a\u6bcf\u4e00\u6b21\u7167\u7247\u7684\u62cd\u6444\u5c31\u662f\u4e00\u6b21\u8ba9\u5149\u7ebf\u6d8c\u5165\u76f8\u673a\uff0c\u5e76\u8fdb\u884c\u8bb0\u5f55\u7684\u8fc7\u7a0b\u201d \u4e09\u4e2a\u8981\u7d20\uff1a\u5149\u5708\u3001\u5feb\u95e8\u901f\u5ea6\u3001\u611f\u5149\u503cISO \u57fa\u7840\u6a21\u578b \u5149\u5708  \u76d2\u5b50\u4e0a\u7684\u5b54\u5f84\u5927\u5c0f\u53ef\u4ee5\u6539\u53d8\uff0c\u800c\u5149\u5708\u5c31\u662f\u5f00\u5b54\u5b54\u5f84\u7684\u63a7\u5236 \u5b54\u5f84\u8d8a\u5927\uff0c\u8fdb\u5149\u91cf\u8d8a\u5927\uff0c\u753b\u9762\u8d8a\u4eae\uff1a\u5b54\u5f84\u8d8a\u5c0f\uff0c\u8fdb\u5149\u91cf\u8d8a\u5c0f\uff0c\u753b\u9762\u8d8a\u6697 \u5bf9\u5e94\u5230\u6570\u503c\u4e0a\u5c31\u662f1.2 1.4 1.8 2.8 5.6 \u751a\u81f3\u523064\u7b49\uff0c\u6570\u503c\u8d8a\u5927\u610f\u5473\u7740\u5149\u5708\u8d8a\u5c0f \u5149\u5708\u5bf9\u4e8e\u753b\u9762\u9664\u4e86\u660e\u6697\u7684\u5f71\u54cd\uff0c\u8fd8\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u4f5c\u7528\uff1a\u63a7\u5236\u666f\u6df1\u3002\u4e5f\u5c31\u662f\u6211\u4eec\u5e38\u89c1\u7684\u865a\u5316\u7a0b\u5ea6 \u8be6\u89e3\u53c2\u8003\uff1a\r\u4e86\u89e3\u5149\u5708 \u8fd9\u4e00\u7bc7\u5c31\u591f\u4e86\n   \u5feb\u95e8\u901f\u5ea6  \u76d2\u5b50\u4e2d\u7eb8\u7247\u8fd9\u4e2a\u5c0f\u5b54\u672c\u6765\u662f\u88ab\u76d6\u4f4f\u7684\uff0c\u4f46\u662f\u5f53\u4f60\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u5c0f\u5b54\u524d\u9762\u7684\u76d6\u5b50\u662f\u4f1a\u6253\u5f00\u3002\u800c\uff0c\u6253\u5f00\u7684\u65f6\u95f4\u957f\u77ed\u4e5f\u5c31\u662f\u5feb\u95e8\u901f\u5ea6 \u6253\u5f00\u7684\u65f6\u95f4\u8d8a\u4e45\uff0c\u8fdb\u6765\u7684\u5149\u5c31\u8d8a\u591a\uff0c\u753b\u9762\u5c31\u4f1a\u8d8a\u4eae\u3002\u6253\u5f00\u7684\u65f6\u95f4\u8d8a\u77ed\uff0c\u8fdb\u6765\u7684\u5149\u8d8a\u5c11\uff0c\u753b\u9762\u8d8a\u6697\u3002 \u5feb\u95e8\u7684\u901f\u5ea6\u8303\u56f4\u4e00\u822c\u90fd\u662f\u4ece1/8000\u523030\u79d2 \u9664\u4e86\u753b\u9762\u7684\u660e\u6697\uff0c\u5feb\u95e8\u901f\u5ea6\u8fd8\u5bf9\u753b\u9762\u6709\u53e6\u4e00\u4e2a\u5f71\u54cd\uff1a\u5feb\u95e8\u901f\u5ea6\u8d8a\u5feb\u610f\u5473\u7740\u80fd\u591f\u51dd\u56fa\u77ed\u6682\u7684\u77ac\u95f4\uff0c\u5feb\u95e8\u901f\u5ea6\u8d8a\u6162\u610f\u5473\u7740\u4f1a\u8bb0\u5f55\u4e0b\u7269\u4f53\u8fd0\u52a8\u7684\u8f68\u8ff9   \u611f\u5149\u503cISO  \u63cf\u8ff0\u76d2\u5b50\u91cc\u90a3\u4e2a\u8bb0\u5f55\u5149\u7684\u795e\u5947\u7eb8\u7247\u5bf9\u5149\u7684\u654f\u611f\u7a0b\u5ea6 \u91cf\u5316\u5230\u6570\u503c\uff0c\u4e00\u822c\u90fd\u662f100\uff0c200\uff0c400\uff0c\u751a\u81f3\u52306400\u6216\u66f4\u9ad8\u3002 \u6570\u503c\u8d8a\u9ad8\uff0c\u4e5f\u5c31\u610f\u5473\u7740\u5bf9\u5149\u8d8a\u654f\u611f\uff0c\u53cd\u6620\u5230\u8fd9\u4e00\u5f20\u7167\u7247\u5c31\u662f\u5176\u4ed6\u53c2\u6570\u76f8\u540c\u7684\u65f6\u5019\uff0c\u611f\u5149\u503c\u8d8a\u9ad8\u753b\u9762\u8d8a\u4eae\u3002 \u611f\u5149\u503c\u8d8a\u9ad8\u753b\u9762\u7684\u8d28\u91cf\u4f1a\u4e0b\u964d\uff0c\u566a\u70b9\u589e\u591a\u6240\u4ee5\uff0c\u5728\u5149\u7ebf\u5145\u8db3\u60c5\u51b5\u4e0b\u611f\u5149\u503c\u8d8a\u4f4e\u8d8a\u597d   \u603b\u8ff0\uff1a\u9664\u4e86\u63a7\u5236\u4eae\u5ea6\uff0c\u8fd9\u4e9b\u53c2\u6570\u8fd8\u6709\u7740\u4e00\u4e2a\u5bf9\u753b\u9762\u5185\u5bb9\u4ea7\u751f\u91cd\u8981\u5f71\u54cd\u7684\u56e0\u7d20\uff0c\u4f8b\u5982\u5149\u5708\u7684\u666f\u6df1\uff0c\u5feb\u95e8\u7684\u753b\u9762\u6355\u6349\u77ac\u95f4\u957f\u77ed\u7b49\u3002\u6240\u4ee5\uff0c\u4e0d\u80fd\u4e00\u5473\u7684\u63d0\u9ad8\u67d0\u4e00\u4e2a\u6570\u503c\uff0c\u8981\u6309\u7167\u4e0d\u540c\u7684\u62cd\u6444\u4e3b\u9898\uff0c\u8fdb\u884c\u4e0d\u540c\u7684\u8c03\u8282\u548c\u76f8\u4e92\u5236\u7ea6\u3002 \u591c\u665a\u62cd\u7167\uff0c\u7167\u7247\u5f88\u5bb9\u6613\u6a21\u7cca\uff0c\u800c\u4e14\u753b\u8d28\u5f88\u5dee\uff1a\u591c\u665a\u7531\u4e8e\u5149\u7ebf\u4e0d\u8db3\uff0c\u76f8\u673a\u4e3a\u4e86\u83b7\u5f97\u66f4\u591a\u7684\u5149\u7ebf\uff0c\u8981\u8ba9\u5feb\u95e8\u901f\u5ea6\u66f4\u957f\uff0c\u8fd9\u6837\u4f60\u53ea\u8981\u6709\u4e00\u5b9a\u7684\u6643\u52a8\uff0c\u753b\u9762\u5c31\u4f1a\u6a21\u7cca\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u76f8\u673a\u8fd8\u8981\u63d0\u9ad8ISO\u503c\uff0c\u63d0\u9ad8\u5bf9\u5149\u7684\u654f\u611f\u7a0b\u5ea6\uff0c\u4e8e\u662f\u5c31\u4f1a\u51fa\u73b0\u566a\u70b9\u5bfc\u81f4\u753b\u8d28\u4e0b\u964d\u3002 \u5b89\u5168\u5feb\u95e8  \u76f8\u673a\u7684\u66dd\u5149\u2014\u6d4b\u5149  \u5f15\u5b50  \u5728\u4ee5\u524d\uff0c\u76f8\u673a\u6700\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u4e00\u5207\u90fd\u662f\u624b\u52a8\u7684\u3002\u5f53\u6211\u4eec\u770b\u5230\u4e00\u4e2a\u573a\u666f\u7684\u65f6\u5019\uff0c\u6444\u5f71\u5e08\u9700\u8981\u901a\u8fc7\u5404\u79cd\u65b9\u5f0f\uff0c\u5224\u65ad\u51fa\u753b\u9762\u6240\u9700\u8981\u7684\u66dd\u5149\u91cf\uff0c\u7136\u540e\u8bbe\u7f6e\u597d\u53c2\u6570\u3002 \u6570\u7801\u65f6\u4ee3\u6700\u5927\u7684\u4fbf\u5229\u5c31\u662f\u76f8\u673a\u53ef\u4ee5\u5f88\u5feb\u7684\u8ba1\u7b97\u51fa\u4e00\u4e2a\u5f53\u524d\u753b\u9762\u6240\u9700\u8981\u7684\u66dd\u5149\u91cf\uff0c\u4f46\u662f\uff0c\u8fd9\u66dd\u5149\u91cf\u91cc\u4e09\u4e2a\u6570\u503c\u7684\u5173\u7cfb\u5982\u4f55\u662f\u9700\u8981\u6211\u4eec\u81ea\u5df1\u8fdb\u884c\u8c03\u8282\u7684 \u95ee\u9898\uff1a\u76f8\u673a\u662f\u5982\u4f55\u8fdb\u884c\u6d4b\u5149\u7684\uff1f\u4e16\u95f4\u4e07\u7269\u4eae\u5ea6\u4e0d\u540c\uff0c\u4ed6\u662f\u600e\u4e48\u9009\u62e9\u53c2\u8003\u7684\uff1f \u6807\u6746/\u53c2\u8003\u503c  18%\u7070 \u76f8\u673a\u4f1a\u6309\u7167\u753b\u9762\u4e2d\u6240\u6709\u7269\u4f53\u53cd\u5c04\u7684\u5149\u7ebf\uff0c\u8ba1\u7b97\u4e00\u4e2a\u52a0\u6743\u5e73\u5747\u503c \u52a0\u6743\u8ba1\u7b97\u65b9\u5f0f \u6d4b\u5149\u70b9 \u5e38\u89c1\u95ee\u9898  \u62cd\u6444\u5927\u9006\u5149\u7684\u65f6\u5019\uff0c\u4f8b\u5982\u5915\u9633\uff0c\u4eba\u7269\u5f80\u5f80\u90fd\u662f\u66dd\u5149\u4e0d\u8db3\u7684\u662f\u4e3a\u4ec0\u4e48  \u7531\u4e8e\u5915\u9633\u592a\u4eae\u4e86\uff0c\u5bfc\u81f4\u5b83\u5728\u521a\u624d\u7684\u8ba1\u7b97\u6743\u91cd\u7b97\u5f0f\u4e2d\u5360\u636e\u4e86\u4e0a\u98ce\uff0c\u4e8e\u662f\u76f8\u673a\u5c31\u6309\u7167\u4ed6\u6765\u8fdb\u884c\u66dd\u5149\u3002\u56e0\u6b64\uff0c\u4eba\u7269\u5c31\u4e0d\u8db3\u4e86\u3002 \u90a3\u5982\u4f55\u89e3\u51b3\u5462\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u964d\u4f4e\u5915\u9633\u7684\u6743\u91cd\uff0c\u4f7f\u7528\u70b9\u6d4b\u5149\uff0c\u8ba9\u6d4b\u5149\u70b9\uff08\u4e00\u822c\u662f\u753b\u9762\u4e2d\u5fc3\uff09\u5bf9\u5728\u4eba\u7269\u8eab\u4e0a\uff0c\u589e\u52a0\u4eba\u7269\u5728\u6d4b\u5149\u4e2d\u7684\u6743\u91cd\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u8ba9\u4eba\u7269\u4eae\u8d77\u6765\u3002   \u4e3a\u4ec0\u4e48\u5728\u96ea\u5730\u91cc\uff0c\u6211\u4eec\u62cd\u6444\u4eba\u7269\u7167\u7247\u7684\u65f6\u5019\uff0c\u4eba\u7269\u80a4\u8272\u5f80\u5f80\u6bd4\u8f83\u7070\u6697  \u753b\u9762\u4e2d\u5927\u90e8\u5206\u96ea\uff0c\u800c\u96ea\u662f\u6700\u4eae\u7684\uff0c\u6240\u4ee5\u4eae\u5360\u636e\u4e86\u4e3b\u5bfc\uff0c\u6700\u7ec8\u66dd\u5149\u753b\u9762\u4e5f\u5c31\u53d8\u5f97\u7070\u6697\u3002   \u66dd\u5149\u8865\u507f        \u76f8\u673a\u7684\u5bf9\u7126  \u666f\u6df1  \u5047\u8bbe\u6211\u4eec\u7684\u7167\u7247\u662f\u4e8c\u7ef4\u5750\u6807\u7684XY\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u770b\u5230\u4e00\u5f20\u753b\u9762\u4e2d\u6709\u6e05\u6670\uff0c\u6709\u6a21\u7cca\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u89c9\u5f97\uff0c\u6e05\u6670\u548c\u6a21\u7cca\u662f\u5728XY\u4e2d\u8fdb\u884c\u9009\u62e9\u3002\u4f46\u5176\u5b9e\uff0c\u7167\u7247\u6e05\u6670\u548c\u6a21\u7cca\u7684\u8303\u56f4\u662f\u5728Z\u8f74\u4e0a\u8fdb\u884c\u9009\u62e9 \u666f\u6df1\u662f\u4e00\u4e2a\u6e05\u6670\u7684\u8303\u56f4\uff0c\u8fd9\u4e2a\u6e05\u6670\u8303\u56f4\u8d8a\u77ed\uff0c\u6211\u4eec\u5c31\u53eb\u6d45\u666f\u6df1\uff0c\u90a3\u4e48\u80cc\u666f\u7684\u6a21\u7cca\uff08\u4e5f\u5c31\u662f\u865a\u5316\uff09\u8d8a\u660e\u663e\u3002\u90a3\u4e48\u8fd9\u6837\u56de\u7b54\u4e86\uff0c\u4e3a\u4ec0\u4e48\u5927\u5149\u5708\u62cd\u4eba\u50cf\uff0c\u4f1a\u6709\u80cc\u666f\u865a\u5316\uff1f\u56e0\u4e3a\uff0c\u5149\u5708\u8d8a\u5927\uff0c\u666f\u6df1\u4e5f\u5c31\u8d8a\u6d45\uff0c\u4e5f\u5c31\u662f\u8d8a\u5bb9\u6613\u865a\u5316\u3002   \u5f71\u54cd\u666f\u6df1\u8303\u56f4\uff08\u5373L\u7684\u957f\u77ed\uff09\u6709\u54ea\u4e9b\u56e0\u7d20\u5462  \u5149\u5708\uff0c\u5149\u5708\u8d8a\u5927\uff0c\u666f\u6df1\u8d8a\u5c0f\uff1b\u5149\u5708\u8d8a\u5c0f\uff0c\u666f\u6df1\u8d8a\u5927\u3002 \u7126\u8ddd\uff0c\u7126\u8ddd\u8d8a\u957f\uff0c\u666f\u6df1\u8d8a\u5c0f\uff1b\u7126\u8ddd\u8d8a\u77ed\uff0c\u666f\u6df1\u8d8a\u5927\u3002\u8fd9\u4e5f\u4e3a\u662f\u4e3a\u4ec0\u4e4885mm\uff0c70-200mm\u7b49\u7126\u8ddd\u9002\u5408\u4eba\u50cf\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u865a\u5316\u597d\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\uff0c\u624b\u673a\u4e0d\u80fd\u865a\u5316\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u624b\u673a\u7684\u7b49\u6548\u7126\u8ddd\u662f20mm\u4ee5\u4e0b\u3002\uff08\u53cc\u955c\u5934\u7684\u865a\u5316\u662f\u7b97\u6cd5\uff0c\u4e0d\u662f\u5149\u5b66\uff09 \u5bf9\u7126\u8ddd\u79bb\uff0c\u5728\u5176\u4ed6\u6761\u4ef6\u76f8\u540c\u60c5\u51b5\u4e0b\uff0c\u5bf9\u7126\u8d8a\u8fd1\uff0c\u666f\u6df1\u8d8a\u5c0f\u3002 \u76f8\u673a\u753b\u5e45\uff0c\u753b\u5e45\u8d8a\u5927\uff0c\u666f\u6df1\u8d8a\u5c0f\u3002\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\uff0c\u5168\u753b\u5e45\u597d\u4e8e\u6b8b\u5e45\u7684\u4e00\u4e2a\u539f\u56e0\u3002 \u5982\u4f55\u80fd\u591f\u5728\u62cd\u6444\u4eba\u50cf\u7684\u65f6\u5019\u66f4\u597d\u7684\u865a\u5316\uff1f=&gt; \u4f7f\u7528\u5c3d\u53ef\u80fd\u7684\u5927\u5149\u5708\uff0c\u4f7f\u7528\u5c3d\u53ef\u80fd\u957f\u7684\u7126\u8ddd\uff0c\u5c3d\u53ef\u80fd\u7684\u8d70\u8fd1\u6a21\u7279\uff0c\u4ee5\u53ca\u4f7f\u7528\u5168\u753b\u5e45\u76f8\u673a   \u5982\u4f55\u63a7\u5236\u8fd9\u4e2a\u6e05\u6670\u8303\u56f4\uff1f\u4e5f\u5c31\u662f\uff0c\u5982\u679c\u8fdb\u884c\u6e05\u6670\u548c\u6a21\u7cca\u7684\u8c03\u6574\uff1f  \u76f8\u673a\u5708\u5b9a\u5bf9\u7126\u533a\u57df\u7684\u65b9\u5f0f \u6211\u4eec\u53ef\u4ee5\u5708\u5b9a\u4e00\u4e2a\u8303\u56f4\uff0c\u8fd9\u4e2a\u8303\u56f4\u6709\u9762\u79ef\u7684\u5927\u5c0f\uff0c\u4f8b\u5982\u662f\u4e00\u4e2a\u70b9\uff0c\u8fd8\u662f\u4e00\u4e2a\u533a\u57df\u8fd8\u662f\u5168\u5c40\uff08\u5e7f\u57df\uff09 \u8fd9\u4e9b\u533a\u57df\u53ef\u4ee5\u8fdb\u884c\u79fb\u52a8\uff0c\u4f8b\u5982\u70b9\u53ef\u4ee5\u5728\u753b\u9762\u4e2d\u95f4\uff0c\u4e5f\u53ef\u4ee5\u5728\u753b\u9762\u8fb9\u7f18\u3002\u533a\u57df\u53ef\u4ee5\u5728\u753b\u9762\u4e2d\u95f4\uff0c\u4e5f\u53ef\u4ee5\u5728\u753b\u9762\u8fb9\u7f18\u3002 \u5bf9\u4e8e\u6240\u6709\u76f8\u673a\uff0c\u5e76\u4e0d\u662f\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u5bf9\u7126\u7684\u3002\u8fd9\u4e5f\u662f\u5728\u76f8\u673a\u8d2d\u4e70\u4e2d\uff0c\u5bf9\u7126\u70b9\u53c2\u6570\u7684\u610f\u4e49\u3002 \u5e76\u4e0d\u662f\u4f60\u9009\u62e9\u7684\u67d0\u4e00\u4e2a\u533a\u57df\uff0c\u8fd9\u4e2a\u533a\u57df\u662f\u6e05\u6670\u7684\uff0c\u533a\u57df\u5916\u662f\u6a21\u7cca\u7684\u3002\u800c\u53ea\u662f\u76f8\u673a\u5728\u533a\u57df\u5185\u8fdb\u884c\u9009\u62e9\u4e3b\u4f53\uff0c\u53ea\u8981\u662f\u4f60\u9009\u62e9\u533a\u57df\u91cc\u4e3b\u4f53\u7126\u5e73\u9762\u4e0a\u7684\uff0c\u90fd\u4f1a\u6e05\u6670\u7684\u3002   \u5bf9\u7126\u65b9\u5f0f\u4e3b\u8981\u662f\u9488\u5bf9\u52a8\u6001\uff0c\u9759\u6001\uff0c\u4ee5\u53ca\u6781\u9650\u73af\u5883\u4e0b\u7684\u624b\u52a8\u5bf9\u7126  \u9488\u5bf9\u521d\u5b66\u8005\uff0c\u6211\u76f4\u63a5\u7ed9\u51fa\u4f7f\u7528\u5efa\u8bae\u3002\u5355\u70b9\u81ea\u52a8\u5bf9\u7126\uff0c\u4f8b\u5982\u62cd\u6444\u201c\u542c\u8bdd\u201d\u7684\u4eba\uff0c\u8fd9\u4e2a\u5f88\u91cd\u8981\u54c8\uff0c\u8fd9\u4e2a\u542c\u8bdd\u662f\u53ef\u4ee5\u542c\u6444\u5f71\u5e08\u6307\u6325\uff0c\u4fdd\u6301\u4e0d\u52a8\u7684\u3002\u6211\u4eec\u4f7f\u7528\u201cAF-S\u201d\uff0c\u4e5f\u5c31\u81ea\u52a8\u5355\u70b9\u9501\u5b9a\u5bf9\u7126\uff0c\u9009\u5b9a\u4e00\u4e2a\u5bf9\u7126\u540e\uff0c\u79fb\u52a8\u76f8\u673a\u5bf9\u7126\u70b9\u4e0d\u66f4\u6539\u3002 \u5148\u5bf9\u7126\uff0c\u518d\u6784\u56fe\uff1a\u5177\u4f53\u64cd\u4f5c\u4e3a\uff0c\u4f7f\u7528\u5355\u70b9\u4e2d\u95f4\u5bf9\u7126\uff0c\u534a\u6309\u5feb\u95e8\u9501\u5b9a\u5bf9\u7126\uff0c\u518d\u79fb\u52a8\u76f8\u673a\uff08\u5e73\u884c\u4e8e\u7126\u5e73\u9762\uff0c\u4e5f\u5c31\u662f\u5de6\u53f3\u79fb\u52a8\uff0c\u4e0d\u8981\u524d\u540e\u79fb\u52a8\uff09\u8fdb\u884c\u6784\u56fe\uff0c\u518d\u6309\u4e0b\u5feb\u95e8\u8fdb\u884c\u62cd\u6444\u3002 \u9488\u5bf9\u8fd0\u52a8\u7269\u4f53\uff0c\u4ee5\u53ca\u201c\u4e0d\u542c\u8bdd\u201d\u7684\u4eba\uff0c\u6216\u8005\u4f60\u4e0d\u80fd\u6307\u6325\u7684\u4eba\uff08\u6d3b\u52a8\uff0c\u5a5a\u793c\uff09\uff0c\u5efa\u8bae\u4f7f\u7528\u8fde\u7eed\u81ea\u52a8\u5bf9\u7126\uff0c\u4e5f\u5c31\u662fAF-C\u3002\u8fd9\u4e2a\u5bf9\u7126\u65b9\u5f0f\uff0c\u662f\u8bf4\u76f8\u673a\u4f1a\u8ddf\u968f\u753b\u9762\u4e2d\u79fb\u52a8\u7684\u4e3b\u4f53\u8fdb\u884c\u79fb\u52a8\uff0c\u7136\u540e\u8fdb\u884c\u62cd\u6444\u3002 \u90a3\u4e48\u9488\u5bf9\u4e00\u4e9b\u6781\u9650\u73af\u5883\uff0c\u4f8b\u5982\u5bf9\u7126\u7cbe\u5ea6\u8981\u6c42\u6781\u9ad8\uff0c\u4ee5\u53ca\u5f31\u5149\u73af\u5883\uff0c\u6211\u4eec\u5c31\u9700\u8981\u624b\u52a8\u5bf9\u7126\u3002\u624b\u52a8\u5bf9\u7126\u7684\u65b9\u5f0f\u662f\uff0c\u9996\u5148\u9009\u62e9\u5230\u76f8\u673a\u7684\u624b\u52a8\u5bf9\u7126\uff0c\u7136\u540e\u9009\u62e9\u4f60\u60f3\u8981\u7684\u5bf9\u7126\u533a\u57df\uff0c\u518d\u901a\u8fc7\u663e\u793a\u5c4f\u653e\u5927\u753b\u9762\uff08\u7d22\u5c3c\u76f8\u673a\u53ef\u4ee5\u8bbe\u7f6e\u81ea\u52a8\u653e\u5927\uff09\uff0c\u7136\u540e\u8f6c\u52a8\u955c\u5934\u8c03\u7126\u73af\uff0c\u76f4\u5230\u6e05\u6670\u3002\u5982\u679c\u662f\uff0c\u62cd\u6444\u6781\u9650\u98ce\u666f\uff0c\u5982\u591c\u666f\u661f\u7a7a\uff0c\u53ea\u8981\u62e7\u5230\u65e0\u7a77\u8fdc\u5904\uff0c\u7a0d\u5fae\u56de\u4e00\u70b9\uff08\u7ecf\u9a8c\uff09\uff0c\u5373\u53ef\u3002    \u76f8\u673a\u7684\u767d\u5e73\u8861  \u767d\u5e73\u8861\u7684\u8c03\u8282\u5c31\u662f\u8c03\u8282\u753b\u9762\u7684\u51b7\u6696\u8c03\uff0c\u6700\u91cd\u8981\u7684\u5f71\u54cd\u5c31\u662f\u8272\u5f69\u7684\u53d1\u8272\u3002 \u4f60\u53ea\u8981\u77e5\u9053\u4ed6\u4eec\u7684\u9012\u8fdb\u5173\u7cfb\uff0c\u6216\u8005\u62cd\u6444\u65f6\u6328\u4e2a\u5c1d\u8bd5\u627e\u5230\u81ea\u5df1\u559c\u6b22\u7684\u5c31\u597d\u4e86\u3002 \u7d22\u5c3c\u9ec4  \u603b\u7ed3  \u5728\u62cd\u6444\u4e00\u5f20\u7167\u7247\u7684\u65f6\u5019\uff0c\u4eba\u548c\u76f8\u673a\u90fd\u662f\u600e\u4e48\u5de5\u4f5c\u7684\uff1a\u9996\u5148\uff0c\u6444\u5f71\u5e08\u5bf9\u7126\u5728\u7269\u4f53\u4e0a\uff0c\u7136\u540e\u534a\u6309\u5feb\u95e8\uff0c\u8fd9\u4e2a\u65f6\u5019\u76f8\u673a\u8fdb\u884c\u5bf9\u7126\u548c\u6d4b\u5149\uff0c\u5b8c\u6210\u540e\u76f8\u673a\u4f1a\u63d0\u793a\uff0c\u901a\u8fc7\u63d0\u793a\u97f3\u6216\u8005\u753b\u9762\u4e0a\u63d0\u793a\u5149\u70b9\u3002\u63a5\u4e0b\u6765\uff0c\u5e73\u884c\u753b\u9762\u79fb\u52a8\u6784\u56fe\uff08\u5e45\u5ea6\u4e0d\u8981\u5927\uff0c\u4e0d\u8981\u524d\u540e\u79fb\u52a8\uff09\uff0c\u7136\u540e\u4e0d\u8981\u677e\u624b\u5b8c\u5168\u6309\u4e0b\u5feb\u95e8\uff0c\u62cd\u6444\u7ed3\u675f\u3002\u62cd\u6444\u8fc7\u7a0b\u4e2d\uff0c\u5c24\u5176\u662f\u5feb\u95e8\u901f\u5ea6\u4e0d\u5feb\u65f6\u8981\u4fdd\u6301\u7a33\u5b9a\u3002  \u673a\u8eab\u548c\u7535\u6c60 \u7535\u6c60  \u8d2d\u4e70\u4e24\u5757\u7535\u6c60\u3002\u8d2d\u4e70\u53ef\u4ee5\u6709\u4e24\u4e2a\u9009\u62e9\uff0c\u4e00\u4e2a\u662f\u539f\u5382\u7684\u7535\u6c60\uff0c\u53e6\u4e00\u4e2a\u662f\u526f\u5382\uff0c\u4f8b\u5982\u54c1\u80dc\u7b49 \u8d2d\u4e70\u7535\u6c60\u5ea7\u5145\uff0c\u4e00\u65b9\u9762\u63d0\u9ad8\u5145\u7535\u6548\u7387\uff0c\u53e6\u4e00\u65b9\u9762\u76f4\u8fde\u76f8\u673a\u5145\u7535\u6709\u5404\u79cd\u987e\u8651\u3002  \u663e\u793a\u5668\u548c\u53d6\u666f\u5668  \u53d6\u666f\u5668  \u5237\u65b0\u9891\u7387 \u5c48\u5149\u5ea6   \u663e\u793a\u5668  \u673a\u8eabCMOS  \u76f8\u5f53\u4e8e\u4f20\u7edf\u76f8\u673a\u7684\u80f6\u7247 \u5fae\u5355\u76f8\u673a\u5378\u4e0b\u955c\u5934\u65f6\uff0cCMOS\u662f\u76f4\u63a5\u88f8\u9732\u5728\u5916\u9762\u7684\u3002 \u66f4\u6362\u955c\u5934\u8fc7\u7a0b\u4e2d\uff0cCMOS\u5f88\u5bb9\u6613\u8fdb\u7070\uff0c\u4f1a\u5728\u7167\u7247\u4e0a\u7559\u4e0b\u810f\u70b9\u3002 \u66f4\u6362\u955c\u5934\u8981\u8fc5\u901f\uff0c\u66f4\u6362\u8fc7\u7a0b\u4e2d\u8981CMOS\u5411\u4e0b\u3002  \u4e0d\u8981\u5728\u5ba4\u5916\u66f4\u6362\u955c\u5934 \u4e0d\u8981\u5728\u6f6e\u6e7f\u73af\u5883\u66f4\u6362 \u5728\u5ba4\u5185\u5916\u6e29\u5dee\u5927\u7684\u65f6\u5019\uff0c\u5343\u4e07\u4e0d\u8981\u8f7b\u6613\u53d6\u51fa\u76f8\u673a\u3002\u4f8b\u5982\u4ece\u5bd2\u51b7\u5c4b\u5185\uff0c\u5230\u6e29\u6696\u5ba4\u5185\uff0c\u7acb\u523b\u53d6\u51fa\u76f8\u673a\uff0c\u7531\u4e8e\u76f8\u673a\u6e29\u5ea6\u4f4e\uff0c\u7a7a\u6c14\u4e2d\u7684\u6c34\u9047\u51b7\u51dd\u7ed3\uff0c\u4f1a\u5bf9\u955c\u5934\u548c\u673a\u8eab\u4ea7\u751f\u975e\u5e38\u4e25\u91cd\u7684\u635f\u574f\uff01\u4e00\u5b9a\u8981\u5148\u5728\u76f8\u673a\u5305\u5185\u653e\u7f6e\u4e00\u6bb5\u65f6\u95f4\uff0c\u6e29\u5ea6\u7a33\u5b9a\u65f6\u518d\u53d6\u51fa\u3002   \u6e05\u6d01  \u4e0d\u8981\u4f7f\u7528\u4efb\u4f55\u7269\u54c1\u64e6\u62ed\uff0c\u4e00\u5b9a\u4f1a\u9020\u6210\u4e0d\u53ef\u9006\u7684\u635f\u4f24\u3002 \u4f7f\u7528\u6c14\u5439\uff08\u53ef\u901a\u8fc7\u6dd8\u5427\u8d2d\u4e70\u76f8\u673a\u6e05\u6d17\u5957\u88c5\u83b7\u5f97\uff09\uff0c\u8f7b\u8f7b\u7684\u5439\u8d70\u5373\u53ef\u3002\u5343\u4e07\u4e0d\u8981\u7528\u5634\u5439\uff01    \u76f8\u673a\u7684\u955c\u5934  **mm\uff1a\u7126\u8ddd F**\uff1a\u5149\u5708\u662f\u6307\u8fd9\u4e2a\u955c\u5934\u7684\u6700\u5927\u5149\u5708 \u955c\u5934\u5206\u7c7b \u955c\u5934\u5176\u5b9e\u5bf9\u4e8e\u62cd\u6444\u7684\u5185\u5bb9\u6709\u7740\u975e\u5e38\u5173\u952e\u7684\u4f5c\u7528 \u5bf9\u4e8e\u955c\u5934\u800c\u8a00\uff0c\u4ec0\u4e48\u90fd\u80fd\u62cd\uff0c\u5c31\u610f\u5473\u7740\u4ec0\u4e48\u90fd\u4e0d\u80fd\u62cd\u597d \u8bf4\u597d\u955c\u5934\u52a0\u5dee\u673a\u8eab\u597d\u4e8e\u597d\u673a\u8eab\u52a0\u5dee\u955c\u5934 \u76f8\u673a\u548c\u955c\u5934\u7684\u7ec4\u5408\u662f\u8981\u770b\u5361\u53e3\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u8981\u914d\u5bf9\u7684\u3002\u5168\u753b\u5e45\u7684\u955c\u5934\u53ef\u4ee5\u7ed9\u6b8b\u5e45\uff0c\u4f46\u662f\u6b8b\u5e45\u57fa\u672c\u4e0a\u4e0d\u53ef\u4ee5\u7ed9\u5168\u753b\u5e45\u7528 \u955c\u5934\u7684\u4fdd\u517b  UV\u955c\u503c\u4e0d\u503c\u5f97\u4e70\u3002\u5982\u679c\u4f60\u7684\u955c\u5934\u5f88\u8d35\uff0c\u56db\u4e94\u5343\u4ee5\u4e0a\u7684\uff0c\u4e70\u4e00\u4e2a\u4fdd\u62a4\u5f88\u6709\u5fc5\u8981\uff0c\u800c\u4e14\u51e0\u5341\u51e0\u767e\u7684\u90fd\u4e0d\u884c\uff0c\u8981\u4e70\u9876\u7ea7\u7684\u3002\u8981\u662f\u51e0\u767e\u51e0\u5343\u7684\u955c\u5934\uff0c\u5c31\u7b97\u4e86\uff0c\u6ca1\u5fc5\u8981\uff0c\u81ea\u5df1\u6ce8\u610f\u5c31\u597d\u4e86 \u4f7f\u7528\u6c14\u5439\u6e05\u6d01\u3002\u4f7f\u7528\u6c14\u5439\u5439\u7070\u5c18\uff0c\u4e0d\u8981\u7528\u5634\u5439\u5728\u8fd9\u91cc\u4e00\u6837\u9002\u7528\u3002\u66f4\u591a\u7684\u6e05\u6d01\u9632\u8303 \u53ef\u4ee5\u4f7f\u7528\u7eaf\u68c9\uff0c\u5212\u91cd\u70b9\uff0c\u4e00\u5b9a\u662f\u7eaf\u68c9\u7684\u64e6\u62ed\u955c\u5934\u7684\u6c34\u5206\u6c61\u6e0d\u7b49\u3002\u5343\u4e07\u4e0d\u8981\u4f7f\u7528\u7eb8\u5dfe\uff01\u56e0\u4e3a\u4f1a\u522e\u82b1\u955c\u5934\u7684\u6d82\u5c42\u3002    \u76f8\u673a\u7684\u5b58\u50a8  SD\u5361  \u5bb9\u91cf\uff1a\u57fa\u672c\u4e0a16GB\u8db3\u591f\uff0c32G\u591f\u597d\uff0c64\u9876\u914d \u901f\u5ea6\uff1aClass 10\u4ee5\u4e0a   RAW\u4e0eJPEG\uff1a  RAW\u4f18\u52bf\uff1a\u66f4\u5927\u7684\u540e\u671f\u7a7a\u95f4\uff1b\u65e0\u635f\u8c03\u8282\uff1b\u66f4\u5229\u4e8e\u524d\u671f\u62cd\u6444 RAW\u683c\u5f0f\u9002\u7528\u4e8e\u4f60\u5e0c\u671b\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u8fdb\u884c\u6444\u5f71\u521b\u4f5c\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u7684\u793e\u4ea4\u5206\u4eab\uff0c\u6bd4\u5982\u5403\u4e2a\u996d\u53d1\u670b\u53cb\u5708\uff0c\u5bf9\u4e8e\u4e0d\u7cbe\u901a\u540e\u671f\uff0c\u53ea\u662f\u5206\u4eab\u751f\u6d3b\u7684JPG\u8db3\u591f\u3002    \u76f8\u673a\u7684\u6307\u6325\u4e2d\u5fc3\u2014\u6a21\u5f0f\u8f6c\u76d8  \u6a21\u5f0f\u8f6c\u76d8\uff1a\u51b3\u5b9a\u76f8\u673a\u5728\u62cd\u6444\u4e2d\u7684\u64cd\u4f5c\u903b\u8f91  M A S P\u662f\u6307\u6325\u66dd\u5149  M\uff1a\u624b\u52a8\u6a21\u5f0f\uff0c\u6240\u6709\u53c2\u6570\u5206\u522b\u7531\u81ea\u5df1\u8c03\u8282\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6eda\u8f6e\u8c03\u8282\u5149\u5708\uff0c\u8f6c\u52a8\u62e8\u8f6e\u8c03\u8282\u5feb\u95e8\u901f\u5ea6\uff0c\u6309\u53f3\u952e\u8f6c\u52a8\u62e8\u52a8\u8c03\u8282\u611f\u5149\u503c\u3002 P\uff1a\u5168\u81ea\u52a8\u6a21\u5f0f\uff0c\u5168\u542c\u76f8\u673a\u7684\uff0c\u4e09\u4e2a\u53c2\u6570\u90fd\u662f\u76f8\u673a\u5b9a\u3002\u53ef\u4ee5\u901a\u8fc7\uff0c\u8f6c\u52a8\u62e8\u8f6e\u589e\u52a0\u548c\u51cf\u5c11\u66dd\u5149\u3002 A\uff1a\u5149\u5708\u4f18\u5148\u6a21\u5f0f\uff0c\u81ea\u5df1\u51b3\u5b9a\u5149\u5708\uff0c\u5176\u4ed6\u76f8\u673a\u51b3\u5b9a\u3002\u8c03\u8282\u6eda\u8f6e\u8c03\u8282\u5149\u5708\u5927\u5c0f\uff0c\u8f6c\u52a8\u62e8\u8f6e\u8c03\u8282\u66dd\u5149\u8865\u507f\u3002 S\uff1a\u5feb\u95e8\u4f18\u5148\u6a21\u5f0f\uff0c\u81ea\u5df1\u51b3\u5b9a\u5feb\u95e8\u901f\u5ea6\uff0c\u5176\u4ed6\u76f8\u673a\u51b3\u5b9a\u3002\u8c03\u8282\u6eda\u8f6e\u8c03\u8282\u5feb\u95e8\u901f\u5ea6\uff0c\u8f6c\u52a8\u62e8\u8f6e\u8c03\u8282\u66dd\u5149\u8865\u507f\u3002 \u4e00\u957f\u6761\u662f\u5168\u666f\u6a21\u5f0f SCN\u662f\u573a\u666f\u6a21\u5f0f\uff0c\u4f1a\u9488\u5bf9\u4e0d\u540c\u60c5\u51b5\u8fdb\u884c\u53c2\u6570\u8c03\u8282\u3002\u4f8b\u5982\u4eba\u50cf\u6a21\u5f0f\u4f1a\u4f7f\u7528\u6700\u5927\u5149\u5708\uff0c\u98ce\u666f\u5c31\u4f7f\u7528\u5c0f\u5149\u5708\uff0c\u591c\u666f\u5c31\u5c3d\u53ef\u80fd\u4fdd\u8bc1\u5feb\u95e8\u7d20\u7b49\u3002\u5176\u5b9e\u770b\u8d77\u6765\u5f88\u667a\u80fd\uff0c\u4f46\u662f\u8bf4\u5b9e\u8bdd\u4e0d\u5b9e\u7528 P\u6321\u4e0d\u63a8\u8350\u4f7f\u7528\uff0cM\u6863\u9ad8\u624b\u8fdb\u9636\u4f7f\u7528\u3002A\u6863\u6700\u4e3a\u5e38\u7528\uff0cS\u6863\u60f3\u8981\u62cd\u6444\u7279\u5b9a\u573a\u666f\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f8b\u5982\u5c31\u662f\u60f3\u5e0c\u671b\u544a\u8bc9\u76f8\u673a\u5feb\u95e8\u9ad8\u901f\u6216\u8005\u6162\u901f\u5feb\u95e8\u5b9e\u73b0\u7279\u6b8a\u7684\u62cd\u6444\u6548\u679c\u3002\u4e00\u4e2aA\u4e00\u4e2aS\u8db3\u591f\u5927\u5bb6\u4f7f\u7528\u3002 \u7edd\u5927\u591a\u6570\uff0c\u76f8\u673a\u7684\u81ea\u52a8\u6d4b\u5149\u5df2\u7ecf\u6ee1\u8db3\u6211\u4eec\u7684\u5b9e\u9645\u573a\u666f\uff0c\u7a0d\u5fae\u7684\u660e\u6697\u90fd\u53ef\u4ee5\u540e\u671f\u8c03\u8282\uff0c\u800c\u4e14\u62cd\u6444\u53d1\u73b0\u4e0d\u6ee1\u610f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u8c03\u8282\u66dd\u5149\u8865\u507f\u7684\u65b9\u5f0f\u8fdb\u884c\u5feb\u901f\u7ea0\u6b63\u3002\u6240\u4ee5\u4f7f\u7528A\u6863\uff0c\u914d\u5408\u66dd\u5149\u8865\u507f\uff0c\u5c31\u5df2\u7ecf\u6ee1\u8db3\u7edd\u5927\u591a\u6570\u7684\u62cd\u6444\u9700\u6c42\u3002      \u7d22\u5c3c\u76f8\u673a\u6309\u952e  AF/MF\u548cAEL\u62e8\u6746\uff1a\u81ea\u52a8\u5bf9\u7126/\u624b\u52a8\u5bf9\u7126\u5feb\u6377\u5207\u6362\u3002\u5c06\u62e8\u6746\u8c03\u6574\u5728AF/MF\u4e0a\uff0c\u7136\u540e\u6309\u4f4f\u62e8\u6746\u4e2d\u95f4\u7684\u6309\u952e\uff0c\u5c31\u53ef\u4ee5\u624b\u52a8\u8c03\u7126\u3002\u76f8\u53cd\u7684\uff0c\u5982\u679c\u4f60\u76ee\u524d\u662f\u624b\u52a8\u5bf9\u7126\u6a21\u5f0f\uff0c\u8fd9\u4e2a\u65f6\u5019\u6309\u4f4f\u6309\u952e\u5c31\u53ef\u4ee5\u5207\u6362\u4e3a\u81ea\u52a8\u5bf9\u7126\u3002 AEL\uff1a\u66dd\u5149\u9501\u5b9a\u3002\u5f53\u4f60\u62cd\u6444\u67d0\u4e00\u573a\u666f\u7684\u7167\u7247\u7684\u65f6\u5019\uff0c\u627e\u5230\u5408\u9002\u7684\u66dd\u5149\u7ec4\u5408\u4ee5\u540e\uff0c\u6309\u4f4f\u62e8\u6746\u4e2d\u95f4\u7684\u6309\u952e\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u76f8\u673a\u7684\u66dd\u5149\u503c\u5c31\u4f1a\u4fdd\u6301\u4e0d\u53d8\u3002 Fn \u62e8\u76d8  \u4e0a\u952eDISP\u662f\u8c03\u6574\u4e0d\u540c\u7684\u663e\u793a\u754c\u9762\uff0c\u6bcf\u79cd\u754c\u9762\u90fd\u5305\u542b\u4e0d\u540c\u7684\u4fe1\u606f\u5185\u5bb9\u4fa7\u91cd\u70b9\u3002 \u5de6\u952e\u662f\u62cd\u6444\u65b9\u5f0f\uff0c\u62cd\u6444\u5206\u4e09\u4e2a\u7c7b\u578b\uff0c\u6bcf\u4e00\u79cd\u7c7b\u578b\u4ee5\u53ca\u4f7f\u7528\u7ecf\u9a8c  \u5355\u5f20\u62cd\u6444\uff0c\u6700\u5e38\u89c1\u7684\u62cd\u6444\u65b9\u5f0f\uff0c\u6309\u4e00\u6b21\u5feb\u95e8\u62cd\u6444\u4e00\u5f20\u3002 \u8fde\u62cd\uff0c\u62cd\u6444\u8fd0\u52a8\u7269\u4f53\u548c\u6293\u62cd\u6700\u5e38\u7528\u7684\uff0c\u6309\u4e00\u6b21\u5feb\u95e8\u62cd\u5f88\u591a\u5f20\u3002\u8fde\u62cd\u901f\u5ea6\u5206\u4e3a\u51e0\u4e2a\u6863\u6b21\uff0c\u5206\u522b\u662fHi\u9ad8\u901f\uff0cMid\u4e2d\u901f\u4ee5\u53caLo\u4f4e\u901f\u8fde\u62cd\u3002 \u5b9a\u65f6\u62cd\u6444\uff0c\u6309\u4e0b\u5feb\u95e8\u540e\u7b49\u4e00\u6bb5\u65f6\u95f4\u8fdb\u884c\u62cd\u6444\u3002\u53ef\u4ee5\u65f6\u95f4\u4e3a2s 10s\u7b49\uff0c\u7528\u4e8e\u81ea\u62cd\u6216\u8005\u662f\u907f\u514d\u6309\u5feb\u95e8\u9020\u6210\u7684\u673a\u8eab\u6296\u52a8\uff08\u5728\u6162\u901f\u5feb\u95e8\u65f6\u4f7f\u7528\uff09   \u53f3\u952e\u662fISO\u8c03\u8282 \u6309\u952e\u4e0b\uff0c\u662f\u66dd\u5149\u8865\u507f\u8c03\u6574\uff0c\u4f46\u662f\u66dd\u5149\u8865\u507f\u8c03\u8282\u5176\u5b9e\u5728\u62cd\u6444\u754c\u9762\u76f4\u63a5\u5de6\u53f3\u8f6c\u52a8\u4e5f\u53ef\u4ee5\u5b8c\u6210\u3002   C1\u548cC2\u81ea\u5b9a\u4e49\u529f\u80fd\u952e  \u5bf9\u7126\u64cd\u4f5c\u7684\u6d41\u7545\uff0c\u56e0\u6b64\u6211\u7684C1\u8bbe\u7f6e\u4e3a\u5bf9\u7126\u533a\u57df\uff0cC2\u8bbe\u7f6e\u4e3a\u5bf9\u7126\u65b9\u5f0f\u3002\u8fd9\u6837\u6211\u5c31\u53ef\u4ee5\u5feb\u901f\u8c03\u6574\u6211\u7684\u76f8\u673a\u5bf9\u7126    \u7d22\u5c3c\u76f8\u673a\u83dc\u5355\u529f\u80fd \u7d22\u5c3c\u76f8\u673a\u89c6\u9891\u529f\u80fd ",
        "description": "",
        "id": 48,
        "section": "posts",
        "tags": [
            "\u76f8\u673a",
            "\u7d22\u5c3c"
        ],
        "title": "\u76f8\u673a\u64cd\u4f5c\u5165\u95e8\u6307\u5357-\u7d22\u5c3c",
        "uri": "/2020/11/30/108/"
    },
    {
        "content": " \u7eed \u535a\u58eb\u8bba\u6587\u9605\u8bfb\u672d\u8bb0-2\n  \u533a\u57df\u5c3a\u5ea6\u57ce\u5e02\u571f\u5730\u9065\u611f\u76d1\u6d4b\u5173\u952e\u6280\u672f\u7814\u7a76 \u8f68\u8ff9\u6570\u636e\u6316\u6398\u5173\u952e\u6280\u672f\u7814\u7a76 \u57fa\u4e8e\u5730\u7406\u573a\u666f\u7684\u57ce\u5e02\u529f\u80fd\u533a\u5efa\u6a21\u4e0e\u5206\u6790\u65b9\u6cd5\u7814\u7a76  \u533a\u57df\u5c3a\u5ea6\u57ce\u5e02\u571f\u5730\u9065\u611f\u76d1\u6d4b\u5173\u952e\u6280\u672f\u7814\u7a76 \u738b\u6da6-2018-\u4e2d\u56fd\u5730\u8d28\u5927\u5b66\uff08\u6b66\u6c49\uff09\n\u6458\u8981  \u80cc\u666f\uff1a  \u57ce\u5e02\u27a1\ufe0f\u57ce\u5e02\u5316\u27a1\ufe0f\u57ce\u5e02\u5efa\u8bbe\u7528\u5730\u4e0d\u65ad\u589e\u52a0 \u27a1\ufe0f \u57ce\u5e02\u7684\u6269\u5f20 \u9020\u6210\u95ee\u9898\uff1a  \u6539\u53d8\u5c40\u90e8\u5730\u533a\u7684\u571f\u5730\u8986\u88ab\u6784\u6210 \u5f71\u54cd\u533a\u57df\u4e43\u81f3\u5168\u7403\u7684\u751f\u6001\u7cfb\u7edf   \u610f\u4e49\uff1a\u6211\u56fd\u7684\u57ce\u5e02\u5316\u7387\u8fd8\u5728\u6301\u7eed\u589e\u957f\u4e2d\uff0c\u53ca\u65f6\u3001\u51c6\u786e\u5730\u638c\u63e1\u57ce\u5e02\u571f\u5730\u5229\u7528\u53d8\u5316\u80fd\u591f\u9632\u8303\u4e0e\u904f\u5236\u57ce\u5e02\u76f2\u76ee\u6269\u5f20\uff0c\u4e3a\u5b8f\u89c2\u51b3\u7b56\u5236\u5b9a\u63d0\u4f9b\u79d1\u5b66\u4f9d\u636e   \u57ce\u5e02\u571f\u5730\u76d1\u6d4b\u53ca\u5176\u76f8\u5173\u7814\u7a76  \u9010\u6e10\u4ece\u9488\u5bf9\u5355\u4e2a\u57ce\u5e02\u7684\u5206\u6790\u8f6c\u5411\u533a\u57df\u548c\u66f4\u5b8f\u89c2\u5c3a\u5ea6\u7684\u63a2\u8ba8 \u5229\u7528\u9065\u611f\u6280\u672f\u5f00\u5c55\u533a\u57df\u57ce\u5e02\u571f\u5730\u76d1\u6d4b \u56fd\u5185\u5916\u5b66\u8005\u53d6\u5f97\u4e86\u4e30\u7855\u7684\u7814\u7a76\u6210\u679c\uff0c\u4f46\u5728\u533a\u57df\u5c3a\u5ea6\u4e0b\u4ecd\u5b58\u5728\u4e00\u4e9b\u95ee\u9898  \u5728\u6570\u636e\u65b9\u9762\uff0c\u4f4e\u7a7a\u95f4\u5206\u8fa8\u7387\u9065\u611f\u6570\u636e\u4e2d\u5b58\u5728\u5927\u91cf\u7684\u6df7\u5408\u50cf\u5143\uff0c\u57ce\u5e02\u50cf\u5143\u7684\u201c\u540c\u7269\u5f02\u8c31\u201d\u548c\u201c\u5f02\u7269\u540c\u8c31\u201d\u73b0\u8c61\u6613\u5bfc\u81f4\u57ce\u5e02\u571f\u5730\u7684\u4f4e\u4f30\u6216\u9ad8\u4f30\u60c5\u51b5 \u27a1\ufe0f \u5982\u4f55\u5728\u533a\u57df\u5c3a\u5ea6\u4e0b\u53d1\u6325\u5404\u79cd\u9065\u611f\u6570\u636e\u7684\u4f18\u52bf\u8fd8\u9700\u8fdb\u4e00\u6b65\u7814\u7a76\u3002 \u5728\u65b9\u6cd5\u65b9\u9762\uff0c\u533a\u57df\u5c3a\u5ea6\u7684\u57ce\u5e02\u5236\u56fe\u662f\u5178\u578b\u7684\u4e0d\u5e73\u8861\u5206\u7c7b\u95ee\u9898\uff0c\u975e\u57ce\u5e02\u50cf\u5143\u6570\u91cf\u8fdc\u5927\u4e8e\u57ce\u5e02\u50cf\u5143\u6570\u91cf\u3002\u27a1\ufe0f \u8fd8\u9700\u4ece\u65b9\u6cd5\u5165\u624b\uff0c\u53d1\u5c55\u9488\u5bf9\u4e8e\u7279\u5b9a\u7c7b\u522b\u7684\u57ce\u5e02\u63d0\u53d6\u65b9\u6cd5\uff0c\u5728\u5c11\u91cf\u6837\u672c\u7684\u524d\u63d0\u4e0b\u83b7\u53d6\u51c6\u786e\u7684\u57ce\u5e02\u533a\u57df\u3002     \u9488\u5bf9\u73b0\u6709\u533a\u57df\u5c3a\u5ea6\u57ce\u5e02\u571f\u5730\u9065\u611f\u76d1\u6d4b\u4e2d\u5b58\u5728\u7684\u95ee\u9898\uff0c\u672c\u6587:  \u7814\u7a76\u5bf9\u8c61\uff1a\u533a\u57df\u5c3a\u5ea6\u4e0b\u7684\u201c\u57ce\u5e02\u201d \u6570\u636e\u652f\u6491\uff1a\u4e09\u7c7b\u5e38\u7528\u7684\u533a\u57df\u5c3a\u5ea6\u57ce\u5e02\u571f\u5730\u9065\u611f\u76d1\u6d4b\u6570\u636e\uff08\u591c\u95f4\u706f\u5149\u5f71\u50cf DMSP/OLS NTL \u4e0e NPP-VIIRS DNB\uff0cMODIS \u6570\u636e\u4ea7\u54c1 MOD09A1 \u4e0eMOD13A1\uff0c\u4ee5\u53ca\u5305\u542b\u57ce\u5e02\u7c7b\u522b\u7684\u5168\u7403\u571f\u5730\u8986\u88ab\u6570\u636e\u96c6 MCD12Q1 \u4e0e GlobeLand30\uff09 \u9488\u5bf9\u5355\u76ee\u6807\u7684\u65b9\u6cd5\uff1a\u5373\u57fa\u4e8e\u77e5\u8bc6\u9a71\u52a8\u7684\u6307\u6570\u6a21\u578b\u6cd5\u4e0e\u57fa\u4e8e\u6570\u636e\u9a71\u52a8\u7684\u4e00\u7c7b\u5206\u7c7b\u6cd5   \u4e3b\u8981\u7814\u7a76\u5185\u5bb9\u4e0e\u7ed3\u8bba\uff1a  \u5728\u6570\u636e\u65b9\u9762\uff0c\u672c\u6587\u5206\u6790\u4e86\u4e09\u79cd\u9065\u611f\u6570\u636e\u7684\u6570\u636e\u7ed3\u6784\u4e0e\u6570\u636e\u8d28\u91cf\uff0c\u5e76\u7ed9\u51fa\u4e86\u539f\u59cb\u6570\u636e\u7684\u5904\u7406\u7b56\u7565  \u591c\u95f4\u706f\u5149\u6570\u636e NPP-VIIRS DNB \u53bb\u566a\u4e0e\u6781\u5927\u503c\u8fc7\u6ee4\uff0cMOD09A1 \u5f71\u50cf\u7b5b\u9009\u4e0e\u8d28\u91cf\u63a7\u5236\uff0cMOD13A1 NDVI \u6700\u5927\u503c\u5408\u6210\u4ee5\u53ca\u57fa\u4e8e GLC30-2010 \u4eba\u9020\u5730\u8868\u7c7b\u578b\u7684\u57ce\u5e02\u533a\u57df\u63d0\u53d6 \u7ed3\u679c\u8868\u660e\uff1a\u6570\u636e\u7684\u7ed3\u5408\u51c6\u786e\u6027\u9ad8\uff1b\u8d21\u732e\u7a0b\u5ea6\u66f4\u9ad8\uff1b\u66f4\u597d\u7684\u5fae\u5149\u63a2\u6d4b\u80fd\u529b   \u57fa\u4e8e\u77e5\u8bc6\u9a71\u52a8\u7684\u6307\u6570\u6a21\u578b\u6cd5  \u5c45\u6c11\u5730\u6307\u6570 LHSI \u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff1a\u66f4\u6709\u6548\uff1b\u51c6\u786e\u6027\u9ad8\uff1b\u66f4\u4e30\u5bcc\u7684\u57ce\u5e02\u5185\u90e8\u7ec6\u8282\u4fe1\u606f   \u57fa\u4e8e\u6570\u636e\u9a71\u52a8\u7684\u4e00\u7c7b\u5206\u7c7b\u6cd5  \u4e00\u7c7b\u5206\u7c7b\u65b9\u6cd5 PUL \u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff1a\u51c6\u786e\u5ea6\u66f4\u9ad8\uff1b\u66f4\u6e05\u6670\u7684\u57ce\u5e02\u8fb9\u754c\uff1b\u9c81\u68d2\u6027   2012 \u5e74\u4e2d\u56fd\u5927\u9646\u57ce\u5e02\u533a\u57df\u4e13\u9898\u56fe  \u672c\u6587\u7ed3\u679c\u4e0e\u5730\u8868\u60c5\u51b5\u66f4\u63a5\u8fd1\uff0c\u51c6\u786e\u6027\u66f4\u9ad8\u3002 \u9a8c\u8bc1\u8bd5\u9a8c\u8868\u660e\uff1a\u5728\u50cf\u7d20\u7ea7\u522b\uff1b\u5728\u57ce\u5e02\u7ea7\u522b\u4e0a     \u6280\u672f\u8def\u7ebf\uff1a  \u8f68\u8ff9\u6570\u636e\u6316\u6398\u5173\u952e\u6280\u672f\u7814\u7a76 \u5434\u777f\u667a-2020-\u7535\u5b50\u79d1\u6280\u5927\u5b66\n\u6458\u8981  \u80cc\u666f\uff1a\u5b9a\u4f4d\u6280\u672f\u4e0e\u4f4d\u7f6e\u793e\u4ea4\u7f51\u7edc\u9ad8\u901f\u53d1\u5c55\u27a1\ufe0f\u8f68\u8ff9\u6570\u636e\u5448\u7206\u70b8\u5f0f\u589e\u957f \u610f\u4e49\uff1a  \u79fb\u52a8\u5bf9\u8c61\u7684\u65f6\u7a7a\u7279\u5f81\u548c\u79fb\u52a8\u884c\u4e3a\u4fe1\u606f \u6316\u6398\u6d77\u91cf\u8f68\u8ff9\u6570\u636e\u80cc\u540e\u6240\u8574\u85cf\u7684\u4e30\u5bcc\u4fe1\u606f\uff0c\u65e2\u6709\u7406\u8bba\u7814\u7a76\u4ef7\u503c\u4e5f\u662f\u7d27\u8feb\u7684\u73b0\u5b9e\u9700\u6c42 \u672a\u6765\u57ce\u5e02\u670d\u52a1\u7684\u4e3b\u8981\u7814\u7a76\u65b9\u5411\uff0c\u5e7f\u6cdb\u5e94\u7528   \u8f68\u8ff9\u6570\u636e\u6316\u6398\u5728\u5b9e\u9645\u5e94\u7528\u573a\u666f\u4e2d\u4ecd\u9762\u4e34\u4e00\u4e9b\u95ee\u9898  \u7531\u4e8e\u8f68\u8ff9\u6570\u636e\u8bed\u4e49\u7f3a\u5931\uff0c\u4eba\u4eec\u65e0\u6cd5\u7406\u89e3\u8f68\u8ff9\u6570\u636e\u4e2d\u9690\u542b\u7684\u8bed\u4e49\u7279\u5f81 \u8f68\u8ff9\u70b9\u5e8f\u5217\u5f0f\u7684\u8868\u5f81\u65b9\u5f0f\u65e0\u6cd5\u9002\u5e94\u4e8e\u5e7f\u6cdb\u7684\u6570\u636e\u6316\u6398\u6a21\u578b \u73b0\u6709\u7684\u4f4d\u7f6e\u9884\u6d4b\u6a21\u578b\u7684\u9884\u6d4b\u7cbe\u5ea6\u8f83\u4f4e   \u5173\u952e\u6280\u672f: \u8f68\u8ff9\u8bed\u4e49\u63a8\u65ad\u3001\u8f68\u8ff9\u8868\u5f81\u5b66\u4e60\u3001\u4f4d\u7f6e\u9884\u6d4b\u6027\u80fd\u63d0\u5347 \u4e3b\u8981\u5185\u5bb9+\u7814\u7a76\u6210\u679c  \u9488\u5bf9\u8f68\u8ff9\u8bed\u4e49\u7f3a\u5931\u7684\u95ee\u9898\uff0c\u8bba\u6587\u63d0\u51fa\u4e00\u79cd\u57fa\u4e8e\u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u4f4d\u7f6e\u8bed\u4e49\u63a8\u65ad\u6a21\u578b (SI\u00ad-GCN)  \u5229\u7528\u7f51\u7edc\u8868\u5f81\u5b66\u4e60\u7b97\u6cd5\u548c\u53d8\u5206\u81ea\u7f16\u7801\u5668\u5206\u522b\u5b66\u4e60\u4f4d\u7f6e\u7684\u7a7a\u95f4\u5411\u91cf\u8868\u5f81\u548c\u65f6\u95f4\u5411\u91cf\u8868\u5f81\uff0c\u6784\u6210\u4f4d\u7f6e\u7684\u65f6\u7a7a\u7279\u5f81 \u7528\u6237-\u4f4d\u7f6e\u8bbf\u95ee\u4e8c\u90e8\u56fe \u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60 \u5f15\u5165\u81ea\u6ce8\u610f\u529b\u673a\u5236 \u7ed3\u679c\u8868\u660e\uff1aSI-GCN \u7684\u8bed\u4e49\u63a8\u65ad\u6027\u80fd\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5   \u9488\u5bf9\u8f68\u8ff9\u8868\u5f81\u56f0\u96be\u7684\u95ee\u9898\uff0c\u8bba\u6587\u63d0\u51fa\u878d\u5408\u65f6\u7a7a\u7ed3\u6784\u7684\u8f68\u8ff9\u6570\u636e\u8868\u5f81\u5b66\u4e60\u7b97\u6cd5 (STAR)  \u4f20\u7edf\u8f68\u8ff9\u70b9\u5e8f\u5217\u8868\u5f81\u65b9\u5f0f\u5272\u88c2\u8f68\u8ff9\u6570\u636e\u7684\u65f6\u7a7a\u8026\u5408\u5173\u7cfb\uff08\u2753\uff09\uff0c\u4e14\u4e0d\u9002\u5e94\u4e8e\u5e7f\u6cdb\u7684\u6570\u636e\u6316\u6398\u6a21\u578b STAR \u5efa\u7acb\u7edf\u4e00\u6846\u67b6\u5b66\u4e60\uff08\u2753\uff09\u8f68\u8ff9\u4e2d\u7684\u7a7a\u95f4\u548c\u65f6\u95f4\u4fe1\u606f\uff1a\u5730\u7406\u4e0a\u4e0b\u6587\u3001\u8f68\u8ff9\u4e0a\u4e0b\u6587\u3001\u8bed\u4e49\u4e0a\u4e0b\u6587 \u5229\u7528\u81ea\u9002\u5e94\u970d\u514b\u65af\u8fc7\u7a0b\u5efa\u6a21\u7528\u6237\u51fa\u884c\u65f6\u95f4\u4fe1\u606f\uff08\u4e0b\u4e00\u4e2a\u8bbf\u95ee\u4f4d\u7f6e\u548c\u65f6\u95f4\uff09 \u7ed3\u679c\u8868\u660e\uff1aSTAR \u5728\u76f8\u4f3c\u6027\u68c0\u7d22\u3001\u76f8\u4f3c\u5ea6\u5ea6\u91cf\u3001\u5f02\u5e38\u68c0\u6d4b\u7b49\u6570\u636e\u6316\u6398\u4efb\u52a1\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5   \u9488\u5bf9\u4e2a\u4eba\u51fa\u884c\u6570\u636e\u968f\u673a\u6027\u9ad8\u3001\u6570\u636e\u7a00\u758f\uff0c\u5bfc\u81f4\u73b0\u6709\u4f4d\u7f6e\u9884\u6d4b\u6a21\u578b\u7cbe\u5ea6\u8f83\u4f4e\u7684\u95ee\u9898\uff0c\u8bba\u6587\u63d0\u51fa\u57fa\u4e8e\u504f\u597d\u793e\u4ea4\u4e92\u52a8\u7684\u4f4d\u7f6e\u9884\u6d4b\u7b97\u6cd5 (PSI)  \u7fa4\u7ec4\u51fa\u884c\u6a21\u5f0f \u5ea6\u91cf\u7528\u6237\u8f68\u8ff9\u76f8\u4f3c\u5ea6\u6784\u5efa\u7528\u6237\u7fa4\u7ec4 \u5229\u7528\u5173\u8054\u89c4\u5219\u6316\u6398\u7b97\u6cd5\u63d0\u53d6\u7fa4\u7ec4\u51fa\u884c\u6a21\u5f0f \u5efa\u7acb\u4e2a\u4eba\u504f\u597d\u6a21\u578b \u901a\u8fc7\u5cad\u56de\u5f52\u5b66\u4e60\u4e2a\u4eba\u504f\u597d\u4e0e\u7fa4\u7ec4\u51fa\u884c\u6a21\u5f0f\u5bf9\u4f4d\u7f6e\u9884\u6d4b\u7684\u8d21\u732e\uff0c\u9884\u6d4b\u7528\u6237\u51fa\u884c\u4f4d\u7f6e \u7ed3\u679c\u8868\u660e\uff1a\u4e0e\u73b0\u6709\u65b9\u6cd5\u76f8\u6bd4\uff0c\u4f4d\u7f6e\u9884\u6d4b\u6027\u80fd\u4f18\u4e8e\u73b0\u6709\u9884\u6d4b\u7b97\u6cd5   \u9488\u5bf9\u7528\u6237\u7b7e\u5230\u884c\u4e3a\u7684\u6210\u56e0\u4e0e\u52a8\u6001\u673a\u5236\u7f3a\u4e4f\u6df1\u5165\u7814\u7a76\u7684\u95ee\u9898\uff08\ud83d\udc4d\uff09\uff0c\u8bba\u6587\u63d0\u51fa\u5730\u7406\u611f\u77e5\u7684\u7528\u6237\u884c\u4e3a\u52a8\u6001\u6a21\u578b (DGPS)  \u7528\u6237\u7b7e\u5230\u884c\u4e3a\u7684\u52a8\u6001\u673a\u5236\uff08\u2753\uff09 \u5730\u7406\u611f\u77e5\u7684\u4f4d\u7f6e\u7279\u5f81\uff08\u5305\u62ec\u8bed\u4e49\u7279\u5f81\u3001\u6f5c\u5728\u7279\u5f81\u548c\u52a8\u6001\u7279\u5f81\uff09\u27a1\ufe0f \u5b66\u4e60\u7528\u6237\u4e2a\u4eba\u504f\u597d \u7528\u6237\u884c\u4e3a\u7684\u5f3a\u5ea6\u51fd\u6570 \u540c\u65f6\u9884\u6d4b\u7528\u6237\u7b7e\u5230\u6d3b\u52a8\u7684\u4f4d\u7f6e\u4e0e\u65f6\u95f4 \u7ed3\u679c\u8868\u660e\uff1a\u591a\u4e2a\u771f\u5b9e\u6570\u636e\u96c6\u4e0a\u7684\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e DGPS \u9884\u6d4b\u6027\u80fd\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5     \u6280\u672f\u8def\u7ebf\uff1a  \u7eea\u8bba \u7814\u7a76\u5de5\u4f5c\u7684\u80cc\u666f\u4e0e\u610f\u4e49  \u8f68\u8ff9\u6570\u636e  GPS \u8f68\u8ff9\u6570\u636e  \u4ea4\u901a\u5de5\u5177\u4ea7\u751f\u7684\u8f68\u8ff9\uff0c\u98de\u673a\u3001\u8239\u8236\u3001\u6c7d\u8f66\u4e0a\u914d\u5907 GPS \u8bbe\u5907 \u4eba\u7c7b\u6d3b\u52a8\u8f68\u8ff9\uff0c\u667a\u80fd\u624b\u73af\u3001\u7a7f\u6234\u8bbe\u5907\u3001\u667a\u80fd\u624b\u673a\u7684\u5065\u5eb7\u5e94\u7528\u7a0b\u5e8f\u4f1a\u8bb0\u5f55\u7528\u6237\u7684\u4f4d\u7f6e\u4fe1\u606f \u81ea\u7136\u754c\u5176\u4ed6\u79fb\u52a8\u5bf9\u8c61\u8f68\u8ff9\uff0c\u5982\u52a8\u7269\u8fc1\u5f99\u6570\u636e\uff0c\u98d3\u98ce\u7684\u79fb\u52a8\u6570\u636e   \u7b7e\u5230 (check\u00adin) \u8f68\u8ff9\u6570\u636e  \u57fa\u4e8e\u4f4d\u7f6e\u670d\u52a1\u7684\u793e\u4ea4\u7f51\u7edc (Location\u00adBased Social Networks, LBSNs) \u5e94\u7528\u5982 Foursquare\u3001Gowalla\u3001\u5fae\u535a\u3001\u5fae\u4fe1\u7b49\u79fb\u52a8\u793e\u4ea4\u7f51\u7edc \u667a\u80fd\u8bbe\u5907\u5230\u8fbe\u4e0d\u540c\u4f4d\u7f6e\u65f6\u63a5\u5165\u7f51\u7edc\u8bbe\u5907\u7684\u4f4d\u7f6e\u4fe1\u606f\uff08Wi\u00adFi\uff0c\u901a\u4fe1\u57fa\u7ad9\uff09   \u8fd9\u4e9b\u79fb\u52a8\u5bf9\u8c61\u7531\u4e8e\u7a7a\u95f4\u4f4d\u7f6e\u79fb\u52a8\u800c\u4ea7\u751f\u7684\u79fb\u52a8\u6570\u636e\uff0c\u6309\u7167\u65f6\u95f4\u5148\u540e\u987a\u5e8f\u6784\u6210\u7684\u6570\u636e\u90fd\u5c5e\u4e8e\u8f68\u8ff9\u6570\u636e   \u8f68\u8ff9\u6570\u636e\u6316\u6398\u610f\u4e49  \u8f68\u8ff9\u6570\u636e\u6316\u6398\u662f\u6570\u636e\u6316\u6398\u7684\u4e00\u4e2a\u65b0\u5174\u5206\u652f\uff0c\u62d3\u5c55\u4e86\u4f20\u7edf\u6570\u636e\u6316\u6398\u7684\u7814\u7a76\u65b9\u6cd5\u548c\u5e94\u7528\u9886\u57df\uff0c\u6210\u4e3a\u5f53\u524d\u7814\u7a76\u70ed\u70b9  KDD\u3001ICDE\u3001ICDM \u7b49\u56fd\u9645\u77e5\u540d\u5b66\u672f\u4f1a\u8bae TKDE\u3001TKDD\u3001TIST \u7b49\u56fd\u9645\u5b66\u672f\u6742\u5fd7   \u7814\u7a76\u8f68\u8ff9\u6570\u636e\u6316\u6398\u76f8\u5173\u6280\u672f\u4e5f\u5177\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u4ef7\u503c  \u5bf9\u4eba\u7c7b\u8f68\u8ff9\u6570\u636e\u7684\u6316\u6398\uff1a\u66f4\u597d\u7684\u7406\u89e3\u4eba\u7c7b\u884c\u4e3a\u52a8\u529b\u5b66\u7279\u5f81\uff1b\u6709\u5229\u4e8e\u63a2\u7d22\u7406\u89e3\u4eba\u7c7b\u793e\u4f1a\u6d3b\u52a8\u7279\u6027 \u5bf9\u57ce\u5e02\u4ea4\u901a\u7684\u8f68\u8ff9\u6570\u636e\u7684\u6316\u6398 \u5bf9\u8239\u8236\u3001\u98de\u673a\u7684\u8f68\u8ff9\u6570\u636e\u6316\u6398 \u4ece\u52a8\u7269\u8fc1\u5f99\u6570\u636e\u5206\u6790\u52a8\u7269\u8fc1\u5f99\u89c4\u5f8b \u4ece\u98d3\u98ce\u7684\u79fb\u52a8\u6570\u636e\u5206\u6790\u51fa\u98d3\u98ce\u7684\u5f62\u6210\u4f4d\u7f6e\u548c\u79fb\u52a8\u89c4\u5f8b\uff0c\u63d0\u524d\u9884\u8b66\u6c14\u8c61\u707e\u5bb3   \u57ce\u5e02\u8ba1\u7b97\u3001\u667a\u6167\u57ce\u5e02\u7b49\u57ce\u5e02\u672a\u6765\u53d1\u5c55\u7814\u7a76\uff0c\u6838\u5fc3\u5747\u662f\u7fa4\u4f53\u611f\u77e5\u4e0e\u79fb\u52a8\u4f4d\u7f6e\u7684\u611f\u77e5\u8ba1\u7b97   \u73b0\u6709\u5de5\u4f5c\uff1a\u8f68\u8ff9\u9884\u5904\u7406\u3001\u8f68\u8ff9\u76f8\u4f3c\u5ea6\u5ea6\u91cf\u3001\u8f68\u8ff9\u68c0\u7d22\u3001\u6a21\u5f0f\u6316\u6398\u3001\u8f68\u8ff9\u805a\u7c7b\u548c\u5f02\u5e38\u68c0\u6d4b\u7b49 \u5b58\u5728\u4e00\u4e9b\u6f5c\u5728\u95ee\u9898\uff1a  \u8f68\u8ff9\u8bed\u4e49\u7f3a\u5931 \u8f68\u8ff9\u8868\u5f81\u56f0\u96be \u4f4d\u7f6e\u9884\u6d4b\u7cbe\u5ea6\u4f4e   \u603b\u7ed3\uff1a\u8f68\u8ff9\u6570\u636e\u6316\u6398\u6709\u6df1\u523b\u7684\u7406\u8bba\u7814\u7a76\u4ef7\u503c\u548c\u5e7f\u6cdb\u7684\u5e94\u7528\u524d\u666f\uff0c\u8bba\u6587\u56f4\u7ed5\u4e0a\u8ff0\u4e09\u4e2a\u95ee\u9898\uff0c\u5f00\u5c55\u7406\u8bba\u7b97\u6cd5\u4e0e\u5173\u952e\u6280\u672f\u7814\u7a76\u3002  \u8f68\u8ff9\u6570\u636e\u6316\u6398\u76f8\u5173\u7406\u8bba\u57fa\u7840 \u8f68\u8ff9\u6570\u636e\u8bed\u4e49\u7814\u7a76\u76f8\u5173\u7406\u8bba \u8f68\u8ff9\u6570\u636e\u4e2d\u7684\u8bed\u4e49\u4fe1\u606f\uff08\u6309\u8bed\u4e49\u5c42\u6b21\uff09   \u7b80\u5355\u8bed\u4e49\u4fe1\u606f\n \u8f68\u8ff9\u7684\u8d77\u70b9\u3001\u7ec8\u70b9\u3001\u505c\u7559\u70b9\u3001\u5174\u8da3\u70b9\u90fd\u5c5e\u4e8e\u8f68\u8ff9\u4e2d\u7684\u7279\u6b8a\u4f4d\u7f6e\u4fe1\u606f\uff0c\u8574\u542b\u7740\u7b80\u5355\u7684\u8bed\u4e49\u4fe1\u606f \u7b80\u5355\u8bed\u4e49\u4fe1\u606f\u80fd\u591f\u53cd\u6620\u7528\u6237\u8f68\u8ff9\u4e2d\u7528\u6237\u51fa\u884c\u7684\u7a7a\u95f4\u7279\u5f81\u6216\u8fd0\u52a8\u72b6\u6001\uff0c\u4f46\u7b80\u5355\u8bed\u4e49\u4fe1\u606f\u4e0d\u542b\u6709\u4efb\u4f55\u8bed\u8a00\u7c7b\u7684\u8bed\u4e49\u89e3\u91ca\uff0c\u7f3a\u4e4f\u66f4\u6df1\u5c42\u6b21\u7684\u8bed\u4e49\u7406\u89e3    \u5730\u7406\u8bed\u4e49\u4fe1\u606f\n \u5229\u7528\u5730\u6807\u5efa\u7b51\u7269\u6807\u6ce8\u3001\u5730\u56fe\u5339\u914d\u7b97\u6cd5\u3001\u4f4d\u7f6e\u8bed\u4e49\u63a8\u65ad\u7b97\u6cd5\u8d4b\u4e88\u8f68\u8ff9\u6570\u636e\u9ad8\u5c42\u6b21\u7684\u8bed\u4e49\u89e3\u91ca\u4fe1\u606f \u7b7e\u5230\u4f4d\u7f6e\u5c5e\u4e8e\u4e0d\u540c\u8bed\u4e49\u7c7b\u522b\uff0c\u533b\u9662\u3001\u9152\u5427\u3001\u516c\u53f8\u3001\u5546\u5e97\u7b49 \u5730\u56fe\u5339\u914d\u7b97\u6cd5\u5c06\u8f68\u8ff9\u6570\u636e\u6620\u5c04\u81f3\u57ce\u5e02\u8def\u7f51\u4e2d\uff0c\u5229\u7528\u8def\u7f51\u7684\u8f85\u52a9\u8bed\u4e49\u4fe1\u606f\uff0c\u5982\u5341\u5b57\u8def\u53e3\u3001\u9053\u8def\u4fe1\u606f\u523b\u753b\u7528\u6237\u5728\u57ce\u5e02\u4e2d\u7684\u51fa\u884c\u884c\u4e3a\u3002 \u5e38\u89c1\u7684\u5730\u7406\u8bed\u4e49\u4fe1\u606f\u8fd8\u5305\u62ec\u5730\u7406\u6570\u636e\uff08\u690d\u88ab\u3001\u6cb3\u6d41\u3001\u884c\u653f\u5212\u5206\u7b49\uff09\u3001\u5730\u6807\u5efa\u7b51\u7269\u3001\u53ef\u83b7\u53d6\u5174\u8da3\u70b9\uff08\u5927\u4f17\u70b9\u8bc4\u7b49\u7f51\u7ad9\u63d0\u4f9b\uff09\u7b49 \u5730\u7406\u8bed\u4e49\u4fe1\u606f\u542b\u6709\u4eba\u7c7b\u6d3b\u52a8\u4e2d\u7684\u53ef\u7406\u89e3\u8bed\u4e49\u4fe1\u606f\uff0c\u4e0d\u4ec5\u80fd\u591f\u53cd\u6620\u7528\u6237\u8fd0\u52a8\u72b6\u6001\uff0c\u8fd8\u5305\u542b\u7528\u6237\u51fa\u884c\u542b\u4e49\uff0c\u4ece\u54ea\u91cc\u6765\u3001\u5230\u54ea\u53bb\u3001\u6d3b\u52a8\u76ee\u7684\u7b49\u3002    \u63cf\u8ff0\u6027\u8bed\u4e49\u4fe1\u606f\n  \u7b7e\u5230\u6d3b\u52a8\u65f6\u5206\u4eab\u81ea\u5df1\u7684\u611f\u53d7\uff0c\u53d1\u5e03\u56fe\u7247\u6216\u89c6\u9891\u7b49\u591a\u5a92\u4f53\u4fe1\u606f\n  \u63cf\u8ff0\u6027\u8bed\u4e49\u4fe1\u606f\u8868\u8fbe\u4e86\u7528\u6237\u5728\u7b7e\u5230\u4f4d\u7f6e\u6240\u505a\u7684\u5177\u4f53\u4e8b\u60c5\uff0c\u751a\u81f3\u5305\u62ec\u66f4\u9ad8\u5c42\u7684\u7528\u6237\u60c5\u7eea\uff0c\u653f\u6cbb\u503e\u5411\u7b49\n  \u901a\u8fc7\u6587\u672c\u6216\u591a\u5a92\u4f53\u4fe1\u606f\u63a8\u65ad\u4f4d\u7f6e\u8bed\u4e49\u3001\u4e3a\u4f4d\u7f6e\u6dfb\u52a0\u7279\u5b9a\u7684\u6807\u7b7e\uff08\u5982\u201c\u6587\u9752\u805a\u96c6\u5730\u201d\u7684\u6807\u7b7e\uff09\uff0c\u5229\u7528\u7167\u7247\u5206\u4eab\u6216\u77ed\u89c6\u9891\u4f20\u64ad\u7b49\u793e\u4ea4\u4f20\u64ad\u65b9\u5f0f\u52a0\u901f\u5730\u7406\u4f4d\u7f6e\u5f71\u54cd\u529b\u7684\u4f20\u64ad\n    \u5f53\u524d\u8f68\u8ff9\u6570\u636e\u8bed\u4e49\u7814\u7a76  \u8f68\u8ff9\u8bed\u4e49\u63a8\u65ad  \u7c97\u8f68\u8ff9\u4fe1\u606f\u63d0\u53d6\u8bed\u4e49 \u27a1\ufe0f \u5206\u6790\u7528\u6237\u5728\u5730\u7406\u7a7a\u95f4\u4e2d\u7684\u8fd0\u52a8\u72b6\u6001 \u5229\u7528\u5730\u56fe\u5339\u914d\u6216\u5730\u7406\u4fe1\u606f\u63a8\u65ad\u8bed\u4e49\uff0c\u901a\u8fc7\u589e\u52a0\u989d\u5916\u7684\u5730\u7406\u7a7a\u95f4\u4fe1\u606f\uff0c\u5982\u8def\u7f51\u6216\u5730\u6807\u5efa\u7b51\u7b49\uff0c\u91c7\u7528\u76f8\u5173\u7b97\u6cd5\u5339\u914d\u8f68\u8ff9\uff0c\u8d4b\u4e88\u8f68\u8ff9\u6570\u636e\u53ef\u7406\u89e3\u7684\u8bed\u4e49\u4fe1\u606f\u3002 \u8bed\u4e49\u8865\u5168   \u8f68\u8ff9\u8bed\u4e49\u6a21\u5f0f\u6316\u6398\uff1a\u5229\u7528\u8f68\u8ff9\u4e2d\u7684\u8bed\u4e49\u7279\u5f81\u6267\u884c\u6570\u636e\u6316\u6398\u4efb\u52a1\uff0c\u5982\u8f68\u8ff9\u8bed\u4e49\u538b\u7f29\u3001\u8f68\u8ff9\u8bed\u4e49\u5206\u6bb5\u3001\u751f\u6d3b\u6a21\u5f0f\u6316\u6398\u7b49 \u57fa\u4e8e\u8bed\u4e49\u5206\u6790\u7684\u4e8b\u4ef6\u68c0\u6d4b  \u8f68\u8ff9\u8868\u5f81\u7814\u7a76\u76f8\u5173\u7406\u8bba   \u7b2c\u4e00\u6bb5\uff1a\u7eea\u8a00\n  \u8f68\u8ff9\u662f\u8f68\u8ff9\u70b9\u6309\u7167\u65f6\u95f4\u5148\u540e\u987a\u5e8f\u7ec4\u6210\u7684\u5e8f\u5217\uff0c\u5e8f\u5217\u70b9\u7684\u8868\u5f81\u65b9\u5f0f\u662f\u8f68\u8ff9\u4e3b\u8981\u8868\u793a\u65b9\u5f0f\u3002\n  \u8f68\u8ff9\u70b9\u7ec4\u6210\u5e8f\u5217\u7684\u65b9\u5f0f\u76f4\u89c2\u3001\u7b80\u5355\uff0c\u4f46\u4e5f\u5b58\u5728\u4fe1\u606f\u5197\u4f59\uff0c\u76f4\u63a5\u9002\u7528\u7684\u6570\u636e\u6316\u6398\u548c\u673a\u5668\u5b66\u4e60\u6a21\u578b\u5c11\u7b49\u4e0d\u8db3\uff0c\u540c\u65f6\u5e8f\u5217\u70b9\u8868\u5f81\u6ca1\u6709\u5c06\u8f68\u8ff9\u7684\u65f6\u7a7a\u4fe1\u606f\u878d\u5408\u5728\u4e00\u8d77\uff0c\u65e0\u6cd5\u4f53\u73b0\u8f68\u8ff9\u6570\u636e\u7684\u65f6\u7a7a\u8026\u5408\u6027\n  \u4e3a\u4e86\u80fd\u4ece\u8f68\u8ff9\u6570\u636e\u4e2d\u53d1\u73b0\u66f4\u591a\u7684\u65b0\u77e5\u8bc6\uff0c\u5c06\u8f68\u8ff9\u539f\u59cb\u6570\u636e\u8f6c\u5316\u6216\u5b66\u4e60\u65b0\u7684\u8f68\u8ff9\u8868\u5f81\u6210\u4e3a\u4e00\u79cd\u91cd\u8981\u7684\u7814\u7a76\u601d\u8def\u3002\n    \u7b2c\u4e8c\u6bb5\uff1a\u8f68\u8ff9\u6570\u636e\u8868\u5f81\u57fa\u672c\u65b9\u6cd5\uff1a\u5173\u952e\u70b9\u3001\u5b50\u8f68\u8ff9\u3001\u8f68\u8ff9\u7269\u7406\u7279\u5f81\n \u8f68\u8ff9\u4e2d\u7684\u8f68\u8ff9\u70b9\u91cd\u8981\u6027\u4e0d\u5c3d\u76f8\u540c\uff0c\u5176\u4e2d\u90e8\u5206\u8f68\u8ff9\u70b9\u4ee3\u8868\u8f68\u8ff9\u6570\u636e\u4e2d\u7684\u5173\u952e\u4fe1\u606f \u5229\u7528\u8f68\u8ff9\u4e2d\u7684\u5173\u952e\u70b9\u4f5c\u4e3a\u8f68\u8ff9\u6570\u636e\u7684\u8868\u5f81\uff0c\u80fd\u591f\u51cf\u5c11\u8f68\u8ff9\u6570\u636e\u91cf\u63d0\u9ad8\u8868\u5f81\u8d28\u91cf \u5173\u952e\u70b9\u5206\u7c7b  \u5728\u4eba\u7c7b\u51fa\u884c\u8f68\u8ff9\u4e2d\uff0c\u5bf9\u4eba\u7c7b\u6d3b\u52a8\u6709\u7279\u6b8a\u610f\u4e49\u7684\u5173\u952e\u4f4d\u7f6e\u70b9  \u7528\u6237\u5728\u8fde\u7eed\u8f83\u8fd1\u7684\u5730\u7406\u4f4d\u7f6e\u957f\u65f6\u95f4\u505c\u7559\u7684\u505c\u7559\u70b9 \u6839\u636e\u8f68\u8ff9\u70b9\u5bc6\u5ea6\u6216\u7528\u6237\u504f\u597d\u5f97\u5230\u7684\u5174\u8da3\u70b9   \u5bf9\u8f68\u8ff9\u5f62\u72b6\u6709\u5f71\u54cd\u7684\u5173\u952e\u70b9\uff0c\u5982\u62d0\u70b9\u6216\u8f68\u8ff9\u538b\u7f29\u4e2d\u7684\u4fdd\u7559\u70b9   \u5b50\u8f68\u8ff9\u6bb5\u662f\u7814\u7a76\u8f68\u8ff9\u5c40\u90e8\u6027\u8d28\u7684\u91cd\u8981\u8868\u5f81\u65b9\u5f0f \u8f68\u8ff9\u7269\u7406\u7279\u5f81\uff1a\u5173\u952e\u70b9\u8868\u5f81\u4e0e\u5b50\u8f68\u8ff9\u6bb5\u8868\u5f81\u662f\u57fa\u4e8e\u8f68\u8ff9\u5f62\u72b6\u7684\u8868\u5f81\u65b9\u5f0f\uff0c\u53e6\u6709\u4e00\u4e9b\u7814\u7a76\u4eba\u5458\u901a\u8fc7\u63d0\u53d6\u8f68\u8ff9\u901f\u5ea6\u3001\u8d77\u59cb\u70b9\u3001\u65b9\u5411\u3001\u52a0\u901f\u5ea6\u7b49\u7279\u5f81\uff0c\u7528\u53ef\u89e3\u91ca\u7684\u7269\u7406\u7279\u5f81\u5411\u91cf\u8868\u793a\u8f68\u8ff9\u6216\u5b50\u8f68\u8ff9\u3002 \u603b\u7ed3\uff1a\u5173\u952e\u70b9\u3001\u5b50\u8f68\u8ff9\u3001\u8f68\u8ff9\u7269\u7406\u7279\u5f81\u63d0\u53d6\u4e09\u79cd\u8f68\u8ff9\u8868\u5f81\u65b9\u5f0f\u662f\u7814\u7a76\u8f68\u8ff9\u6570\u636e\u7684\u57fa\u672c\u65b9\u6cd5\uff0c\u7b80\u5355\u76f4\u89c2\u5229\u4e8e\u7406\u89e3\uff0c\u662f\u8f68\u8ff9\u6570\u636e\u8868\u5f81\u57fa\u7840\u65b9\u6cd5\u3002    \u7b2c\u4e09\u6bb5\uff1a\u5c06\u8f68\u8ff9\u6570\u636e\u8f6c\u5316\u4e3a\u56fe\u8868\u5f81\n \u5173\u952e\uff1a\u5982\u4f55\u51c6\u786e\u5c06\u8f68\u8ff9\u6570\u636e\u8868\u5f81\u4e3a\u56fe\u91cc\u7684\u70b9\u548c\u8fb9 \u8def\u7f51 \u81ea\u7531\u7a7a\u95f4\uff1a\u90d1\u5b87\uff1a\u9996\u5148\u901a\u8fc7\u5bc6\u5ea6\u805a\u7c7b\u7b97\u6cd5\u8bc6\u522b\u8f68\u8ff9\u4e2d\u7684\u5173\u952e\u70b9\uff0c\u7136\u540e\u6839\u636e\u5bc6\u5ea6\u6784\u5efa\u4e00\u4e2a\u5c42\u6b21\u5316\u7684\u6811\u72b6\u7ed3\u6784\u8fdb\u4e00\u6b65\u63d0\u53d6\u9ad8\u4ef7\u503c\u4f4d\u7f6e\uff0c\u6811\u4e2d\u7684\u8282\u70b9\u4f5c\u4e3a\u9876\u70b9\uff0c\u6240\u6709\u7528\u6237\u5171\u4eab\u9876\u70b9\u96c6\uff0c\u7528\u6237\u6839\u636e\u81ea\u5df1\u7684\u8f68\u8ff9\u5386\u53f2\u6570\u636e\u6784\u5efa\u81ea\u5df1\u7684\u8f68\u8ff9\u6570\u636e\u56fe\u3002\u81f3\u6b64\uff0c\u5ea6\u91cf\u4e24\u4e2a\u7528\u6237\u8f68\u8ff9\u76f8\u4f3c\u5ea6\u8f6c\u5316\u4e3a\u5ea6\u91cf\u4e24\u4e2a\u56fe\u7684\u76f8\u4f3c\u5ea6\uff0c\u5c06\u56fe\u6316\u6398\u7b97\u6cd5\u5e94\u7528\u81f3\u8f68\u8ff9\u6570\u636e\u6316\u6398\u4e2d    \u7b2c\u56db\u6bb5\uff1a\u5c06\u8f68\u8ff9\u6570\u636e\u8f6c\u5316\u4e3a\u77e9\u9635\u8868\u5f81 \u27a1\ufe0f \u4f4d\u7f6e\u63a8\u8350\u548c\u7528\u6237\u6f5c\u5728\u5174\u8da3\u6316\u6398\n  \u7b2c\u4e94\u6bb5\uff1a\u8868\u5f81\u5b66\u4e60\uff1a\u5c06\u8f68\u8ff9\u6570\u636e\u8f6c\u5316\u4e3a\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684\u5411\u91cf\u8868\u5f81\n \u8f68\u8ff9\u6570\u636e\u8868\u5f81\u5b66\u4e60  \u76ee\u7684\uff1a\u81ea\u52a8\u63d0\u53d6\u8f68\u8ff9\u6570\u636e\u7279\u5f81\uff0c\u5e76\u7528\u7279\u5f81\u5411\u91cf\u8868\u5f81\u8f68\u8ff9\u6570\u636e \u5173\u952e\uff1a\u5b66\u4e60\u8f68\u8ff9\u6570\u636e\u7684\u7a7a\u95f4\u548c\u65f6\u95f4\u4fe1\u606f \u8f68\u8ff9\u76f8\u4f3c\u5ea6\uff1a\u5229\u7528\u6b27\u5f0f\u8ddd\u79bb\u5ea6\u91cf\u4e24\u6761\u8f68\u8ff9\u7279\u5f81\u5411\u91cf\u7684\u8ddd\u79bb\uff0c\u65e0\u9700\u8bbe\u8ba1\u590d\u6742\u5ea6\u8f83\u9ad8\u7684\u8ddd\u79bb\u51fd\u6570 \u76ee\u524d\u7684\u8f68\u8ff9\u6570\u636e\u8868\u5f81\u5b66\u4e60\u7814\u7a76\u5f80\u5f80\u4ece\u5355\u4e00\u4fa7\u9762\u5c55\u5f00\uff0c\u5272\u88c2\u65f6\u95f4\u548c\u7a7a\u95f4\u4e4b\u95f4\u7684\u7d27\u5bc6\u5076\u5408\u5173\u8054\uff0c\u5bf9\u8f68\u8ff9\u6570\u636e\u65f6\u7a7a\u8026\u5408\u5206\u6790\u8fd8\u5f88\u6b20\u7f3a      \u4f4d\u7f6e\u9884\u6d4b\u7814\u7a76\u76f8\u5173\u7406\u8bba \u4ee5\u540e\u611f\u5174\u8da3\u518d\u7ec6\u770b\u5427\n  \u7b2c\u4e00\u6bb5\uff1a\u7eea\u8a00\n  \u8f68\u8ff9\u6570\u636e\u4e2d\u7684\u9884\u6d4b\u95ee\u9898\uff1a\u4e3b\u8981\u7684\u7814\u7a76\u65b9\u5411\u4e3a\u4ea4\u901a\u6d41\u7684\u9884\u6d4b\u548c\u4f4d\u7f6e\u6216\u884c\u4e3a\u9884\u6d4b\n  \u4eba\u7c7b\u6d3b\u52a8\u5728\u65f6\u7a7a\u7ef4\u5ea6\u4e0a\u6709\u5f88\u5927\u7684\u590d\u6742\u6027\uff0c\u4f46\u662f\u4e5f\u8868\u73b0\u51fa\u4e86\u4e00\u5b9a\u7684\u7edf\u8ba1\u89c4\u5f8b\u7279\u6027\n  \u4f4d\u7f6e\u9884\u6d4b\u4e3b\u8981\u7814\u7a76\u9884\u5224\u7528\u6237\u672a\u6765\u4f1a\u5230\u8fbe\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u4f4d\u7f6e\u63a8\u8350\u662f\u901a\u8fc7\u5206\u6790\u7528\u6237\u504f\u597d\u6a21\u578b\uff0c\u4e3a\u7528\u6237\u63a8\u8350\u611f\u5174\u8da3\u7684\u5730\u70b9\n  \u5206\u7c7b\uff1a\n \u4f4d\u7f6e\u9884\u6d4b\u6839\u636e\u9884\u6d4b\u65b9\u6cd5\u4e0d\u540c\u5206\u4e3a\u516b\u7c7b \u6839\u636e\u4e2a\u4f53\u6a21\u578b\u6216\u7fa4\u7ec4\u6a21\u578b\u5206\u4e3a\u4e09\u7c7b \u8f68\u8ff9\u6570\u636e\u6709\u4f4d\u7f6e\u793e\u4ea4\u7f51\u7edc\u7684\u7b7e\u5230\u6570\u636e(check\u00adin) \u4e0e GPS \u51fa\u884c\u6570\u636e\u4e24\u79cd      \u7b2c\u4e09\u7ae0 \u57fa\u4e8e\u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u4f4d\u7f6e\u8bed\u4e49\u63a8\u65ad \u5f15\u8a00  \u4f4d\u7f6e\u793e\u4ea4\u7f51\u7edc\u4e2d\u7528\u6237\u7b7e\u5230\u6d3b\u52a8 \u27a1\ufe0f \u7b7e\u5230\u4f4d\u7f6e\u7684\u8bed\u4e49:\u63ed\u793a\u7528\u6237\u6d3b\u52a8\u7684\u76ee\u7684\u548c\u7528\u6237\u504f\u597d \u27a1\ufe0f \u4f4d\u7f6e\u8bed\u4e49\u63a8\u65ad \u5df2\u6709\u7814\u7a76\u8868\u660e  \u7528\u6237\u7684\u7b7e\u5230\u6d3b\u52a8\u4e0e\u4f4d\u7f6e\u8bed\u4e49\u5b58\u5728\u67d0\u79cd\u6f5c\u5728\u5173\u7cfb  \u8868\u660e\u7528\u6237\u7b7e\u5230\u504f\u597d\u4e0e\u4f4d\u7f6e\u8bed\u4e49\u4e4b\u95f4\u5b58\u5728\u8054\u7cfb \u4f8b\u5982\uff0c\u7ecf\u5e38\u8bbf\u95ee\u56fe\u4e66\u9986\u3001\u4e66\u5e97\u3001\u5b66\u6821\u7b49\u7c7b\u4f3c\u5730\u70b9\u7684\u7528\u6237\u5f88\u5c11\u8bbf\u95ee\u591c\u5e97\u3001\u9152\u5427\u7b49\u5730\u3002   \u76f8\u4f3c\u7a7a\u95f4\u7ed3\u6784\u4e0e\u76f8\u4f3c\u7684\u65f6\u95f4\u6a21\u5f0f\u7684\u5730\u70b9\u5177\u6709\u76f8\u8fd1\u7684\u8bed\u4e49  \u8868\u660e\u5728\u57ce\u5e02\u89c4\u5212\u5efa\u8bbe\u65f6\uff0c\u5177\u6709\u76f8\u540c\u804c\u80fd\u7684\u4f4d\u7f6e\u5efa\u8bbe\u89c4\u5212\u76f8\u4f3c \u4f8b\u5982\uff0c\u5c45\u6c11\u533a\u9644\u8fd1\u666e\u904d\u6709\u8d85\u5e02\u3001\u533b\u9662\u3001\u5e02\u573a\u7b49\u914d\u5957   \u73b0\u6709\u4f4d\u7f6e\u8bed\u4e49\u63a8\u65ad\u7b97\u6cd5  \u901a\u8fc7\u5ea6\u91cf\u7528\u6237\u51fa\u884c\u884c\u4e3a\u95f4\u76f8\u4f3c\u5ea6\u8f6c\u5316\u4e3a\u4f4d\u7f6e\u7279\u5f81\uff0c\u8fdb\u800c\u63a8\u65ad\u76f8\u4f3c\u7b7e\u5230\u4f4d\u7f6e\u7684\u8bed\u4e49 \u63d0\u53d6\u7528\u6237\u7b7e\u5230\u6d3b\u52a8\u7684\u51fa\u884c\u6a21\u5f0f\uff0c\u4ece\u4e2d\u63d0\u53d6\u4f4d\u7f6e\u7279\u5f81\uff0c\u63a8\u65ad\u4f4d\u7f6e\u8bed\u4e49 \u4f46\u5ea6\u91cf\u7528\u6237\u7b7e\u5230\u884c\u4e3a\u76f8\u4f3c\u5ea6\uff0c\u624b\u5de5\u63d0\u53d6\u4f4d\u7f6e\u7279\u5f81\u6216\u63d0\u53d6\u957f\u6548\u6709\u4ef7\u503c\u7684\u7b7e\u5230\u6d3b\u52a8\u51fa\u884c\u6a21\u5f0f\u662f\u4e00\u9879\u6709\u6311\u6218\u6027\u7684\u5de5\u4f5c   \u672c\u7814\u7a76  \u4e3a\u4e86\u89e3\u51b3\u73b0\u6709\u65b9\u6cd5\u901a\u8fc7\u624b\u5de5\u63d0\u53d6\u7279\u5f81\u6216\u51fa\u884c\u6a21\u5f0f\u7684\u4e0d\u8db3\uff0c\u540c\u65f6\u5145\u5206\u5229\u7528\u7b7e\u5230\u6d3b\u52a8\u4e2d\u7684\u9ad8\u9636\u4fe1\u606f \u57fa\u4e8e\u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u4f4d\u7f6e\u8bed\u4e49\u63a8\u65ad\u7b97\u6cd5\u6846\u67b6\uff08SI-\u00adGCN\uff09  \u65e0\u76d1\u7763\u5730\u63d0\u53d6\u7528\u6237\u3001\u4f4d\u7f6e\u7684\u65f6\u7a7a\u7279\u5f81  node2vec\u5b66\u4e60\u4f4d\u7f6e\u7684\u7a7a\u95f4\u7ed3\u6784\u7279\u5f81 \u53d8\u5206\u81ea\u7f16\u7801\u5668\u5b66\u4e60\u65f6\u95f4\u4fe1\u606f\u7684\u7279\u5f81   \u6784\u5efa\u7528\u6237\u00ad-\u4f4d\u7f6e\u8bbf\u95ee\u4e8c\u90e8\u56fe\uff0c\u5229\u7528\u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u83b7\u53d6\u7528\u6237\u7b7e\u5230\u6d3b\u52a8\u4e2d\u7684\u9ad8\u9636\u4fe1\u606f\u7528\u4ee5\u63a8\u65ad\u4f4d\u7f6e\u8bed\u4e49 \u5f15\u5165\u6ce8\u610f\u529b\u673a\u5236\u533a\u5206\u4e8c\u90e8\u56fe\u4e2d\u90bb\u5c45\u8282\u70b9\u7684\u4e0d\u540c\u5f71\u54cd     \u8d21\u732e  \u5229\u7528\u65e0\u76d1\u7763\u65b9\u5f0f\u63d0\u53d6\u7528\u6237\u3001\u4f4d\u7f6e\u7684\u65f6\u7a7a\u7279\u5f81 \u5229\u7528\u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u83b7\u53d6\u7528\u6237\u7b7e\u5230\u6d3b\u52a8\u4e2d\u7684\u9ad8\u9636\u4fe1\u606f\u7528\u4ee5\u63a8\u65ad\u4f4d\u7f6e\u8bed\u4e49 \u826f\u597d\u7684\u8bed\u4e49\u63a8\u65ad\u6027\u80fd      SI-GCN\u6846\u67b6 \u4e09\u90e8\u5206   \u65f6\u7a7a\u7279\u5f81\u63d0\u53d6\n  \u7528\u6237-\u4f4d\u7f6e\u8bbf\u95ee\u4e8c\u90e8\u56fe\n  \u4f4d\u7f6e\u8bed\u4e49\u63a8\u65ad\n  \u4f4d\u7f6e\u65f6\u7a7a\u7279\u5f81\u63d0\u53d6   \u4f4d\u7f6e\u7a7a\u95f4\u7279\u5f81\u63d0\u53d6\t \u624b\u5de5\u63d0\u53d6\u7279\u5f81 \u27a1\ufe0f \u65e0\u76d1\u7763\u65b9\u6cd5\u63d0\u53d6 Step 1. \u7528\u6237\u6620\u5c04\u81f3\u5730\u7406\u7a7a\u95f4  \u9664\u53bb\u7528\u6237\u5bb6\u4ee5\u5916\uff0c\u9009\u53d6\u7528\u6237\u8bbf\u95ee\u9891\u7387\u6700\u9ad8\u7684 3 \u4e2a\u8bbf\u95ee\u4f4d\u7f6e\u4ee3\u8868\u7528\u6237\u5e38\u53bb\u7684\u5730\u7406\u7a7a\u95f4\u6d3b\u52a8\u8303\u56f4 \u4f7f\u7528 3 \u4e2a\u4f4d\u7f6e\u7684\u5e73\u5747\u7ecf\u5ea6\u3001\u7eac\u5ea6\u4f5c\u4e3a\u7528\u6237 u \u7684\u5730\u7406\u5750\u6807   Step 2. \u6784\u9020\u5730\u7406\u7a7a\u95f4\u7f51\u7edc  \u5c06\u7528\u6237\u3001\u5730\u7406\u4f4d\u7f6e\u770b\u4f5c\u8282\u70b9\uff0c\u901a\u8fc7\u8ba1\u7b97\u8282\u70b9\u95f4\u8ddd\u79bb \u82e5\u8ddd\u79bb\u5c0f\u4e8e \u03b4 \u65f6\uff0c\u4e24\u8282\u70b9\u76f8\u8fde\u6784\u6210\u8fb9\uff0c\u5426\u5219\u4e0d\u6784\u6210\u8fb9   Step 3. \u7a7a\u95f4\u7279\u5f81\u63d0\u53d6\u7b97\u6cd5  \u91c7\u7528 node2vec \u7b97\u6cd5\u65e0\u76d1\u7763\u5b66\u4e60\u7528\u6237\u3001\u5730\u7406\u4f4d\u7f6e\u7684\u7a7a\u95f4\u7279\u5f81\u8868\u8fbe \u76ee\u6807\u662f\u5728\u5730\u7406\u7a7a\u95f4\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u4e0e\u90bb\u5c45\u8282\u70b9\u5171\u540c\u51fa\u73b0\u7684\u6982\u7387\u6700\u5927 \u27a1\ufe0f \u6700\u5927\u5316\u90bb\u5c45\u8282\u70b9\u7684\u51fa\u73b0\u6982\u7387      \u4f4d\u7f6e\u65f6\u95f4\u7279\u5f81\u63d0\u53d6 \u76ee\u6807\u662f\u5b66\u4e60\u7528\u6237\u8bbf\u95ee\u7684\u65f6\u95f4\u6a21\u5f0f\u4ee5\u53ca\u5730\u7406\u4f4d\u7f6e\u7684\u88ab\u8bbf\u95ee\u7684\u65f6\u95f4\u6a21\u5f0f Step 1. \u5efa\u7acb 7 \u00d7 24 \u7684\u65f6\u95f4\u77e9\u9635\uff0c\u8ba1\u7b97\u7528\u6237\u8bbf\u95ee\u65f6\u95f4\u3001\u4f4d\u7f6e\u7684\u88ab\u8bbf\u95ee\u65f6\u95f4\u5f97\u5230\u65f6\u95f4\u77e9\u9635  \u4f8b\u5982\uff0c\u7528\u6237 A \u5728\u5468\u4e00\u4e0a\u5348 9 \u70b910 \u70b9\u8bbf\u95ee\u4f4d\u7f6e B\uff0c\u5219\u65f6\u95f4\u77e9\u9635\u76f8\u5e94\u5143\u7d20\u52a0 1 \u4f4d\u7f6e\u7684\u65f6\u95f4\u77e9\u9635\u4e0e\u7528\u6237\u7684\u65f6\u95f4\u77e9\u9635\u8ba1\u7b97\u65b9\u6cd5\u4e00\u81f4   Step 2. \u91c7\u7528\u53d8\u5206\u81ea\u7f16\u7801\u5668\u65e0\u76d1\u7763\u5b66\u4e60\u65f6\u95f4\u77e9\u9635\u7684\u7279\u5f81\u5411\u91cf Step 3. \u5b8c\u6210\u7f51\u7edc\u5b66\u4e60\u540e\uff0c\u63d0\u53d6\u53d8\u5206\u81ea\u7f16\u7801\u5668\u7684\u9690\u5c42\u8f93\u51fa\u5f97\u5230\u7528\u6237\u3001\u5730\u7406\u4f4d\u7f6e\u7684\u65f6\u95f4\u7279\u5f81    \u5c06\u7528\u6237\u3001\u5730\u7406\u4f4d\u7f6e\u7684\u7a7a\u95f4\u7279\u5f81\u3001\u65f6\u95f4\u7279\u5f81\u76f4\u63a5\u76f8\u8fde\uff0c\u6784\u6210\u65f6\u7a7a\u7279\u5f81\n  \u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u63a8\u65ad\u6a21\u578b  \u7528\u6237\u00ad-\u4f4d\u7f6e\u8bbf\u95ee\u4e8c\u90e8\u56fe\uff1a\u53cd\u6620\u7528\u6237\u4e0e\u5730\u7406\u4f4d\u7f6e\u4e4b\u95f4\u7684\u8bbf\u95ee\u5173\u7cfb\u4e0e\u62d3\u6251\u7ed3\u6784 \u5229\u7528\u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5c06\u7528\u6237-\u00ad\u4f4d\u7f6e\u8bbf\u95ee\u4e8c\u90e8\u56fe\u7684\u62d3\u6251\u5173\u7cfb\u3001\u7528\u6237\u548c\u5730\u7406\u4f4d\u7f6e\u7684\u65f6\u7a7a\u7279\u5f81\u76f8\u7ed3\u5408\u63a2\u7d22\u4f4d\u7f6e\u7684\u8bed\u4e49  \u5b9e\u9a8c\u4e0e\u5206\u6790   \u5b9e\u9a8c\n \u6570\u636e\u96c6\uff1aFourSquare \u63d0\u4f9b\u7684\u7ebd\u7ea6\u5e02 (NYC) \u548c\u4e1c\u4eac\u5e02 (Tokyo)\u7b7e\u5230\u6570\u636e\u96c6 \u5b9e\u9a8c\u4e2d\u79fb\u9664\u4e86\u8bbf\u95ee\u6b21\u6570\u5c11\u4e8e 10 \u6b21\u7684\u4f4d\u7f6e \u8bbe\u7f6e\u4e24\u79cd\u8bed\u4e49\u6807\u7b7e\u7b56\u7565  \u6240\u6709\u7684\u6807\u7b7e\u5f52\u4e3a 10 \u5927\u7c7b \u7b7e\u5230\u6b21\u6570\u6392\u5e8f\u524d 20 \u7684\u4f4d\u7f6e\u8bed\u4e49\u6807\u7b7e     \u9009\u62e9\u4e86\u4e09\u79cd\u57fa\u51c6\u4f4d\u7f6e\u8bed\u4e49\u63a8\u65ad\u7b97\u6cd5\u4f5c\u4e3a\u5bf9\u6bd4 \u53c2\u6570\uff1a\u7a7a\u95f4\u7279\u5f81\u7ef4\u5ea6\u4e3a 200\uff0c\u65f6\u95f4\u7279\u5f81\u7ef4\u5ea6\u4e3a 16\uff0c\u56e0\u6b64\u7528\u6237\u3001\u4f4d\u7f6e\u65f6\u7a7a\u7279\u5f81\u4e3a 216 \u7ef4 \u4e3a\u4e86\u5145\u5206\u8bc4\u4f30\u6a21\u578b\u6027\u80fd\uff0c\u5b8c\u6210\u63d0\u53d6\u4f4d\u7f6e\u65f6\u7a7a\u7279\u5f81\u540e\uff0c\u8bad\u7ec3\u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u65f6\uff0c\u5206\u522b\u91c7\u7528 80%\uff0c70%\uff0c60%\uff0c50% \u7684\u8bad\u7ec3\u6570\u636e\u8bad\u7ec3\u6a21\u578b\uff0c\u5bf9\u5e94 20%\uff0c30%\uff0c40%\uff0c50% \u7684\u6d4b\u8bd5\u6570\u636e\u6d4b\u8bd5\u6a21\u578b\u3002    \u7ed3\u679c\u4e0e\u5206\u6790\n \u6570\u636e\u7c7b\u522b\u5206\u5e03\u4e0d\u5e73\u8861\u5bf9\u6a21\u578b\u6027\u80fd\u5f71\u54cd\u660e\u663e \u5728\u7ebd\u7ea6\u5e02\u6570\u636e\u96c6\u7684\u7ed3\u679c\u597d\u4e8e\u4e1c\u4eac\u5e02\u6570\u636e\u96c6\u7684\u7ed3\u679c \u27a1\ufe0f \u7ebd\u7ea6\u5e02\u6bcf\u540d\u7528\u6237\u8bbf\u95ee\u8fc7\u66f4\u591a\u4f4d\u7f6e\uff0c\u4f7f\u6a21\u578b\u80fd\u591f\u83b7\u5f97\u66f4\u591a\u4fe1\u606f \u4e0d\u540c\u8bad\u7ec3\u6570\u636e\u6bd4\u4f8b\u7684\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cSI\u00ad-GCN \u8bed\u4e49\u63a8\u65ad\u6027\u80fd\u7a33\u5b9a\uff0c\u5b9e\u9a8c\u7ed3\u679c\u6ca1\u6709\u663e\u8457\u964d\u4f4e\u3002 \u4e0d\u540c\u7279\u5f81\u5bf9 SI\u00adGCN \u6a21\u578b\u8bed\u4e49\u63a8\u65ad\u6027\u80fd\u7684\u5f71\u54cd \u27a1\ufe0f \u7f3a\u5931\u4efb\u4f55\u4e00\u79cd\u7279\u5f81\u5bf9\u6a21\u578b\u90fd\u4f1a\u4ea7\u751f\u8f83\u5927\u5f71\u54cd\uff0c\u6240\u6709\u8bc4\u4ef7\u6307\u6807\u90fd\u6709\u4e0b\u964d \u81ea\u6ce8\u610f\u529b\u673a\u5236\u4f7f\u8282\u70b9\u80fd\u591f\u6355\u6349\u6570\u636e\u5185\u90e8\u7684\u76f8\u5173\u6027\uff0c\u51cf\u5c11\u5176\u4ed6\u4fe1\u606f\u7684\u5e72\u6270\u3002  \u79fb\u9664\u81ea\u6ce8\u610f\u529b\u673a\u5236\u540e\uff0c\u6a21\u578b\u6574\u4f53\u6027\u80fd\u6709\u663e\u8457\u4e0b\u6ed1\uff0c\u4f46\u90e8\u5206\u5b9e\u9a8c\u7ed3\u679c\u4f18\u4e8e\u79fb\u9664\u7279\u5b9a\u7279\u5f81\u6a21\u578b\u7684\u7ed3\u679c\uff0c\u8bf4\u660e\u4f4d\u7f6e\u7684\u65f6\u7a7a\u7279\u5f81\u5bf9 SI\u00adGCN \u6a21\u578b\u6027\u80fd\u6709\u66f4\u91cd\u8981\u5f71\u54cd\u3002 \u81ea\u6ce8\u610f\u529b\u673a\u5236\u5bf9\u6a21\u578b\u6027\u80fd\u63d0\u5347\u662f\u6b63\u9762\u7684\uff0c\u81ea\u6ce8\u610f\u529b\u673a\u5236\u52a0\u6743\u5904\u7406\u90bb\u5c45\u8282\u70b9\u4fe1\u606f\uff0c\u6709\u6548\u63d0\u9ad8\u6a21\u578b\u6027\u80fd\u3002   SI\u00adGCN \u7ed3\u679c\u660e\u663e\u4f18\u4e8e\u4e09\u79cd\u57fa\u51c6\u7b97\u6cd5\u7684\u4f4d\u7f6e\u8bed\u4e49\u63a8\u65ad\u6027\u80fd    \u7b2c\u56db\u7ae0 \u878d\u5408\u65f6\u7a7a\u7ed3\u6784\u7684\u8f68\u8ff9\u6570\u636e\u8868\u5f81\u5b66\u4e60 \u5f15\u8a00  \u4e0d\u540c\u5b9a\u4f4d\u8bbe\u5907\u91c7\u96c6\uff0c\u4e0d\u540c\u91c7\u6837\u7387\u4e0e\u8f68\u8ff9\u957f\u5ea6 \u27a1\ufe0f \u8f68\u8ff9\u6570\u636e\u8868\u5f81\u56f0\u96be \u73b0\u6709\u5927\u591a\u6570\u8f68\u8ff9\u8868\u5f81\u7814\u7a76\u5272\u88c2\u65f6\u95f4\u4e0e\u7a7a\u95f4\u4e4b\u95f4\u7684\u7d27\u5bc6\u8026\u5408\uff0c\u4ec5\u4ece\u5355\u4e00\u7ef4\u5ea6\uff08\u901a\u5e38\u662f\u7a7a\u95f4\u7ef4\u5ea6\uff09\u8868\u5f81\u8f68\u8ff9\u6570\u636e\uff1a\uff081\uff09\u4ee5\u5f80\u5173\u6ce8\u8f68\u8ff9\u6570\u636e\u7a7a\u95f4\u7ed3\u6784\u8868\u5f81\uff0c\u5ffd\u7565\u8f68\u8ff9\u7684\u65f6\u95f4\u4fe1\u606f\uff1b\uff082\uff09\u4ee5\u5f80\u8868\u5f81\u65b9\u5f0f\u4e0d\u9002\u7528\u4e8e\u666e\u904d\u7684\u673a\u5668\u5b66\u4e60\u4e0e\u6570\u636e\u6316\u6398\u6a21\u578b\uff1b\uff083\uff09\u6b20\u7f3a\u8bed\u4e49\u4fe1\u606f\u5d4c\u5165 \u672c\u6587\u63d0\u51fa\u4e00\u79cd\u7edf\u4e00\u7684\u6846\u67b6\u2014\u2014\u878d\u5408\u65f6\u7a7a\u7ed3\u6784\u7684\u8f68\u8ff9\u8868\u5f81\u5b66\u4e60\u7b97\u6cd5\u6846\u67b6\uff08Space-Time Architecture for semantic trajectory Representation, STAR\uff09  \u4e0a\u4e0b\u6587\u4fe1\u606f+\u8bcd\u5411\u91cf\u8868\u5f81\u5b66\u4e60\u7b97\u6cd5\u5b66\u4e60\u8f68\u8ff9\u7a7a\u95f4\u7ed3\u6784\u4fe1\u606f \u81ea\u9002\u5e94\u970d\u514b\u65af\u8fc7\u7a0b\u5efa\u6a21\u8f68\u8ff9\u65f6\u95f4\u4fe1\u606f \u8f68\u8ff9\u5411\u91cf\u8868\u5f81\u4f5c\u4e3a\u6865\u6881\u8fde\u63a5\u878d\u5408\u8f68\u8ff9\u65f6\u7a7a\u4fe1\u606f \u901a\u8fc7\u9884\u6d4b\u7528\u6237\u4f4d\u7f6e\u548c\u65f6\u95f4\u7684\u8fc7\u7a0b\u81ea\u52a8\u5b66\u4e60\u8f68\u8ff9\u8868\u5f81 \u4e3b\u6210\u5206\u5206\u6790\uff08PCA\uff09 \u27a1\ufe0f \u68c0\u6d4b\u5f02\u5e38\u8f68\u8ff9   \u8d21\u732e  \u878d\u5408\u65f6\u7a7a\u4fe1\u606f \u8bed\u4e49\u5d4c\u5165 \u5728\u8f68\u8ff9\u8868\u5f81\u5411\u91cf\u57fa\u7840\u4e0a\u63d0\u51fa\u8f68\u8ff9\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5    \u6846\u67b6\u6982\u8ff0  \u4e09\u90e8\u5206\uff1a\u7a7a\u95f4\u8868\u5f81\u3001\u8f68\u8ff9\u65f6\u95f4\u5efa\u6a21\u3001\u65f6\u7a7a\u878d\u5408  \u8f68\u8ff9\u8868\u5f81\u5b66\u4e60\u6a21\u578b \u8f68\u8ff9\u7a7a\u95f4\u4fe1\u606f\u5411\u91cf\u8868\u5f81 \u4e09\u79cd\u4e0a\u4e0b\u6587\u7684\u63d0\u51fa\u8fd8\u662f\u86ee\u6709\u610f\u4e49\u7684\n  \u8bcd\u5411\u91cf\u8868\u5f81\u5b66\u4e60\u4ecb\u7ecd + word2vec + CBOW\n  \u7c7b\u6bd4\u601d\u60f3\uff1a\u5c06\u7528\u6237\u8f68\u8ff9\u4e2d\u7684\u7528\u6237\u5174\u8da3\u70b9\u7c7b\u6bd4\u4e8e\u81ea\u7136\u8bed\u8a00\u9886\u57df\u6587\u672c\u4e2d\u7684\u5355\u8bcd\uff0c\u5c06\u7528\u6237\u8f68\u8ff9\u7c7b\u6bd4\u4e8e\u6587\u672c\u4e2d\u7684\u53e5\u5b50\n  \u8f68\u8ff9\u4e0e\u6587\u672c\u4e24\u8005\u4e4b\u95f4\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u6709\u6240\u5dee\u522b\uff0c\u56e0\u4e3a\u5174\u8da3\u70b9\u8bed\u4e49\u4fe1\u606f\u76f8\u8fd1\uff0c\u5e76\u4e0d\u4e00\u5b9a\u5728\u5730\u7406\u4e0a\u76f8\u90bb \u27a1\ufe0f \u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u7ed9\u5b9a\u5174\u8da3\u70b9\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f \u5730\u7406\u4e0a\u4e0b\u6587 \u8f68\u8ff9\u4e0a\u4e0b\u6587 \u8bed\u4e49\u4e0a\u4e0b\u6587\uff1a  1\u00ad\u9636\u71b5\uff1a1\u00ad\u9636\u71b5\u662f\u7ed9\u5b9a\u5174\u8da3\u70b9\u4e0e\u5176 1\u00ad\u9636\u90bb\u5c45\u8fde\u63a5\u5f3a\u5ea6\u7684\u5206\u5e03\u71b5 2\u00ad\u9636\u71b5\u548c\u805a\u7c7b\u7cfb\u6570\uff1a2\u00ad\u9636\u71b5\u8fdb\u4e00\u6b65\u83b7\u53d6\u4e86\u8fde\u63a5\u5f3a\u5ea6 2\u00ad\u9636\u90bb\u5c45\u8303\u56f4\u5185\u7684\u6574\u4f53\u5206\u5e03 \u805a\u7c7b\u7cfb\u6570\uff1a\u8003\u8651\u8fde\u901a\u5bc6\u5ea6\uff0c\u8ba1\u7b97\u805a\u7c7b\u7cfb\u6570      \u6839\u636e\u4e0a\u8ff0\u5174\u8da3\u70b9\u7684\u4e0a\u4e0b\u6587\u90bb\u57df\uff0c\u901a\u8fc7 CBOW \u6a21\u578b\u5b66\u4e60\u5174\u8da3\u70b9\u548c\u8f68\u8ff9\u7684\u5411\u91cf\u8868\u5f81\n  \u65f6\u95f4\u4fe1\u606f\u5efa\u6a21 \u6ca1\u770b\u61c2\n  \u70b9\u8fc7\u7a0b\n  \u6761\u4ef6\u5f3a\u5ea6\u51fd\u6570\uff1a\u5728\u7ed9\u5b9a\u5386\u53f2\u6570\u636e\u7684\u6761\u4ef6\u4e0b\uff0c\u65b0\u4e8b\u4ef6\u5728\u5355\u4f4d\u65f6\u523b\u5185\u53d1\u751f\u7684\u77ac\u65f6\u7387\n  \u970d\u514b\u65af\u8fc7\u7a0b\uff1a\u6cca\u677e\u8fc7\u7a0b\u7684\u4e00\u4e2a\u6269\u5c55\n  \u970d\u514b\u65af\u8fc7\u7a0b\u6bd4\u4f20\u7edf\u6cca\u677e\u8fc7\u7a0b\u66f4\u80fd\u591f\u6a21\u62df\u8fc7\u53bb\u4e8b\u4ef6\u5bf9\u672a\u6765\u4e8b\u4ef6\u53d1\u751f\u7684\u5f71\u54cd\uff0c\u7279\u522b\u662f\u8fc7\u53bb\u4e8b\u4ef6\u5bf9\u672a\u6765\u4e8b\u4ef6\u7684\u6b63\u9762\u6fc0\u52b1\u5f71\u54cd\n\u57fa\u4e8e\u8f68\u8ff9\u8868\u5f81\u7684\u5f02\u5e38\u68c0\u6d4b   \u73b0\u6709\u7684\u8f68\u8ff9\u5f02\u5e38\u68c0\u6d4b\u7b97\u6cd5\u4e3b\u8981\u5229\u7528\u8f68\u8ff9\u8ddd\u79bb\u5ea6\u91cf\u3001\u8f68\u8ff9\u5bc6\u5ea6\u3001\u5b50\u8f68\u8ff9\u7247\u6bb5\u5212\u5206\u7b49\u7a7a\u95f4\u5f62\u72b6\uff0c\u6216\u8f68\u8ff9\u5f02\u5e38\u6a21\u5f0f\u68c0\u6d4b\u5f02\u5e38\u8f68\u8ff9\n  \u672c\u6587\uff1a\u5206\u6790\u8f68\u8ff9\u6570\u636e\u8868\u5f81\u4e2d\u6570\u636e\u7684\u4e3b\u8981\u6210\u5206\u4fe1\u606f\uff0c\u68c0\u6d4b\u504f\u79bb\u4e3b\u8981\u6210\u5206\u4fe1\u606f\u7684\u8f68\u8ff9\n  \u5f02\u5e38\u5206\u6570\u8868\u793a\u8f68\u8ff9\u5f02\u5e38\u7a0b\u5ea6\uff0c\u5373\u5f02\u5e38\u8f68\u8ff9\u4e0e\u8f68\u8ff9\u6570\u636e\u4e3b\u6210\u5206\u7684\u504f\u79bb\u7a0b\u5ea6\uff0c\u9009\u62e9\u4e00\u4e2a\u9608\u503c\u6765\u533a\u5206\u5f02\u5e38\u8f68\u8ff9\n  \u5b9e\u9a8c\u4e0e\u5206\u6790  \u6570\u636e \u5174\u8da3\u70b9\u63d0\u53d6\uff1a\u4e3a\u4e86\u6709\u6548\u5206\u6790\u8f68\u8ff9\u4e2d\u7684\u91cd\u8981\u4fe1\u606f\uff0c\u5b9e\u9a8c\u63d0\u53d6\u8f68\u8ff9\u6570\u636e\u96c6\u4e2d\u7684\u5174\u8da3\u70b9\uff0c\u51cf\u5c11\u65e0\u6548\u4fe1\u606f\u6709\u52a9\u4e8e\u5206\u6790\u8f68\u8ff9\u8868\u5f81\u5b66\u4e60\u7b97\u6cd5\u7684\u6027\u80fd\u3002\u5c06\u7814\u7a76\u533a\u57df\u5212\u5206\u4e3a n \u00d7 n \u7684\u7f51\u683c\uff08\u5b9e\u9a8c\u4e2d\u8bbe\u7f6e n = 100\uff09\u3002\u8ba1\u7b97\u843d\u5728\u7f51\u683c\u4e2d GPS \u70b9\u7684\u7ecf\u7eac\u5ea6\u7684\u5e73\u5747\u503c\u548c\u65f6\u95f4\u4fe1\u606f\uff0c\u8ba1\u7b97\u5355\u5143\u7f51\u683c\u5730\u7406\u8ddd\u79bb\u7684\u76f8\u4f3c\u5ea6\u77e9\u9635\uff0c\u6700\u540e\u4f7f\u7528 K\u00admeans \u805a\u7c7b\u65b9\u6cd5\u63d0\u53d6 K \u4e2a\u5174\u8da3\u70b9 (POIs)\uff0c\u672c\u7ae0\u5b9e\u9a8c\u4e2d\u8bbe\u7f6e\u6240\u6709\u6570\u636e\u96c6K = 1000 \u8bed\u4e49\u6807\u7b7e\u6807\u6ce8\uff1a\u5c06\u5174\u8da3\u70b9\u8bed\u4e49\u7c7b\u522b\u5206\u4e3a\u516b\u79cd\uff0c\u5305\u62ec\u98ce\u666f\u533a\u3001\u516c\u56ed\u3001\u6751\u5e84\u3001\u793e\u533a\u3001\u4ea4\u901a\u3001\u5546\u52a1\u533a\u3001\u533b\u9662\u548c\u6559\u80b2\u3002  \u7b2c\u4e94\u7ae0 \u57fa\u4e8e\u504f\u597d\u793e\u4ea4\u4e92\u52a8\u7684\u4f4d\u7f6e\u9884\u6d4b\u7b97\u6cd5 \u5f15\u8a00  \u4f4d\u7f6e\u9884\u6d4b\u662f\u8f68\u8ff9\u5206\u6790\u4e2d\u7684\u4e00\u9879\u91cd\u8981\u4efb\u52a1\uff0c\u4f4d\u7f6e\u9884\u6d4b\u7684\u76ee\u6807\u662f\u5206\u6790\u4eba\u7c7b\u7684\u51fa\u884c\u8f68\u8ff9\u6570\u636e\uff0c\u4ece\u5386\u53f2\u6570\u636e\u4e2d\u5b66\u4e60\u4eba\u4eec\u7684\u51fa\u884c\u6a21\u5f0f\u9884\u6d4b\u672a\u6765\u4eba\u4eec\u5230\u8bbf\u7684\u4f4d\u7f6e \u4e2a\u4f53\u7684\u51fa\u884c\u884c\u4e3a\u5e76\u4e0d\u5b8c\u5168\u662f\u89c4\u5f8b\u7684\uff0c\u4e14\u4f1a\u53d7\u5230\u5916\u90e8\u56e0\u7d20\u7684\u5f71\u54cd\u800c\u53d1\u751f\u53d8\u5316 \u4eba\u7c7b\u884c\u4e3a\u4e3b\u8981\u53d7\u81ea\u8eab\u504f\u597d\u4e0e\u5916\u90e8\u793e\u4ea4\u4e24\u65b9\u9762\u5f71\u54cd \u672c\u6587\u63d0\u51fa\u2014\u2014\u57fa\u4e8e\u504f\u597d\u793e\u4ea4\u4e92\u52a8\u7684\u4f4d\u7f6e\u9884\u6d4b\u7b97\u6cd5\uff08Preferences and Social Interactions for location prediction, PSI\uff09\uff1a  \u9996\u5148\u91cf\u5316\u5916\u90e8\u4e92\u52a8\u5bf9\u4e2a\u4eba\u51fa\u884c\u884c\u4e3a\u7684\u5f71\u54cd\uff0c\u5229\u7528\u805a\u7c7b\u6280\u672f\u786e\u5b9a\u4e2a\u4eba\u6240\u5c5e\u7684\u5173\u8054\u7fa4\u7ec4 \u7136\u540e\u91c7\u7528\u5173\u8054\u89c4\u5219\u6316\u6398\u65b9\u6cd5\uff0c\u63d0\u53d6\u53cd\u6620\u5916\u90e8\u4e92\u52a8\u5f71\u54cd\u7684\u7fa4\u7ec4\u9891\u7e41\u51fa\u884c\u6a21\u5f0f \u6700\u540e\uff0c\u5229\u7528\u5cad\u56de\u5f52\u6574\u5408\u7fa4\u7ec4\u79fb\u52a8\u6a21\u5f0f\u4e0e\u4e2a\u4eba\u51fa\u884c\u6a21\u5f0f\uff0c\u9884\u6d4b\u7528\u6237\u4f4d\u7f6e   \u8d21\u732e\uff1a  \u53cc\u5c42\u805a\u7c7b\u7684\u5174\u8da3\u70b9\uff1a\u70ed\u70b9\u5174\u8da3\u70b9\u548c\u666e\u901a\u5174\u8da3\u70b9 \u57fa\u4e8e\u504f\u597d\u793e\u4ea4\u4e92\u52a8\u7684\u4f4d\u7f6e\u9884\u6d4b\u7b97\u6cd5 \u91c7\u7528\u5317\u4eac\u884c\u4eba\u51fa\u884c\u6570\u636e\u96c6\u548c\u6ce2\u5c14\u56fe\u5e02\u7684\u51fa\u79df\u8f66\u6570\u636e\u96c6\u5bf9 PSI \u8fdb\u884c\u5b9e\u9a8c\u5206\u6790    \u57fa\u4e8e\u5730\u7406\u573a\u666f\u7684\u57ce\u5e02\u529f\u80fd\u533a\u5efa\u6a21\u4e0e\u5206\u6790\u65b9\u6cd5\u7814\u7a76  \u5f20\u4fee\u8fdc-2019-\u5317\u4eac\u5927\u5b66\uff0c\u5e08\u4ece\u675c\u4e16\u5b8f  \u672d\u8bb0  \u5199\u4f5c\u7528\u8bcd\u5957\u8def\uff1a\u63d0\u51fa\u4e86-\u5e94\u7528\u4e8e-\u80fd\u591f-\u5b9e\u73b0\u4e86  \u6458\u8981   \u7b2c\u4e00\u6bb5\uff1a\u80cc\u666f-\u95ee\u9898-\u672c\u6587\u76ee\u7684\n \u5168\u7403\u57ce\u5e02\u5316\u53d1\u5c55-\u57ce\u5e02\u95ee\u9898 \u54cd\u5e94\u6211\u56fd\u57ce\u5e02\u53ef\u6301\u7eed\u53d1\u5c55\u7684\u91cd\u5927\u6218\u7565\u89c4\u5212\u27a1\ufe0f\u9700\u8981\u83b7\u53d6\u9ad8\u65f6\u6548\u3001 \u9ad8\u7cbe\u5ea6\u3001\u5927\u8303\u56f4\u7684\u57ce\u5e02\u529f\u80fd\u5206\u533a\u6570\u636e \u5df2\u6709\u7814\u7a76\u901a\u5e38\u4f7f\u7528\u57ce\u5e02\u89c4\u5212\u56fe\u8868\u5f81\u529f\u80fd\u5206\u533a\u4fe1\u606f  \u89c4\u5212\u56fe\u4ec5\u53cd\u6620\u67d0\u4e00\u65f6\u95f4\u533a\u95f4\u5185\u5bf9\u529f\u80fd\u533a\u5efa\u8bbe\u7684\u9884\u671f\u76ee\u6807\uff0c\u4e0d\u80fd\u53cd\u6620\u5f53\u524d\u65f6\u523b\u57ce\u5e02\u529f\u80fd\u5206\u533a\u7684\u771f\u5b9e\u72b6\u6001 \u89c4\u5212\u56fe\u4ee5\u8857\u533a\u4e3a\u57fa\u672c\u5355\u5143\uff0c \u5ffd\u89c6\u4e86\u8857\u533a\u5185\u90e8\u529f\u80fd\u7c7b\u578b\u7684\u5f02\u8d28\u6027\uff0c \u8fdb\u800c\u65e0\u6cd5\u5728\u66f4\u7cbe\u7ec6\u7684\u5c3a\u5ea6\u4e0a\u5206\u6790\u529f\u80fd\u5206\u533a\u60c5\u51b5   \u56e0\u6b64\uff0c\u672c\u6587\u81f4\u529b\u4e8e  \u53d1\u5c55\u4e00\u79cd\u81ea\u52a8\u5316\u57ce\u5e02\u529f\u80fd\u533a\u5236\u56fe\u7684\u89e3\u51b3\u65b9\u6848 \u91cd\u70b9\u89e3\u51b3\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u5355\u5143\u63d0\u53d6\u3001 \u7ed3\u6784\u683c\u5c40\u8868\u8fbe\u548c\u529f\u80fd\u7c7b\u522b\u667a\u80fd\u8bc6\u522b\u7b49\u5173\u952e\u95ee\u9898      \u7b2c\u4e8c\u6bb5\uff1a\u4ece\u9065\u611f\u6570\u636e\u89d2\u5ea6\u5206\u6790\uff0c\u80cc\u666f-\u9610\u8ff0\u96be\u70b9-\u672c\u6587\u76ee\u7684\n \u57fa\u4e8e\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u7684\u9ad8\u65f6\u6548\u3001\u5927\u8303\u56f4\u529f\u80fd\u533a\u5236\u56fe \u57ce\u5e02\u529f\u80fd\u533a\u4f5c\u4e3a\u4e00\u79cd\u5730\u7406\u7efc\u5408\u4f53\uff1a\u7efc\u5408\u6027\u3001\u5f02\u8d28\u6027\u4ee5\u53ca\u5c3a\u5ea6\u4e0d\u786e\u5b9a\u6027  \u7efc\u5408\u6027\uff1a\u57ce\u5e02\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u5355\u5143\u662f\u7531\u591a\u79cd\u5730\u7269\u8981\u7d20\u6309\u7167\u4e00\u5b9a\u7a7a\u95f4\u5206\u5e03\u89c4\u5f8b\u805a\u5408\u800c\u6210\uff0c \u800c\u5176\u8bed\u4e49\u7c7b\u522b\u662f\u6982\u62ec\u8fd9\u4e9b\u5730\u7269\u7684\u5229\u7528\u7c7b\u578b\u901a\u8fc7\u800c\u83b7\u5f97\u7684\uff0c \u56e0\u6b64\u529f\u80fd\u533a\u5728\u7a7a\u95f4\u7ec4\u6210\u4e0a\u548c\u8bed\u4e49\u7c7b\u522b\u4e0a\u5177\u6709\u7efc\u5408\u6027\u3002 \u5f02\u8d28\u6027\uff1a \u57ce\u5e02\u4e2d\u4e0d\u540c\u7c7b\u578b\u7684\u529f\u80fd\u533a\uff08\u5982\u5546\u4e1a\u533a\u3001\u5c45\u6c11\u533a\u3001\u5de5\u4e1a\u533a\uff09\u5728\u7a7a\u95f4\u4e0a\u5206\u5e03\u4e0d\u5747\u5300\uff0c \u4e14\u6bcf\u4e2a\u529f\u80fd\u533a\u5185\u90e8\u5730\u7269\u7ec4\u6210\u548c\u7a7a\u95f4\u7ed3\u6784\u591a\u53d8\uff0c \u662f\u4e0d\u540c\u7c7b\u578b\u793e\u4f1a\u7ecf\u6d4e\u6d3b\u52a8\u5171\u540c\u4f5c\u7528\u7684\u7ed3\u679c\u3002 \u5c3a\u5ea6\u4e0d\u786e\u5b9a\u6027\uff1a \u57ce\u5e02\u529f\u80fd\u533a\u7684\u5206\u6790\u7ed3\u679c\u5728\u4e0d\u540c\u5c3a\u5ea6\u4e0a\u6709\u4e0d\u540c\u8868\u73b0\uff0c \u672c\u8d28\u4e0a\u57ce\u5e02\u529f\u80fd\u548c\u5730\u7269\u8981\u7d20\u5728\u4e0d\u540c\u7684\u5c3a\u5ea6\u4e0a\u8026\u5408\u5173\u8054\uff0c \u4e0d\u540c\u7684\u5206\u6790\u5c3a\u5ea6\u6709\u52a9\u4e8e\u5206\u6790\u8c03\u67e5\u4e0d\u540c\u7c92\u5ea6\u7684\u5730\u7269\u7ed3\u6784\u4ee5\u53ca\u529f\u80fd\u7c7b\u522b\u3002   \u96be\u70b9\uff1a\u4e09\u4e2a\u7279\u6027\u4e92\u76f8\u5173\u8054\uff0c \u5bfc\u81f4\u529f\u80fd\u533a\u5efa\u6a21\u4e0e\u5206\u6790\u7684\u96be\u5ea6\u8fdc\u5927\u4e8e\u5730\u7269\u8bc6\u522b\u4e0e\u5206\u6790\u7684\u96be\u5ea6\uff0c \u56e0\u6b64\u5df2\u6709\u7684\u9065\u611f\u5f71\u50cf\u5206\u6790\u65b9\u6cd5\u65e0\u6cd5\u51c6\u786e\u5730\u63d0\u53d6\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u5355\u5143\u3001 \u7ed3\u6784\u683c\u5c40\u548c\u8bed\u4e49\u7c7b\u522b\u3002 \u4e3a\u89e3\u51b3\u6b64\u95ee\u9898\uff08\u4ed6\u7684\u7528\u8bcd\u5f88\u6709\u8bb2\u7a76\u5427\uff09  \u539f\u521b\u6027\u5730\u63d0\u51fa\u4e86\u57fa\u4e8e\u5730\u7406\u573a\u666f\u7684\u9065\u611f\u5f71\u50cf\u5206\u6790\u65b9\u6cd5   \u5e94\u7528\u4e8e*\u57ce\u5e02\u529f\u80fd\u533a\u81ea\u52a8\u5206\u5272\u63d0\u53d6\u3001\u7279\u5f81\u8868\u8fbe\u548c\u667a\u80fd\u8bc6\u522b   \u80fd\u591f\u51c6\u786e\u63d0\u53d6\u548c\u8868\u8fbe\u529f\u80fd\u533a\u7a7a\u95f4\u5355\u5143\u3001 \u7ed3\u6784\u683c\u5c40\u548c\u8bed\u4e49\u7c7b\u522b \u5b9e\u73b0\u529f\u80fd\u533a\u7684\u81ea\u52a8\u5316\u5236\u56fe\u3002      \u7b2c\u4e09-\u516d\u6bb5\uff1a\u8bba\u6587\u7814\u7a76\u6210\u679c\u6982\u8ff0\n \u529f\u80fd\u533a\u7a7a\u95f4\u5355\u5143\u5206\u5272\u53ca\u63d0\u53d6  \u5df2\u6709\u5206\u5272\u7b97\u6cd5\u6ca1\u6709\u8003\u8651\u57ce\u5e02\u529f\u80fd\u533a\u7efc\u5408\u6027\u548c\u5f02\u8d28\u6027\u7684\u5f71\u54cd\uff0c \u4e0d\u80fd\u4ece\u9065\u611f\u5f71\u50cf\u4e2d\u5206\u5272\u63d0\u53d6\u529f\u80fd\u533a\u7a7a\u95f4\u5355\u5143  \u63d0\u51fa\u4e86\u57fa\u4e8e\u591a\u8981\u7d20\u805a\u5408\u7684\u591a\u5c3a\u5ea6\u5730\u7406\u573a\u666f\u5206\u5272\u65b9\u6cd5 \u89e3\u51b3\u4e86\u529f\u80fd\u533a\u7684\u5f02\u8d28\u6027\u5ea6\u91cf\u4ee5\u53ca\u81ea\u52a8\u805a\u5408\u7b49\u96be\u9898 \u5b9e\u73b0\u4e86\u5728\u4e0d\u540c\u5c3a\u5ea6\u4e0a\u5206\u5272\u63d0\u53d6\u529f\u80fd\u533a\u5355\u5143 \u4ee5\u6ee1\u8db3\u4e0d\u540c\u7c92\u5ea6\u57ce\u5e02\u8c03\u67e5\u548c\u89c4\u5212\u7684\u9700\u6c42   \u529f\u80fd\u533a\u7684\u5c3a\u5ea6\u4e0d\u786e\u5b9a\u6027\u5bf9\u5206\u5272\u7ed3\u679c\u548c\u6548\u7387\u9020\u6210\u4e0d\u5229\u5f71\u54cd  \u8fdb\u4e00\u6b65\u63d0\u51fa\u4e86\u81ea\u9002\u5e94\u5206\u5272\u5c3a\u5ea6\u5b66\u4e60\u65b9\u6cd5 \u901a\u8fc7\u5c40\u90e8\u5c3a\u5ea6\u8bc4\u4f30\u65b9\u6cd5\uff0c \u81ea\u52a8\u786e\u5b9a\u6bcf\u4e2a\u529f\u80fd\u533a\u7684\u6700\u4f73\u5206\u5272\u5c3a\u5ea6\uff0c\u8fdb\u800c\u4f18\u5316\u5206\u5272\u7ed3\u679c\uff0c\u63d0\u9ad8\u529f\u80fd\u533a\u63d0\u53d6\u7684\u7cbe\u5ea6\u548c\u6548\u7387\u3002     \u529f\u80fd\u533a\u7a7a\u95f4\u5355\u5143\u8868\u8fbe  \u529f\u80fd\u533a\u7684\u5f02\u8d28\u6027\u6781\u5927\u51cf\u5f31\u4e86\u73b0\u6709\u5f71\u50cf\u7279\u5f81\u5bf9\u529f\u80fd\u533a\u7684\u8868\u8fbe\u80fd\u529b  \u63d0\u51fa\u4e86\u7a7a\u95f4\u8bed\u4e49\u5171\u751f\u6a21\u578b \u5ea6\u91cf\u529f\u80fd\u533a\u4e2d\u4e0d\u540c\u5730\u7269\u8981\u7d20\u5728\u7a7a\u95f4\u548c\u8bed\u4e49\u4e0a\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u8868\u8fbe\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u683c\u5c40 \u5e76\u5728\u6570\u5b66\u4e0a\u8bc1\u660e\u4e86\u8be5\u7279\u5f81\u7684\u9c81\u68d2\u6027   \u53d7\u529f\u80fd\u533a\u7efc\u5408\u6027\u7684\u5f71\u54cd\uff0c\u5355\u4e00\u7279\u5f81\u65e0\u6cd5\u5168\u9762\u8868\u8fbe\u529f\u80fd\u533a  \u8fdb\u4e00\u6b65\u63d0\u51fa\u4e86\u5c42\u6b21\u8bed\u4e49\u8ba4\u77e5\u6a21\u578b \u5bf9\u591a\u6e90\u7279\u5f81\uff08\u5305\u62ec\u89c6\u89c9\u7279\u5f81\u3001\u8bed\u4e49\u7279\u5f81\u3001\u7a7a\u95f4\u5171\u751f\u7279\u5f81\uff09 \u8fdb\u884c\u5206\u5c42\u7ec4\u7ec7 \u5e76\u5efa\u6a21\u4e86\u4e0d\u540c\u7279\u5f81\u95f4\u7684\u5c42\u6b21\u4f9d\u8d56\u6982\u7387\uff0c\u7528\u4e8e\u529f\u80fd\u533a\u591a\u6e90\u7279\u5f81\u53ca\u5176\u5c42\u6b21\u5173\u8054\u7ed3\u6784\u8868\u8fbe\u3002     \u7ed3\u6784\u683c\u5c40\u548c\u8bed\u4e49\u7c7b\u522b  \u529f\u80fd\u533a\u7efc\u5408\u6027\u3001\u5f02\u8d28\u6027\u548c\u5c3a\u5ea6\u4e0d\u786e\u5b9a\u6027\uff0c \u5bfc\u81f4\u529f\u80fd\u533a\u6837\u672c\u9009\u62e9\u3001 \u5206\u7c7b\u8bc6\u522b\u56f0\u96be  \u57fa\u4e8e\u4e3b\u52a8\u5b66\u4e60\uff0c \u63d0\u51fa\u4e86\u542f\u53d1\u5f0f\u6837\u672c\u5b66\u4e60\u65b9\u6cd5 \u517c\u987e\u7eaf\u51c0\u6837\u672c\u548c\u6df7\u6dc6\u6837\u672c\uff0c \u80fd\u591f\u81ea\u52a8\u83b7\u53d6\u4ee3\u8868\u6027\u6837\u672c\u7528\u4e8e\u529f\u80fd\u533a\u76d1\u7763\u5206\u7c7b   \u529f\u80fd\u533a\u5206\u7c7b  \u5efa\u7acb\u4e86\u8fde\u7eed\u591a\u9879\u5f0f\u5206\u5e03\u6a21\u578b\uff0c \u8868\u8fbe\u529f\u80fd\u533a\u4e4b\u95f4\u7684\u7a7a\u95f4\u4f9d\u8d56\u6027 \u4f18\u5316\u63d0\u9ad8\u4e86\u529f\u80fd\u533a\u5206\u7c7b\u5236\u56fe\u7cbe\u5ea6        \u7b2c\u4e03\u6bb5\uff1a\n \u7814\u7a76\u601d\u8def  \u56fe\u50cf\u7279\u5f81\u27a1\ufe0f\u571f\u5730\u8986\u76d6\u27a1\ufe0f\u7a7a\u95f4\u7ed3\u6784\u27a1\ufe0f\u529f\u80fd\u5206\u533a \u5bf9\u73b0\u6709\u9065\u611f\u5f71\u50cf\u5206\u7c7b\u8303\u5f0f\u7684\u6709\u6548\u62d3\u5c55   \u63d0\u51fa\u4e86\u4e00\u5957\u57fa\u4e8e\u5730\u7406\u573a\u666f\u7684\u57ce\u5e02\u529f\u80fd\u533a\u5206\u6790\u7406\u8bba\u548c\u65b9\u6cd5\u4f53\u7cfb  \u5e94\u7528\u4e8e\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u3001 \u7279\u5f81\u8868\u8fbe\u548c\u5206\u7c7b\u8bc6\u522b \u80fd\u591f\u51c6\u786e\u5730\u63d0\u53d6\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u5355\u5143\u3001 \u7ed3\u6784\u683c\u5c40\u548c\u8bed\u4e49\u7c7b\u522b \u5b9e\u73b0\u4e86\u81ea\u52a8\u5316\u7684\u57ce\u5e02\u529f\u80fd\u5206\u533a\u5236\u56fe   \u8bba\u6587\u7814\u7a76\u65b9\u6cd5\u548c\u7ed3\u679c  \u53ef\u4e3a\u57ce\u5e02\u89c4\u5212\u3001\u57ce\u5e02\u53ef\u6301\u7eed\u53d1\u5c55\u8bc4\u4f30\u63d0\u4f9b\u8be6\u7ec6\u5c3a\u5ea6\u3001\u9ad8\u7cbe\u5ea6\u3001 \u65f6\u6548\u6027\u5f3a\u7684\u57ce\u5e02\u529f\u80fd\u5206\u533a\u6570\u636e \u5bf9\u57ce\u5e02\u53ef\u6301\u7eed\u53d1\u5c55\u89c4\u5212\u4e0e\u5efa\u8bbe\u5177\u6709\u91cd\u8981\u7684\u63a8\u52a8\u4f5c\u7528      \u7b2c\u4e00\u7ae0 \u7eea\u8bba \u8bba\u6587\u7814\u7a76\u80cc\u666f\u4e0e\u610f\u4e49  \u7b2c\u4e00\u6bb5  \u5168\u7403\u57ce\u5e02\u5316\u5efa\u8bbe\u8fdb\u7a0b-\u6211\u56fd\u57ce\u5e02\u5316\u5efa\u8bbe \u57ce\u5e02\u5316\u7684\u9ad8\u901f\u53d1\u5c55-\u8bb8\u591a\u81ea\u7136\u548c\u793e\u4f1a\u95ee\u9898-\u57ce\u5e02\u53ef\u6301\u7eed\u53d1\u5c55 \u57ce\u5e02\u5316-\u529f\u80fd\u533a\u4f5c\u4e3a\u57ce\u5e02\u5316\u5efa\u8bbe\u7684\u57fa\u672c\u5730\u7406\u5355\u5143\uff0c\u662f\u7814\u7a76\u548c\u8c03\u67e5\u57ce\u5e02\u5316\u8fdb\u7a0b\u7684\u5173\u952e \u57ce\u5e02\u529f\u80fd\u533a\u5236\u56fe   \u7b2c\u4e8c\u6bb5\uff1a\u57ce\u5e02\u529f\u80fd\u533a\u7684\u6982\u5ff5\u53ca\u53d1\u5c55  \u6e90\u4e8e\u533a\u57df\u7ecf\u6d4e\u5b66  \u9996\u6b21\u63d0\u51fa\uff1a\u540c\u7c7b\u7ecf\u6d4e\u6d3b\u52a8\u96c6\u4e2d\u7684\u8fde\u7247\u5730\u533a \u5f15\u5165\u73af\u5883\u79d1\u5b66\u9886\u57df \u57ce\u5e02\u666f\u89c2\u751f\u6001\u5206\u6790   \u529f\u80fd\u533a\u5728\u57ce\u5e02\u95ee\u9898\u5206\u6790\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u7684\u89d2\u8272  \u533a\u57df\u7ecf\u6d4e\u5b66\u4e2d\u57ce\u5e02\u529f\u80fd\u533a\u8fd9\u4e00\u6982\u5ff5\u6bd4\u8f83\u6a21\u7cca\uff0c \u65e0\u6cd5\u4f53\u73b0\u529f\u80fd\u533a\u7684\u6784\u6210\u8981\u7d20\u3001\u5f62\u6210\u673a\u7406 Tyler and Ward \u4ece\u57ce\u5e02\u89c4\u5212\u7684\u89d2\u5ea6\u7ed9\u51fa\u4e86\u4e00\u4e2a\u65b0\u7684\u5b9a\u4e49\uff1a\u57ce\u5e02\u529f\u80fd\u533a\u6307\u7531\u4e0d\u540c\u5730\u8868\u8981\u7d20\u6784\u6210\u7684\u5730\u7406\u7efc\u5408\u4f53\uff0c \u6bcf\u4e2a\u529f\u80fd\u533a\u5185\u90e8\u5177\u6709\u76f8\u5bf9\u4e00\u81f4\u7684\u5efa\u6210\u73af\u5883\u548c\u4eba\u7c7b\u793e\u4f1a\u7ecf\u6d4e\u6d3b\u52a8\u3002(Tyler, N., &amp; Ward, R. M. (2011). Planning and community development: A guide for the 21st century. WW Norton.)     \u7b2c\u4e09\u6bb5\uff0c\u529f\u80fd\u533a\u5206\u6790\u4e2d\u7684\u96be\u70b9\u95ee\u9898  \u5728\u5730\u7406\u8868\u73b0\u4e0a\uff0c\u5448\u73b0\u51fa\uff081\uff09 \u7efc\u5408\u6027\u548c\uff082\uff09 \u5f02\u8d28\u6027  \u57ce\u5e02\u529f\u80fd\u533a\u7684\u7efc\u5408\u6027\uff1a\u591a\u79cd\u5730\u7269\u8981\u7d20\u7ec4\u6210\u3001\u5177\u6709\u4e00\u5b9a\u5efa\u6210\u73af\u5883\u6216\u666f\u89c2\u683c\u5c40\u3001\u5728\u89c4\u5212\u5efa\u8bbe\u548c\u5386\u53f2\u56e0\u7d20\u4f5c\u7528\u4e0b\u8fd9\u4e9b\u5730\u7269\u8981\u7d20\u7684\u7a7a\u95f4\u5206\u5e03\u3001 \u6392\u5217\u5448\u73b0\u51fa\u4e00\u5b9a\u89c4\u5f8b \u7efc\u5408\u6027\u662f\u529f\u80fd\u533a\u5206\u6790\u7684\u57fa\u7840  \u8fd9\u4e00\u7279\u6027\u660e\u786e\u4e86\u529f\u80fd\u533a\u5185\u90e8\u5730\u7269\u7684\u5206\u5e03\u7279\u70b9\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u63d0\u53d6\u529f\u80fd\u533a\u7684\u4f9d\u636e \u7efc\u5408\u6027\u8fd8\u662f\u529f\u80fd\u533a\u5728\u5730\u7406\u8868\u73b0\u4e0a\u7684\u6700\u57fa\u672c\u7279\u6027\uff0c\u5b83\u4e5f\u76f4\u63a5\u5bfc\u81f4\u4e86\u529f\u80fd\u533a\u7684\u5f02\u8d28\u6027\u548c\u5c3a\u5ea6\u4e0d\u786e\u5b9a\u6027   \u57ce\u5e02\u529f\u80fd\u533a\u7684\u5f02\u8d28\u6027  \u6bcf\u4e2a\u57ce\u5e02\u5305\u542b\u4e0d\u540c\u7684\u529f\u80fd\u533a\uff08\u5982\u5546\u4e1a\u533a\u3001\u5de5\u4e1a\u533a\u3001\u5c45\u6c11\u533a\u3001\u5b66\u6821\u3001\u516c\u56ed\uff09 \u4e14\u8fd9\u4e9b\u529f\u80fd\u533a\u5728\u7a7a\u95f4\u4e0a\u4ea4\u9519\u4e14\u4e0d\u5747\u5300\u5730\u5206\u5e03 \u529f\u80fd\u533a\u5728\u5185\u90e8\u7ec4\u6210\u548c\u7ed3\u6784\u4e0a\u8868\u73b0\u5f02\u8d28\uff08\u8fd9\u4e00\u70b9\u4ee5\u524d\u786e\u5b9e\u6ca1\u6709\u7406\u89e3\u5230\uff09\uff0c\u4f8b\u5982\u5c45\u6c11\u533a\u4e2d\u5305\u542b\u4e86\u5efa\u7b51\u7269\u3001\u690d\u88ab\u3001\u88f8\u571f\u3001\u9053\u8def\uff0c\u8fd9\u4e9b\u571f\u5730\u8986\u76d6\u8981\u7d20\u53c8\u5177\u6709\u4e0d\u540c\u7684\u7a7a\u95f4\u7ed3\u6784\u3002 \u529f\u80fd\u533a\u7684\u5f02\u8d28\u6027\u662f\u7531\u4eba\u7c7b\u4e0d\u540c\u7684\u793e\u4f1a\u7ecf\u6d4e\u6d3b\u52a8\u4f5c\u7528\u5f62\u6210\u7684     \u5728\u5206\u6790\u4e2d\u5b58\u5728\uff083\uff09\u5c3a\u5ea6\u4e0d\u786e\u5b9a\u6027\n-\u529f\u80fd\u533a\u5206\u6790\u7ed3\u679c\u968f\u5206\u6790\u5c3a\u5ea6\u7684\u53d8\u5316\u800c\u53d8\u5316\uff0c \u672c\u8d28\u4e0a\u662f\u57ce\u5e02\u529f\u80fd\u548c\u5730\u7269\u8981\u7d20\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5c3a\u5ea6\u4e0a\u8026\u5408\u5173\u8054\uff0c \u4e0d\u540c\u7684\u5206\u6790\u5c3a\u5ea6\u53ef\u4ee5\u7528\u4e8e\u8c03\u67e5\u4e0d\u540c\u7c92\u5ea6\u7684\u5730\u7269\u7ed3\u6784\u4ee5\u53ca\u529f\u80fd\u7c7b\u578b  \u4f8b\u5982\u5728\u8f83\u5927\u7684\u5c3a\u5ea6\u4e0a\u624d\u80fd\u5206\u6790\u8c03\u67e5\u5b66\u6821\u529f\u80fd\u533a\uff0c\u800c\u5728\u8f83\u5c0f\u7684\u5c3a\u5ea6\u4e0a\u5b66\u6821\u5219\u88ab\u5212\u5206\u4e3a\u4e86\u5bbf\u820d\u5c45\u6c11\u533a\u3001\u6559\u5b66\u533a\u751a\u81f3\u8fd8\u5305\u542b\u4e86\u5546\u4e1a\u533a\u548c\u516c\u56ed\uff08\u8fd9\u4e2a\u4f8b\u5b50\u4e3e\u5f97\u5f88\u7ecf\u5178\uff09?   \u4e09\u4e2a\u57fa\u672c\u7279\u6027\u662f\u57fa\u4e8e\u9065\u611f\u5f71\u50cf\u529f\u80fd\u533a\u5206\u6790\u4e2d\u7684\u96be\u70b9\uff0c \u8fd9\u4e09\u4e2a\u7279\u6027\u589e\u5927\u4e86\u63d0\u53d6\u529f\u80fd\u533a\u7a7a\u95f4\u5355\u5143\u548c\u8bed\u4e49\u7c7b\u522b\u7684\u96be\u5ea6 \u7efc\u4e0a\u6240\u8ff0\uff1a\u57ce\u5e02\u529f\u80fd\u533a\u5728\u5730\u7406\u8868\u73b0\u4e0a\u7684\u4e09\u4e2a\u57fa\u672c\u7279\u6027\u5bfc\u81f4\u529f\u80fd\u533a\u5efa\u6a21\u4e0e\u5206\u6790\u5f02\u5e38\u56f0\u96be\uff0c \u4f7f\u5176\u96be\u5ea6\u8fdc\u5927\u4e8e\u4f20\u7edf\u7684\u5730\u7269\u8bc6\u522b\u4e0e\u5206\u6790\u7684\u96be\u5ea6\uff0c\u56e0\u6b64\u5728\u57ce\u5e02\u529f\u80fd\u533a\u5206\u6790\u4e2d\u9700\u8981\u8003\u8651\u548c\u89e3\u51b3\u4e0a\u8ff0\u4e09\u4e2a\u96be\u70b9\u3002   \u7b2c\u56db\u6bb5  \u4f20\u7edf\u7684\u57ce\u5e02\u529f\u80fd\u533a\u8c03\u67e5\u4e0e\u5206\u6790\u57fa\u4e8e\u5386\u53f2\u89c4\u5212\u6570\u636e\u8fdb\u884c  \u5728\u57ce\u5e02\u89c4\u5212\u4e0e\u5efa\u8bbe\u4e2d\uff0c\u89c4\u5212\u4eba\u5458\u4ee5\u571f\u5730\u8986\u76d6\u73b0\u72b6\u548c\u793e\u4f1a\u7ecf\u6d4e\u5c5e\u6027\u4e3a\u57fa\u7840\uff0c \u4ee5\u57ce\u5e02\u53d1\u5c55\u4e3a\u5bfc\u5411\uff0c \u8bbe\u8ba1\u57ce\u5e02\u89c4\u5212\u56fe\u5b9e\u73b0\u5bf9\u529f\u80fd\u533a\u7684\u5212\u5206\u548c\u8868\u8fbe\uff0c \u5176\u6700\u8be6\u7ec6\u5230\u8857\u533a\u5c3a\u5ea6\u6700\u7c97\u7565\u5230\u57ce\u5e02\u7fa4\u5c3a\u5ea6 \u57ce\u5e02\u89c4\u5212\u56fe\u4e0d\u8db3\uff1a  \u672c\u8d28\u662f\u9488\u5bf9\u67d0\u6bb5\u65f6\u95f4\u533a\u95f4\u5185\u57ce\u5e02\u5efa\u8bbe\u7684\u6307\u5bfc\u65b9\u6848\uff0c \u5e76\u65e0\u6cd5\u53cd\u6620\u5f53\u524d\u6216\u67d0\u4e00\u4e2a\u65f6\u95f4\u8282\u70b9\u4e0a\u57ce\u5e02\u529f\u80fd\u533a\u7684\u771f\u5b9e\u60c5\u51b5 \u89c4\u5212\u56fe\u4ee5\u8857\u533a\u4f5c\u4e3a\u6700\u8be6\u7ec6\u5c3a\u5ea6\u5ffd\u7565\u4e86\u8857\u533a\u5185\u90e8\u529f\u80fd\u7c7b\u578b\u6df7\u6dc6\u7684\u60c5\u51b5\uff0c \u56e0\u6b64\u65e0\u6cd5\u51c6\u786e\u5730\u8868\u8fbe\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u8303\u56f4   \u57fa\u4e8e\u57ce\u5e02\u89c4\u5212\u56fe\u7684\u529f\u80fd\u533a\u5efa\u6a21\u4e0e\u5206\u6790\u662f\u4e0d\u51c6\u786e\u7684   \u57fa\u4e8e\u5730\u7406\u5927\u6570\u636e\u7684\u529f\u80fd\u533a\u8c03\u67e5\u65b9\u6cd5\u9010\u6e10\u5174\u8d77 \u27a1\ufe0f \u57ce\u5e02\u529f\u80fd\u533a\u7684\u52a8\u6001\u68c0\u6d4b \u672c\u6587\uff1a  \u57fa\u4e8e\u9ad8\u5206\u9065\u611f\u5f71\u50cf\u7ed3\u5408\u8857\u9053\u3001\u5174\u8da3\u70b9\u7b49\u591a\u6e90\u5730\u7406\u6570\u636e\u63d0\u51fa\u4e86\u5730\u7406\u573a\u666f\u7684\u5efa\u6a21\u4e0e\u5206\u6790\u65b9\u6cd5\uff0c\u5c06\u5176\u5e94\u7528\u4e8e\u57ce\u5e02\u529f\u80fd\u533a\u5236\u56fe\u4e0e\u5206\u6790 \u89e3\u51b3\u4e86\u529f\u80fd\u533a\u5206\u6790\u4e2d\u4e09\u4e2a\u96be\u70b9\u95ee\u9898\uff0c\u5b9e\u73b0\u4e86\u529f\u80fd\u533a\u7684\u81ea\u52a8\u63d0\u53d6\u3001 \u7efc\u5408\u8868\u8fbe\u4e0e\u667a\u80fd\u8bc6\u522b \u5728\u6280\u672f\u4e0a\uff0c\u521b\u65b0\u6027\u5730\u63d0\u51fa\u4e86\u5730\u7406\u573a\u666f\u573a\u666f\u5206\u5272\u3001\u81ea\u9002\u5e94\u5c3a\u5ea6\u4f18\u5316\u3001\u7a7a\u95f4\u8bed\u4e49\u7279\u5f81\u63d0\u53d6\u3001 \u591a\u6e90\u7279\u5f81\u7ec4\u7ec7\u4e0e\u8868\u8fbe\u3001\u529f\u80fd\u533a\u6837\u672c\u5b66\u4e60\u3001 \u529f\u80fd\u5206\u7c7b\u7b49\u5173\u952e\u6280\u672f\u96be\u70b9      \u57fa\u4e8e\u5730\u7406\u573a\u666f\u7684\u529f\u80fd\u533a\u5206\u6790\u4e2d\u57fa\u672c\u6982\u5ff5 \u672c\u8d28\u4e0a\uff0c\u662f\u5229\u7528\u5f71\u50cf\u4e2d\u5730\u7406\u573a\u666f\u5bf9\u57ce\u5e02\u529f\u80fd\u533a\u8fdb\u884c\u5efa\u6a21\u63d0\u53d6\uff0c \u5728\u6b64\u57fa\u7840\u4e0a\u63d0\u53d6\u529f\u80fd\u533a\u7684\u63cf\u8ff0\u7279\u5f81\uff0c \u8fdb\u800c\u5b9e\u73b0\u5bf9\u529f\u80fd\u533a\u7684\u5206\u7c7b\u8bc6\u522b\u3002\n\u57ce\u5e02\u529f\u80fd\u533a\u76f8\u5173\u6982\u5ff5\u53ca\u5206\u7c7b\u4f53\u7cfb  \u57ce\u5e02\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u7ea6\u675f\u6761\u4ef6\u662f\u57ce\u5e02\u8303\u56f4  \u4ec0\u4e48\u662f\u57ce\u5e02  \u5728\u7ecf\u6d4e\u5b66\u4e2d \u5728\u57ce\u5e02\u89c4\u5212\u5b66\u4e2d \u5728\u5730\u7406\u5b66\u4e2d\uff08\u672c\u6587\u4e2d\u53c2\u8003\uff09\uff1a\u57ce\u5e02\u662f\u6307\u4ea4\u901a\u7f51\u7edc\u5bc6\u96c6\uff0c\u4eba\u7fa4\u548c\u623f\u5c4b\u7684\u5bc6\u96c6\u7684\u7ed3\u5408\u4f53     \u6982\u5ff5\u5bf9\u6bd4\uff1a\u57ce\u5e02\u529f\u80fd\u533a\u4e0e\u571f\u5730\u5229\u7528  \u571f\u5730\u5229\u7528\u662f\u6307\u4eba\u7c7b\u6839\u636e\u4e00\u5b9a\u7684\u793e\u4f1a\u7ecf\u6d4e\u76ee\u7684\u5bf9\u571f\u5730\u8986\u76d6\u8fdb\u884c\u957f\u671f\u6027\u6216\u5468\u671f\u6027\u7684\u7ecf\u8425\u7ba1\u7406\u548c\u6cbb\u7406\u6539\u9020\uff08Anderson, 1976\uff09 \u76f8\u540c\u70b9\uff1a\u571f\u5730\u5229\u7528\u548c\u529f\u80fd\u533a\u7684\u57fa\u672c\u7ec4\u6210\u5355\u5143\u90fd\u662f\u571f\u5730\u8986\u76d6\uff0c\u90fd\u6d89\u53ca\u5230\u793e\u4f1a\u7ecf\u6d4e\u6d3b\u52a8 \u4e0d\u540c\u7684\u662f\uff1a\u529f\u80fd\u533a\u5728\u5b9a\u4e49\u4e2d\u5f3a\u8c03\u4e86\u533a\u57df\u7684\u7a7a\u95f4\u8303\u56f4\uff0c\u800c\u571f\u5730\u5229\u7528\u5219\u6ca1\u6709\u5bf9\u7a7a\u95f4\u8303\u56f4\u8fdb\u884c\u7ea6\u675f \u4e00\u4e2a\u571f\u5730\u5229\u7528\u8981\u7d20\u53ef\u4ee5\u662f\u7531\u4e00\u4e2a\u571f\u5730\u8986\u76d6\u8981\u7d20\u6784\u6210\u7684\u5229\u7528\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u7531\u591a\u4e2a\u571f\u5730\u8986\u76d6\u8981\u7d20\u7ec4\u6210\u7684\u5229\u7528\u5206\u533a\uff1b\u800c\u529f\u80fd\u533a\u4e00\u5b9a\u662f\u7531\u591a\u4e2a\u4e0d\u540c\u7684\u571f\u5730\u8986\u76d6\u8981\u7d20\u7ec4\u6210\u7684\u3002 \u529f\u80fd\u533a\u53ef\u89c6\u4e3a\u571f\u5730\u5229\u7528\u7684\u5b50\u96c6   \u57ce\u5e02\u529f\u80fd\u533a\u5206\u7c7b\u4f53\u7cfb  \u53c2\u8003\uff1a\u6211\u56fd\u300a\u57ce\u5e02\u7528\u5730\u5206\u7c7b\u4e0e\u89c4\u5212\u5efa\u8bbe\u7528\u5730\u6807\u51c6\u300b (Code for classification of urban land use and planning standard of development land, GB 50137-2011) \u5c06\u6211\u56fd\u57ce\u5e02\u5212\u5206\u4e3a\u5546\u4e1a\u533a\u3001\u5de5\u4e1a\u533a\u3001\u5c45\u6c11\u533a\u3001 \u57ce\u4e2d\u6751\u3001 \u6559\u80b2\u7528\u5730\uff08\u4e00\u822c\u6307\u5b66\u6821\uff09\u3001 \u516c\u5171\u5f00\u653e\u533a\uff08\u5982\u516c\u56ed\uff09\uff08\u540e\u7eed\u53ef\u4ee5\u53c2\u8003\u6587\u4e2d\u5bf9\u6bcf\u4e00\u7c7b\u529f\u80fd\u533a\u7684\u89e3\u91ca\uff0c\u8fd9\u91cc\u62f7\u8d1d\u8fc7\u6765\u4e86\uff09 \u5546\u4e1a\u533a\uff08\u56fe 1.3 a\uff09\u3002\u5546\u4e1a\u533a\u662f\u6307\u96f6\u552e\u5546\u4e1a\u805a\u96c6\u3001\u4ea4\u6613\u9891\u7e41\u7684\u5730\u533a\u4ee5\u53ca\u5927\u578b\u5199\u5b57\u697c\u529e\u516c\u533a\uff08\u8be6\u89c1\u300a\u57ce\u5e02\u7528\u5730\u5206\u7c7b\u4e0e\u89c4\u5212\u5efa\u8bbe\u7528\u5730\u6807\u51c6\u300b\uff09\u3002\u5546\u4e1a\u533a\u5728\u5730\u7406\u7a7a\u95f4\u4e0a\u591a\u5206\u5e03\u4e8e\u57ce\u5e02\u4e2d\u5fc3\u548c\u7ecf\u6d4e\u5f00\u53d1\u533a\uff0c\u5e38\u4f4d\u4e8e\u4ea4\u901a\u8def\u53e3\u3001\u7e41\u534e\u8857\u9053\u4e24\u4fa7\u3001\u5927\u578b\u516c\u5171\u8bbe\u65bd\u5468\u56f4\u3002 \u5546\u4e1a\u533a\u4e2d\u5efa\u7b51\u7269\u4e00\u822c\u8f83\u4e3a\u9ad8\u5927\u4e14\u5efa\u7b51\u7ed3\u6784\u590d\u6742\u3002\u5728\u5927\u57ce\u5e02\u6216\u7279\u5927\u57ce\u5e02\u4e2d\u5546\u4e1a\u533a\u53c8\u5e38\u88ab\u5212\u5206\u4e3a\u4e2d\u592e\u3001\u533a\u548c\u8857\u7b49\u4e0d\u540c\u5c42\u6b21\u3001\u89c4\u6a21\u7684\u5546\u4e1a\u533a\uff0c \u5728\u672c\u8bba\u6587\u6240\u7814\u7a76\u7684\u5546\u4e1a\u533a\u4e3a\u5177\u6709\u4e00\u5b9a\u89c4\u6a21\u4e14\u5546\u4e1a\u6d3b\u52a8\u805a\u96c6\u533a\u57df\uff0c \u56e0\u6b64\u5c45\u6c11\u533a\u5185\u90e8\u89c4\u6a21\u8f83\u5c0f\u7684\u5546\u4e1a\u670d\u52a1\u8bbe\u65bd\u5c5e\u4e8e\u5c45\u6c11\u533a\uff0c \u4e0d\u5c5e\u4e8e\u672c\u8bba\u6587\u4e2d\u5546\u4e1a\u533a\u8303\u7574\u3002 \u5de5\u4e1a\u533a\uff08\u56fe 1.3 b\uff09\u3002 \u5de5\u4e1a\u533a\u5305\u62ec\u5236\u9020\u751f\u4ea7\u8d44\u6599\u6216\u5927\u578b\u5668\u68b0\u7684\u91cd\u5de5\u4e1a\u533a\u4ee5\u53ca\u751f\u4ea7\u65e5\u5e38\u6d88\u8017\u7528\u54c1\u7684\u8f7b\u5de5\u4e1a\u533a\u3002 \u5728\u57ce\u5e02\u4e2d\uff0c \u5de5\u4e1a\u533a\u591a\u7531\u52a0\u5de5\u5de5\u4e1a\u4f01\u4e1a\u7fa4\u7ec4\u6210\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5176\u5185\u90e8\u7ed3\u6784\u6bd4\u8f83\u534f\u8c03\uff0c\u5e76\u6709\u7d27\u5bc6\u7684\u751f\u4ea7\u8054\u7cfb\u3002\u7531\u4e8e\u57ce\u5e02\u7684\u6574\u4f53\u804c\u80fd\u4e0d\u540c\uff0c\u57ce\u5e02\u4e2d\u5de5\u4e1a\u533a\u7684\u5730\u7406\u8868\u73b0\u4e5f\u4e0d\u540c\u3002\u4f8b\u5982\uff0c\u5de5\u4e1a\u57ce\u5e02\u4e0e\u65c5\u6e38\u57ce\u5e02\u7684\u5de5\u4e1a\u533a\u5927\u5c0f\u3001\u5f62\u6001\u4ee5\u53ca\u7a7a\u95f4\u5206\u5e03\u90fd\u6709\u5dee\u5f02\uff0c\u4f46\u662f\u4e00\u822c\u6765\u8bf4\u57ce\u5e02\u5de5\u4e1a\u533a\u5728\u7a7a\u95f4\u4e0a\u96c6\u7fa4\u5206\u5e03\uff0c\u591a\u4f4d\u4e8e\u57ce\u5e02\u90ca\u533a\u6216\u57ce\u4e61\u7ed3\u5408\u5e26\u3002\u5de5\u4e1a\u5382\u623f\u623f\u9876\u7684\u6750\u8d28\u548c\u989c\u8272\u4e0e\u57ce\u5e02\u4e2d\u5176\u5b83\u5efa\u7b51\u7269\u6709\u5f88\u5927\u5dee\u522b\u3002 \u672c\u8bba\u6587\u6240\u6d89\u53ca\u7684\u5de5\u4e1a\u533a\u5305\u62ec\u91cd\u5de5\u4e1a\u533a\u4ee5\u53ca\u5927\u89c4\u6a21\u7684\u8f7b\u5de5\u4e1a\u533a\uff0c\u800c\u6df7\u6742\u5728\u5176\u5b83\u529f\u80fd\u533a\u4e2d\u7684\u5c0f\u578b\u52a0\u5de5\u5382\u3001\u624b\u5de5\u4f5c\u574a\u4e0d\u5c5e\u4e8e\u672c\u8bba\u6587\u5de5\u4e1a\u533a\u8303\u7574\u3002 \u5c45\u6c11\u533a\uff08\u56fe 1.3 c\uff09\u3002 **\u5c45\u6c11\u533a\u6cdb\u6307\u57ce\u5e02\u5e38\u4f4f\u4eba\u53e3\u5c45\u4f4f\u7684\u793e\u533a\uff0c \u5305\u542b\u5176\u914d\u5957\u8bbe\u65bd\u3002**\u5c45\u4f4f\u533a\u662f\u57ce\u5e02\u4e2d\u4e3b\u8981\u7684\u7528\u5730\u7ec4\u6210\u90e8\u5206\uff0c \u6563\u5e03\u5728\u57ce\u5e02\u7684\u5404\u4e2a\u533a\u57df\u3002 \u6839\u636e\u5c45\u6c11\u533a\u4e2d\u5c45\u4f4f\u73af\u5883\u3001 \u914d\u5957\u8bbe\u65bd\uff0c \u53ef\u4ee5\u5c06\u5c45\u6c11\u533a\u5206\u4e3a\u4e00\u7ea7\u5c45\u6c11\u533a\uff08\u9ad8\u6863\u5c45\u6c11\u533a\uff09\u3001 \u4e8c\u7ea7\u5c45\u6c11\u533a\uff08\u666e\u901a\u5c45\u6c11\u533a\uff09 \u548c\u4e09\u7ea7\u5c45\u6c11\u533a\uff08\u8001\u65e7\u5c45\u6c11\u533a\uff09\u3002 \u4e00\u7ea7\u5c45\u6c11\u533a\u4e00\u822c\u7531\u522b\u5885\u3001\u65b0\u5f0f\u9ad8\u5c42\u5efa\u7b51\u7ec4\u6210\uff0c\u5e38\u914d\u5957\u6709\u5065\u8eab\u623f\u3001\u7eff\u5730\u7b49\u751f\u6d3b\u8bbe\u65bd\uff1b\u4e8c\u7ea7\u5c45\u6c11\u533a\u4e00\u822c\u662f\u7531\u4e0d\u9ad8\u4e8e 9 \u5c42\u7684\u4e2d\u5c42\u5c45\u6c11\u697c\u6784\u6210\uff0c\u5206\u5e03\u89c4\u5219\u6392\u5217\u6709\u5e8f\uff0c\u5468\u8fb9\u6709\u4e00\u5b9a\u7684\u914d\u5957\u8bbe\u65bd\uff0c\u5982\u5c0f\u8d85\u5e02\u3001\u9910\u9986\u7b49\uff0c\u8be5\u7c7b\u578b\u5c45\u6c11\u533a\u5206\u5e03\u6700\u4e3a\u5e7f\u6cdb\uff0c\u904d\u5e03\u57ce\u533a\uff1b \u4e09\u7ea7\u5c45\u6c11\u533a\u662f\u7531\u4e0d\u9ad8\u4e8e 4 \u5c42\u7684\u8001\u5f0f\u5c45\u6c11\u697c\u6784\u6210\uff0c \u5468\u8fb9\u914d\u5957\u8bbe\u65bd\u8f83\u5c11\uff0c\u8be5\u7c7b\u5c45\u6c11\u533a\u5e38\u51fa\u73b0\u5728\u8001\u57ce\u533a\u3002 \u8bba\u6587\u4e2d\u7684\u5c45\u6c11\u533a\u5305\u62ec\u4ee5\u4e0a\u4e09\u79cd\u5c45\u6c11\u533a\u3002 \u57ce\u4e2d\u6751\uff08\u56fe 1.3 d\uff09\u3002**\u57ce\u4e2d\u6751\u662f\u57ce\u5e02\u4e2d\u4e00\u79cd\u7279\u6b8a\u7684\u529f\u80fd\u533a\u7c7b\u578b\uff0c\u662f\u57ce\u9547\u5316\u5efa\u8bbe\u8fc7\u7a0b\u4e2d\u672a\u5f00\u53d1\u5efa\u8bbe\u4f46\u5468\u56f4\u90fd\u5df2\u5f62\u6210\u57ce\u5e02\u7ed3\u6784\u7684\u533a\u57df\u3002**\u8be5\u533a\u57df\u4ecd\u4fdd\u7559\u4e61\u6751\u7684\u5efa\u7b51\u7ed3\u6784\uff08\u4f4e\u77ee\u7684\u623f\u5c4b\u3001\u5bc6\u96c6\u7684\u5efa\u7b51\u5206\u5e03\uff09\u548c\u8001\u5f0f\u7684\u793e\u533a\u5f62\u6001\uff0c \u62e5\u6709\u8f83\u5c11\u7684\u3001\u89c4\u6a21\u8f83\u5c0f\u7684\u914d\u5957\u670d\u52a1\u8bbe\u65bd\u3002 \u4f46\u662f\u7531\u4e8e\u4f4d\u4e8e\u57ce\u5e02\u5efa\u6210\u533a\u5185\u90e8\uff0c \u57ce\u4e2d\u6751\u4e2d\u5c45\u4f4f\u4eba\u53e3\u3001\u57fa\u7840\u8bbe\u65bd\u7b49\u53c8\u4e0e\u4e61\u6751\u76f8\u6bd4\u5177\u6709\u660e\u663e\u5dee\u5f02\u3002 \u5b66\u6821\uff08\u56fe 1.3 e\uff09\u3002 **\u5b66\u6821\u5305\u62ec\u5e7c\u513f\u56ed\u3001\u5c0f\u5b66\u3001\u4e2d\u5b66\u4ee5\u53ca\u9ad8\u6821\u3002**\u6b64\u529f\u80fd\u533a\u5185\u90e8\u7ec4\u6210\u4e00\u822c\u6bd4\u8f83\u590d\u6742\uff0c\u5305\u542b\u4e86\u5bbf\u820d\u3001\u8d85\u5e02\u3001\u6559\u5b66\u697c\u3001\u529e\u516c\u697c\u3001\u64cd\u573a\u7b49\u3002 \u8bba\u6587\u4e2d\u6240\u7814\u7a76\u7684\u5b66\u6821\u5305\u62ec\u5177\u6709\u4e00\u5b9a\u89c4\u6a21\u7684\u5c0f\u5b66\u3001 \u4e2d\u5b66\u548c\u9ad8\u6821\uff0c \u800c\u5c45\u6c11\u533a\u914d\u5957\u7684\u5e7c\u513f\u56ed\u4ee5\u53ca\u5c0f\u89c4\u6a21\u7684\u5c0f\u5b66\u5c5e\u4e8e\u5c45\u6c11\u533a\uff0c \u800c\u4e0d\u5c5e\u4e8e\u5b66\u6821\u8303\u7574\u3002 \u516c\u56ed\uff08\u56fe 1.3 f\uff09\u3002**\u516c\u56ed\u662f\u6307\u653f\u5e9c\u4fee\u5efa\u5e76\u7ecf\u8425\u7684\u4f5c\u4e3a\u81ea\u7136\u89c2\u8d4f\u533a\u548c\u4f9b\u516c\u4f17\u7684\u4f11\u606f\u6e38\u73a9\u7684\u516c\u5171\u5f00\u653e\u533a\u57df\uff0c \u4e00\u822c\u662f\u7531\u653f\u5e9c\u89c4\u5212\u5efa\u8bbe\u6216\u5386\u53f2\u56e0\u7d20\u5f62\u6210\u7684\u3002**\u6839\u636e\u4e0a\u8ff0\u5b9a\u4e49\uff0c \u7531\u5730\u4ea7\u5f00\u653e\u5546\u5efa\u8bbe\u7684\u5c45\u6c11\u533a\u3001 \u5546\u4e1a\u533a\u5185\u7684\u89c2\u8d4f\u548c\u4f11\u95f2\u533a\u4e0d\u5c5e\u4e8e\u8bba\u6587\u4e2d\u516c\u56ed\u7684\u8303\u7574\uff0c \u6b64\u5916\uff0c\u6709\u5b66\u6821\u7ecf\u8425\u548c\u7ba1\u7406\u7684\u89c2\u8d4f\u4f11\u95f2\u533a\u4e5f\u4e0d\u5c5e\u4e8e\u516c\u56ed\u7684\u7814\u7a76\u8303\u7574\u3002      \u5730\u7406\u573a\u666f\u76f8\u5173\u6982\u5ff5  \u573a\u666f  \u5728\u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\uff0c \u573a\u666f\u5e38\u88ab\u7528\u4e8e\u5f62\u5bb9\u4e00\u5e45\u56fe\u7247\u6240\u5305\u542b\u7684\u5185\u5bb9\uff0c\u4f8b\u5982\u201c\u6d77\u5cb8\u201d\u3001\u201c\u9ad8\u5c71\u201d\u3001\u201c\u68ee\u6797\u201d\u3001\u201c\u4e61\u6751\u201d\u3001\u201c\u8857\u9053\u201d\u548c\u201c\u5efa\u7b51\u7269\u201d\u3002 \u27a1\ufe0f \u51e0\u4e4e\u4efb\u4f55\u4e00\u5e45\u56fe\u7247\u90fd\u53ef\u4ee5\u88ab\u89c6\u4e3a\u4e00\u4e2a\u573a\u666f\u3002 \u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u56fe\u7247\u573a\u666f\u7f3a\u4e4f\u4e00\u4e2a\u660e\u786e\u7684\u5b9a\u4e49\u3002 \u573a\u666f\u88ab\u7528\u4e8e\u63cf\u8ff0\u9ad8\u5206\u9065\u611f\u5f71\u50cf  \u6700\u8457\u540d\u7684\u9065\u611f\u5f71\u50cf\u573a\u666f\u6570\u636e\u5e93\u662f UC Merced Land Use\uff08http://vision.ucmerced.edu/datasets/landuse.html\uff09 \u9065\u611f\u5f71\u50cf\u573a\u666f\u5206\u7c7b   \u73b0\u72b6/\u95ee\u9898\uff1a\u65e0\u8bba\u662f\u56fe\u7247\u573a\u666f\u8fd8\u662f\u9065\u611f\u5f71\u50cf\u573a\u666f\u5bf9\u5176\u542b\u4e49\u3001 \u6784\u6210\u8981\u7d20\u3001 \u5f62\u6210\u89c4\u5219\u90fd\u7f3a\u4e4f\u660e\u786e\u7684\u5b9a\u4e49\uff0c \u56e0\u6b64\u65e0\u6cd5\u7ed9\u51fa\u76f8\u5e94\u7684\u6570\u5b66\u5f62\u5f0f\u5316\u5efa\u6a21\u65b9\u6cd5\u3002  \u4e0a\u8ff0\u573a\u666f\u90fd\u662f\u57fa\u4e8e\u4eba\u7684\u4e3b\u89c2\u8ba4\u77e5\u4f7f\u7528\u89c4\u5219\u6805\u683c\u5212\u5206\u63d0\u53d6\u7684\uff0c \u800c\u8fd9\u4e9b\u6805\u683c\u672c\u8eab\u662f\u7f3a\u4e4f\u5730\u7406\u542b\u4e49\u7684\uff0c \u56e0\u4e3a\u6805\u683c\u5212\u5206\u65e0\u6cd5\u8868\u8fbe\u5730\u7406\u8981\u7d20\u7684\u7a7a\u95f4\u5355\u5143\uff0c \u8fdb\u800c\u96be\u4ee5\u51c6\u786e\u5730\u8868\u8fbe\u5730\u7406\u8981\u7d20\u7684\u8bed\u4e49\u7c7b\u522b\u3002   \u7ed3\u8bba\uff1a\u6545\u5df2\u6709\u7684\u56fe\u7247\u573a\u666f\u548c\u9065\u611f\u5f71\u50cf\u573a\u666f\u4e0d\u9002\u7528\u4e8e\u5efa\u6a21\u5206\u6790\u57ce\u5e02\u529f\u80fd\u533a\u8fd9\u79cd\u5730\u7406\u7efc\u5408\u4f53\u3002   \u5730\u7406\u573a\u666f  \u5730\u7406\u573a\u666f\u662f\u7531\u591a\u79cd\u571f\u5730\u8986\u76d6\u5bf9\u8c61\u7ec4\u6210\u7684\u56fe\u50cf\u5757\uff0c \u6bcf\u4e2a\u5730\u7406\u573a\u666f\u5185\u540c\u7c7b\u578b\u7684\u571f\u5730\u8986\u76d6\u5bf9\u8c61\u5177\u6709\u76f8\u4f3c\u7684\u4e2a\u4f53\u7279\u5f81\u548c\u7a7a\u95f4\u5206\u5e03\u7279\u5f81\u3002 \u4f8b\u5982\u56fe 1.6\uff08c\uff09\u4e2d\u5efa\u7b51\u7269\u5177\u6709\u76f8\u4f3c\u7684\u989c\u8272\u3001\u5f62\u72b6\u3001\u671d\u5411\uff0c\u5f62\u6210\u6574\u9f50\u7684\u6392\u5217\u65b9\u5f0f\uff0c\u5176\u4ed6\u571f\u5730\u8986\u76d6\u5177\u6709\u7c7b\u4f3c\u7684\u89c4\u5f8b\uff0c\u56e0\u6b64\u5c06\u8fd9\u6837\u7684\u4e00\u4e2a\u56fe\u50cf\u533a\u57df\u79f0\u4e3a\u5730\u7406\u573a\u666f\u3002 \u6570\u5b66\u5f62\u5f0f\u5316\u8868\u8fbe \u662f\u4e00\u79cd\u5730\u7406\u5206\u5f02\u5355\u5143\u3002\u5177\u6709\u660e\u663e\u7684\u5730\u7406\u542b\u4e49 \u5730\u7406\u573a\u666f\u4e0d\u540c\u4e8e\u4f20\u7edf\u7684\u56fe\u50cf\u5355\u5143  \u50cf\u7d20\u662f\u4f20\u611f\u5668\u6210\u50cf\u7684\u57fa\u672c\u7269\u7406\u5355\u5143\uff0c\u662f\u56fe\u50cf\u4e0a\u6700\u5c0f\u7684\u53ef\u533a\u5206\u5355\u5143 \u5bf9\u8c61\u662f\u56fe\u50cf\u4e2d\u989c\u8272\u7eb9\u7406\u5747\u8d28\u4e14\u8fde\u7eed\u7684\u533a\u57df   \u5bf9\u8c61\u4e0e\u573a\u666f\u7684\u533a\u522b    \u7814\u7a76\u73b0\u72b6\u4e0e\u5b58\u5728\u95ee\u9898 \u5f15\u8a00  \u8be5\u9886\u57df\u7814\u7a76\u65b9\u6cd5   \u57fa\u4e8e\u793e\u4ea4\u5a92\u4f53\u5b9a\u4f4d\u6570\u636e\u7684\u529f\u80fd\u533a\u5206\u6790\uff0c \u793e\u4ea4\u5a92\u4f53\u5b9a\u4f4d\u6570\u636e\u662f\u6307\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u4e0a\u4ea7\u751f\u7684\u5177\u6709\u4f4d\u7f6e\u4fe1\u606f\u548c\u8bed\u4e49\u4fe1\u606f\u7684\u6709\u4ef7\u503c\u6570\u636e \u57fa\u4e8e\u611f\u5174\u8da3\u70b9\uff08Point of interests, POI\uff09\u6570\u636e\u7684\u529f\u80fd\u533a\u5206\u6790\uff0c POI \u6570\u636e\u6cdb\u6307\u4e00\u5207\u4eba\u7c7b\u611f\u5174\u8da3\u7684\u4f4d\u7f6e\u70b9\u6570\u636e\uff0c\u901a\u5e38 POI \u6570\u636e\u7528\u4e8e\u5bfc\u822a\u5305\u542b\u70b9\u7684\u4f4d\u7f6e\u3001 \u5c5e\u6027\u548c\u5229\u7528\u4fe1\u606f \u57fa\u4e8e\u9065\u611f\u5f71\u50cf\u6570\u636e\u7684\u57ce\u5e02\u529f\u80fd\u533a\u5206\u6790   \u8bba\u6587\u4ee5\u9065\u611f\u5f71\u50cf\u4e3a\u672c\u5e95\u6570\u636e\uff0c\u7ed3\u5408 POI \u4fe1\u606f\u5bf9\u57ce\u5e02\u529f\u80fd\u533a\u8fdb\u884c\u5efa\u6a21\u548c\u5206\u6790\uff0c\u5176\u4e3b\u8981\u7814\u7a76\u601d\u8def\u5305\u62ec\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u3001\u7279\u5f81\u8868\u8fbe\u548c\u5206\u7c7b\u8bc6\u522b  \u57fa\u4e8e\u9065\u611f\u5f71\u50cf\u7684\u57ce\u5e02\u529f\u80fd\u533a\u5efa\u6a21\u4e0e\u5206\u6790\u4e2d\u5171\u5b58\u5728\u516d\u4e2a\u5173\u952e\u95ee\u9898  \u57ce\u5e02\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u7684\u7814\u7a76\u73b0\u72b6\u548c\u5b58\u5728\u95ee\u9898  \u95ee\u9898\u4e00\uff0c\u529f\u80fd\u533a\u5206\u5272\u65b9\u6cd5\u95ee\u9898\uff1a\u4f20\u7edf\u5206\u5272\u7b97\u6cd5\u90fd\u662f\u4e3a\u4e86\u63d0\u53d6\u89c6\u89c9\u7279\u5f81\u5747\u8d28\u7684\u56fe\u50cf\u5bf9\u8c61\uff0c\u800c\u57ce\u5e02\u529f\u80fd\u533a\u5305\u542b\u591a\u79cd\u571f\u5730\u8986\u76d6\u8981\u7d20\uff08\u5982\u6c34\u4f53\u3001\u690d\u88ab\u3001\u5efa\u7b51\u7269\u7b49\uff09\uff0c \u56e0\u6b64\u529f\u80fd\u533a\u5728\u89c6\u89c9\u4e0a\u662f\u4e0d\u8fde\u7eed\u7684\uff0c \u5373\u529f\u80fd\u533a\u8868\u73b0\u51fa\u5f88\u5f3a\u5f02\u8d28\u6027\u3002 \u8fd9\u4f7f\u5f97\u4f20\u7edf\u7684\u56fe\u50cf\u5206\u5272\u65b9\u6cd5\u65e0\u6cd5\u63d0\u53d6\u57ce\u5e02\u529f\u80fd\u533a\u3002 \u95ee\u9898\u4e8c\uff0c\u529f\u80fd\u533a\u5206\u5272\u5c3a\u5ea6\u95ee\u9898\uff1a\u529f\u80fd\u533a\u5728\u5206\u5272\u63d0\u53d6\u65f6\u5177\u6709\u5c3a\u5ea6\u4e0d\u786e\u5b9a\u6027\uff0c\u800c\u73b0\u6709\u7684\u5c3a\u5ea6\u9009\u62e9\u65b9\u6cd5\u65e0\u6cd5\u89e3\u51b3\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u4e2d\u5c3a\u5ea6\u4e0d\u786e\u5b9a\u6027\u95ee\u9898  \u57ce\u5e02\u529f\u80fd\u533a\u7279\u5f81\u8868\u8fbe\u7684\u7814\u7a76\u73b0\u72b6\u548c\u5b58\u5728\u95ee\u9898  \u95ee\u9898\u4e09\uff0c\u529f\u80fd\u533a\u7a7a\u95f4\u683c\u5c40\u7279\u5f81\u8868\u8fbe\u95ee\u9898\uff1a\u5982\u4f55\u63d0\u53d6\u9c81\u68d2\u7684\u7a7a\u95f4\u683c\u5c40\u7279\u5f81\u662f\u529f\u80fd\u533a\u7279\u5f81\u8868\u8fbe\u4e2d\u4e9f\u5f85\u89e3\u51b3\u7684\u95ee\u9898  \u529f\u80fd\u533a\u7684\u5e38\u7528\u7279\u5f81\u4e3b\u8981\u5305\u62ec\u4e09\u7c7b\uff1a\u89c6\u89c9\u7279\u5f81\u3001\u62bd\u8c61\u7279\u5f81\u3001 \u8bed\u4e49\u7279\u5f81 \u89c6\u89c9\u7279\u5f81\uff1a\u76f4\u63a5\u4ece\u56fe\u50cf\u4e2d\u63d0\u53d6\u7684\u7528\u4e8e\u63cf\u8ff0\u56fe\u50cf\u5355\u5143\u7684\u91cf\u5316\u6307\u6807\uff0c \u8fd9\u4e9b\u6307\u6807\u662f\u57fa\u4e8e\u4eba\u7c7b\u89c6\u89c9\u611f\u77e5\u7ecf\u9a8c\u5b9a\u4e49\u7684\u3002\u89c6\u89c9\u7279\u5f81\u53ef\u8fdb\u4e00\u6b65\u5206\u4e3a\u4e24\u7c7b\uff1a \u56fe\u50cf\u5bf9\u8c61\u7279\u5f81\u3001\u89c6\u89c9\u63cf\u8ff0\u5b50\u3002  \u56fe\u50cf\u5bf9\u8c61\u7279\u5f81\uff1a\u76ee\u6807\u5bf9\u8c61\u5149\u8c31\u3001\u7eb9\u7406\u3001 \u5f62\u72b6\u3001\u5927\u5c0f\u7b49 \u89c6\u89c9\u63cf\u8ff0\u5b50\uff1a\u68af\u5ea6\u65b9\u5411\u76f4\u65b9\u56fe\uff08Histogram of oriented gradients, HOG\uff09 \u548c\u5c3a\u5ea6\u4e0d\u53d8\u7279\u5f81\u53d8\u6362\uff08Scale-invariant feature transform, SIFT\uff09   \u62bd\u8c61\u7279\u5f81\uff1a\u5728\u89c6\u89c9\u7279\u5f81\u7684\u57fa\u7840\u4e0a\uff0c\u5229\u7528\u4e00\u4e9b\u673a\u5668\u5b66\u4e60\u6216\u8005\u7edf\u8ba1\u5b66\u4e60\u65b9\u6cd5\u5c06\u89c6\u89c9\u7279\u5f81\u8fdb\u884c\u62bd\u8c61\u548c\u53d8\u6362\u4ece\u800c\u83b7\u5f97\u66f4\u6709\u610f\u4e49\u7684\u7279\u5f81\u3002  \u4e3b\u9898\u8bed\u4e49\u6a21\u578b \u27a1\ufe0f \u6f5c\u5728\u4e3b\u9898\u7279\u5f81   \u5bf9\u8c61\u5e93\uff08object bank\uff09\uff1a\u6bcf\u4e2a\u529f\u80fd\u533a\u5185\u90e8\u5bf9\u8c61\u8bed\u4e49\u7c7b\u522b\u7684\u9891\u7387\u5206\u5e03   \u89c6\u89c9\u7279\u5f81\u7684\u5bf9\u529f\u80fd\u533a\u7684\u8868\u8fbe\u5206\u6790\u80fd\u529b\u8f83\u5dee\uff1b \u62bd\u8c61\u7279\u5f81\u53ef\u89e3\u91ca\u6027\u4e0d\u5f3a\uff1b \u8bed\u4e49\u7279\u5f81\u80fd\u591f\u6709\u6548\u63d0\u9ad8\u529f\u80fd\u533a\u7684\u62bd\u8c61\u8868\u8fbe\u80fd\u529b\u4e5f\u5177\u6709\u5f88\u5f3a\u7684\u53ef\u89e3\u91ca\u6027\uff0c \u4f46\u662f\u5ffd\u7565\u4e86\u7a7a\u95f4\u4fe1\u606f\uff1b\u800c\u529f\u80fd\u533a\u5185\u90e8\u5730\u7269\u7684\u7a7a\u95f4\u683c\u5c40\u662f\u8868\u8fbe\u529f\u80fd\u533a\u7684\u5173\u952e\u3002   \u95ee\u9898\u56db\uff0c\u529f\u80fd\u533a\u7279\u5f81\u5c42\u6b21\u4f9d\u8d56\u95ee\u9898\uff1a\u5728\u7ec4\u5408\u591a\u6e90\u7279\u5f81\u5bf9\u529f\u80fd\u533a\u8fdb\u884c\u8868\u8fbe\u65f6\u9700\u8981\u8003\u8651\u4e0d\u540c\u7279\u5f81\u4e4b\u95f4\u7684\u5c42\u6b21\u4f9d\u8d56\u5173\u7cfb\uff0c \u800c\u73b0\u6709\u7684\u7279\u5f81\u7ec4\u5408\u65b9\u5f0f\u5ffd\u7565\u4e86\u7279\u5f81\u4e4b\u95f4\u7684\u5c42\u6b21\u4f9d\u8d56\u5173\u7cfb  \u5355\u4e00\u7279\u5f81\u96be\u4ee5\u5168\u9762\u5730\u3001\u51c6\u786e\u5730\u8868\u8fbe\u57ce\u5e02\u529f\u80fd\u533a\u27a1\ufe0f\u7ec4\u5408\u4e0d\u540c\u7279\u5f81\uff08\u89c6\u89c9\u7279\u5f81\u3001\u62bd\u8c61\u7279\u5f81\u3001 \u8bed\u4e49\u7279\u5f81\u548c\u7a7a\u95f4\u683c\u5c40\u7279\u5f81\uff09\u6765\u63d0\u9ad8\u7279\u5f81\u5bf9\u529f\u80fd\u533a\u7684\u8868\u8fbe\u80fd\u529b  \u5e38\u89c1\u7684\u7279\u5f81\u7ec4\u5408\u65b9\u6cd5\u662f\u9996\u5148\u5c06\u4e0a\u8ff0\u6240\u6709\u7279\u5f81\u5c55\u4e3a\u591a\u4e2a\u4e00\u7ef4\u5411\u91cf\uff0c \u7136\u540e\u628a\u4e0d\u540c\u7279\u5f81\u9996\u5c3e\u4e32\u8054\u83b7\u5f97\u4e00\u4e2a\u8d85\u9ad8\u7ef4\u7684\u7279\u5f81\u5411\u91cf  \u7279\u5f81\u7ef4\u5ea6\u5927 \u8fd9\u4e9b\u7279\u5f81\u5c5e\u4e8e\u591a\u6e90\u5f02\u6784\u7279\u5f81\uff0c\u5373\u7279\u5f81\u7684\u542b\u4e49\u3001\u5355\u4f4d\u548c\u6570\u91cf\u7ea7\u90fd\u662f\u4e0d\u540c\u7684 \u8fd9\u4e9b\u9ad8\u7ef4\u7279\u5f81\u95f4\u5177\u6709\u5f88\u5f3a\u7684\u76f8\u5173\u6027\uff0c \u56e0\u6b64\u7b80\u5355\u7684\u7ebf\u6027\u7279\u5f81\u7ec4\u5408\u8868\u8fbe\u5bf9\u4e8e\u529f\u80fd\u533a\u5206\u7c7b\u8bc6\u522b\u9020\u6210\u4e0d\u5229\u7684\u5f71\u54cd   \u89c6\u89c9\u7279\u5f81\u3001\u62bd\u8c61\u7279\u5f81\u3001\u8bed\u4e49\u7279\u5f81\u548c\u7a7a\u95f4\u683c\u5c40\u7279\u5f81\u4e4b\u95f4\u5177\u6709\u663e\u8457\u7684\u81ea\u4e0b\u800c\u4e0a\u7684\u5c42\u6b21\u4f9d\u8d56\u7279\u6027      \u57ce\u5e02\u529f\u80fd\u533a\u5206\u7c7b\u8bc6\u522b\u7684\u7814\u7a76\u73b0\u72b6\u548c\u5b58\u5728\u95ee\u9898  \u95ee\u9898\u4e94\uff0c\u529f\u80fd\u533a\u6837\u672c\u83b7\u53d6\u95ee\u9898\uff1a\u5982\u4f55\u51c6\u786e\u5730\u9009\u53d6\u548c\u6807\u6ce8\u529f\u80fd\u533a\u6837\u672c\u662f\u529f\u80fd\u533a\u5206\u7c7b\u8bc6\u522b\u4e2d\u7684\u96be\u70b9\u95ee\u9898 \u95ee\u9898\u516d\uff0c\u529f\u80fd\u533a\u7a7a\u95f4\u76f8\u5173\u6027\u95ee\u9898\uff1a\u4ec5\u8003\u8651\u529f\u80fd\u533a\u5185\u90e8\u7279\u5f81\u96be\u4ee5\u51c6\u786e\u5206\u7c7b\u8bc6\u522b\u529f\u80fd\u533a\u7c7b\u578b\uff0c \u56e0\u6b64\u9700\u8981\u5efa\u6a21\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u76f8\u5173\u6027\u4ee5\u4f18\u5316\u5206\u7c7b\u7ed3\u679c  \u529f\u80fd\u533a\u4f5c\u4e3a\u4e00\u79cd\u5730\u7406\u7efc\u5408\u4f53\u5177\u6709\u5730\u7406\u7279\u6027\uff1a\u5730\u7406\u7a7a\u95f4\u4e0a\u8d8a\u9760\u8fd1\u7684\u4e8b\u7269\u76f8\u4f3c\u5ea6\u8d8a\u9ad8 \u7a7a\u95f4\u4e0a\u90bb\u8fd1\u7684\u529f\u80fd\u533a\u5177\u6709\u5f88\u5f3a\u7684\u76f8\u5173\u6027\uff1a\u4f8b\u5982\u4e00\u4e2a\u529f\u80fd\u533a\u53ef\u80fd\u5c5e\u4e8e\u57ce\u4e2d\u6751\u4e5f\u53ef\u80fd\u5c5e\u4e8e\u5c45\u6c11\u533a\uff0c \u5982\u679c\u8fd9\u4e2a\u529f\u80fd\u533a\u4e0e\u5de5\u4e1a\u533a\u90bb\u63a5\uff0c\u90a3\u4e48\u5b83\u5927\u6982\u7387\u5c5e\u4e8e\u57ce\u4e2d\u6751\u3002\u56e0\u6b64\u5728\u5206\u7c7b\u8bc6\u522b\u529f\u80fd\u533a\u65f6\u9700\u8981\u8003\u8651\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u76f8\u5173\u4fe1\u606f\uff0c\u4f46\u5df2\u6709\u5206\u7c7b\u65b9\u6cd5\u65e0\u6cd5\u5efa\u6a21\u548c\u8868\u8fbe\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u76f8\u5173\u6027\uff08\u8fd9\u4e2a\u4f8b\u5b50\u4e3e\u7684\u5f88\u597d\uff09    \u7814\u7a76\u76ee\u6807\u4e0e\u5185\u5bb9  \u8bba\u6587\u81f4\u529b\u4e8e\u5b9e\u73b0\u57fa\u4e8e\u9065\u611f\u5f71\u50cf\u7684\u57ce\u5e02\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u3001\u7279\u5f81\u8868\u8fbe\u4ee5\u53ca\u5206\u7c7b\u8bc6\u522b\uff0c\u4f46\u662f\u53d7\u529f\u80fd\u533a\u7efc\u5408\u6027\u3001\u5f02\u8d28\u6027\u548c\u5c3a\u5ea6\u4e0d\u786e\u5b9a\u6027\u7684\u5f71\u54cd\uff0c \u5f15\u53d1\u4e86\u516d\u4e2a\u96be\u70b9\u95ee\u9898\u3002 \u8bba\u6587\u5c06\u7ed3\u5408\u5730\u7406\u5b66\u3001\u666f\u89c2\u751f\u6001\u5b66\u4ee5\u53ca\u8ba1\u7b97\u673a\u89c6\u89c9\u7b49\u9886\u57df\u7684\u77e5\u8bc6\uff0c \u63d0\u53d6\u4e00\u5957\u57fa\u4e8e\u5730\u7406\u573a\u666f\u7684\u57ce\u5e02\u529f\u80fd\u533a\u5efa\u6a21\u4e0e\u5206\u6790\u65b9\u6cd5\u4f53\u7cfb\uff0c \u8003\u8651\u4e86\u529f\u80fd\u533a\u7684\u57fa\u672c\u7279\u6027\uff0c \u89e3\u51b3\u4e86\u4e0a\u8ff0\u96be\u70b9\u95ee\u9898\uff0c \u5e76\u5c06\u8be5\u65b9\u6cd5\u5e94\u7528\u4e8e\u57ce\u5e02\u529f\u80fd\u533a\u5236\u56fe\u548c\u57ce\u5e02\u529f\u80fd\u7ed3\u6784\u5206\u6790\u7b49\u65b9\u9762\u3002 \u6280\u672f\u8def\u7ebf \u7814\u7a76\u5185\u5bb9\u9075\u5faa\u529f\u80fd\u533a\u63d0\u53d6\u27a1\ufe0f\u8868\u8fbe\u27a1\ufe0f\u8bc6\u522b\u7684\u524d\u540e\u903b\u8f91\u5173\u7cfb \u7ae0\u8282\u5b89\u6392  \u7b2c\u4e8c\u7ae0 \u591a\u5c3a\u5ea6\u5730\u7406\u573a\u666f\u5206\u5272\uff1a\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6 \u5f15\u8a00 \u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u7684\u7814\u7a76\u80cc\u666f  \u7b2c\u4e00\u6bb5  \u57ce\u5e02\u529f\u80fd\u533a\u662f\u57ce\u5e02\u89c4\u5212\u548c\u7ba1\u7406\u7684\u57fa\u672c\u7a7a\u95f4\u5355\u5143\u27a1\ufe0f \u83b7\u53d6\u8fd9\u4e9b\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u8fb9\u754c\u4fe1\u606f\u662f\u8fdb\u884c\u529f\u80fd\u533a\u5206\u6790\u7684\u524d\u63d0\u27a1\ufe0f \u529f\u80fd\u533a\u5185\u90e8\u7ec4\u6210\u548c\u7ed3\u6784\u5f02\u8d28\u4e14\u529f\u80fd\u533a\u8fb9\u754c\u8303\u56f4\u6a21\u7cca\u3001\u6613\u6df7\u6dc6\uff0c\u56e0\u6b64\u4f20\u7edf\u7684\u9762\u5411\u5747\u8d28\u5bf9\u8c61\u7684\u5206\u5272\u65b9\u6cd5\u96be\u4ee5\u4ece\u9065\u611f\u5f71\u50cf\u4e2d\u63d0\u53d6\u57ce\u5e02\u529f\u80fd\u533a\u27a1\ufe0f \u672c\u7ae0\u5c06\u89e3\u51b3\u529f\u80fd\u533a\u5206\u5272\u65b9\u6cd5\u95ee\u9898\uff0c \u81f4\u529b\u4e8e\u81ea\u52a8\u5316\u3001\u591a\u5c3a\u5ea6\u63d0\u53d6\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u5355\u5143   \u7b2c\u4e8c\u6bb5  \u7814\u7a76\u5386\u53f2\u60a0\u4e45\u4e14\u8fd1\u5e74\u6765\u4e5f\u662f\u7814\u7a76\u70ed\u70b9 \u57fa\u4e8e\u9ad8\u5206\u5f71\u50cf\u57ce\u5e02\u529f\u80fd\u533a\u5206\u6790\u4e3b\u8981\u5305\u62ec\u4e09\u4e2a\u6b65\u9aa4\uff1a\u529f\u80fd\u533a\u5206\u5272\u3001 \u7279\u5f81\u8868\u8fbe\u4ee5\u53ca\u529f\u80fd\u5206\u7c7b  \u529f\u80fd\u533a\u5206\u5272\u662f\u6307\u5c06\u9ad8\u5206\u9065\u611f\u5f71\u50cf\u5728\u7a7a\u95f4\u4e0a\u5206\u5272\u6210\u4e0d\u540c\u7684\u533a\u57df\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u533a\u57df\u4ee3\u8868\u4e00\u4e2a\u529f\u80fd\u533a\u3002 \u5176\u6b21\uff0c\u7279\u5f81\u8868\u8fbe\u662f\u5229\u7528\u91cf\u5316\u7279\u5f81\u5bf9\u6bcf\u4e2a\u529f\u80fd\u533a\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u63cf\u8ff0\u548c\u8868\u8fbe\u3002 \u6700\u540e\uff0c\u529f\u80fd\u8bed\u4e49\u5206\u7c7b\u662f\u57fa\u4e8e\u529f\u80fd\u533a\u7684\u7279\u5f81\u8868\u8fbe\u5bf9\u6bcf\u4e2a\u529f\u80fd\u533a\u8fdb\u884c\u5206\u7c7b\u4ee5\u53ca\u529f\u80fd\u8bed\u4e49\u6807\u6ce8\uff0c\u5b9e\u73b0\u529f\u80fd\u533a\u5206\u7c7b\u5236\u56fe\u3002   \u5df2\u6709\u7684\u529f\u80fd\u533a\u5206\u6790\u65b9\u6cd5\u4e2d\u5927\u90e8\u5206\u96c6\u4e2d\u4e8e\u7279\u5f81\u8868\u8fbe\u548c\u529f\u80fd\u5206\u7c7b\uff0c \u4f46\u662f\u5ffd\u7565\u4e86\u529f\u80fd\u533a\u5206\u5272\u3002 \u529f\u80fd\u533a\u5206\u5272\u7684\u91cd\u8981\u6027(\u6700\u521d\u59cb\u3001\u6700\u57fa\u7840\u7684\u4e00\u6b65) \u27a1\ufe0f \u9996\u5148\u5e94\u89e3\u51b3\u529f\u80fd\u533a\u5206\u5272\u7684\u95ee\u9898\u27a1\ufe0f \u7531\u4e8e\u7efc\u5408\u6027\u548c\u5f02\u8d28\u6027\uff0c\u5df2\u6709\u7684\u56fe\u50cf\u5206\u5272\u65b9\u6cd5\u90fd\u65e0\u6cd5\u89e3\u51b3\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u95ee\u9898\u27a1\ufe0f \u4f7f\u7528\u8857\u533a\u5206\u5272\u63d0\u53d6\u57ce\u5e02\u529f\u80fd\u533a\uff08\u9053\u8def\u5206\u5272\uff09\u7684\u4e0d\u8db3\uff1a  \u6b20\u5206\u5272 \u65f6\u95f4\u5dee\u5f02\u5bfc\u81f4\u5206\u5272\u7ed3\u679c\u4e0d\u51c6\u786e \u8857\u533a\u5206\u5272\u7ed3\u679c\u4e0d\u9002\u5408\u591a\u7c92\u5ea6\u6216\u591a\u5c3a\u5ea6\u5206\u6790   \u9700\u8981\u63d0\u51fa\u65b0\u7684\u65b9\u6cd5\u5b9e\u73b0\u57fa\u4e8e\u9ad8\u5206\u5f71\u50cf\u7684\u57ce\u5e02\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6   \u7b2c\u4e09\u6bb5  \u529f\u80fd\u533a\u5206\u5272\u4e2d\u9700\u8981\u8003\u8651\u56db\u65b9\u9762\u5185\u5bb9\uff1a  \u5206\u5272\u4f9d\u636e\uff08\u529f\u80fd\u533a\u5f02\u8d28\u6027\u8868\u8fbe\uff09\uff1a\u56fe\u50cf\u7279\u5f81\u53ca\u5176\u5f02\u8d28\u6027\u8868\u8fbe\u662f\u56fe\u50cf\u5206\u5272\u7684\u4e3b\u8981\u4f9d\u636e\u3002  \u4f4e\u5c42\u7279\u5f81  \u5149\u8c31\u3001\u51e0\u4f55\u548c\u7eb9\u7406\u56fe\u50cf\u7279\u5f81 \u80fd\u6709\u6548\u8868\u8fbe\u76f8\u5bf9\u540c\u8d28\u7684\u5bf9\u8c61\uff0c \u800c\u4e0d\u80fd\u6709\u6548\u8868\u8fbe\u7531\u4e0d\u540c\u5bf9\u8c61\u7ec4\u6210\u7684\u5f02\u8d28\u7684\u529f\u80fd\u533a   \u4e2d\u5c42\u7279\u5f81  \u5bf9\u8c61\u8bed\u4e49\u548c\u89c6\u89c9\u8bcd\u888b \u7f3a\u4e4f\u660e\u786e\u7684\u8bed\u4e49\u4fe1\u606f\uff0c\u5ffd\u7565\u4e86\u5bf9\u8c61\u7684\u7a7a\u95f4\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u5bfc\u81f4\u5206\u5272\u7ed3\u679c\u4e0d\u51c6\u786e   \u9ad8\u5c42\u7279\u5f81  \u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u63d0\u53d6\u9ad8\u5c42\u6b21\u6df1\u5ea6\u7279\u5f81 1\uff09\u6df1\u5ea6\u7279\u5f81\u662f\u57fa\u4e8e\u50cf\u7d20\u7a97\u53e3\u63d0\u53d6\u7684\uff0c \u80fd\u591f\u5ea6\u91cf\u50cf\u7d20\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u800c\u4e0d\u80fd\u8868\u8fbe\u5730\u7269\u8981\u7d20\u5728\u7a7a\u95f4\u548c\u8bed\u4e49\u65b9\u9762\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u56e0\u6b64\u5728\u5ea6\u91cf\u4e0d\u89c4\u5219\u529f\u80fd\u533a\u65f6\u8868\u73b0\u8f83\u5dee\u30022\uff09\u6b64\u5916\uff0c\u6df1\u5ea6\u7279\u5f81\u7f3a\u4e4f\u5730\u7406\u610f\u4e49\uff0c\u53ef\u89e3\u91ca\u6027\u8f83\u5f31\u3002 \u27a1\ufe0f \u629b\u51fa\u95ee\u9898\uff1a\u5982\u4f55\u5b9a\u4e49\u7a7a\u95f4\u6a21\u5f0f\u7279\u5f81\u5e76\u5e94\u7528\u4e8e\u529f\u80fd\u533a\u5206\u5272     \u5206\u5272\u65b9\u6cd5\uff08\u57fa\u4e8e\u529f\u80fd\u533a\u5f02\u8d28\u6027\u5ea6\u91cf\u7684\u5bf9\u8c61\u805a\u5408\uff09  \u57fa\u4e8e\u5206\u5272\u4f9d\u636e\u6309\u7167\u4e00\u5b9a\u89c4\u5219\u5c06\u56fe\u50cf\u5206\u5272\u6210\u4e0d\u540c\u7684\u6591\u5757 \u57fa\u4e8e\u533a\u57df\u589e\u957f\u7684\u548c\u57fa\u4e8e\u8fb9\u7f18\u65b9\u6cd5 \u5747\u65e0\u6cd5\u63d0\u53d6\u529f\u80fd\u533a\uff0c \u539f\u56e0\u5728\u4e8e\u4ed6\u4eec\u90fd\u4e3a\u5206\u5272\u63d0\u53d6\u540c\u8d28\u5bf9\u8c61\u800c\u8bbe\u8ba1\u7684\uff0c\u5bf9\u8c61\u65b9\u6cd5\u4fa7\u91cd\u4f4e\u5c42\u7279\u5f81\u7684\u8fde\u7eed\u6027\u548c\u540c\u8d28\u6027\uff1b\u4f7f\u7528\u533a\u57df\u5206\u5272\u65b9\u6cd5\uff0c\u529f\u80fd\u533a\u4f1a\u88ab\u5206\u5272\u6210\u7834\u788e\u7684\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u6574\u4f53\u3002 \u629b\u51fa\u95ee\u9898\uff1a\u5982\u4f55\u8bbe\u8ba1\u529f\u80fd\u533a\u5206\u5272\u65b9\u6cd5   \u5206\u5272\u5c3a\u5ea6\uff08\u529f\u80fd\u533a\u5f02\u8d28\u6027\u9608\u503c\uff09  \u5c3a\u5ea6\u4e00\u4e2a\u91cd\u8981\u7684\u5206\u5272\u53c2\u6570\uff0c \u6307\u529f\u80fd\u533a\u5185\u90e8\u5f02\u8d28\u6027\u7684\u7684\u6700\u5927\u503c\u3002\u5206\u5272\u5c3a\u5ea6\u7684\u5927\u5c0f\u5c06\u51b3\u5b9a\u5206\u5272\u7ed3\u679c\u4e2d\u4e0d\u540c\u529f\u80fd\u533a\u7684\u5927\u5c0f\u3002 \u73b0\u6709\u5206\u5272\u5c3a\u5ea6\u8bbe\u7f6e\u65b9\u6cd5\u4e3b\u8981\u662f\u624b\u5de5\u9009\u62e9\u4e00\u4e2a\u5168\u5c40\u7684\u5c3a\u5ea6\u53c2\u6570\u3002 \u629b\u51fa\u95ee\u9898\uff1a\u4e3a\u4e0d\u540c\u529f\u80fd\u533a\u9009\u62e9\u5c40\u90e8\u6700\u4f18\u7684\u5c3a\u5ea6\u53c2\u6570   \u5206\u5272\u7ed3\u679c\u8bc4\u4ef7\uff08\u529f\u80fd\u533a\u5206\u5272\u7cbe\u5ea6\u8ba1\u7b97\uff09  \u9700\u8981\u5b9a\u91cf\u8bc4\u4f30\u529f\u80fd\u533a\u5206\u5272\u7ed3\u679c\u7684\u51c6\u786e\u6027\uff0c\u9a8c\u8bc1\u5206\u5272\u65b9\u6cd5\u7684\u6709\u6548\u6027 1\uff09\u76d1\u7763\u8bc4\u4ef7\u6cd5\u9700\u8981\u4eba\u5de5\u6807\u6ce8\u529f\u80fd\u533a\u8fb9\u754c\uff0c\u4eba\u5de5\u52fe\u753b\u8fb9\u754c\u5c06\u8017\u8d39\u5927\u91cf\u4eba\u529b\u7269\u529b\uff0c\u4e0d\u662f\u6700\u4f73\u9009\u62e9\uff1b2\uff09\u975e\u76d1\u7763\u8bc4\u4ef7\u5047\u8bbe\u5206\u5272\u5bf9\u8c61\u5185\u662f\u76f8\u4f3c\u7684\u800c\u5206\u5272\u5bf9\u8c61\u95f4\u662f\u6709\u5dee\u5f02\u7684\u3002 \u4f46\u662f\u529f\u80fd\u533a\u5185\u90e8\u901a\u5e38\u662f\u5f02\u8d28\u7684\uff0c\u56e0\u6b64\u4e0a\u8ff0\u5047\u8bbe\u4e0d\u9002\u7528\u4e8e\u529f\u80fd\u533a\u5206\u5272\u7ed3\u679c\u8bc4\u4ef7\u3002 \u629b\u51fa\u95ee\u9898\uff1a\u9700\u8981\u9488\u5bf9\u529f\u80fd\u533a\u7279\u70b9\u7814\u7a76\u65b0\u7684\u5206\u5272\u8bc4\u4ef7\u65b9\u6cd5       \u7b2c\u56db\u6bb5\uff1a\u603b\u7ed3  \u672c\u6587\u81f4\u529b\u4e8e\u89e3\u51b3\u4e0a\u8ff0\u56db\u4e2a\u95ee\u9898\uff0c \u81ea\u52a8\u5206\u5272\u63d0\u53d6\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u5355\u5143\u3002 \u529f\u80fd\u533a\u5728\u5730\u7406\u7a7a\u95f4\u4e0a\u7531\u4e0d\u540c\u5730\u7269\u8981\u7d20\u6309\u4e00\u5b9a\u7a7a\u95f4\u683c\u5c40\u7ec4\u7ec7\u805a\u5408\u800c\u6210\u7684\u533a\u57df \u57fa\u672c\u601d\u8def\u4e3a\u5f71\u50cf\u7279\u5f81\u27a1\ufe0f\u5730\u7269\u7c7b\u522b\u27a1\ufe0f\u529f\u80fd\u5206\u533a \u9996\u5148\u5f71\u50cf\u7279\u5f81\u63d0\u53d6\u5730\u7269\u7c7b\u522b\uff08\u4f7f\u7528\u4f20\u7edf\u7684\u9762\u5411\u5bf9\u8c61\u5206\u5272\u548c\u5206\u7c7b\u65b9\u6cd5\uff09 \u7814\u7a76\u5730\u7269\u805a\u5408\u7b97\u6cd5\u5206\u5272\u63d0\u53d6\u529f\u80fd\u533a\u8fb9\u754c\uff08\u672c\u7ae0\u7814\u7a76\u91cd\u70b9\uff09      \u5730\u7406\u573a\u666f\uff1a \u529f\u80fd\u533a\u7684\u5f71\u50cf\u5efa\u6a21\u65b9\u6cd5  \u7b2c\u4e00\u6bb5\uff1a\u5f3a\u8c03\u56fe\u50cf\u6a21\u578b  \u96be\u70b9/\u6839\u672c\u539f\u56e0\uff1a\u7f3a\u4e4f\u4e00\u79cd\u53ef\u6570\u5b66\u5f62\u5f0f\u5316\u8868\u8fbe\u7684\u3001\u53ef\u7528\u4e8e\u5efa\u6a21\u8868\u8fbe\u57ce\u5e02\u529f\u80fd\u533a\u7684\u56fe\u50cf\u6a21\u578b   \u7b2c\u4e8c\u6bb5\uff1a  \u4e0d\u540c\u793e\u4f1a\u7ecf\u6d4e\u6d3b\u52a8\u5bfc\u81f4\u4e0d\u540c\u529f\u80fd\u533a\u5177\u6709\u4e0d\u540c\u7684\u7ed3\u6784\u6216\u683c\u5c40\u27a1\ufe0f\uff08\u7591\u95ee?\ufe0f\uff1a\u7ed3\u6784\u6216\u683c\u5c40=\uff1f\u5efa\u6210\u73af\u5883/\u666f\u89c2\u683c\u5c40\uff09 \u76f8\u540c\u57ce\u5e02\u529f\u80fd\u533a\u5185\u5efa\u6210\u73af\u5883\u5177\u6709\u76f8\u4f3c\u6027\uff0c\u800c\u4e0d\u540c\u529f\u80fd\u533a\u95f4\u7684\u5efa\u6210\u73af\u5883\u5177\u6709\u5dee\u5f02\u6027\u27a1\ufe0f \u529f\u80fd\u533a\u7684\u5206\u5272\u63d0\u53d6\u95ee\u9898\u672c\u8d28\u4e0a\u662f\u5efa\u6210\u73af\u5883\u7684\u5206\u5272\u95ee\u9898 \u9700\u8981\u63d0\u51fa\u4e00\u79cd\u80fd\u591f\u8868\u8fbe\u4e0d\u540c\u5efa\u6210\u73af\u5883\u7684\u56fe\u50cf\u6a21\u578b\u5bf9\u5efa\u6210\u73af\u5883\u4ee5\u53ca\u529f\u80fd\u533a\u8fdb\u884c\u5efa\u6a21 \u5efa\u6210\u73af\u5883\u7684\u7279\u5f81\u4f53\u73b0\u5728\u4e0d\u540c\u5730\u7269\u8981\u7d20\uff08\u5982\u5efa\u7b51\u7269\u3001\u6c34\u4f53\u3001\u690d\u88ab\u7b49\u5730\u7269\uff09 \u7684\u4e2a\u4f53\u7279\u5f81\u53ca\u5176\u7a7a\u95f4\u5206\u5e03\u6a21\u5f0f   \u7b2c\u4e09\u6bb5\uff1a  \u5730\u7406\u573a\u666f\u5b9a\u4e49\u4e3a\u9065\u611f\u5f71\u50cf\u4e0a\u8fde\u7eed\u4e14\u4e0d\u91cd\u53e0\u7684\u533a\u57df\uff0c \u5728\u6bcf\u4e2a\u5730\u7406\u573a\u666f\u5185\uff0c\u540c\u7c7b\u578b\u5730\u7269\u5e94\u8be5\u5177\u6709\u76f8\u4f3c\u7684\u4e2a\u4f53\u7279\u5f81\u548c\u7a7a\u95f4\u5206\u5e03\u89c4\u5f8b\u3002 \u6570\u5b66\u4e0a\u8868\u8fbe\uff1a&hellip;   \u7b2c\u56db\u6bb5\uff1a\u5730\u7406\u573a\u666f\u548c\u529f\u80fd\u533a\u4e4b\u95f4\u7684\u5173\u7cfb  \u51e0\u4f55\u5c5e\u6027\uff1a\u5747\u8868\u73b0\u4e3a\u4e0d\u89c4\u5219\u591a\u8fb9\u5f62 \u5185\u90e8\u7ec4\u5206\uff1a\u5747\u8868\u73b0\u5f02\u8d28\u6027 \u7ec4\u6210\u673a\u7406\uff1a\u5730\u7406\u573a\u666f\u6982\u5ff5\u4e2d\u5b9a\u4e49\u4e86\u5bf9\u8c61\u7684\u7a7a\u95f4\u5206\u5e03\u683c\u5c40\u53ef\u8868\u8fbe\u529f\u80fd\u533a\u5185\u90e8\u7684\u666f\u89c2\u683c\u5c40\u6216\u5efa\u6210\u73af\u5883 \u5206\u6790\u5c3a\u5ea6\uff1a\u5747\u53d7\u5206\u6790\u5c3a\u5ea6\u53c2\u6570\u7684\u5f71\u54cd \u603b\u7ed3\uff1a\u5730\u7406\u573a\u666f\u4f5c\u4e3a\u4e00\u79cd\u56fe\u50cf\u6a21\u578b\u5728\u51e0\u4f55\u5c5e\u6027\u3001 \u5185\u90e8\u7ec4\u6210\u3001\u6784\u6210\u673a\u7406\u4ee5\u53ca\u5206\u6790\u5c3a\u5ea6\u56db\u4e2a\u65b9\u9762\u4e0e\u57ce\u5e02\u529f\u80fd\u533a\u9ad8\u5ea6\u76f8\u5173\uff0c \u56e0\u6b64\u5730\u7406\u573a\u666f\u80fd\u591f\u6709\u6548\u5730\u5efa\u6a21\u548c\u5206\u6790\u57ce\u5e02\u529f\u80fd\u533a\u3002   \u7b2c\u4e94\u6bb5\uff1a\u518d\u6b21\u603b\u7ed3\uff1a  \u5df2\u6709\u7684\u56fe\u50cf\u5206\u5272\u7814\u7a76\u4e0d\u9002\u7528\u4e8e\u529f\u80fd\u533a\u7684\u5206\u5272\u63d0\u53d6 \u672c\u7ae0\uff08\u6709\u4e00\u79cd\u864e\u5934\u86c7\u5c3e\u7684\u611fjio?\uff09  \u901a\u8fc7\u5b9a\u4e49\u7a7a\u95f4\u5206\u5e03\u7279\u5f81\u89e3\u51b3\u5206\u5272\u4f9d\u636e\u7684\u95ee\u9898 \u901a\u8fc7\u5b9a\u4e49\u5730\u7406\u573a\u666f\u8fd9\u4e00\u65b0\u7684\u56fe\u50cf\u6a21\u578b\u4ee5\u53ca\u63d0\u51fa\u591a\u5c3a\u5ea6\u5730\u7406\u573a\u666f\u5206\u5272\u89e3\u51b3\u5206\u5272\u65b9\u6cd5\u548c\u5c3a\u5ea6\u8868\u8fbe\u4e24\u4e2a\u95ee\u9898 \u5229\u7528\u611f\u5174\u8da3\u70b9\u6570\u636e\u5bf9\u5206\u5272\u7ed3\u679c\u8fdb\u884c\u8bc4\u4ef7      \u591a\u5c3a\u5ea6\u5730\u7406\u573a\u666f\u5206\u5272  \u57fa\u7840  \u5730\u7406\u573a\u666f\u7531\u591a\u79cd\u571f\u5730\u8986\u76d6\u8981\u7d20\u8054\u5408\u5206\u5e03\u6784\u6210 \u6bcf\u7c7b\u571f\u5730\u8986\u76d6\u8981\u7d20\u7684\u4e2a\u4f53\u7279\u5f81\u53ca\u7a7a\u95f4\u7279\u5f81\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027   \u57fa\u672c\u601d\u8def\uff1a\u6839\u636e\u571f\u5730\u8986\u76d6\u7c7b\u578b\u9010\u7c7b\u522b\u8fdb\u884c\u5206\u5c42\u805a\u5408\uff0c\u8fdb\u800c\u5c06\u4e0d\u540c\u5c42\u7684\u805a\u5408\u7ed3\u679c\u53e0\u52a0\u7ec4\u5408\u751f\u6210\u5730\u7406\u573a\u666f \u9996\u5148\uff0c \u5b9a\u4e49\u571f\u5730\u8986\u76d6\u5bf9\u8c61\u7684\u4e2a\u4f53\u7279\u5f81\u4ee5\u53ca\u7a7a\u95f4\u5206\u5e03\u7279\u5f81\uff0c \u5176\u4e2d\u7a7a\u95f4\u5206\u5e03\u7279\u5f81\u9700\u8981\u8003\u8651\u5bf9\u8c61\u4e0e\u4e0d\u540c\u7c7b\u522b\u4e4b\u95f4\u7684\u8ddd\u79bb\u548c\u65b9\u5411\u7684\u4fe1\u606f\uff1b \u7136\u540e\uff0c\u57fa\u4e8e\u4e0a\u8ff0\u7279\u5f81\u7684\u76f8\u4f3c\u5ea6\uff0c \u9010\u7c7b\u522b\u805a\u5408\u571f\u5730\u8986\u76d6\u5bf9\u8c61\u5f62\u6210\u6bcf\u7c7b\u5bf9\u8c61\u7684\u5bf9\u8c61\u7c07\uff1b \u6700\u540e\uff0c \u5bf9\u4e0d\u540c\u7c7b\u522b\u5bf9\u8c61\u751f\u6210\u7684\u5bf9\u8c61\u7c07\u8fdb\u884c\u7a7a\u95f4\u53e0\u52a0\u5f62\u6210\u6700\u7ec8\u7684\u5730\u7406\u573a\u666f\u5206\u5272\u7ed3\u679c\u3002    \u7a7a\u95f4\u5206\u5e03\u7279\u5f81  \u5bf9\u8c61\u7279\u5f81  \u5149\u8c31\u3001\u51e0\u4f55\u3001\u7eb9\u7406\u7b49\u7279\u5f81 \u4ece\u89c6\u89c9\u7684\u89d2\u5ea6\u8868\u8fbe\u5bf9\u8c61\u7684\u4e2a\u4f53\u5c5e\u6027\uff0c\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u571f\u5730\u8986\u76d6\u5206\u7c7b\u4e2d \u7f3a\u4e4f\u5bf9\u7a7a\u95f4\u5206\u5e03\u7279\u5f81\u7684\u63cf\u8ff0   \u7a7a\u95f4\u5206\u5e03\u7279\u5f81  \u6307\u5bf9\u8c61\u7684\u7a7a\u95f4\u5173\u7cfb\u3001\u7ed3\u6784\u548c\u683c\u5c40\u7b49 \u662f\u63a2\u7a76\u548c\u53d1\u73b0\u571f\u5730\u8986\u76d6\u5bf9\u8c61\u7a7a\u95f4\u5206\u5e03\u89c4\u5f8b\u7684\u5173\u952e \u4ece\u7a7a\u95f4\u90bb\u63a5\u548c\u7a7a\u95f4\u5206\u79bb\u4e24\u4e2a\u89d2\u5ea6\u5b9a\u4e49\u548c\u7814\u7a76\u7a7a\u95f4\u5206\u5e03\u7279\u5f81  \u7a7a\u95f4\u90bb\u63a5  \u5df2\u6709\u7814\u7a76\u91c7\u7528\u5bf9\u8c61\u95f4\u7684\u516c\u5171\u8fb9\u957f\u5ea6\u4fe1\u606f\u6765\u8868\u8fbe\u5bf9\u8c61\u7684\u90bb\u63a5\u5173\u7cfb \u5b83\u5ffd\u7565\u4e86\u5468\u56f4\u5bf9\u8c61\u7684\u5e8f\u5217\u548c\u7279\u5f81\u4fe1\u606f\uff0c\u800c\u8fd9\u4e9b\u4fe1\u606f\u5bf9\u4e8e\u8868\u5f81\u7a7a\u95f4\u5206\u5e03\u975e\u5e38\u91cd\u8981 \u5bf9\u8c61\u90bb\u63a5\u5173\u7cfb\u7684\u4e09\u79cd\u4fe1\u606f\uff1a \u90bb\u63a5\u5bf9\u8c61\u7279\u5f81\u3001\u90bb\u63a5\u987a\u5e8f\u548c\u90bb\u63a5\u8fb9\u957f   \u7a7a\u95f4\u5206\u79bb  \u7a7a\u95f4\u5206\u79bb\u7279\u5f81\u5ea6\u91cf\u6bcf\u4e2a\u5bf9\u8c61\u4e0e\u4e0d\u76f8\u90bb\u7684\u5404\u7c7b\u5bf9\u8c61\u7684\u7a7a\u95f4\u5173\u7cfb \u7531\u6bcf\u4e2a\u5bf9\u8c61\u5230\u6bcf\u4e2a\u7c7b\u522b\u7684\u6700\u5c0f\u8ddd\u79bb\u3001\u5e73\u5747\u8ddd\u79bb\u548c\u4e3b\u8981\u65b9\u5411\u7ec4\u6210        \u5730\u7406\u573a\u666f\u5206\u5272  \u805a\u5408\uff1a\u57fa\u4e8e\u8fd9\u4e9b\u5173\u7cfb\u56fe\u805a\u5408\u6bcf\u7c7b\u5bf9\u8c61\u5f62\u6210\u5bf9\u8c61\u7c07\uff0c\u5728\u805a\u5408\u8fc7\u7a0b\u4e2d\u8003\u8651\u5b83\u4eec\u5728\u5bf9\u8c61\u4e2a\u4f53\u7279\u5f81\u4ee5\u53ca\u7a7a\u95f4\u5206\u5e03\u7279\u5f81\u4e0a\u7684\u76f8\u4f3c\u6027\u3002  \u6bcf\u4e2a\u5730\u7406\u573a\u666f\u4e2d\u7684\u540c\u7c7b\u5bf9\u8c61\u5728\u4e2a\u4f53\u7279\u5f81\u548c\u7a7a\u95f4\u6a21\u5f0f\u4e0a\u5e94\u8be5\u76f8\u4f3c \u57fa\u4e8e\u5173\u7cfb\u56fe\u8fdb\u884c\u7a7a\u95f4\u805a\u5408  \u5bf9\u8c61\u88ab\u8868\u8fbe\u4e3a\u8282\u70b9\uff0c\u5b83\u4eec\u7684\u5173\u7cfb\u7531\u65e0\u5411\u8fb9\u6765\u8868\u793a\uff0c\u53ea\u6709\u94fe\u63a5\u5728\u4e00\u8d77\u7684\u5bf9\u8c61\u624d\u53ef\u4ee5\u88ab\u805a\u5408 \u94fe\u63a5\u5b9a\u4e49\uff1a\u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u5c5e\u4e8e\u540c\u4e00\u7c7b\u522b\u4e14?2\u4e0e?1\u7684\u91cd\u5fc3\u8ddd\u79bb\u5c0f\u4e8e20 ?\uff0c\u5219\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u5b58\u5728\u8fb9\u94fe\u63a5\u3002 \u805a\u5408\u7b97\u6cd5\u662f\u57fa\u4e8e\u5206\u5f62\u7f51\u7edc\u6f14\u5316\u7406\u8bba \u9608\u503c-\u5730\u7406\u573a\u666f\u5206\u5272\u5c3a\u5ea6   \u901a\u8fc7\u805a\u5408\uff0c\u6bcf\u7c7b\u571f\u5730\u8986\u76d6\u5bf9\u8c61\u53ef\u4ee5\u751f\u6210\u8bb8\u591a\u5bf9\u8c61\u7c07\uff0c \u800c\u8fd9\u4e9b\u5bf9\u8c61\u7c07\u7a7a\u95f4\u4e0a\u662f\u5206\u79bb\u7684\u3002   \u6269\u5f20\uff1a\u805a\u5408\u5f62\u6210\u7684\u5bf9\u8c61\u7c07\u7a7a\u95f4\u4e0a\u4e0d\u8fde\u7eed\uff0c\u5c06\u5bf9\u8fd9\u4e9b\u5bf9\u8c61\u7c07\u5728\u7a7a\u95f4\u4e0a\u8fdb\u884c\u6269\u5f20\u5f62\u6210\u7a7a\u95f4\u4e0a\u8fde\u7eed\u7684\u3001\u4ee5\u67d0\u4e00\u7c7b\u5bf9\u8c61\u4e3a\u4e3b\u7684\u5730\u7406\u573a\u666f\u3002  \u805a\u5408\u751f\u6210\u5bf9\u8c61\u7c07\u5728\u7a7a\u95f4\u4e0a\u4e0d\u8fde\u7eed\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u7684\u5bf9\u8c61\u7c07\u4e2d\u95f4\u6709\u5176\u4ed6\u7c7b\u522b\u7684\u5bf9\u8c61\u3002\u5730\u7406\u573a\u666f\u5728\u7a7a\u95f4\u4e0a\u5e94\u8be5\u662f\u8fde\u7eed\u7684\uff0c \u56e0\u6b64\u63d0\u51fa\u4f7f\u7528\u6269\u5f20\u7684\u65b9\u6cd5\u6765\u89e3\u51b3\u5bf9\u8c61\u7c07\u7a7a\u95f4\u4e0d\u8fde\u7eed\u7684\u95ee\u9898 \u5438\u5f15\u529b\u6a21\u578b   \u7a7a\u95f4\u53e0\u52a0\uff1a\u591a\u5c42\u4e0d\u540c\u7c7b\u578b\u7684\u5730\u7406\u573a\u666f\u8fdb\u884c\u7a7a\u95f4\u53e0\u52a0\uff0c \u5b83\u4eec\u7684\u516c\u5171\u90e8\u5206\u4f5c\u4e3a\u5730\u7406\u573a\u666f\u5206\u5272\u7ed3\u679c  \u5730\u7406\u573a\u666f\u4e0d\u662f\u6309\u571f\u5730\u8986\u76d6\u7c7b\u522b\u5206\u5c42\u8868\u8fbe\u7684\uff0c\u800c\u662f\u5305\u542b\u6240\u6709\u7c7b\u578b\u7684\u5bf9\u8c61 \u6d88\u9664\u3001\u5408\u5e76\u7834\u788e\u7684\u5730\u7406\u573a\u666f \u8003\u8651\u5176\u5728\u7a7a\u95f4\u5206\u5e03\u7279\u5f81\u4e0a\u7684\u76f8\u4f3c\u6027\uff0c\u53ef\u4ee5\u5c06\u8f83\u5c0f\u7684\u5730\u7406\u573a\u666f\u5408\u5e76\u81f3\u76f8\u90bb\u7684\u573a\u666f\u4e2d    \u591a\u5c3a\u5ea6\u5206\u5272  \u73b0\u5b9e\u4e2d\u57ce\u5e02\u529f\u80fd\u533a\u7684\u5927\u5c0f\u548c\u5f02\u8d28\u5ea6\u53ef\u80fd\u90fd\u4e0d\u540c\u27a1\ufe0f\u591a\u5c3a\u5ea6 \u8f83\u5c0f\u5c3a\u5ea6\u751f\u6210\u9762\u79ef\u8f83\u5c0f\u4e14\u8be6\u7ec6\u7684\u5730\u7406\u573a\u666f\u7528\u4e8e\u8868\u8fbe\u76f8\u5bf9\u5747\u8d28\u7684\u529f\u80fd\u533a\uff0c \u5982\u516c\u56ed\u548c\u5c45\u6c11\u533a\uff1b \u800c\u5927\u5c3a\u5ea6\u751f\u6210\u9762\u79ef\u8f83\u5927\u4e14\u7c97\u7565\u7684\u5730\u7406\u573a\u666f\u7528\u4e8e\u8868\u8fbe\u5177\u6709\u9ad8\u5ea6\u5f02\u8d28\u6027\u7684\u57ce\u5e02\u529f\u80fd\u533a\uff0c \u5982\u5b66\u6821\u3001\u5546\u4e1a\u533a\u3002 \u591a\u5c3a\u5ea6\u5206\u5272\u7ed3\u679c\u7ec4\u7ec7\u65b9\u5f0f \u5c42\u6b21\u7ed3\u6784 \u975e\u5c42\u6b21\u7ed3\u6784   \u4e3a\u4e86\u5b9e\u73b0\u5c42\u6b21\u591a\u5c3a\u5ea6\u5206\u5272\uff0c\u6700\u5c0f\u5c3a\u5ea6\u7684\u5730\u7406\u573a\u666f\u662f\u901a\u8fc7\u5730\u7406\u573a\u666f\u5206\u5272\u76f4\u63a5\u751f\u6210\u7684\uff0c\u800c\u5176\u4ed6\u5c3a\u5ea6\u7684\u5730\u7406\u573a\u666f\u662f\u901a\u8fc7\u805a\u5408\u5c0f\u5c3a\u5ea6\u573a\u666f\u751f\u6210\u751f\u6210\u7684\u3002 \u5c42\u6b21\u7ed3\u6784\u5bf9\u4e8e\u751f\u6210\u591a\u5c3a\u5ea6\u5730\u7406\u573a\u666f\u5206\u5272\u7ed3\u679c\u6548\u7387\u66f4\u9ad8\uff0c \u800c\u4e14\u5c42\u6b21\u5173\u7cfb\u5bf9\u4e8e\u5206\u6790\u529f\u80fd\u533a\u4e5f\u5f88\u91cd\u8981  \u5206\u5272\u7ed3\u679c\u8bc4\u4ef7  \u57fa\u4e8e\u5174\u8da3\u70b9\u7684\u529f\u80fd\u533a\u5206\u5272\u8bc4\u4ef7\u65b9\u6cd5\uff1a\u5047\u8bbe\u6bcf\u4e2a\u57ce\u5e02\u529f\u80fd\u533a\u5185\u7684 POI \u96c6\u4e2d\u4e8e 1-2 \u7c7b\u522b\u3002\u56e0\u6b64\uff0c POI \u7c7b\u522b\u5355\u4e00\u7eaf\u51c0\u7684\u529f\u80fd\u533a\u5206\u5272\u7ed3\u679c\u7684\u7cbe\u5ea6\u9ad8\uff0c \u76f8\u53cd\u5982\u679c\u4e00\u4e2a\u529f\u80fd\u533a\u5305\u542b\u8bb8\u591a\u7c7b POI\uff0c\u8bf4\u660e\u5206\u5272\u7ed3\u679c\u8f83\u5dee\u7cbe\u5ea6\u504f\u4f4e\u3002 \u4f7f\u7528\u6bcf\u5e73\u65b9\u7c73 POI \u4fe1\u606f\u71b5\u7684\u5012\u6570\u6765\u5b9a\u4e49 POI \u7684\u7eaf\u51c0\u5ea6\u3002\uff08\u5f88\u6709\u9053\u7406\uff0c\u4f46\u662f\u53c8\u89c9\u5f97\u54ea\u91cc\u4e0d\u5bf9\uff0c\u6216\u8005\u54ea\u91cc\u4e0d\u4e25\u8c28?\uff09 ??\u4ee3\u8868\u5206\u5272\u7ed3\u679c\u7684\u6574\u4f53\u7cbe\u5ea6  \u5b9e\u9a8c\u5206\u6790 \u5b9e\u9a8c\u6570\u636e \u591a\u5c3a\u5ea6\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u7ed3\u679c  \u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e2d\u5e38\u7528\u7684\u5bf9\u8c61\u7279\u5f81 \u6d41\u7a0b  \u591a\u5c3a\u5ea6\u5206\u5272\uff08MRS\uff09\u27a1\ufe0f\u5bf9\u8c61 \u5bf9\u6bcf\u4e2a\u5bf9\u8c61\u63d0\u53d6\u89c6\u89c9\u7279\u5f81 \u624b\u5de5\u6807\u6ce8\u8bad\u7ec3\u6837\u672c\uff0cSVM\u5bf9\u8c61\u5206\u7c7b \u63d0\u53d6\u5bf9\u8c61\u7a7a\u95f4\u6a21\u5f0f\u7279\u5f81\uff0c\u5c3a\u5ea6\u7f29\u653e\u81f3\uff080\uff0c255\uff09   \u5730\u7406\u573a\u666f\u5206\u5272\u5c3a\u5ea6\uff1a70\u3001 90\u3001 110\u3001 130 \u548c 150 \u8fd9\u4e94\u4e2a\u5c3a\u5ea6 \u5b50\u533a\u57df\u5206\u6790  \u5206\u5272\u5c3a\u5ea6\u5728\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u4e2d\u626e\u6f14\u7740\u91cd\u8981\u7684\u89d2\u8272\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u529f\u80fd\u533a\u5e94\u4f7f\u7528\u4e0d\u540c\u7684\u5c3a\u5ea6\u8fdb\u884c\u5212\u5206\u3002\u27a1\ufe0f\u6709\u5fc5\u8981\u9009\u62e9\u4e00\u4e2a\u6700\u4f73\u5c3a\u5ea6\u6765\u751f\u6210\u6700\u7ec8\u7684\u529f\u80fd\u533a\u5206\u5272\u7ed3\u679c 130\u5c3a\u5ea6    \u7a7a\u95f4\u6a21\u5f0f\u7279\u5f81\u5728\u529f\u80fd\u533a\u5206\u5272\u4e2d\u91cd\u8981\u6027\u8bc4\u4ef7  \u672c\u5b9e\u9a8c\u65e8\u5728\u8bc4\u4f30\u7a7a\u95f4\u683c\u5c40\u7279\u5f81\u5728\u529f\u80fd\u533a\u5206\u5272\u4e2d\u7684\u91cd\u8981\u6027\uff0c\u56de\u7b54\u7a7a\u95f4\u683c\u5c40\u662f\u5426\u6bd4\u5bf9\u8c61\u4e2a\u4f53\u7279\u5f81\u66f4\u91cd\u8981\u7684\u95ee\u9898\u3002\uff08\u8bdd\u672f\uff09 \u7ed3\u8bba\uff1a  \u7a7a\u95f4\u6a21\u5f0f\u5728\u529f\u80fd\u533a\u5206\u5272\u4e2d\u6bd4\u5bf9\u8c61\u4e2a\u4f53\u7279\u5f81\u66f4\u91cd\u8981\uff0c\u4f46\u4e0d\u80fd\u5ffd\u7565\u5bf9\u8c61\u4e2a\u4f53\u7279\u5f81\u7684\u5728\u529f\u80fd\u533a\u5206\u5272\u4e2d\u7684\u8d21\u732e\u3002\uff08\u8bdd\u672f\uff09 \u5bf9\u4e8e\u6574\u4e2a\u7814\u7a76\u533a\u4f7f\u7528 130 \u5c3a\u5ea6\u548c??? =0.7 \u53ef\u4ee5\u751f\u6210\u6700\u7cbe\u786e\u7684\u529f\u80fd\u533a\u5206\u5272\u7ed3\u679c    \u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u7ed3\u679c  \u63d0\u53d6\u751f\u6210\u4e86 386 \u4e2a\u529f\u80fd\u533a\u5355\u5143 \u9009\u53d6\u4e86\u4e94\u4e2a\u5b50\u533a\u57df\u8fdb\u884c\u76ee\u89c6\u5224\u8bfb   \u8ba8\u8bba \u672c\u7ae0\u65b9\u6cd5\u4e0e\u4f20\u7edf\u7684\u529f\u80fd\u533a\u5206\u6790\u5bf9\u6bd4  \u57ce\u5e02\u529f\u80fd\u533a\u5206\u6790\u5c5e\u4e8e\u666f\u89c2\u751f\u6001\u5b66\u3001 \u57ce\u5e02\u89c4\u5212\u5b66\u548c\u4eba\u6587\u5730\u7406\u7814\u7a76\u7684\u8303\u7574\uff0c\u5177\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u524d\u666f\uff0c \u4f46\u662f\u8fd8\u5b58\u5728\u8bb8\u591a\u6280\u672f\u95ee\u9898 \u529f\u80fd\u533a\u901a\u5e38\u5177\u6709\u4e0d\u540c\u7684\u5f62\u72b6\u548c\u5927\u5c0f\uff0c\u5e94\u8be5\u5728\u4e0d\u540c\u7684\u5c3a\u5ea6\u4e0a\u8fdb\u884c\u5206\u6790 \u4e09\u4e2a\u65b9\u9762\u4e0e\u73b0\u6709\u7684\u529f\u80fd\u533a\u5206\u6790\u6709\u6240\u4e0d\u540c  \u9996\u5148\uff0c\u672c\u7814\u7a76\u4f7f\u7528\u591a\u5c3a\u5ea6\u5730\u7406\u573a\u666f\u4f5c\u4e3a\u529f\u80fd\u533a\u5206\u6790\u7684\u7a7a\u95f4\u5355\u5143\uff0c\u800c\u5176\u5b83\u7814\u7a76\u5219\u4f7f\u7528\u56fe\u50cf\u74e6\u7247\u3002\u5730\u7406\u573a\u666f\u53ef\u4ee5\u8868\u8fbe\u4efb\u610f\u5f62\u72b6\u7684\u529f\u80fd\u533a\uff0c\u65e2\u80fd\u4fdd\u6301\u5730\u7269\u5bf9\u8c61\u7684\u5b8c\u6574\u6027\uff0c\u53c8\u80fd\u4fdd\u8bc1\u529f\u80fd\u533a\u4e4b\u95f4\u7684\u72ec\u7acb\u6027\u3002 \u7b2c\u4e8c\uff0c \u5730\u7406\u573a\u666f\u7684\u5206\u5272\u5c3a\u5ea6\u6307\u7684\u662f\u5730\u7406\u573a\u666f\u5185\u90e8\u540c\u7c7b\u5bf9\u8c61\u7684\u5f02\u8d28\u5ea6\uff0c\u800c\u56fe\u74e6\u7247\u7684\u5c3a\u5ea6\u5219\u662f\u76f4\u63a5\u6d4b\u91cf\u5176\u5927\u5c0f\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u591a\u5c3a\u5ea6\u5730\u7406\u573a\u666f\u6bd4\u591a\u5206\u8fa8\u7387\u56fe\u50cf\u74e6\u7247\u66f4\u9002\u7528\u4e8e\u591a\u7c92\u5ea6\u8868\u8fbe\u548c\u5206\u6790\u57ce\u5e02\u529f\u80fd\u533a\u3002 \u7b2c\u4e09\uff0c\u9664\u4e86\u7a7a\u95f4\u5355\u5143\u548c\u5206\u6790\u5c3a\u5ea6\u4e4b\u5916\uff0c\u4f7f\u7528\u7684\u7279\u5f81\u4e5f\u4e0d\u540c\u3002    \u9762\u5411\u5730\u7406\u573a\u666f\u5206\u6790\u4e0e\u9762\u5411\u5bf9\u8c61\u5206\u6790\u5bf9\u6bd4  \u672c\u7814\u7a76\u6240\u63d0\u51fa\u7684\u57fa\u4e8e\u5730\u7406\u573a\u666f\u7684\u7684\u5f71\u50cf\u5206\u6790\uff08Geoscene-based image analysis,GEOSBIA\uff09\u65e8\u5728\u901a\u8fc7\u805a\u5408\u5730\u7406\u5bf9\u8c61\uff08Geographic-object-based image analysis, GEOBIA\uff09\u6765\u5206\u6790\u529f\u80fd\u533a\u3002 GEOSBIA \u4e0e GEOBIA \u5b58\u5728\u663e\u8457\u5dee\u5f02\uff0c\u4f46\u5b83\u4eec\u4e5f\u6709\u7740\u5bc6\u5207\u7684\u5173\u7cfb\u3002  \u672c\u7ae0\u5c0f\u7ed3 \u77a7\u77a7\u522b\u4eba\u7684\u603b\u7ed3\u80fd\u529b\n \u672c\u7ae0\u8282\u7684\u7814\u7a76\u6210\u679c\u53ef\u4ee5\u6982\u8ff0\u4e3a\u4ee5\u4e0b\u56db\u4e2a\u65b9\u9762\uff1a  \u63d0\u51fa\u4e86\u8868\u8fbe\u5730\u7269\u7a7a\u95f4\u683c\u5c40\u7684\u7279\u5f81\uff0c\u5e76\u5c06\u5176\u7528\u4e8e\u529f\u80fd\u533a\u5212\u5206 \u9996\u6b21\u63d0\u51fa\u4e86\u4e00\u79cd\u591a\u5c3a\u5ea6\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u7684\u65b9\u6cd5 \u8ba8\u8bba\u4e86\u5c3a\u5ea6\u548c\u7a7a\u95f4\u683c\u5c40\u6743\u91cd\u4e24\u4e2a\u53c2\u6570\u5bf9\u63d0\u53d6\u57ce\u5e02\u529f\u80fd\u533a\u7684\u5f71\u54cd \u5229\u7528\u6240\u63d0\u51fa\u7684\u65b9\u6cd5\u5bf9\u5317\u4eac\u5730\u533a\u7684\u529f\u80fd\u533a\u8fdb\u884c\u4e86\u591a\u5c3a\u5ea6\u63d0\u53d6\u3002   \u65b9\u6cd5\u5e94\u7528\u4e8e\u5317\u4eac\u5730\u533a\u7684\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u83b7\u5f97\u4e86\u4ee5\u4e0b\u56db\u4e2a\u7ed3\u8bba\uff1a  \u9996\u5148\uff0c \u5730\u7406\u573a\u666f\u5206\u5272\u53ef\u4ee5\u5728\u4e0d\u540c\u5c3a\u5ea6\u4e0a\u63d0\u53d6\u4e0d\u540c\u7684\u57ce\u5e02\u529f\u80fd\u533a\u3002 \u5176\u6b21\uff0c\u5728\u63d0\u53d6\u529f\u80fd\u533a\u65f6\uff0c\u7a7a\u95f4\u6a21\u5f0f\u7279\u5f81\u6bd4\u5bf9\u8c61\u7684\u4e2a\u4f53\u7279\u5f81\u66f4\u91cd\u8981\u3002 \u7b2c\u4e09\uff0c \u672c\u7ae0\u7814\u7a76\u65b9\u6cd5\u4e0d\u540c\u4e8e\u4ee5\u5f80\u7684\u57ce\u5e02\u529f\u80fd\u533a\u5206\u6790\uff0c \u4f53\u73b0\u5728\u6240\u4f7f\u7528\u7684\u7a7a\u95f4\u5355\u5143\u3001\u7279\u5f81\u548c\u5206\u6790\u5c3a\u5ea6\u3002 \u7b2c\u56db\uff0c \u672c\u7ae0\u63d0\u51fa\u7684\u5730\u7406\u573a\u666f\u4e0d\u540c\u4e8e\u4f20\u7edf\u5355\u5143\uff08\u5982\u50cf\u7d20\u548c\u5bf9\u8c61\uff09\uff0c\u57fa\u4e8e\u5730\u7406\u573a\u666f\u7684\u56fe\u50cf\u5206\u6790\u662f\u5bf9\u4f20\u7edf\u7684\u57fa\u4e8e\u50cf\u7d20\u548c\u5bf9\u8c61\u5206\u6790\u7684\u6709\u76ca\u8865\u5145\uff0c\u5bf9\u4e8e\u9ad8\u5206\u6570\u636e\u5206\u6790\u800c\u8a00\u6709\u91cd\u8981\u610f\u4e49\u3002    \u7b2c\u4e09\u7ae0 \u81ea\u9002\u5e94\u5c3a\u5ea6\u5b66\u4e60\uff1a\u529f\u80fd\u533a\u5206\u5272\u5c3a\u5ea6\u4f18\u5316 \u5f15\u8a00  \u7b2c\u4e8c\u7ae0\u5b9e\u9a8c\u53d1\u73b0\uff1a\u529f\u80fd\u533a\u5177\u6709\u5c3a\u5ea6\u4e0d\u786e\u5b9a\u6027 \u27a1\ufe0f \u629b\u51fa\u95ee\u9898\uff1a\u5982\u4f55\u81ea\u52a8\u786e\u5b9a\u548c\u8ba1\u7b97\u6bcf\u4e2a\u529f\u80fd\u533a\u7684\u5c40\u90e8\u6700\u4f18\u5206\u5272\u5c3a\u5ea6\u4ee5\u63d0\u9ad8\u529f\u80fd\u533a\u63d0\u53d6\u7cbe\u5ea6\uff1f \u5df2\u6709\u7684\u5206\u5272\u5c3a\u5ea6\u8bc4\u4ef7\u65b9\u6cd5\u90fd\u662f\u4ece\u5168\u5c40\u7684\u89d2\u5ea6\u9009\u53d6\u4e00\u4e2a\u5206\u5272\u7cbe\u5ea6\u6700\u9ad8\u7684\u5c3a\u5ea6\u4f5c\u4e3a\u6700\u4f18\u5c3a\u5ea6\uff0c \u4f46\u662f\u53d7\u529f\u80fd\u533a\u5f02\u8d28\u6027\u7684\u5f71\u54cd\uff0c\u4e0d\u540c\u529f\u80fd\u533a\u7684\u6700\u4f73\u5206\u5272\u5c3a\u5ea6\u901a\u5e38\u662f\u4e0d\u540c\uff0c\u56e0\u6b64\u6700\u4f18\u5206\u5272\u5c3a\u5ea6\u5e94\u8be5\u662f\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u3002 \u672c\u7ae0\u63d0\u51fa\u4e86\u4e00\u79cd\u5c40\u90e8\u81ea\u9002\u5e94\u7684\u5206\u5272\u5c3a\u5ea6\u5b66\u4e60\u65b9\u6cd5 \u4e09\u7c7b\u5206\u5272\u73b0\u8c61\uff1a\u6b20\u5206\u5272\u3001\u8fc7\u5206\u5272\u3001\u6b63\u786e\u5206\u5272\uff08\u6700\u4f18\u5206\u5272\uff09 \u6bcf\u4e2a\u529f\u80fd\u533a\u7684\u6700\u4f18\u5206\u5272\u5c3a\u5ea6\u53d7\u5230\u4e09\u4e2a\u56e0\u7d20\u5f71\u54cd\uff1a \u529f\u80fd\u533a\u7c7b\u578b\u3001 \u5185\u90e8\u5f02\u8d28\u6027\u3001 \u4e0e\u76f8\u90bb\u529f\u80fd\u533a\u7684\u5dee\u5f02\u6027 \u6839\u636e\u6240\u4f7f\u7528\u7684\u5c3a\u5ea6\uff0c\u73b0\u6709\u7684\u5206\u5272\u65b9\u6cd5\u53ef\u4ee5\u5206\u4e3a\u4e09\u7c7b  \u56fa\u5b9a\u5c3a\u5ea6\u5206\u5272  \u5305\u62ec\uff1a\u57fa\u4e8e\u8fb9\u7f18\u7684\u3001 \u57fa\u4e8e\u533a\u57df\u7684\u548c\u57fa\u4e8e\u56fe\u7684\u5206\u5272 \u5168\u5c40\u7684\u3001\u56fa\u5b9a\u7684\u5206\u5272\u5c3a\u5ea6\u5bf9\u56fe\u50cf\u8fdb\u884c\u5206\u5272 \u7528\u6237\u624b\u5de5\u6307\u5b9a \u27a1\ufe0f \u5206\u5272\u7ed3\u679c\u662f\u4e0d\u51c6\u786e\uff0c\u5f88\u96be\u6ee1\u8db3\u57ce\u5e02\u529f\u80fd\u533a\u63d0\u53d6\u7684\u8981\u6c42   \u591a\u5c3a\u5ea6\u5206\u5272  \u8003\u8651\u4e86\u4e0d\u540c\u7c7b\u522b\u7684\u529f\u80fd\u533a\uff0c \u8ba4\u4e3a\u529f\u80fd\u533a\u7c7b\u522b\u662f\u51b3\u5b9a\u5206\u5272\u5c3a\u5ea6\u7684\u5173\u952e\u56e0\u7d20\uff0c\u5373\u6bcf\u7c7b\u529f\u80fd\u533a\u5bf9\u4e8e\u4e00\u4e2a\u6700\u4f73\u5206\u5272\u5c3a\u5ea6 \uff08\u7b2c\u4e8c\u7ae0\uff09 \u591a\u5c3a\u5ea6\u5206\u5272\u53ea\u80fd\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u9009\u62e9\u4e00\u4e2a\u5c3a\u5ea6\uff0c\u5ffd\u7565\u4e86\u529f\u80fd\u533a\u4e2a\u4f53\u4e4b\u95f4\u7684\u5dee\u5f02 \u591a\u5c3a\u5ea6\u5206\u5272\u6548\u7387\u5f88\u4f4e\uff0c\u56e0\u4e3a\u9700\u8981\u5927\u91cf\u4eba\u529b\u548c\u8ba1\u7b97\u8d44\u6e90\u6765\u624b\u52a8\u5730\u4e3a\u4e0d\u540c\u7c7b\u522b\u9009\u62e9\u6700\u4f73\u7684\u5206\u5272\u5c3a\u5ea6 \u4e0d\u540c\u7684\u529f\u80fd\u533a\u4ea7\u751f\u4e8e\u4e0d\u540c\u7684\u5c3a\u5ea6\u5c42\uff0c \u8fd9\u5bf9\u4e8e\u5236\u56fe\u548c\u62d3\u6251\u5206\u6790\u800c\u8a00\u662f\u975e\u5e38\u4e0d\u5229\u7684   \u53d8\u5c3a\u5ea6\u5206\u5272  \u901a\u5e38\u4f7f\u7528\u5377\u79ef\u7a97\u53e3\u5ea6\u91cf\u7a97\u53e3\u5185\u5c40\u90e8\u5bf9\u6bd4\u5ea6\u5e76\u4f30\u8ba1\u5c40\u90e8\u5206\u5272\u5c3a\u5ea6 \u5ffd\u7565\u4e86\u529f\u80fd\u533a\u7684\u5206\u7c7b\u4f53\u7cfb\uff1b\u8ba1\u7b97\u5c40\u90e8\u5bf9\u6bd4\u5ea6\u7684\u7a97\u53e3\u5927\u5c0f\u4ecd\u7136\u662f\u5168\u5c40\u56fa\u5b9a\u7684\uff0c\u624b\u52a8\u8bbe\u7f6e\u7684\uff1b \u53d8\u5c3a\u5ea6\u5206\u5272\u4ecd\u7136\u4e0d\u80fd\u505a\u5230\u5c40\u90e8\u81ea\u9002\u5e94\uff0c\u4e0d\u80fd\u83b7\u5f97\u51c6\u786e\u7684\u5206\u5272\u7ed3\u679c     \u7efc\u4e0a\u6240\u8ff0\uff0c\u5df2\u6709\u7684\u5206\u5272\u65b9\u6cd5\u4e3b\u8981\u4f7f\u7528\u56fa\u5b9a\u5c3a\u5ea6\u3001\u591a\u5c3a\u5ea6\u548c\u53ef\u53d8\u5c3a\u5ea6\uff0c \u8fd9\u4e9b\u5c3a\u5ea6\u6ca1\u6709\u5145\u5206\u7684\u8003\u8651\u548c\u5efa\u6a21\u5f71\u54cd\u5206\u5272\u5c3a\u5ea6\u7684\u4e09\u4e2a\u56e0\u7d20\uff0c \u65e0\u6cd5\u5b9e\u73b0\u5c40\u90e8\u81ea\u9002\u5e94\u5c3a\u5ea6\u5206\u5272\uff0c \u56e0\u6b64\u5b83\u4eec\u83b7\u5f97\u7684\u5206\u5272\u7ed3\u679c\u4e0d\u591f\u51c6\u786e\u65e0\u6cd5\u6ee1\u8db3\u529f\u80fd\u533a\u5236\u56fe\u5e94\u7528\u9700\u6c42\u3002\u672c\u7ae0\u8282\u5e0c\u671b\u81ea\u52a8\u5730\u5b66\u4e60\u5c40\u90e8\u81ea\u9002\u5e94\u5206\u5272\u5c3a\u5ea6\uff0c\u5e76\u4f7f\u7528\u81ea\u9002\u5e94\u5c3a\u5ea6\u4f18\u5316\u591a\u5c3a\u5ea6\u5730\u7406\u573a\u666f\u5206\u5272\u7ed3\u679c\uff0c\u51c6\u786e\u63d0\u53d6\u57ce\u5e02\u529f\u80fd\u533a\u3002  \u81ea\u9002\u5e94\u5c3a\u5ea6\u529f\u80fd\u533a\u5206\u5272 \u81ea\u9002\u5e94\u5206\u5272\u5c3a\u5ea6\u5b66\u4e60  \u57fa\u672c\u601d\u8def\uff1a\u5229\u7528\u7279\u5f81\u91cd\u8981\u6027\u5ea6\u91cf\u5c3a\u5ea6\u91cd\u8981\u6027\uff0c \u57fa\u4e8e\u5c3a\u5ea6\u91cd\u8981\u6027\u9009\u62e9\u5c40\u90e8\u6700\u4f18\u5206\u5272\u5c3a\u5ea6  \u9996\u5148\uff0c\u5728\u4e0d\u540c\u7684\u5c3a\u5ea6\u5c42\u4e0a\u5206\u522b\u63d0\u53d6\u7279\u5f81\uff1b \u7136\u540e\uff0c \u4f7f\u7528\u7279\u5f81\u91cd\u8981\u6027\u8bc4\u4ef7\u65b9\u6cd5\u8ba1\u7b97\u6bcf\u4e2a\u7279\u5f81\u7684\u5c40\u90e8\u91cd\u8981\u6027\uff1b \u6700\u540e\uff0c \u5f52\u7b97\u6bcf\u4e2a\u5c3a\u5ea6\u5c42\u4e0a\u7684\u7279\u5f81\u91cd\u8981\u6027\u83b7\u5f97\u5bf9\u5e94\u5c3a\u5ea6\u7684\u5c40\u90e8\u91cd\u8981\u6027\uff0c\u9009\u53d6\u91cd\u8981\u6027\u6700\u5927\u7684\u5c3a\u5ea6\u4f5c\u4e3a\u5c40\u90e8\u81ea\u9002\u5e94\u5206\u5272\u5c3a\u5ea6\u3002 \u8be5\u7814\u7a76\u601d\u8def\u4e2d\u6700\u91cd\u8981\u7684\u662f\u6784\u5efa\u5c40\u90e8\u7279\u5f81\u91cd\u8981\u6027\u8bc4\u4ef7\u65b9\u6cd5 \u27a1\ufe0f \u6539\u8fdb\u968f\u673a\u68ee\u6797\u7684\u7279\u5f81\u91cd\u8981\u6027\u8bc4\u4ef7\u65b9\u6cd5    \u81ea\u9002\u5e94\u5c3a\u5ea6\u7ea6\u675f\u4e0b\u529f\u80fd\u533a\u5206\u5272  \u91c7\u7528\u5c42\u6b21\u7ed3\u6784\u7ec4\u7ec7\u5b58\u50a8\u591a\u5c3a\u5ea6\u529f\u80fd\u533a\u5206\u5272\u7ed3\u679c \u5927\u5c3a\u5ea6\u529f\u80fd\u533a\u4e0e\u5c0f\u5c3a\u5ea6\u529f\u80fd\u533a\u5177\u6709\u4e00\u5bf9\u591a\u7684\u5c42\u6b21\u6620\u5c04\u5173\u7cfb \u6700\u5927\u5c3a\u5ea6\u7684\u529f\u80fd\u533a\u5206\u5272\u7ed3\u679c\u662f\u6b20\u5206\u5272\u7684\uff1b\u800c\u6700\u5c0f\u5c3a\u5ea6\u7684\u5206\u5272\u7ed3\u679c\u901a\u5e38\u662f\u8fc7\u5206\u5272\u7684\uff1b\u6700\u4f73\u7684\u529f\u80fd\u533a\u5206\u5272\u5c3a\u5ea6\u5e94\u8be5\u4f4d\u4e8e\u82e5\u5e72\u4e2a\u4e2d\u95f4\u5c3a\u5ea6\u5c42\u4e0a\u3002 \u5c06\u4e2d\u95f4\u5c3a\u5ea6\u5185\u7684\u591a\u5c3a\u5ea6\u5206\u5272\u7ed3\u679c\u6839\u636e\u81ea\u9002\u5e94\u5c3a\u5ea6\u5b66\u4e60\u7ed3\u679c\u8fdb\u884c\u91cd\u65b0\u7684\u6392\u5217\u7ec4\u5408\uff0c \u5f62\u6210\u65b0\u7684\u5206\u5272\u7ed3\u679c\uff0c\u6700\u7ec8\u7528\u4e8e\u8868\u8fbe\u81ea\u9002\u5e94\u5206\u5272\u5c3a\u5ea6\u7684\u529f\u80fd\u533a\u63d0\u53d6\u7ed3\u679c\u3002 \u81ea\u9002\u5e94\u5206\u5272\u5c3a\u5ea6\u662f\u9010\u50cf\u7d20\u8ba1\u7b97\u7684\uff0c \u5373\u6bcf\u4e2a\u50cf\u7d20\u90fd\u88ab\u6807\u8bb0\u4e86\u4e00\u4e2a\u81ea\u9002\u5e94\u5c3a\u5ea6\u3002 \u8fdb\u800c\u5229\u7528\u6700\u5927\u5c3a\u5ea6\u529f\u80fd\u533a\u4f5c\u4e3a\u7edf\u8ba1\u5355\u5143\uff0c \u7edf\u8ba1\u6bcf\u4e2a\u529f\u80fd\u533a\u5185\u7684\u81ea\u9002\u5e94\u5c3a\u5ea6\u7684\u9891\u7387\u5206\u5e03\uff0c \u8ba4\u4e3a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5c3a\u5ea6\u5c31\u662f\u8be5\u533a\u57df\u529f\u80fd\u533a\u5206\u5272\u7684\u6700\u4f73\u5c3a\u5ea6\u3002  \u5b9e\u9a8c\u5206\u6790 \u81ea\u9002\u5e94\u5206\u5272\u5c3a\u5ea6\u5b66\u4e60\u7ed3\u679c  \u672c\u8282\u9009\u53d6\u4e86 90\u3001110 \u548c 130 \u4e09\u4e2a\u5c3a\u5ea6\u7684\u5206\u5272\u7ed3\u679c\uff08\u56fe 3.6 b-d\uff09 \u8fdb\u884c\u81ea\u9002\u5e94\u5c3a\u5ea6\u5b66\u4e60\uff0c\u5229\u7528\u5c42\u6b21\u7ed3\u6784\u7ec4\u7ec7\u548c\u5b58\u50a8\u8fd9\u4e09\u4e2a\u5c3a\u5ea6\u7684\u5206\u5272\u7ed3\u679c\uff0c\u5bf9\u5206\u5272\u7ed3\u679c\u8fdb\u884c\u91cd\u6784\u3002 \u7279\u5f81\u6784\u5efa\uff1a\u5bf9\u6bcf\u4e2a\u5206\u5272\u7ed3\u679c\u63d0\u53d6\u89c6\u89c9\u7279\u5f81\u4ee5\u53ca\u666f\u89c2\u7279\u5f81  \u89c6\u89c9\u7279\u5f81\u4f7f\u7528\u5bf9\u8c61\u89c6\u89c9\u7279\u5f81\u7684\u9891\u7387\u5206\u5e03\u6765\u8868\u793a\uff0880\u7ef4\uff09 \u666f\u89c2\u7279\u5f81\u662f\u901a\u8fc7\u666f\u89c2\u683c\u5c40\u6307\u6570\u8fdb\u884c\u5ea6\u91cf\uff0c \u666f\u89c2\u683c\u5c40\u6307\u6570\u9002\u7528\u4e8e\u63cf\u8ff0\u666f\u89c2\u7a7a\u95f4\u7ed3\u6784\u7684\u7279\u5f81\uff0c \u5305\u62ec\u666f\u89c2\u7834\u788e\u5ea6\u3001\u5206\u79bb\u5ea6\u3001 \u591a\u6837\u6027\u3001 \u5206\u7ef4\u6570\u548c\u805a\u96c6\u5ea6\u7b49\uff085\u7ef4\u5ea6\uff09 \u800c\u5bf9\u4e8e\u6bcf\u4e2a\u50cf\u7d20\u800c\u8a00\uff0c\u5b83\u5bf9\u5e94\u4e09\u4e2a\u591a\u5c3a\u5ea6\u5206\u5272\u5757\uff0c\u56e0\u6b64\u6bcf\u4e2a\u50cf\u7d20\u53ef\u4ee5\u88ab85 \u00d7 3 = 255\u7ef4\u7279\u5f81\u6240\u63cf\u8ff0   \u5b66\u4e60\u5c40\u90e8\u4e2a\u6027\u5c3a\u5ea6\u672c\u8d28\u4e0a\u5c31\u662f\u5229\u7528\u968f\u673a\u68ee\u6797\u5206\u7c7b\u5668\u8ba1\u7b97\u8fd9 255 \u7ef4\u7279\u5f81\u5bf9\u4e8e\u5206\u7c7b\u8be5\u50cf\u7d20\u7684\u91cd\u8981\u6027 \u5c3a\u5ea6\u91cd\u8981\u6027\u7684\u7a7a\u95f4\u5206\u5e03\u548c\u529f\u80fd\u533a\u7684\u5c40\u90e8\u81ea\u9002\u5e94\u5206\u5272\u5c3a\u5ea6\u5206\u5e03\u7ed3\u679c\uff1a \u6bcf\u7c7b\u529f\u80fd\u533a\u4e2d\u5404\u79cd\u81ea\u9002\u5e94\u5c3a\u5ea6\u6240\u5360\u6bd4\u4f8b\u7ed3\u679c\uff1a  \u81ea\u9002\u5e94\u5c3a\u5ea6\u5206\u5272\u7ed3\u679c  \u6700\u7ec8\u81ea\u9002\u5e94\u5c3a\u5ea6\u5206\u5272\u7ed3\u679c\u662f\u7ec4\u5408\u4e86\u4e09\u4e2a\u4e0d\u540c\u5c3a\u5ea6\u7684\u5206\u5272\u7ed3\u679c \u57fa\u4e8ePOI\u7684\u5206\u5272\u7cbe\u5ea6\u8bc4\u4ef7 \u5b50\u533a\u57df\u591a\u5c3a\u5ea6\u5206\u5272\u4e0e\u81ea\u9002\u5e94\u5206\u5272\u7ed3\u679c\u5bf9\u6bd4  \u8ba8\u8bba  \u81ea\u9002\u5e94\u5c3a\u5ea6\u5b66\u4e60\u65b9\u6cd5\u7684\u4f18\u52bf\uff1a  \u9996\u5148\uff0c \u81ea\u9002\u5e94\u5c3a\u5ea6\u5b66\u4e60\u4ec5\u4f9d\u8d56\u5c11\u91cf\u7684\u8bad\u7ec3\u6837\u672c\uff0c \u5c31\u53ef\u4ee5\u4ece\u591a\u5c3a\u5ea6\u5206\u5272\u7ed3\u679c\u4e2d\u5b66\u4e60\u5230\u5c40\u90e8\u81ea\u9002\u5e94\u7684\u5c3a\u5ea6\uff0c\u5b66\u4e60\u8fc7\u7a0b\u662f\u6570\u636e\u9a71\u52a8\u7684\uff0c\u800c\u76d1\u7763\u6837\u672c\u662f\u77e5\u8bc6\u9a71\u52a8\u7684\u3002 \u5176\u6b21\uff0c\u81ea\u9002\u5e94\u5c3a\u5ea6\u662f\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\uff0c\u80fd\u591f\u6839\u636e\u5c40\u90e8\u5efa\u7b51\u73af\u5883\u7684\u53d8\u5316\u8fdb\u884c\u81ea\u52a8\u8c03\u6574\u3002 \u7b2c\u4e09\uff0c\u81ea\u9002\u5e94\u5c3a\u5ea6\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u5145\u5206\u8003\u8651\u4e86\u591a\u5c3a\u5ea6\u7279\u5f81\u4fe1\u606f\u3002 \u7b2c\u56db\uff0c \u9664\u4e86\u529f\u80fd\u533a\u5206\u5272\u5236\u56fe\u4ee5\u5916\uff0c\u81ea\u9002\u5e94\u5c3a\u5ea6\u8fd8\u6709\u53ef\u80fd\u5e94\u7528\u4e8e\u5176\u5b83\u9886\u57df\uff0c \u6bd4\u5982\u57ce\u5e02\u8c03\u67e5\uff08\u6e29\u5ea6\u3001\u6c61\u67d3\u3001\u4eba\u53e3\u3001\u72af\u7f6a\u548c\u7ecf\u6d4e\u7684\u7a7a\u95f4\u5206\u5e03\uff09\u3002\u8fd9\u4e9b\u8c03\u67e5\u90fd\u9700\u8981\u5728\u5408\u9002\u7684\u5c3a\u5ea6\u4e0a\u8fdb\u884c\uff0c \u5df2\u6709\u7684\u57ce\u5e02\u8c03\u67e5\u65b9\u6cd5\u5e38\u5e38\u662f\u57fa\u4e8e\u8857\u533a\u7b49\u56fa\u5b9a\u5c3a\u5ea6\u6765\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u5ffd\u7565\u4e86\u8c03\u67e5\u53d8\u91cf\u7684\u5c3a\u5ea6\u6548\u5e94\u4ee5\u53ca\u7a7a\u95f4\u975e\u5e73\u7a33\u6027\uff0c \u8fd9\u4f7f\u5f97\u8c03\u67e5\u7ed3\u679c\u4e0d\u53ef\u9760\u3002\u56e0\u6b64\uff0c \u5728\u57ce\u5e02\u8c03\u67e5\u4e2d\u9700\u8981\u4f7f\u7528\u81ea\u9002\u5e94\u5c3a\u5ea6\u3002\u4f8b\u5982\uff0c \u5728\u8c03\u67e5\u57ce\u5e02\u5730\u8868\u6e29\u5ea6\u65f6\uff0c \u5e94\u4f7f\u7528\u81ea\u9002\u5e94\u5c3a\u5ea6\u5206\u5272\u7ed3\u679c\u4f5c\u4e3a\u7a7a\u95f4\u5355\u5143\u8fdb\u884c\u5730\u8868\u6e29\u5ea6\u53cd\u6f14\u3002    \u672c\u7ae0\u5c0f\u7ed3\uff08Conclusion\u6a21\u677f\uff09 [\u8fd9\u91cc\u4e5f\u4f53\u73b0\u4e86Conclusion\u548cAbstract\u7684\u4e0d\u540c]\n \u95ee\u9898\uff1a\u5c3a\u5ea6\u4e0d\u786e\u5b9a\u6027 \u5df2\u6709\u7684\u5206\u5272\u5c3a\u5ea6\u5206\u6790\u65b9\u6cd5\uff1a\u5168\u5c40\u89d2\u5ea6 \u672c\u6587\uff08\u672c\u7ae0\uff09\uff1a\u65e8\u5728\u63d0\u51fa\u4e00\u79cd\u81ea\u9002\u5e94\u5c3a\u5ea6\u5206\u5272\u65b9\u6cd5 \u91cd\u8981\u7ed3\u8bba\uff1a  \u9996\u5148\uff0c \u4e0d\u540c\u529f\u80fd\u533a\u7684\u6700\u4f73\u5206\u5272\u5c3a\u5ea6\u662f\u4e0d\u540c\u7684\uff0c \u5176\u53d7\u529f\u80fd\u533a\u7c7b\u522b\u3001\u4e0e\u5468\u56f4\u73af\u5883\u5bf9\u6bd4\u5ea6\u4ee5\u53ca\u5185\u90e8\u5f02\u8d28\u5ea6\u7684\u5f71\u54cd\u3002 \u5176\u6b21\uff0c\u81ea\u9002\u5e94\u5c3a\u5ea6\u5206\u5272\u89e3\u51b3\u4e86\u57ce\u5e02\u529f\u80fd\u533a\u5206\u5272\u63d0\u53d6\u4e2d\u8de8\u5c3a\u5ea6\u7684\u95ee\u9898\uff0c\u5176\u7ed3\u679c\u4f18\u4e8e\u591a\u5c3a\u5ea6\u5206\u5272\u7ed3\u679c\u3002   \u91cd\u8981\u8d21\u732e\uff1a  \u63d0\u51fa\u4e86\u81ea\u9002\u5e94\u5206\u5272\u5c3a\u5ea6\u5b66\u4e60\u65b9\u6cd5\uff0c \u8be5\u65b9\u6cd5\u5145\u5206\u5efa\u6a21\u5206\u6790\u4e86\u5f71\u54cd\u5206\u5272\u5c3a\u5ea6\u7684\u4e09\u4e2a\u56e0\u7d20; \u63d0\u51fa\u4e86\u81ea\u9002\u5e94\u5c3a\u5ea6\u7ea6\u675f\u4e0b\u7684\u5206\u5272\u4f18\u5316\u7b97\u6cd5\uff0c \u5e76\u5c06\u8be5\u65b9\u6cd5\u7528\u4e8e\u5206\u5272\u63d0\u53d6\u5317\u4eac\u5730\u533a\u7684\u529f\u80fd\u533a\u3002   \u8d21\u732e\u603b\u7ed3\uff1a\u6839\u636e\u5df2\u6709\u5de5\u4f5c\u68c0\u7d22\u7ed3\u679c\u53d1\u73b0\u672c\u7ae0\u9996\u6b21\u5b9e\u73b0\u4e86\u9ad8\u5206\u5f71\u50cf\u7684\u81ea\u9002\u5e94\u5c3a\u5ea6\u5b66\u4e60\u53ca\u5206\u5272\u4f18\u5316\u65b9\u6cd5\uff0c \u89e3\u51b3\u4e86\u5730\u7269\u5206\u5272\u63d0\u53d6\u4e2d\u8de8\u5c3a\u5ea6\u7684\u95ee\u9898\uff0c\u63a8\u52a8\u4e86\u9ad8\u5206\u5f71\u50cf\u5206\u5272\u6280\u672f\u7684\u53d1\u5c55\u3002 \u5c3d\u7ba1\u81ea\u9002\u5e94\u5c3a\u5ea6\u5728\u529f\u80fd\u533a\u5206\u5272\u4e2d\u8868\u73b0\u826f\u597d\uff0c\u4f46\u4ecd\u6709\u4e00\u4e9b\u95ee\u9898\u6709\u5f85\u8fdb\u4e00\u6b65\u7814\u7a76\u3002  \u7b2c\u56db\u7ae0 \u7a7a\u95f4\u8bed\u4e49\u5171\u751f\u6982\u7387\u6a21\u578b\uff1a\u529f\u80fd\u533a\u7a7a\u95f4\u683c\u5c40\u7279\u5f81\u8868\u8fbe  \u7279\u5f81\u5ea6\u91cf\u4e0e\u8868\u8fbe\u662f\u529f\u80fd\u533a\u5206\u6790\u7684\u57fa\u7840\uff0c\u56e0\u6b64\u5982\u4f55\u63d0\u53d6\u6709\u6548\u7684\u529f\u80fd\u533a\u7279\u5f81\u662f\u672c\u7ae0\u7814\u7a76\u7684\u91cd\u70b9\u3002 \u4f20\u7edf\u7684\u56fe\u50cf\u89c6\u89c9\u7279\u5f81\u96be\u4ee5\u5145\u5206\u8868\u8fbe\u57ce\u5e02\u529f\u80fd\u533a\uff0c \u800c\u7a7a\u95f4\u683c\u5c40\u7279\u5f81\u662f\u8868\u8fbe\u529f\u80fd\u533a\u7684\u5173\u952e\u3002\u7a7a\u95f4\u683c\u5c40\u7279\u5f81\u7684\u63d0\u53d6\u548c\u8ba1\u7b97\u7ed3\u679c\u4e0d\u7a33\u5b9a\uff0c \u6613\u53d7\u4eff\u5c04\u53d8\u6362\u5f71\u54cd\u3002 \u5145\u5206\u8003\u8651\u529f\u80fd\u533a\u7684\u7efc\u5408\u6027\u548c\u5f02\u8d28\u6027\uff0c\u7814\u7a76\u5e76\u63d0\u53d6\u66f4\u52a0\u9c81\u68d2\u7684\u7a7a\u95f4\u683c\u5c40\u7279\u5f81\u5bf9\u57ce\u5e02\u529f\u80fd\u533a\u8fdb\u884c\u8868\u8fbe\u3002  \u5f15\u8a00  \u4ece\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u9065\u611f\u5f71\u50cf\u4e2d\u7684\u57ce\u5e02\u529f\u80fd\u533a\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u7684\u7279\u5f81\u8fdb\u884c\u8868\u8fbe\uff0c \u5982\u89c6\u89c9\u7279\u5f81\u3001\u62bd\u8c61\u7279\u5f81\u3001\u8bed\u4e49\u7279\u5f81  \u89c6\u89c9\u7279\u5f81 \u62bd\u8c61\u7279\u5f81 \u8bed\u4e49\u7279\u5f81   \u4e0a\u8ff0\u8fd9\u4e9b\u7279\u5f81\u4e0d\u9002\u7528\u4e8e\u8868\u8fbe\u529f\u80fd\u533a\u7684\u672c\u8d28\u539f\u56e0\u662f\uff0c\u8fd9\u4e9b\u7279\u5f81\u90fd\u662f\u4ece\u8ba1\u7b97\u673a\u89c6\u89c9\u89d2\u5ea6\u5b9a\u4e49\u7684\u3001 \u7528\u4e8e\u8868\u8fbe\u56fe\u50cf\u573a\u666f\u7684\uff0c \u4f46\u662f\u56fe\u50cf\u573a\u666f\u548c\u529f\u80fd\u533a\u5f71\u50cf\u662f\u6709\u660e\u663e\u5dee\u5f02\u7684\uff1a \u529f\u80fd\u533a\u662f\u6709\u660e\u786e\u7684\u5730\u7406\u5b66\u3001\u666f\u89c2\u751f\u6001\u5b66\u542b\u4e49\u7684\uff0c\u5176\u5f71\u50cf\u80fd\u591f\u4f53\u73b0\u51fa\u4e0d\u540c\u7684\u5efa\u6210\u73af\u5883\uff0c \u800c\u56fe\u50cf\u573a\u666f\u662f\u7f3a\u4e4f\u660e\u786e\u5b9a\u4e49\u7684\uff0c\u4e00\u822c\u6765\u8bf4\u4efb\u4f55\u4e00\u4e2a\u56fe\u50cf\u5757\u90fd\u53ef\u4ee5\u6210\u4e3a\u56fe\u50cf\u573a\u666f \u4f5c\u4e3a\u57ce\u5e02\u529f\u80fd\u533a\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff0c\u5bf9\u8c61\u53ca\u5176\u7a7a\u95f4\u683c\u5c40\u662f\u529f\u80fd\u533a\u5206\u6790\u7684\u57fa\u7840 \u5bf9\u8c61\u7684\u7a7a\u95f4\u5173\u7cfb\u5305\u62ec\u4e0d\u540c\u5bf9\u8c61\u4e4b\u95f4\u7684\u8ddd\u79bb\u5173\u7cfb\u548c\u65b9\u5411\u5173\u7cfb\u3002\u5ea6\u91cf\u5bf9\u8c61\u7684\u7a7a\u95f4\u5173\u7cfb\u5e38\u53d7\u4e09\u4e2a\u95ee\u9898\u7684\u5f71\u54cd\uff0c\u5305\u62ec\u5404\u5411\u5f02\u6027\u3001\u5c3a\u5ea6\u4f9d\u8d56\u6027\u548c\u8bed\u4e49\u4f9d\u8d56\u6027\u3002\u5bf9\u8c61\u7684\u7a7a\u95f4\u5173\u7cfb\u5ea6\u91cf\u53ef\u80fd\u53d7\u4e09\u4e2a\u56e0\u7d20\u7684\u5f71\u54cd\uff1a \u65b9\u5411\u3001\u8ddd\u79bb\u3001\u5bf9\u8c61\u8bed\u4e49\uff0c \u56e0\u6b64\u5728\u5ea6\u91cf\u7a7a\u95f4\u5173\u7cfb\u65f6\u5e94\u5145\u5206\u8003\u8651\u8fd9\u4e09\u4e2a\u56e0\u7d20 \u7efc\u4e0a\u6240\u8ff0\uff08\u5b66\u4e60\u53d9\u4e8b\u903b\u8f91\uff09  \u5df2\u6709\u7684\u5173\u4e8e\u57ce\u5e02\u529f\u80fd\u533a\u7279\u5f81\u8868\u8fbe\u7684\u7814\u7a76\u5de5\u4f5c\u5927\u591a\u5ffd\u7565\u4e86\u5bf9\u8c61\u7684\u7a7a\u95f4\u683c\u5c40\u4fe1\u606f\uff0c\u56e0\u6b64\u96be\u4ee5\u83b7\u5f97\u51c6\u786e\u7684\u8868\u8fbe\u529f\u80fd\u533a\u548c\u83b7\u53d6\u9ad8\u7cbe\u5ea6\u7684\u529f\u80fd\u533a\u5206\u6790\u7ed3\u679c\uff1b \u8fd1\u671f\u4e00\u4e9b\u7814\u7a76\u5df2\u7ecf\u6ce8\u610f\u5230\u5bf9\u8c61\u7a7a\u95f4\u4fe1\u606f\u5bf9\u4e8e\u529f\u80fd\u533a\u5f71\u50cf\u5206\u6790\u7684\u91cd\u8981\u6027\uff0c \u4f46\u662f\u5b83\u4eec\u5ffd\u7565\u4e86\u5bf9\u8c61\u7a7a\u95f4\u4fe1\u606f\u5ea6\u91cf\u4e2d\u5b58\u5728\u7684\u4e09\u4e2a\u91cd\u8981\u95ee\u9898\uff08\u5373\u5404\u5411\u5f02\u6027\u3001\u5c3a\u5ea6\u4f9d\u8d56\u6027\u548c\u8bed\u4e49\u4f9d\u8d56\u6027\uff09\u3002 \u672c\u7814\u7a76\u8003\u8651\u4e86\u8fd9\u4e09\u4e2a\u7279\u6027\uff0c\u5e76\u901a\u8fc7\u5ea6\u91cf\u5bf9\u8c61\u5728\u7a7a\u95f4\u4e0a\u548c\u8bed\u4e49\u4e0a\u7684\u5171\u751f\u5173\u7cfb\u6765\u8868\u8fbe\u529f\u80fd\u533a\u7684\u7a7a\u95f4\u683c\u5c40\u8fdb\u800c\u5bf9\u57ce\u5e02\u529f\u80fd\u533a\u8fdb\u884c\u7279\u5f81\u8868\u8fbe\u3002 \u4e3a\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\uff0c \u9700\u8981\u56de\u7b54\u4e24\u4e2a\u95ee\u9898\uff1a \u7b2c\u4e00\uff0c \u5982\u4f55\u5ea6\u91cf\u5bf9\u8c61\u7684\u7a7a\u95f4\u683c\u5c40\uff1f \u7b2c\u4e8c\uff0c \u5982\u4f55\u5229\u7528\u7a7a\u95f4\u683c\u5c40\u5bf9\u57ce\u5e02\u529f\u80fd\u533a\u8fdb\u884c\u5206\u7c7b\uff1f \u56e0\u6b64\uff0c \u672c\u7ae0\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u529f\u80fd\u533a\u7a7a\u95f4\u8bed\u4e49\u7279\u5f81\u7528\u4e8e\u8868\u8fbe\u529f\u80fd\u533a\u5185\u90e8\u5730\u7269\u7684\u7a7a\u95f4\u683c\u5c40\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u5206\u7c7b\u5668\u7ed3\u5408\u5b9e\u73b0\u57ce\u5e02\u529f\u80fd\u533a\u5206\u7c7b\u8bc6\u522b\u3002    \u5730\u7406\u5bf9\u8c61\u7684\u7a7a\u95f4\u8bed\u4e49\u5171\u751f\u5206\u6790  \u57fa\u672c\u601d\u8def\u662f\u4ee5\u5bf9\u8c61\u7c7b\u522b\u8bed\u4e49\u4e3a\u57fa\u7840\uff0c\u5ea6\u91cf\u4e0d\u540c\u5bf9\u8c61\u4e4b\u95f4\u5728\u4e0d\u540c\u65b9\u5411\u548c\u4e0d\u540c\u8ddd\u79bb\u4e0a\u7684\u5171\u751f\u6982\u7387\uff0c\u7136\u540e\u5bf9\u4e0d\u540c\u65b9\u5411\u548c\u8ddd\u79bb\u4e0a\u7684\u5171\u751f\u6982\u7387\u505a\u4e8c\u6b21\u5377\u79ef\u83b7\u5f97\u7a7a\u95f4\u8bed\u4e49\u5171\u751f\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u3002  \u5b9e\u9a8c\u5206\u6790 \u5148\u4f7f\u7528\u516c\u5171\u6570\u636e\u96c6\u8fdb\u884c\u573a\u666f\u5206\u7c7b\uff0c\u518d\u4f7f\u7528\u5317\u4eac\u7684\u6570\u636e\u8fdb\u884c\u529f\u80fd\u533a\u5206\u7c7b\n\u7b2c\u4e00\u90e8\u5206\uff1a\u4f7f\u7528\u516c\u5171\u6570\u636e\u96c6\uff0c\u5c06\u672c\u7ae0\u6240\u63d0\u51fa\u7684\u7a7a\u95f4\u8bed\u4e49\u7279\u5f81\u4e0e\u5176\u5b83\u573a\u666f\u7279\u5f81\u8fdb\u884c\u5bf9\u6bd4  \u516c\u5171\u6570\u636e\u96c6\uff1a\rUC Merced Land Use Dataset\u3002 \u5305\u62ec 21 \u4e2a\u571f\u5730\u5229\u7528\u7c7b\u578b\uff0c\u6bcf\u7c7b\u6709 100\u5e45\u56fe\u50cf\uff08256\u00d7 256 \u50cf\u7d20\uff09\u3002 \u4e3b\u8981\u5b9e\u9a8c\u6b65\u9aa4\uff1a\u5bf9\u8c61\u8bc6\u522b\u548c\u571f\u5730\u5229\u7528\u573a\u666f\u5206\u7c7b \u5bf9\u8c61\u8bc6\u522b\uff1a\u9996\u5148\u5229\u7528 multiresolution segmentation\uff08MRS; Baatz \u548c Sch\u00e4pe, 2000\uff09 \u5206\u5272\u65b9\u6cd5\u5c06\u6bcf\u4e2a\u56fe\u50cf\u6839\u636e\u989c\u8272\u5206\u5272\u6210\u4e0d\u540c\u7684\u5bf9\u8c61\u3002\u7136\u540e\uff0c\u63d0\u53d6\u56fe\u50cf\u5bf9\u8c61\u7279\u5f81\u5305\u62ec\u5149\u8c31\u7279\u5f81\u3001\u7eb9\u7406\u7279\u5f81\u548c\u51e0\u4f55\u7279\u5f81\uff08\u8868 2.1\uff09\u3002\u6700\u540e\uff0c\u5229\u7528\u652f\u6301\u5411\u91cf\u673a\u5206\u7c7b\u5668\uff08Suykens \u548cVandewalle, 1999\uff09\u5c06\u8fd9\u4e9b\u5bf9\u8c61\u5206\u4e3a\u9634\u5f71\u3001\u6c34\u4f53\u3001 \u690d\u88ab\u3001\u571f\u58e4\u3001\u5efa\u7b51\u7269\u3001\u9053\u8def\u3001\u8239\u8236\u3001\u8f66\u8f86\u3001\u98de\u673a\u7b49 9 \u7c7b\u3002 \u529f\u80fd\u533a\u5206\u7c7b\uff1a\u63d0\u53d6 SSCP \u4f5c\u4e3a\u7a7a\u95f4\u8bed\u4e49\u7279\u5f81\u5bf9\u6bcf\u4e2a\u56fe\u50cf\u573a\u666f\u8fdb\u884c\u6570\u5b57\u5316\u8868\u8fbe\uff0c\u5728\u7279\u5f81\u8868\u8fbe\u7684\u57fa\u7840\u4e0a\u4f7f\u7528 semi-latent Dirichlet allocation\uff08S-LDA; Wang, Sabzmeydani \u548c Mori, 2007\uff09\u76d1\u7763\u5206\u7c7b\u5668\u5bf9 21 \u7c7b\u56fe\u50cf\u573a\u666f\u8fdb\u884c\u5206\u7c7b\uff0c\u5176\u4e2d\u968f\u673a\u9009\u62e9 80%\u56fe\u50cf\u573a\u666f\u4f5c\u4e3a\u8bad\u7ec3\u6837\u672c\uff0c\u800c\u53e6\u5916 20%\u5219\u7528\u4f5c\u6d4b\u8bd5\u6837\u672c\u3002\u6b64\u5b9e\u9a8c\u4f7f\u7528\u4e94\u6b21\u4ea4\u53c9\u9a8c\u8bc1\u65b9\u6cd5\u5bf9\u5206\u7c7b\u7ed3\u679c\u8fdb\u884c\u8bc4\u4ef7\uff08\u8868 4.1\uff09\uff0c\u5e76\u4f7f\u7528\u5e73\u5747\u751f\u4ea7\u8005\u7cbe\u5ea6\uff08\u6bcf\u7c7b\u6b63\u786e\u5206\u7c7b\u4e2a\u6570\u4e0e\u6d4b\u8bd5\u6837\u672c\u6570\u7684\u6bd4\u503c\uff09\u6765\u8861\u91cf\u6bcf\u4e2a\u7c7b\u522b\u7684\u5206\u7c7b\u7cbe\u5ea6\u3002\u27a1\ufe0f \u7cbe\u5ea6\u9ad8\u8fbe97.6% \u4e0e\u524d\u4eba\u65b9\u6cd5\u6bd4\u8f83    \u7b2c\u4e8c\u90e8\u5206\uff1a\u5317\u4eac\u5730\u533a\u529f\u80fd\u533a\u8868\u8fbe\u4e0e\u8bc6\u522b  \u5206\u7c7b\uff1a\u5546\u4e1a\u533a\u3001 \u5c45\u6c11\u533a\u3001\u5de5\u4e1a\u533a\u3001\u5b66\u6821\u3001\u516c\u56ed\u3001\u57ce\u4e2d\u6751\u3002 \u4e3a\u4e86\u5bf9\u8868\u8fbe\u548c\u8bc6\u522b\u8fd9\u4e9b\u529f\u80fd\u533a\uff0c\u672c\u5b9e\u9a8c\u5206\u4e3a\u4ee5\u4e0b\u56db\u4e2a\u6b65\u9aa4\uff1a \u9996\u5148\u7528\u9053\u8def\u7f51\u6570\u636e\u5c06\u9ad8\u5206\u9065\u611f\u5f71\u50cf\u5206\u5272\u6210\u4e0d\u540c\u7684\u529f\u80fd\u533a\u3002\u7ed3\u679c\uff0c\u751f\u6210 254 \u4e2a\u5177\u6709\u4e0d\u540c\u5f62\u72b6\u548c\u5927\u5c0f\u7684\u529f\u80fd\u533a\u5355\u5143\u3002\u7136\u540e\uff0c\u7528 MRS\u5bf9\u6bcf\u4e2a\u529f\u80fd\u533a\u4e2d\u7684\u5bf9\u8c61\u8fdb\u884c\u5206\u5272\uff0c\u5e76\u7528\u652f\u6301\u5411\u91cf\u673a\u5bf9\u8fd9\u4e9b\u5bf9\u8c61\u8fdb\u884c\u571f\u5730\u8986\u76d6\u5206\u7c7b\uff0c\u5171\u63d0\u53d6\u4e86\u4e03\u7c7b\u571f\u5730\u8986\u76d6\u5bf9\u8c61\uff0c\u5305\u62ec\u9634\u5f71\u3001\u690d\u88ab\u3001\u571f\u58e4\u3001\u6c34\u4f53\u3001\u5efa\u7b51\u7269\u3001\u5de5\u5382\u548c\u9053\u8def\u3002\u63a5\u7740\uff0c\u63d0\u51fa\u7684\u7a7a\u95f4\u8bed\u4e49\u5171\u751f\u5206\u6790\u65b9\u6cd5\u5bf9\u6bcf\u4e2a\u529f\u80fd\u533a\u63d0\u53d6\u4e86 SSCP \u7279\u5f81\u3002\u6700\u540e\uff0c\u4f7f\u7528 S-LDA \u7b97\u6cd5\u5bf9\u57ce\u5e02\u529f\u80fd\u533a\u8fdb\u884c\u5206\u7c7b\u3002  \u6839\u636e\u57ce\u5e02\u89c4\u5212\u56fe\u548c\u5b9e\u5730\u8c03\u67e5\u7ed3\u679c\uff0c\u4eba\u5de5\u9009\u53d6\u4e86** 63 \u4e2a\u529f\u80fd\u533a\u4f5c\u4e3a\u8bad\u7ec3\u6837\u672c**\u3002\u8fd9\u4e9b\u6837\u672c\u7528\u4e8e\u8bad\u7ec3 S-LDA \u5206\u7c7b\u5668\uff0c \u8fdb\u800c\u5c06\u5176\u4ed6 191 \u4e2a\u672a\u6807\u6ce8\u6837\u672c\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u7c7b\u522b\u3002\u4e3a\u4e86\u5b9a\u91cf\u5730\u8bc4\u4ef7\u6b64\u5206\u7c7b\u7ed3\u679c\uff0c \u57fa\u4e8e\u767e\u5ea6\u5730\u56fe\u4ee5\u53ca\u9ad8\u5fb7\u5730\u56fe\u5bf9\u5206\u7c7b\u4e2d\u7684 **191 \u4e2a\u529f\u80fd\u533a\u8fdb\u884c\u4eba\u5de5\u5206\u7c7b\u548c\u624b\u52a8\u6807\u6ce8**\u3002 \u8fd9\u91cc\u5c06\u4eba\u5de5\u8bc6\u522b\u7ed3\u679c\u4f5c\u4e3a\u6d4b\u8bd5\u6837\u672c\uff0c\u5bf9\u529f\u80fd\u533a\u5206\u7c7b\u7ed3\u679c\u8fdb\u884c\u7cbe\u5ea6\u8bc4\u4f30\u3002  \u8ba8\u8bba  \u54ea\u4e9b\u5bf9\u8c61\u7684\u7a7a\u95f4\u5173\u7cfb\u5728\u8868\u8fbe\u529f\u80fd\u533a\u4e2d\u66f4\u4e3a\u6709\u6548\uff1aRelief \u7b97\u6cd5 SSCP \u7684\u4e09\u4e2a\u91cd\u8981\u7684\u7279\u6027 SSCP \u4e0e\u5176\u5b83\u7a7a\u95f4\u7279\u5f81\u7684\u5bf9\u6bd4 SSCP \u7279\u5f81\u7684\u4f18\u7f3a\u70b9  \u672c\u7ae0\u5c0f\u7ed3 \u7b2c\u4e94\u7ae0 \u5c42\u6b21\u8bed\u4e49\u8ba4\u77e5\u6a21\u578b\uff1a \u529f\u80fd\u533a\u591a\u6e90\u7279\u5f81\u5c42\u6b21\u4f9d\u8d56\u6027\u8868\u8fbe  \u5355\u4e00\u7279\u5f81\u96be\u4ee5\u5168\u9762\u5730\u3001 \u5145\u5206\u5730\u8868\u8fbe\u529f\u80fd\u533a\uff0c\u56e0\u6b64\u9700\u8981\u7ec4\u5408\u591a\u6e90\u7279\u5f81\u5bf9\u529f\u80fd\u533a\u8fdb\u884c\u8868\u8fbe \u5728\u7ec4\u5408\u8fd9\u4e9b\u591a\u6e90\u5f02\u6784\u7279\u5f81\u65f6\uff0c\u53d1\u73b0\u8fd9\u4e9b\u7279\u5f81\u4e4b\u95f4\u5177\u6709\u5f88\u5f3a\u7684\u5c42\u6b21\u4f9d\u8d56\u5173\u7cfb\uff1a \u89c6\u89c9\u7279\u5f81\u662f\u83b7\u53d6\u5bf9\u8c61\u8bed\u4e49\u7279\u5f81\u7684\u57fa\u7840\uff0c\u800c\u5bf9\u8c61\u8bed\u4e49\u7279\u5f81\u662f\u83b7\u53d6\u7a7a\u95f4\u683c\u5c40\u7279\u5f81\u7684\u57fa\u7840\u3002 \u672c\u7ae0\u7814\u7a76\u5c42\u6b21\u8bed\u4e49\u8ba4\u77e5\u6a21\u578b\uff0c \u5728\u591a\u4e2a\u5c42\u6b21\u4e0a\uff08\u7eb5\u5411\u4e0a\uff09 \u5bf9\u57ce\u5e02\u529f\u80fd\u533a\u8fdb\u884c\u7279\u5f81\u8868\u8fbe\uff0c\u5e76\u4e14\u5efa\u6a21\u591a\u6e90\u7279\u5f81\u4e4b\u95f4\u7684\u5c42\u6b21\u4f9d\u8d56\u5173\u7cfb\u3002  \n\n",
        "description": "",
        "id": 49,
        "section": "posts",
        "tags": [
            "\u535a\u58eb\u8bba\u6587",
            "\u9605\u8bfb\u7b14\u8bb0"
        ],
        "title": "\u535a\u58eb\u8bba\u6587\u9605\u8bfb\u672d\u8bb0-3",
        "uri": "/2020/11/17/106/"
    },
    {
        "content": " \u51fa\u5dee\uff0c\u5730\u7406\u5927\u6570\u636e\u5f00\u53d1\uff0c\u6708\u672b\u5b8c\u5b8c\u6574\u6574\u7684\u662fppt\u6c47\u62a5\u4eba&hellip;\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u68a6\u4e2d\u7684\u5a5a\u793c\",\rartist: \"\u7406\u67e5\u5fb7 \u514b\u83b1\u5fb7\u66fc\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs/image_host@master/media/%E6%A2%A6%E4%B8%AD%E7%9A%84%E5%A9%9A%E7%A4%BC.mp3\",\rcover: \"https://p1.music.126.net/dMUS79TnNOnzd4p6MV_CGw==/7993449536056577.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%BA%AF%E9%9F%B3%E4%B9%90-%E6%97%A0%E6%AD%8C%E8%AF%8D-3ca159-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.11.1 \u56e2\u961f\u805a\u9910 + \u5c3d\u60c5ktv \u7adf\u7136\u8fd8\u6709\u5531\u65e5\u8bed\u6b4c\u7684\u5c0f\u5e08\u5f1f \u60ca\u8273\u5230\u4e86 2020.11.2 \u6309\u8ba1\u5212\u6765\u8bf4\u6211\u4ecd\u5c06\u98de\u5f80\u6708\u7403\uff0c\u4eb2\u7231\u7684\u4eba\uff0c\u4e66\u67b6\u4e0a\u7684\u4e1c\u897f\u5982\u679c\u65e0\u7aef\u6389\u843d\uff0c\u5c31\u662f\u6211\u8981\u56de\u6765\u7684\u4fe1\u53f7\u3002 2020.11.3 \u4eca\u65e5\u4efd\u88ab\u5acc\u5f03\u3002&ldquo;\u4f60\u770b\u6211\u7a7f\u8fd9\u4ef6\u8863\u670d\u4f1a\u4e0d\u4f1a\u592a\u6210\u719f\u4e86\u554a&rdquo; &ldquo;\u4f60\u90fd\u5feb\u4e09\u5341\u7684\u4eba\u4e86\u3002\u4e0d\u5e94\u8be5\u8fd9\u6837\u7a7f\u5417&rdquo;\uff1b \u6708\u4eae\u4e0d\u4f1a\u5954\u5411\u4f60\uff0c\u4f46\u6211\u4f1a\uff0c\u4e0d\u8fdc\u4e07\u91cc\u7684\u90a3\u79cd 2020.11.4 \u518d\u4e5f\u4e0d\u559d\u51c9\u5496\u5561\u4e86 \u8fd8\u662f\u9694\u591c\u7684? 2020.11.5 \u5e7f\u5dde\u89c1 2020.11.6 \u4e00\u5ea7\u57ce\u5e02\uff0c\u4e00\u4e9b\u65b0\u9c9c\u611f 2020.11.7 \u6211\u4e5f\u6709\u4e86\u7b2c\u4e00\u4e2a\u201c\u5e3d\u5b50\u201d\uff1bMapGIS\u4e2d\u5e74ktv\u4e4b\u591c\uff1a\u4e13\u5bb6\u6559\u6388\u4eec\u90fd\u73a9\u5f00\u4e86 2020.11.8 \u8001\u7238\u751f\u65e5\u5feb\u4e50!\uff1b\u4e3a\u4e86\u8fd9\u6b21\u76f8\u9047\uff0c\u6211\u8fde\u89c1\u9762\u65f6\u7684\u547c\u5438\u90fd\u66fe\u53cd\u590d\u7ec3\u4e60\u3002\u5f88\u5f00\u5fc3\u80fd\u89c1\u5230\u4f60\uff0c\u7545\u804a\u4e00\u4e0b\u5348\uff0c\u867d\u7136\u540e\u6765\u90fd\u5fd8\u8bb0\u6211\u4eec\u804a\u4e86\u5565\uff0c\u80fd\u591f\u4e0e\u4f60\u6f2b\u6b65\u8fd9\u4e48\u4e45\u5df2\u7ecf\u975e\u5e38\u5f00\u5fc3\ud83d\udc6b 2020.11.9 \u679c\u7136\u5230\u4e86\u6b66\u6c49\u5929\u6c14\u5c31\u51b7\u4e86\u4e0b\u6765\uff0c\u665a\u4e0a\u53c8\u6362\u4e0a\u4e86\u536b\u8863\u3001\u6000\u5ff5\u5357\u65b9\u7684\u5929\u6c14\u3002\u6536\u62fe\u597d\u5fc3\u60c5\u518d\u51fa\u53d1 2020.11.10 \u8bba\u6587\u627e\u4e0d\u5230\u521b\u65b0\u70b9\u65f6\uff0c\u4ee5\u201c\u67d0\u67d0\u7f3a\u4e4f\u6df1\u5165\u7814\u7a76\u7684\u95ee\u9898\u201d\u4f5c\u4e3a\u8bba\u8ff0\uff0c\u628a\u81ea\u5df1\u9017\u4e50\u4e86 2020.11.11  \u4eba\u95f4\u7684\u82e6\n\u6bd4\u5982 \u5bd2\u51ac\u523a\u9aa8 \u8001\u75c5\u5b64\u72ec \u75db\u5931\u6216\u522b\u79bb\n\u53ea\u662f\u4e00\u573a \u6d41\u8f6c\u548c\u7ecf\u8fc7\n\u6d6e\u51fa\u6c34\u9762 \u53c8\u624e\u8fdb\u6ce5\u91cc\n\u547c\u5578\u800c\u6765 \u53c8\u547c\u5578\u800c\u53bb\n\u6bb7\u52e4\u9762\u5bf9\u5c31\u597d\u4e86 \u4f55\u5fc5\u6c89\u6eba \u4eba\u95f4\u7684\u751c\n\u6bd4\u5982 \u6625\u65e5\u7684\u900d\u9065 \u6070\u65f6\u7684\u5c11\u5e74 \u4eb2\u7231\u7684\u4f60\n\u53ea\u662f\u9633\u5149\u6d12\u5728\u80a9\u4e0a \u590f\u51b0\u542b\u5728\u5634\u91cc \u8584\u8377\u521a\u597d\u65b0\u7eff\n\u5fc3\u751f\u6b22\u559c\u5c31\u597d\u4e86 \u4f55\u5fc5\u6c89\u6eba   2020.11.12 \u897f\u5b89\u89c1\uff1b\u5c0f\u71d5\u5b50-\u5927\u60a6\u57ce\u51d1\u51d1\u706b\u9505-\u5927\u96c1\u5854\u5357\u5e7f\u573a-\u5927\u5510\u4e0d\u591c\u57ce 2020.11.13 \u53c2\u52a0\u957f\u5b89\u5927\u5b66\u4e3e\u529e\u7684\u6d4b\u7ed8\u535a\u58eb\u8bba\u6587\uff0c\u75ab\u60c5\u671f\u95f4\u8fd8\u662f\u86ee\u591a\u4eba\u6765\u9152\u5e97\u53c2\u4f1a\u7684\uff1b\u611f\u89c9\u957f\u5927\u51c6\u5907\u7684\u86ee\u597d\uff0c\u7ec4\u59d4\u4f1a\u5f88\u70ed\u5fc3\uff0c\u672c\u6765\u8bf4\u6ca1\u6709\u7684\u5348\u9910\u548c\u665a\u9910\u4e5f\u63d0\u4f9b\u4e86\uff0c\u9152\u5e97\u4f4f\u5bbf\u4e5f\u5f88\u8212\u670d\uff0c\u53ef\u4ee5\u8bf4\u5df2\u7ecf\u975e\u5e38\u5468\u5230\u4e86\u3002\u867d\u7136\u7814\u7a76\u4e3b\u9898\u76f8\u5173\u5ea6\u4e0d\u662f\u5f88\u5927\uff08\u8bdd\u8bf4\u6211\u7684\u4e13\u4e1a\u5c31\u662f\u6d4b\u7ed8\u79d1\u5b66\u4e0e\u6280\u672f\uff09\uff0c\u8fd9\u6b21\u53c2\u52a0\u6536\u83b7\u8fd8\u662f\u6709\u7684\u3002\u5b66\u4e60\u5927\u4f6c\u4eec\u7684\u62a5\u544a\uff0c\u5b66\u4e60\u4ed6\u4eec\u7684\u6545\u4e8b\uff0c\u5b66\u4e60\u4ed6\u4eec\u57fa\u91d1\u672c\u5b50\u600e\u4e48\u6765\u7684\uff0c\u600e\u4e48\u8bb2\u6545\u4e8b\u3002\u665a\u4e0a\u7504\u535a\u58eb\u7684\u59d0\u59d0\u8bf7\u6211\u4eec\u5403\u996d\uff0c\u6311\u7684\u4e00\u5bb6\u897f\u5b89\u7279\u8272\u7684\u5e97-\u9047\u89c1\u957f\u5b89\uff0c\u83dc\u54c1\u90fd\u86ee\u6709\u7279\u8272\u7684\uff0c\u5176\u5b9e\u4e4b\u524d\u6253\u5361\u8fc7\u8fd9\u4e9b\u83dc\u54c1\uff0c\u4ec0\u4e48\u6bdb\u7b14\u9165\u5440\u3001\u9171\u732a\u8e44\u7b49\uff0c\u5473\u9053\u8fd8\u662f\u86ee\u4e0d\u9519\u7684\u3002 2020.11.14 \u4eca\u5929\u548c\u5c0f\u71d5\u5b50\u5f00\u8f66\u53bb\u8bd7\u7ecf\u91cc\u73a9\u3002\u515c\u515c\u8f6c\u8f6c\u3001\u6563\u6b65\u8c08\u5fc3\uff0c\u56de\u6765\u5f00\u8f66\u662f\u6211\u5f00\u56de\u6765\u7684\uff0c\u8def\u4e0a\u86ee\u5835\u7684\uff0c\u4e00\u4e2a\u5c0f\u65f6\u7684\u8def\u7a0b\u786c\u662f\u5f00\u4e86\u4e24\u4e2a\u5c0f\u65f6\uff0c\u8fd8\u6709\u665a\u4e0a\u5f00\u8f66\uff0c\u6211\u786e\u5b9e\u8fd8\u4e0d\u9002\u5e94\u3002\u665a\u4e0a\u53bb\u4e00\u5bb6\u9152\u9986-\u4e09\u5de1\u9152\u8086\u5403\u996d\uff0c\u5473\u9053\u8fd8\u662f\u86ee\u4e0d\u9519\u7684\u3002\u9ad8\u5904\u770b\u897f\u5b89\u7684\u591c\u666f\u786e\u5b9e\u5f88\u7f8e\u3002\u7279\u8272\u7684\u6e05\u9152\u4e5f\u5f88\u4e0d\u9519 2020.11.15 \u75b2\u60eb\u7684\u8fd4\u7a0b\u3002\u73b0\u5728\u8d85\u7ea7\u4e0d\u559c\u6b22\u505a\u9ad8\u94c1\u3002\u76ee\u524d\u662f\u8fd9\u6837\u7684\uff1b\u665a\u4e0a\u548c\u963f\u4f1f\u804a\u5929\uff0c\u611f\u89c9\u67d0\u4e9b\u65b9\u9762\u50cf\u6781\u4e86\u81ea\u5df1\u4ee5\u524d\u7684\u6837\u5b50\uff0c\u4f46\u4ed6\u6bd4\u5f53\u65f6\u7684\u81ea\u5df1\u66f4\u6709\u80fd\u529b\u3001\u4e5f\u66f4\u6709\u601d\u60f3\uff0c\u5728\u6211\u770b\u6765\uff0c\u4ed6\u4e0d\u8fc7\u662f\u6682\u65f6\u7684\u60c5\u611f\u8ff7\u60d1\u5427\uff0c\u5e0c\u671b\u4ed6\u5c3d\u5feb\u8d70\u51fa\u6765\u3002 2020.11.16 \u201c\u6240\u4ee5\u7ed3\u8bba\u662f\uff1a\u4eba\u5176\u5b9e\u662f\u4e00\u79cd\u5f88\u65e0\u8da3\u7684\u52a8\u7269\u3002\u201d-\u201c\u90a3\u662f\u4f60\u3002\u201d\uff1b\u6821\u7ea7\u79d1\u62a5\u4f1a\u7b54\u8fa9\uff0c\u7ec8\u4e8e\u505a\u597d\u4e86ppt\u3002\u5176\u5b9e\u5185\u5bb9\u6ca1\u5927\u53d8\uff0c\u628appt\u7cbe\u4fee\u4e86\u4e0b\uff0c\u518d\u5c31\u662f\u597d\u597d\u51c6\u5907\u5427\uff0c\u6708\u5e95\u5c31\u8981\u7b54\u8fa9\u4e86\uff0c\u5176\u5b9e\u4e94\u5206\u949f\u7b54\u8fa9\u633a\u96be\u7684\uff1b\u665a\u4e0a\u628a\u957f\u6458\u8981\u597d\u597d\u6539\u4e86\u6539\uff0c\u57fa\u672c\u5185\u5bb9\u591f\u4e86\u5427\u3002\u518d\u5c31\u662f\u7cbe\u4fee\u4e00\u4e0b\u5c31\u53ef\u4ee5\u53d1\u51fa\u53bb\u4e86\uff1b\u5730\u7406\u5927\u6570\u636e\u7684\u62d6\u5230\u73b0\u5728\uff0c\u9879\u76ee\u7ec4\u7ec8\u4e8e\u5f00\u59cb\u50ac\u4e86\u3002\u63a5\u4e0b\u6765\u8981\u597d\u597d\u6d4b\u8bd5\u4e86\uff0c\u522b\u4eba\u90fd\u6709\u6d4b\u8bd5\u901a\u8fc7\u7684\u4e86\u3002 2020.11.17 \u7537\u58eb\u6d17\u9762\u5976\u63a8\u8350\uff1a\rsmzdm 2020.11.18 \u8fd9\u4e24\u5929\u770b\u5230\u6bd4\u8f83\u591a\u7684\u4e00\u4e2a\u8bcd\uff1achaos 2020.11.19 \u6700\u540e\u8fd8\u662f\u628a\u90a3\u5957\u5927\u5730\u8272\u7684\u897f\u670d\u7ed9\u9000\u6389\u4e86\u3001\u54ce 2020.11.20 I love three things in this world. Sun, Moon and You. Sun for morning, Moon for night, and You forever. 2020.11.21 He understands you better than yourself\ud83d\udc4a 2020.11.22 \u7531\u4e8e\u51e0\u5929\u524d\u5de6\u773c\u6709\u4e00\u70b9\u5c0f\u5c0f\u80bf\u80c0(\u501f\u53e3)\uff0c\u6240\u4ee5\u7ed9\u81ea\u5df1\u653e\u4e86\u51e0\u5929\u5047\u3002\u4eca\u5929\u751a\u81f3\u9876\u7740\u5bd2\u98ce\u51fa\u53bb\u901b\u8857\uff0c\u4e70\u4e86\u51e0\u4ef6\u8863\u670d(\u897f\u670d+\u5462\u5b50\u5927\u8863+\u9488\u7ec7\u5f00\u886b)\uff0c\u82b1\u7684\u86ee\u901a\u900f\u3002 2020.11.23 \u4e09\u65ec\u5c1a\u8fdc\u6d53\u70df\u6563\uff0c\u4e00\u5982\u5e74\u5c11\u8fdf\u590f\u5f52 2020.11.24 \u535a\u58eb\u65b0\u751f\u5206\u4eab\u4f1a 2020.11.25 \u4e00\u5982\u5e74\u5c11\u6a21\u6837 2020.11.26 \u8eab\u4f53\u548c\u601d\u60f3\uff0c\u603b\u6709\u4e00\u4e2a\u5728\u8def\u4e0a 2020.11.27 \u603b\u5f52\u662f\u81ea\u5df1\u54ea\u91cc\u505a\u7684\u4e0d\u591f\u597d\u5427 \u8fd9\u6b21\u79d1\u62a5\u4f1a\u8fd8\u662f\u5b66\u4e60\u5230\u5f88\u591a\u7684 2020.11.28 \u665a\u4e0a\u4e00\u89c9\u7761\u5f97\u662f\u771f\u7684\u8212\u670d 2020.11.29 Sony \u03b16400 \u5c0f\u5fc3\u7ffc\u7ffc\u6253\u5f00\u5fc3\u7231\u7684\u73a9\u5177\u76d2 2020.11.30 \u4e70\u7684\u65f6\u5019\u72b9\u8c6b\uff0c\u5176\u5b9e\u8fd9\u662f\u4e00\u4ef6\u5f88\u63d0\u5347\u5e78\u798f\u611f\u7684\u4e8b\u3002  ",
        "description": "",
        "id": 50,
        "section": "posts",
        "tags": null,
        "title": "2020-11",
        "uri": "/posts/journals/2020-11-01-2020-11/"
    },
    {
        "content": " \u4e0e\u5730\u7406\u77e5\u8bc6\u53d1\u73b0\u76f8\u5173\u7684\u6587\u672c\u6316\u6398\u8bba\u6587\u9605\u8bfb\u603b\u7ed3\n 2017 - Extracting and analyzing semantic relatedness between cities using news articles   Yingjie Hu\n  \rInternational Journal of Geographical Information Science\n  https://www.tandfonline.com/doi/abs/10.1080/13658816.2017.1367797?journalCode=tgis20\n  \u672d\u8bb0  Abstract\u77ed\u5c0f\u7cbe\u608d\uff0c\u903b\u8f91\u6027\u5f88\u5f3a Introduction\u90e8\u5206\u5199\u7684\u86ee\u597d\uff0cadvantages \u548c potential applications \u90e8\u5206\u505a\u64b0\u5199\u53c2\u8003 \u521b\u65b0\u70b9\u5728\u4e8e\u8fd9\u4e2a computational framework\uff1b\u5176\u6846\u67b6\u91cc\u7684\u65b9\u6cd5\u6211\u89c9\u5f97\u8fd8\u662f\u86ee\u5bb9\u6613\u7406\u89e3\u7684  Abstract  news articles reflect socioeconomic activities + public concerns that exist only in the perceptions of people cities are frequently mentioned in news articles, and two or more cities may co-occur (\u5171\u73b0) in the same article. co-occurrence =&gt; relatedness between cities =&gt; be under different topics semantic relatedness: the relatedness under different topics By reading news articles, one can grasp the general semantic relatedness between cities given hundreds of thousands of news articles, it is very difficult for anyone to manually read them. proposes a computational framework:  extract the semantic relatedness between cities based on a natural language processing model and employs a machine learning process to identify the main topics more than 500,000 news articles covering the top 100 US cities spanning a 10-year period. perform exploratory visualizations of the extracted semantic relatedness under different topics and over multiple years analyze the impact of geographic distance on semantic relatedness and find varied distance decay effects    Introduction  news articles  rich information timely published online =&gt; becomes useful data resource for answering scientific questions   cities in news articles  cities are frequently mentioned in news articles. =&gt; relatedness Cities can be related under a variety of topics. =&gt; similarity / dissimilarity cities are interrelated into a network, in which the nodes are cities and the edges can have different semantics By reading news articles, one can grasp the general semantic relatedness between cities given hundreds of thousands of news articles, it is very difficult for anyone to manually read them.   the notion - semantic relatedness  semantic relatedness in NLP  the words cat and mouse most people would consider them as related there exist films, books, and personal stories that link these two words together   =&gt; the semantic relatedness between cities   advantages in using news articles for extracting semantic relatedness between cities  accessed relatively easily capture diverse city relations enables a temporal exploration discover the intangible (\u62bd\u8c61\u7684\uff0c\u65e0\u5f62\u7684) city relatedness perceived by people   potential applications  In city planning and policy-making In geographic information retrieval (GIR) integrated with existing research on place-based GIS There also exist other possible applications   contributions  a computational framework varied distance decay effects of the semantic relatedness perform exploratory visualizations on the multiple city networks\uff1bexplore the temporal variations of the semantic relatedness between cities over years    Method and Results  \u5176\u5b9e\u6211\u7406\u89e3\u5c31\u4e09\u4e2a\u8fc7\u7a0b(Orz)\uff1a\u63d0\u53d6topic+\u5efa\u7acb\u8bed\u4e49\u5173\u8054+\u65f6\u7a7a\u5206\u6790   4,950-by-17 matrix  each row representing one city pair each column representing one IPTC topic cell containing the relatedness value of a city pair under a topic   two exploratory visualizations  based on the topics =&gt; construct 17 city networks based on the 17 IPTC topics based on the years =&gt; obtain 10 matrices, each of which is 4,950 by 17 and contains the semantic relatedness in each year   the extracted semantic relatedness also opens the door to many other research questions, which can be grouped from spatial, temporal, and thematic perspectives.  distance decay analysis    ",
        "description": "",
        "id": 51,
        "section": "posts",
        "tags": [
            "\u6587\u672c\u6316\u6398",
            "\u8bba\u6587\u9605\u8bfb"
        ],
        "title": "Papers Reading-\u6587\u672c\u6316\u6398",
        "uri": "/2020/10/28/104/"
    },
    {
        "content": " \u6587\u732e\u9605\u8bfb\uff1a\u57ce\u5e02\u529f\u80fd\u533a\u5212\u5206\u4e0e\u57ce\u5e02\u571f\u5730\u5229\u7528\u5206\u7c7b\u76f8\u5173\u3002\u4e3b\u9898\u4e3a\u9065\u611f\u6570\u636e\u4e0e\u793e\u4ea4\u578b\u5927\u6570\u636e\u878d\u5408\u65b9\u6cd5\u3002\n 2016 - Mapping Urban Land Use by Using Landsat Images and Open Social Data  remote sensing https://doi.org/10.3390/rs8020151  \u672d\u8bb0  Introduction \u8bb2\u7684\u57ce\u5e02\u5316\u8fdb\u7a0b\u548cland use\u3001land cover\u7684\u5dee\u5f02\u5199\u7684\u4e0d\u9519\uff0c\u503c\u5f97\u501f\u9274\u53c2\u8003 Introduction \u4ed6\u4e00\u76f4\u5728\u8bb2 relatively large spatial scale Introduction \u8fd8\u662f\u4ece\u9065\u611f\u7684\u89d2\u5ea6\u6765\u8bb2\u7684\uff0copen social data\u7684\u620f\u4efd\u4e0d\u591a\uff1b\u800c\u4e14\u6709\u79cd\u864e\u5934\u86c7\u5c3e\u7684\u611f\u89c9 Two-steps classification: \u5148\u533a\u5206\u5efa\u6210\u533a\u548c\u975e\u5efa\u6210\u533a\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u4e24\u7c7b\u5206\u7c7b  \u6807\u7b7e  RS + POI  Abstract  high-resolution urban land use maps have important applications the availability of these maps is low in countries such as China using satellite images and open social data  used 10 features derived from Points of Interest (POI) data and two indices obtained from Landsat 8 Operational Land Imager(OLI) images   classify parcels into eight Level I classes and sixteen Level II classes of land use (\u4e24\u7ea7\u5206\u7c7b) tested in Beijing, China  Introduction  \u57ce\u5e02\u5316\u7684\u80cc\u666f\uff08\u53ef\u4ee5\u501f\u9274\u53c2\u8003\uff09\uff1aUrbanization in China =&gt; Large-scale urbanization has had a dramatic impact =&gt; Studies that assess this process and its impacts are important =&gt; To achieve these goals, detailed urban land cover/use maps are required [land use\u548cland cover\u7684\u5dee\u5f02] Currently, land cover information is a primary data source =&gt; detailed information on urban land use is needed  land use is a cultural concept that describes human activities and their use of land whereas land cover is a physical description of land surface land cover can be used to infer land use, but the two concepts are not entirely interchangeable.   \u7136\u800c\uff0c  \u95ee\u98981\uff1ahigh-resolution urban land use maps covering large spatial extents are relatively rare \u539f\u56e0-\u53d1\u5c55\u4e2d\u56fd\u5bb6\u8ba4\u77e5\u548c\u6280\u672f\u4e0d\u884c\uff1alocal knowledge and the techniques necessary for developing these types of maps are often not available, particularly for developing regions \u95ee\u98982\uff1aoutdated maps \u539f\u56e0\uff1aurban land use maps are normally produced by interpreting aerial photographs, field survey results, and auxiliary materials, such as appraisal records or statistical data \u56e0\u6b64\uff1aAs a result, to obtain land use maps that capture the pace of urban development in a timely and accurate manner at a relatively large spatial scale is a critical challenge in urban studies, both in China and in other countries facing similar situations.   Satellite-based remote sensing holds certain advantages  large spatial coverage, high time resolution, and wide availability pixel-based image classification methods: using spectral and/or textural properties per-field and object-based classification methods medium-resolution satellite images difficult to extract socioeconomic features of urban areas cannot provide sufficient separation among urban functional zones high spatial and spectral resolution satellite images provide more detailed information on urban structures \u8d35: prohibitively expensive in general   emergence of open social data =&gt; mapping urban land uses at high-resolution containing spatiotemporal patterns of human activities the existing studies were often implemented over relatively small areas or specific land use types using data sets that were subjective or proprietary(\u4e3b\u89c2) the physical attributes of urban functional parcels were seldom included integrating social knowledge with remotely sensed data  physical features extracted from satellite data socioeconomic features retrieved from open social data One type of open social data that is particularly promising for this purpose are Points of Interest (POI) data. [\u5c31\u5f53\u65f6\u800c\u8a00\u5427] As far as we know, there are no reports on using POI data and satellite data jointly to produce detailed land use maps. \u6211\u4eec\u7684\u5de5\u4f5c: developed a protocol that utilizes medium-resolution satellite images and POI data to map urban land uses.    \u6570\u636e\u548c\u65b9\u6cd5  Method \u4e24\u6b65\u5212\u5206 [\u5148\u5212\u5206\u4e3a\u5efa\u6210\u533a\u548c\u975e\u5efa\u6210\u533a] differentiate the built-up and non-built-up areas based on classified impervious surface(\u4e0d\u900f\u6c34\u9762) areas the classified built-up and non-built-up regions were merged into a final land use map   Classification System - \u5206\u7c7b\u7cfb\u7edf  built-up area as places dominated by artificial buildings and structures non-built-up area as places mainly occupied by cultivated land, forests, grassland, water and water conservancy facilities two-level classes    2017 - Classifying urban land use by integrating remote sensing and social media data  International Journal of Geographical Information Science https://doi.org/10.1080/13658816.2017.1324976  \u672d\u8bb0  groud truth\u662f\u901a\u8fc7\u4eba\u5de5\u76ee\u89c6\u89e3\u8bd1\u6253\u7684\u6807\u7b7e \u5de5\u4f5c\u6d41\u8fd8\u9700\u8981\u5f88\u591a\u624b\u5de5\u8c03\u53c2\u7684\u5730\u65b9\uff0c\u6bd4\u5982kmeans\u7b49 \u4f7f\u7528\u7684\u57fa\u7840\u7279\u5f81\uff0c\u5982low-level\u7684visual features\u548cfrequent features \u6ca1\u6709\u5145\u5206\u5229\u7528\u6570\u636e\u5e26\u6765\u7684\u7279\u5f81\u3002  \u6807\u7b7e  RS\u4e0e\u591a\u6e90\u793e\u4ea4\u5a92\u4f53\u878d\u5408 \u878d\u5408\u65b9\u6cd5\uff1a\u571f\u5730\u5229\u7528\u8bcd\u5178  Abstract  accurate classification of urban functional zones urban land use classification by considering features that are extracted from either high spatial resolution (HSR) remote sensing images or social media data, but few studies consider both features due to the lack of available models. Proposed: a novel scene classification framework to identify dominant urban land use type at the level of traffic analysis zone by integrating probabilistic topic models and support vector machine A land use word dictionary fusing:  natural\u2013physical features from HSR images socioeconomic semantic features from multisource social media data   comparing with manual interpretation (\u4eba\u5de5\u76ee\u89c6\u89e3\u8bd1) data  Introduction  \u80cc\u666f\u8bba\u8ff0: Land use and land cover (LULC) information =&gt; urban functional zones which reflect in urban land use patterns =&gt; the effective detection of urban land use patterns High spatial resolution (HSR) remote sensing images  computation-based urban land use detection three types of spatial units  units of pixels and objects are usually employed to evaluate land cover, whereas scenes are commonly used to identify urban functional zones and accurate urban land use patterns   object-oriented classification(OOC) models  physical features (such as spectral, shape, and texture features) of ground components \u7f3a\u9677: often overlook the spatial distribution and semantic features of ground components because they were\nonly designed to mine the low-level semantic land cover information of ground components     Semantic Gap  low-level semantic features indicate \u2018information\u2019 that comes with the data directly high-level semantic features refer to \u2018knowledge\u2019 specific for each user and application semantic gap refers to the disparity (\u4e0d\u4e00\u81f4) of features identified between these two levels   To bridge the \u2018Semantic Gap\u2019 between LULC, recent studies have introduced the concept of \u2018scene classification\u2019 into HSR image classification to label a scene with a single category  Current studies: apply the bag-ofwords (BoW) modeling approach and fuse physical features of ground scenes via\nprobabilistic topic models (PTMs) However, extracting features from remote sensing images can only represent the external (\u5916\u90e8\u7684) natural\u2013physical properties of ground components, whereas regional land use types often have a strong correlation with indoor human socioeconomic activities, which are difficult to extract from HSR images.   To solve this problem, recent studies have proposed the concepts of \u2018social sensing\u2019 and \u2018urban computing\u2019  Multisource social media data =&gt; monitor residential activities and urban land use dynamics   However, these methods utilize only one type of data rather than fusing geospatial information from HSR images and social media data into the detection of land use types.  \u5047\u8bbe-\u540c\u7c7b\u533a\u57df\u540c\u7279\u5f81: Regions with similar types of urban land use tend to have similar external natural\u2013physical properties and indoor human socioeconomic activity patterns   \u672c\u6587\u5de5\u4f5c:  aims to build a dominant urban land use sensing framework by combining several machine learning and natural language processing (NLP) models to fuse the geospatial latent semantic information extracted from HSR images (remote sensing information) and multisource social media data (social sensing information) as patterns to classify the urban land use and evaluate the accuracies and reliabilities of classification models by manual interpretation Haizhu district in Guangzhou    \u6570\u636e\u53ca\u65b9\u6cd5   \u9065\u611f\u6570\u636e\n high spatial resolution (HSR) Worldview-2 image 2014\uff0cgrid size of 34,263 \u00d7 14,382 and a spatial resolution of 0.5 m Taz\u6362\u5206\u4e3a 593 land patches \u624b\u5de5\u76ee\u89c6\u89e3\u8bd1\u6253\u7684\u6807\u7b7e\uff0c\u5305\u542b\u4e03\u7c7b: public management services land (M), industrial land (I), green land (G), commercial land(C), residential land (R), park land (P), and urban villages (U).    \u793e\u4ea4\u5a92\u4f53\u6570\u636e\n OpenStreetMap (OSM) road networks Gaode POIs (\u8bf4\u662f\u7528API\u83b7\u53d6\u7684\uff0c\u6ca1\u8bf4\u65f6\u95f4) real-time Tencent user density (RTUD)\uff1aspatial resolution of 25 m    Method\n K-Means\u9700\u8981\u624b\u5de5\u5b9a\u4e49\u53c2\u6570\uff1b\u4f7f\u7528low-level\u7684visual features\uff1b \u4e00\u80a1\u8111\u90fd\u5f53\u505a\u5355\u8bcd\u4e86    2017-Hierarchical semantic cognition for urban functional zones with VHR satellite images and POI data  ISPRS Journal of Photogrammetry and Remote Sensing http://dx.doi.org/10.1016/j.isprsjprs.2017.09.007 \u5f20\u4fee\u8fdc  \u672d\u8bb0 \u6807\u7b7e Abstract  [\u529f\u80fd\u533a\u5212\u56fe\u4e0d\u597d\u62ff]functional-zone maps are hardly available in most cities [\u6025\u9700(\u534a)\u81ea\u52a8\u5316\u7684\u65b9\u6cd5]an automatic/semi-automatic method for mapping urban functional zones is highly required [\u7ee7\u627f\u6027\u8bed\u4e49\u8bc6\u522b]Hierarchical semantic cognition (HSC) relies on geographic cognition and considers four semantic layers with a very-highresolution (VHR) satellite image and point-of-interest (POI) data result: overall accuracy of 90.8%; the contributions of diverse semantic layers are quantified  2018 - Integrating Aerial and Street View Images for Urban Land Use Classification  remote sensing https://doi.org/10.3390/rs10101553  \u672d\u8bb0  \u8857\u666f\u7a7a\u95f4\u5bf9\u9f50\u7684\u65b9\u5f0f feature maps stacking \u5b9e\u9a8c\u660e\u660e\u505a\u51fa\u6765\u662f\u9065\u611f\u5f71\u50cf\u8bed\u4e49\u5206\u5272\u7684\u7ed3\u679c\u5440~\u611f\u89c9\u662f\u5957\u4e0aUrban land use\u7684\u58f3\uff0c\u505a\u7740\u8bed\u4e49\u5206\u5272\u7684\u6d3b \u7279\u5f81\u81ea\u5bf9\u6bd4\uff1b\u6ca1\u6709\u4e0e\u5176\u4ed6\u65b9\u6cd5/baseline\u7684\u5bf9\u6bd4  \u6807\u7b7e  Aerial and Street View Images Pixel-level land use classification SegNet based Encoder-Decoder \u7aef\u5230\u7aef  Abstract &amp; Introduction  Urban land use rely heavily on domain experts in this paper  deep neural network-based approaches label urban land use at pixel level using high-resolution aerial images and ground-level street view images   specifically  extract semantic features from sparsely distributed street view images interpolate(\u63d2\u503c) them in the spatial domain to match the spatial resolution of the aerial images fused together through a deep neural network for classifying land use categories tested on a large publicly available aerial and street view images dataset of New York City   Results  using aerial images alone can achieve relatively high classification accuracy the ground-level street view images contain useful information for urban land use classification fusing street image features with aerial images can improve classification accuracy street view images add more values when the resolutions of the aerial images are lower   Contributions  presents a novel method to fuse extracted ground-level features from street view images with high-resolution aerial images to enhance pixel-level urban land use classification accuracy; two sources of images collected from totally different views (i.e., overhead and ground-level views) examines the impact of aerial image resolution changes on classification accuracy; investigate into the contribution\nthat street view images make to the improvement of the classification results explore deep neural network methods for pixel-level urban land use classification =&gt; enriches the remote sensing applications    Method  Ground Feature Map Construction \uff08\u600e\u6837\u7279\u5f81\u7a7a\u95f4\u5bf9\u9f50\u7684\uff09 semantic feature extraction  pretrained Places-CNN (without the last fully connection layer) =&gt; extract a 512-dimensional feature vector for each image concatenate the extracted four feature vectors into a 2048-dimensional feature vector for each location principal component analysis (PCA) is used to compress semantic information and reduce the dimension of the feature vector to 50   spatial interpolation  \u8d77\u56e0\uff1aplaces with street view images are sparsely distributed along roads in the spatial domain street view images capture the scenes of nearby visual areas instead of single dots in the space [\u8857\u666f\u6355\u6349\u5468\u8fb9\u7684\u573a\u666f] \u56e0\u6b64\uff0cproject the semantic information of street view images to their covered areas from top-down viewpoint \u7b56\u7565\uff1a  use spatial interpolation method - Nadaraya-Watson kernel regression estimate the impact of nearby street view images on a pixel - Gaussian kernel to calculate weights       Data Fusion (\u600e\u6837\u878d\u5408\u8bad\u7ec3\u7684) two encoders: feature maps stacking the output feature map is fed to a Softmax layer to make pixel-level predictions    2019-Beyond Word2vec: An approach for urban functional region extraction and identification by combining Place2vec and POIs 2019 - Model Fusion for Building Type Classification from Aerial and Street View Images  remote sensing [\u534a\u4e2a\u6708\u5c31\u63a5\u6536\u4e86\uff01\u4e0d\u53ef\u601d\u8bae\uff0c\u6211\u7684\u5c0f\u4fee\u6587\u7ae0\u534a\u4e2a\u6708\u8fd8\u5728\u7f16\u8f91\u624b\u91cc\u5462 Orz] https://doi.org/10.3390/rs11111259  \u672d\u8bb0  \u4e3b\u8981\u662f\u505a\u7684\u7528Google\u5f71\u50cf+\u8857\u666f\u8bc6\u522b\u5efa\u7b51\u7269\u529f\u80fd\uff0c\u91cd\u70b9\u8bb2\u7684\u5728\u6a21\u578b\u878d\u5408\u65b9\u9762 \u7814\u7a76\u73b0\u72b6\u8bb2\u7684\u662furban land use with DL \u505a\u4e86\u4e00\u4e2asummerized\u7684\u8868\u683c \u8fd8\u884c \u5199\u73b0\u72b6\u7684\u65f6\u5019\u53ef\u4ee5\u56de\u8fc7\u6765\u53c2\u8003 \u7ed3\u8bba\u662f\u7ed3\u8bba\u5c42\u7684\u878d\u5408\uff08\u867d\u7136\u7b80\u5355\uff09\u6bd4\u7279\u5f81\u5c42\u7684\u878d\u5408\u6548\u679c\u597d\uff0c\u5e76\u7b80\u5355\u5206\u6790\u4e86\u4e0b\u539f\u56e0  \u6807\u7b7e  Aerial and Street View Images Building Type Classification \u878d\u5408\u7b56\u7565\uff1adecision-level fusion vs feature-level fusion \u7aef\u5230\u7aef  Abstract  mapping building functions jointly using both aerial and street view images via deep learning techniques a data fusion strategy =&gt; cope with heterogeneous image modalities (\u5f62\u6001) geometric combinations of the features (\u56fe\u50cf\u7684\u7279\u5f81\u7684\u51e0\u4f55\u7ec4\u5408) of such two types of images, especially in an early stage of the convolutional layers, often lead to a destructive effect (\u7834\u574f\u6027\u7684\u6548\u679c) due to the spatial misalignment of the features (\u7279\u5f81\u7684\u7a7a\u95f4\u9519\u4f4d). proposed a decision-level fusion of a diverse ensemble of models (compared to the common multi-stream end-to-end fusion approaches) sophisticated classification schemes =&gt; highly compact classification scheme with four classes, commercial, residential, public, and industrial  Introduction  compared two model fusion strategies (two-stream end-to-end fusion network)  a geometric-level model fusion decision-level model fusion   A summary of the models and fusion strategies  Data and Method   Data\n we extracted geolocation and the attributions of building function annotated by volunteers from OSM. Then, the associated street view images and the overhead remote sensing images of each building instance were retrieved via BingMap API and Google Street View API using its geolocation    Building Classification Scheme/System\n  extracted the class of each building from the volunteered building tag from OSM\n  selected the 16 most frequently occurring building tags in our raw dataset and aggregated them into four cluster classes\n  follow a very basic but widely accepted classification scheme with four classes: commercial, industrial, public, and residential  Data Volume: 56,259 buildings with four images for each building (\u533a\u57df\u515a\uff1f\uff1f\u4e3a\u4ec0\u4e48\u8981\u5206\u533a\u57df\u5212\u5206\u6570\u636e\u96c6\u5462\uff1f)\n the images from the state of Wisconsin and Wyoming were used as validation samples (1943 buildings) Washington and West Virginia were used as test samples (2212 buildings) remaining 47 areas were used as training samples (52,104 buildings)      Method\n existing deep neural networks pre-trained on very large datasets: Places365 and ImageNet two-stream end-to-end fusing networks decision-level fusion  combines the softmax probabilities or the classification labels directly model blending and model stacking   \u4ed6\u7684Experiments and Discussion\uff08\u5305\u542b\u8bad\u7ec3\u53c2\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b\uff09\u53ef\u4ee5\u53c2\u8003\u4e0b\uff0c\u4ee5\u540e\u8bad\u7ec3\u7684\u7ecf\u9a8c    Conclusion  a decision-level fusion of street view and overhead images often outperforms a feature-level fusion, despite its simplicity we employed decision-level fusion strategies to achieve great performance without significantly altering the current network architecture  2020 - Deep learning-based remote and social sensing data fusion for urban region function recognition  ISPRS Journal of Photogrammetry and Remote Sensing https://doi.org/10.1016/j.isprsjprs.2020.02.014  \u672d\u8bb0  Introduction\u5199\u7684\u786e\u5b9e\u597d\uff0c\u611f\u89c9\u6ca1\u6709\u4e00\u53e5\u5e9f\u8bdd\u3002\u5f00\u5934\u7684\u80cc\u666f\u4ecb\u7ecd\u548c\u65b9\u6cd5\u3001\u6700\u540e\u7684\u6587\u7ae0\u603b\u7ed3\u90fd\u53ef\u4ee5\u7528\u4f5c\u6a21\u677f\u3002 \u5f88\u597d\u7684\u65b9\u6cd5\u7c7b\u8bba\u6587\u6a21\u677f  \u6807\u7b7e  \u591a\u6a21\u6001\uff1aRS + \u65f6\u95f4\u5e8f\u5217\u6570\u636e \u7aef\u5230\u7aef \u6539\u8fdb\u635f\u5931\u51fd\u6570  Abstract  Urban region function recognition effectively integrating the multi-source and multi-modal remote(\u591a\u6a21\u6001) and social sensing data remains technically challenging end-to-end deep learningbased remote and social sensing data fusion model two data sources are asynchronous (\u5f02\u6b65\u7684) simultaneously optimizing three costs classification cost cross-modal feature consistency (CMFC) cost cross-modal triplet (CMT) cost conducted on publicly available datasets: \u767e\u5ea6AI-\u57ce\u5e02\u533a\u57df\u529f\u80fd\u5206\u7c7b; \u98de\u6868\u5b98\u65b9\u57fa\u7ebf The results show that the seemingly unrelated physically sensed image data and social activities sensed signatures can indeed complement each other to help enhance the accuracy of urban region function recognition  Introduction  \u80cc\u666f - [\u4ece\u57ce\u5e02\u533a\u57df\u6709\u9650\uff0c\u57ce\u5e02\u4eba\u53e3\u81a8\u80c0\u89d2\u5ea6\u8bba\u8ff0\u80cc\u666f\uff0c\u53ef\u53c2\u8003] it is of great importance to monitor and manage the limited urban areas for such a huge population \u7814\u7a76\u95ee\u9898 - urban region function recognition VS land use and land cover (LULC) classification (\u5404\u6709\u5404\u7684\u8bf4\u6cd5\u5427)  LULC stresses on physical characteristics of the earth surface urban region function recognition focuses purely on socioeconomic functional attributes of urban regions region function recognition using remote sensing images alone is not sufficient   \u6570\u636e - [\u8fd9\u4e00\u6bb5\u5199\u7684\u86ee\u597d\uff0c\u903b\u8f91\u6027\u4e5f\u5f88\u5f3a]  social sensing big data  by-products of human daily life; contain rich socioeconomic attributes   When these data meet with remote sensing, the promising trend is to fuse them to recognize urban functions, since the two kinds of data are complementary to each other (\u8fd9\u53e5\u611f\u89c9\u5199\u7684\u86ee\u597d) [\u95ee\u9898\u6765\u4e86] remote and social sensing data are significantly different in terms of sources and modalities [\u5173\u952e\u5728\u4e8e\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898] The key challenge is to alleviate the modality gap and heterogeneity between them   \u65b9\u6cd5 - deep learning  powerful abilities to automatically learn high-level features from large amount of data   \u672c\u6587\u5de5\u4f5c\u53ca\u8d21\u732e  [\u8bbe\u8ba1\u6a21\u578b] end-to-end deep multi-modal fusion method [\u4e24\u79cd\u5904\u7406\u7f51\u7edc] two effective neural networks to extract temporal signature features automatically [\u4e24\u4e2acosts] two auxiliary losses =&gt; address the data asynchronous problem [\u8bbe\u8ba1\u5b9e\u9a8c\u5e76\u5206\u6790] conducted extensive experiments on open available datasets; analyze and discuss the results thoroughly to give insights into fusing the two multi-modal data   \u76f8\u5173\u5de5\u4f5c\u90e8\u5206\u4e00\u4e9b\u603b\u7ed3  Remote and social sensing data are of significantly different sources and modalities, they possess different information about urban land surface and are complementary to each other Most existing works use handcrafted features (\u624b\u5de5\u7279\u5f81), which require human experts and are laborious.    \u65b9\u6cd5\u548c\u6570\u636e  Framework image encoder =&gt; extract time-dependent features from time-series signature data temporal signature (TS) encoder Fusion methods: concatenation, element-wise sum, and element-wise max pooling. the fused feature is then fed into fully connected layers and softmax layer to make the final prediction. Loss functions  the major loss: cross entropy loss the auxiliary loss:  [\u4e24\u7c7b\u7279\u5f81\u5c3d\u91cf\u76f8\u4f3c(cos\u76f8\u4f3c\u6027)] cross-modal feature consistency (CMFC) loss: Analogous to document alignment, since both the image and signature data are indicative of (\u8c61\u5f81) the same urban function properties of the same region, there ought to be correlation between them in spite of different modalities. The CMFC loss enforces the features of image and signature to be consistent and similar with regard to vector orientation. [\r\u4e09\u5143\u7ec4triplet\u635f\u5931\u51fd\u6570] cross-modal triplet (CMT) loss: further utilizes the category information and tries to draw cross-modal features of the same class nearer, while push features of different classes far away        2020 - Recognizing urban functional zones by a hierarchical fusion method considering landscape features and human activities  Transactions in GIS https://doi.org/10.1111/tgis.12642  \u672d\u8bb0  Introduction\u5957\u8def\u6709\u70b9\u719f\uff0c\u800c\u4e14\u5199\u5f97\u611f\u89c9\u6709\u4e00\u70b9\u4e71 \u6240\u4ee5\u65b9\u6cd5\u7684\u6700\u540e\u4e00\u6b65Recognizing\u5230\u5e95\u662f\u600e\u4e48\u505a\u7684\u5462\uff1f\u5c31\u662f\u666e\u901a\u7684\u53e0\u52a0\u4ea7\u751f\u590d\u6742\u533a\u4e48\uff1f \u521b\u65b0\u7684\u5730\u65b9\u4e2a\u4eba\u611f\u89c9\u6ee1\u7275\u5f3a \u80fd\u5199\u51fa\u6765\u4e5f\u4e0d\u5bb9\u6613  \u6807\u7b7e  RS + POI + Taxi GPS Trajectories hierarchical fusion method  Abstract  functional zones two basic factors  urban landscape environment: provides the basic space for human activity and influences urban land use at a coarse scale human activities: indicates the differentiation of functions in local urban areas   In previous studies, the hierarchical correspondence and interaction (\u5c42\u6b21\u5bf9\u5e94\u5173\u7cfb\u548c\u76f8\u4e92\u4f5c\u7528) between urban landscape and human activities have not been given full consideration in the cognition of urban functional zones, which would influence the accuracy and interpretability of the results. a hierarchical fusion method  a land use classification based on urban landscape features from remote sensing images fine\u2010grained functional semantics of local urban areas are recognized based on human activity patterns extracted from crowdsourced data (i.e., points of interest and taxi trajectories) the above results at different scales are fused with hierarchical constraints   Results  Wuhan, China overall accuracy of the proposed method is 82.51% (accuracies of the mixed functional zones and single functional zones are 77.93 and 87.96%, respectively) compared with state\u2010of\u2010the\u2010art methods, the proposed method performed better for the recognition of mixed functional zones    Introduction  \u7b2c\u4e00\u6bb5  urban functional zone\u5b9a\u4e49 concept of functional zones\u4e0e\u4e24\u4e2a\u56e0\u7d20\u5bc6\u5207\u76f8\u5173\uff1a  urban landscape: determines the basic type of urban land use at a coarse\nscale (such as water, forest, built-up areas) human activities: indicate the differentiation of functions in finegrained urban regions (e.g. the built-up area at a coarse scale may consist of residential, commercial, industrial, or mixed land use zones)   urban functional zone maps\u7684\u91cd\u8981\u6027 =&gt; the functional zone maps are still hardly available in many cities The recognition of urban functional zones\u7684\u610f\u4e49 Numerous methods have been developed to cognize the functional zones based on remote sensing images and crowdsourced data  Remote sensing images  one of the commonly used data sources to detect urban land cover objects and land use classification forming the basis of semantic cognition of urban functional zones       \u7b2c\u4e8c\u6bb5  many studies based on remote sensing images most of these methods are based on the physical properties (such as spectral and textural features) of the objects, which makes it difficult to disclose the functional attributes of the urban areas  \u4f8b\u5b50: buildings in different urban areas may have different functions, such as residential, educational, and commercial buildings, which are hard to differentiate based only on the physical properties from remote sensing images   \u5f15\u51fa\u591a\u6e90\u6570\u636e\uff1ait is essential to work with multiple data sources for the recognition of urban functional zones, especially the crowdsourced data related to human activities   \u7b2c\u4e09\u6bb5  crowdsourced data Since different kinds of data can reflect different characteristics of urban functional zones, it is essential to integrate multi-source data to improve the accuracy of recognition of functional zones   \u7b2c\u56db\u6bb5  \u4ecd\u6709\u63d0\u5347\u7684\u7a7a\u95f4 Although many methods have been proposed for discovering urban functional zones, there is still space for improvement. From the perspective of urban morphology=&gt; the formation of urban functional zones =&gt; both the underlying landscape environment and human activities in urban space Most of the existing studies only focus on one aspect and neglect the integration of landscape and humanity in this paper =&gt; a hierarchical fusion approach  a new area-weighted proportion of POIs introduced information entropy =&gt; the combinational diversity of mixed functions comprehensive: integrating the underlying landscape features, spatial pattern of ground objects, and human activity patterns      \u65b9\u6cd5\u548c\u6570\u636e  \u6570\u636e  land patches: divided the area into 915 zones using the road network and the morphological partition algorithm of Yuan et al. (2012) Landsat-8 images downloaded from the Geospatial Data Cloud (http://www.gscloud.cn/sources) POIs: Gaode map taxi GPS trajectories: 8,141 taxies on May 8\u201314, 2017, with a total of 1.65 million trajectories   Methodology  \u4e09\u90e8\u5206\uff1aurban landscape classification, functional semantic feature extraction, and functional zone recognition  urban landscape classification  Remote sensing images  reflect the real state of the urban land cover, forming the basis of urban land use classify the urban landscape into different land use categories =&gt; \u201cwoodland,\u201d \u201cfarmland,\u201d \u201cwater,\u201d and \u201cbuilt-up\u201d areas spectral, texture, and spatial features  spectral descriptor: Mean, standard deviation, minimum, and maximum values of spectral features in a moving window (25 \u00d7 25 pixels) for each band of the image texture features: The gray-level co-occurrence matrix (GLCM) texture descriptor: four Haralick texture measures, including contrast, sum average, variance, and entropy in a moving window spatial descriptor: The area, compactness, and convexity measures       human activity features extraction  land use functional semantics extraction using a vote-based model  aggregated these POI types into six basic functional categories according to the Standard for Urban Land Classification and Land Use Planning for Construction (GB50137-2011) \u3010\u8fd9\u4e2a\u56fe\u86ee\u597d\u770b\u7684\uff0c\u4ee5\u540e\u53ef\u4ee5\u53c2\u8003\u3011 vote-based model to POIs  area-weighted proportion (AWP) of POIs \u3010POI\u4e0d\u662f\u70b9\u4e48\uff0c\u6709\u9762\u79ef\u4e48\u3011 Shannon&rsquo;s information entropy =&gt; measure the mixed degree of functional categories \u9608\u503c\u533a\u5206\u5355\u4e00\u7c7b\u578b\u548c\u590d\u6742\u529f\u80fd\u533a     Human mobility patterns detection and function inference  POI =&gt; only reveal the static semantic information of human activities Taxi GPS trajectory =&gt; dynamic human mobility patterns origin\u2013destination (OD) flows =&gt; 24-dimensional feature vector (F)  divided a day into 12 time periods F={O, D} normalized volumes   the fast nearest-neighbor (NN) classification model  the Pearson correlation coefficient is used to measure the similarity of feature vectors (F) of two urban zones manually labeled the functional categories of 915 urban zones       Functional zone recognition by hierarchical semantic fusion\u3010\u56fe\u53c2\u8003\u3011 Evaluation of results  the overall accuracy (OA) kappa coefficient      Results 2020-Mapping essential urban land use categories in China (EULUC-China):preliminary results for 2018  \u5bab\u9e4f Science Bulletin Short Communication https://doi.org/10.1016/j.scib.2019.12.007  \u672d\u8bb0  preliminary/initial results\uff1a\u4f5c\u8005\u5f3a\u8c03\u521d\u6b65\u7684\u5206\u7c7b\u7ed3\u679c\uff0c\u610f\u601d\u4f60\u61c2\u5427\uff08\u6211\u7684\u7ed3\u679c\u3001\u7cbe\u5ea6\u53ef\u80fd\u4e0d\u597d\uff0c\u4f46\u662f\u6211\u662f\u7b2c\u4e00\u4e2a\u505a\u5927\u5c3a\u5ea6\u7684\uff09 \u5206\u7c7b\u4f53\u7cfb\uff1aEssential(\u57fa\u672c) Urban Land Use Categories, EULUC \uff08\u53ef\u4ee5\u53c2\u8003\uff09 \u5206\u7c7b\u7ed3\u679c\u5171\u4eab\u4e86\uff0c\u5728\u8fd9\u91cc\uff1ahttp://data.ess.tsinghua.edu.cn/  \u6807\u7b7e  urban land use map for entire China  \u5185\u5bb9  \u7b2c\u4e00\u6bb5  Land use =&gt; Urban land use =&gt; widespread effects \u76ee\u524d\u96be\u9898\uff1a  maps, pattern and composition of various land use types in urban areas, are limited to city level The mapping standard on data sources, methods, land use classification schemes varies from city to city \u6311\u6218\uff1avarious national and global environmental challenges caused by urbanization   =&gt;\u6025\u9700\u65b9\u6848\uff1aurban land uses at the national and global scales that are derived from the same or consistent data sources with the same or compatible classification systems and mapping methods \u7136\u800c\uff0c\u73b0\u72b6\u662f\uff1a  a number of urban-extent maps exist at global scales, more detailed urban land use maps do not exist at the same scale consistent land use mapping efforts are rare     \u7b2c\u4e8c\u6bb5  \u57ce\u5e02\u571f\u5730\u5229\u6269\u5c55 =&gt; \u57ce\u5e02\u4e0d\u900f\u6c34\u9762 \u518d\u6b21\u5f3a\u8c03\u96be\u9898\uff1aHowever, we do not have a complete knowledge about the distribution, pattern and composition of more detailed land use types in urban China \u73b0\u6709\u5de5\u4f5c\uff1amore and more efforts have been made to map individual cities using a combination of remotely sensed data and open social data   \u7b2c\u4e09\u6bb5\uff0c\u672c\u6587\u5de5\u4f5c\uff1a=&gt; a new urban land use map for entire China  input features: 10-m satellite images, OpenStreetMap, nighttime lights, POI and Tencent social big data all in 2018 A two-level classification system: Essential Urban Land Use Categories, EULUC Training and validation samples are separately collected through a crowdsourcing approach present the initial results for producing EULUC of China   \u7b2c\u56db\u6bb5\uff0c\u6b65\u9aa4\u7b80\u8ff0\uff0cFour major procedures\uff1a parcel generation with OSM road network and impervious boundaries feature extraction from multisource geospatial big data crowdsourcing collection of training and validation samples mapping and accuracy assessment of EULUC-China   \u7b2c\u4e94\u6bb5\uff0cpolygon-based parcels\uff0c \u4ea4\u901a\u5206\u6790\u5c0f\u533a\u7684\u751f\u6210\u7ec6\u8282  represents a relatively homogeneous socioeconomic function(\u76f8\u5bf9\u540c\u8d28) polygons bounded by road networks backbone: buffered major roads and minor roads overlaying the parcel map with the impervious boundaries and the water layer =&gt; 440,798 urban parcels   \u7b2c\u516d\u6bb5\uff0cFour types of features\uff0c\u8f93\u5165\u7279\u5f81\u7684\u7ec6\u8282\uff08\u6570\u636e\uff1a\u7279\u5f81\uff09  10-m Sentinel-2A/B images: mean and standard deviations of blue, green, red, and near-infrared bands, normalized difference vegetation index, and normalized water index Tencent mobilephone locating-request (MPL) data: 8-h mean trajectories of the active population during weekdays and weekends 130-m Luojia-1 nighttime light images: mean value of digital number Gaode POI data: total number of all POIs, and total number and proportion of each type of POIs within each parcel   \u7b2c\u4e03\u6bb5\uff0ccrowdsourcing campaign for collecting training and validation samples\uff0c\u505a\u6807\u7b7e\uff0c\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6  21 research groups in 27 selected representative cities training sample collection  The selected training parcels are required to be typical and stable with low mixing of land uses   validation sample collection  randomly generate around 50 parcels in each city on-site survey: geolocations, Level I and II categories, landmark buildings and facilities, and mixed land use situation and their estimated proportions   1795 training sample parcels and 869 validation sample parcels in total with a high confidence   \u7b2c\u516b\u6bb5\uff0c\u6a21\u578b\u8bad\u7ec3 produce a parcel-level mapping of EULUC-China with the random forest (RF) classifier transportation lands\u6837\u672c\u91cf\u592a\u5c11\uff0c\u8bc4\u4ef7\u7684\u65f6\u5019\u6392\u9664 \u7b2c\u4e5d\u6bb5\uff0c\u7ed3\u679c\u7b80\u8ff0  R, C, P =&gt; clustered in urban cores I =&gt; distributed in suburban areas each city has its respective characteristics Statistically (\u53c2\u8003\u5206\u6790\u7ed3\u679c)  within the 166,338 km2 impervious area of China in 2018 residual lands account for 25.0%(41,576 km2) commercial lands account for 4.4% (7317 km2) industrial lands account for 40.6% (67,588 km2) transportation lands account for 11.2% (18,576 km2) public management and service lands account for 18.8% (31,281 km2)     \u7b2c\u5341\u6bb5\uff0c\u5168\u5c40\u7cbe\u5ea6\u8bc4\u4ef7  independent validation sample is 61.2% for Level I and 57.5% for Level II overall accuracy varies from 40.4% to 82.9% for Level I, and from 34.0% to 80.0% for Level II complexity of parcel-level land use, land use mixture =&gt; an impact on the performance of the validation process RETIO: Residential, Entertainment, Transportation, Industrial, and Office   \u7b2c\u5341\u4e00\u6bb5\uff0c the contribution of different types of features, \u7279\u5f81\u8d21\u732e\u7387  Compared with the use of POIs only: remotely sensed data and social big data help further improve the overall classification accuracy (~7%) quantify the variable importance in random forest model in terms of mean decrease of accuracy and mean decrease of Gini coefficient =&gt; POI has the greatest contribution, followed by Sentinel-2 multispectral features, Luojia-1 and Tencent features   \u7b2c\u5341\u4e8c\u6bb5\uff0c\u7efc\u5408\u8bc4\u4ef7\u53ca\u5c55\u671b  mark the beginning of a new way of collaborative urban land use mapping over large areas weakness of crowdsourcing  \u6591\u5757\u5212\u5206\u65b9\u5f0f\u6539\u8fdb\uff0cquality improvement of parcels: finer division of existing parcels with the help of more detailed road networks and image segmentation techniques has good potential =&gt; \u66f4\u52a0\u7cbe\u7ec6\u7684\u6591\u5757\u5212\u5206 \u66f4\u4e3a\u7cfb\u7edf\u7684\u91c7\u6837\u3001\u7279\u5f81\u53ca\u7b97\u6cd5\uff0csystematic testing of samples, features, and algorithms: Knowledge about the impact of sample size and feature combinations on classification performance \u8f6f\u5206\u7c7b\u7b56\u7565\uff0chard and soft classification strategies: expand classification from the current dominant-class only to multiple-class per-parcel classification      2020-DFCNN-Based Semantic Recognition of Urban Functional Zones by Integrating Remote Sensing Data and POI Data  Remote Sensing https://www.mdpi.com/2072-4292/12/7/1088  2020-Understanding Place Characteristics in Geographic Contexts through Graph Convolutional Neural Networks   Refer: Annals of the American Association of Geographers\n  AAAAA\n  Place Characteristics; Geographic Contexts; Graph convolutional neural networks (GCNNs)\n  Abstract:\n both its observed attributes and the characteristics of the places to which it is connected spatial prediction task: predict the unobserved place characteristics based on the observed properties and specific place connections GCNNs capture the knowledge of the relevant geographic context A series of comparative experiments formalizing places for geographic knowledge representation and reasoning    Introduction\n place characteristics places are not isolated but are connecthsed ti each other the contextual information for a place (i.e., its connection to other places) is crucial to understand its characteristics place conncetions =&gt; the measures between places (distance, adjacency and spatial interactions) [\u4e3a\u4ec0\u4e48\u4f1a\u63d0\u5230\u5730\u7406\u7a7a\u95f4\u5c42\u6b21\u7684\u4e0a\u4e0b\u6587\u5462\uff1f\u6211\u7406\u89e3\uff0c\u6b63\u5982\u4f5c\u8005\u6240\u8a00\uff0c\u5bf9\u4f4d\u7f6e\u5730\u70b9\u5c5e\u6027\u7684\u9884\u6d4b\uff0c\u4e0d\u4ec5\u4ec5\u4f9d\u8d56\u4e8e\u8be5\u5730\u70b9\u7684\u89c2\u6d4b\u53d8\u91cf\uff0c\u540c\u65f6\u8fd8\u7531\u8be5\u5730\u70b9\u5468\u8fb9/\u76f8\u8fde\u63a5\u7684\u5730\u70b9\u7684\u89c2\u6d4b\u5c5e\u6027\u51b3\u5b9a\u3002\u8fd9\u91cc\u7684\u5468\u8fb9/\u76f8\u8fde\u63a5\uff0c\u5bf9\u5e94\u7740\u4f5c\u8005\u8bba\u8ff0\u7684\u5730\u7406\u7a7a\u95f4\u4e0a\u4e0b\u6587]geographic contexts =&gt; The prediction of a place\u2019s unknown characteristic relies on both the place\u2019s observed characteristics and the characteristics of the places to which it is connected. [\u8fd9\u91cc\u5f15\u5165\u4e86GCNN,\u63d0\u5230\u51e0\u4e2a\u5173\u952e\u8bcd:aggregation,neighbors,contextual infformation]process the connection information: GCNNs generally follow an aggregation scheme where each node aggregates characteristics of its neighbors to learn a deep representation of the contextual information each place is represented as a node, place characteristics are the node features to be computed, and place connections are represented as the graph edges Introduction\u90e8\u5206\u53ef\u4ee5\u8bf4\u77ed\u5c0f\u7cbe\u608d\u4e86,\u5185\u5bb9\u4e0d\u591a\u4f46\u662f\u8bba\u70b9\u9610\u8ff0\u7684\u5f88\u6e05\u695a\u3002  \u7b2c\u4e00\u6bb5\u901a\u8fc7place\u5f15\u5165place characteristic\u7684\u6982\u5ff5\uff0c\u4e3a\u540e\u9762\u505a\u94fa\u57ab\uff1b \u7b2c\u4e8c\u6bb5\u8bf4place\u4e0d\u662f\u5b64\u7acb\u7684\u800c\u662f\u76f8\u8fde\u7684\uff0c\u5f15\u5165\u4e86place connection\u7684\u6982\u5ff5\uff1b \u7b2c\u4e09\u6bb5\u5c31\u7528\u5230\u4e86\u4e0a\u9762\u4e24\u4e2a\u6982\u5ff5\u7684\u94fa\u57ab\u4e86\uff0c\u4ed6\u8bf4place characteristic\u7684\u9884\u6d4b\u4e0d\u4ec5\u548c\u81ea\u8eab\u7684\u89c2\u6d4b\u53d8\u91cf\u6709\u5173\uff0c\u8fd8\u548c\u76f8\u90bb\u7684(connected)\u7684\u5730\u70b9\u7684\u7279\u5f81\u76f8\u5173\uff0c\u7136\u540e\u4ecb\u7ecd\u4e86\u4e24\u4e2ameasure connection\u7684\u7814\u7a76\u3002\u7136\u540e\u5c31\u662f\u8bf4\u9053\u7814\u7a76\u7684\u5c40\u9650\u6027\uff0c\u5c40\u9650\u6027\u5176\u5b9e\u4ed6\u8868\u8ff0\u4e86\u6bd4\u8f83\u591a\u7684\u65b9\u9762\uff0c\u4e5f\u53ef\u80fd\u662f\u6211\u7406\u89e3\u7684\u6bd4\u8f83\u62bd\u8c61\uff0c\u8fd9\u4e00\u6bb5\u7684\u5185\u5bb9\u53ef\u80fd\u6bd4\u8f83\u5173\u952e,\u56e0\u4e3a\u4ed6\u628a\u4e24\u4e2a\u6982\u5ff5\u7a7f\u4e86\u8d77\u6765\uff0c\u5e76\u4e14\u5f15\u51fa\u4e86\u672c\u6587\u7684\u7814\u7a76\u70b9\uff1b \u7b2c\u56db\u6bb5\u7406\u89e3\u4e0a\u5c31\u6bd4\u8f83\u7b80\u5355\u5199\u4e86\uff0c\u5f15\u5165GCNN\u5bf9\u4e8e\u89e3\u51b3model connection\u7684\u95ee\u9898\u5f88\u6709\u6548\uff1b \u7b2c\u4e94\u6bb5\u7b80\u4ecb\u81ea\u5df1\u7684\u7814\u7a76\u5185\u5bb9\u3002      Methodology\n Building the Place-Based Graph Predicting Place Characteristics Using GCNNs    Case Study\n Study Area Data Preparation  Delineating Place Boundaries. Quantifying Place Characteristics.   A GCNN Model to Predict Places\u2019 Functional Features    \u6211\u628a\u4ed6\u65b9\u6cd5\u8bba\u548cCase Study\u7684\u90e8\u5206\u5217\u51fa\u6765\u662f\u60f3\u8bf4\u4ed6\u8fd9\u4e24\u90e8\u5206\u7684\u5212\u5206\u6211\u6709\u70b9\u770b\u4e0d\u61c2\u3002\u65b9\u6cd5\u8bba\u90e8\u5206\u63d0\u53d6\u51fa\u6765\uff0c\u7136\u540eCase Study\u53bb\u8bb2\u5177\u4f53\u7684\u6b65\u9aa4\u3002\u901a\u5e38\u7684\u6587\u7ae0\u91cc\u9762\u90fd\u4e0d\u5206\u5f00\u5427\uff1f\u6216\u8005\u5177\u4f53\u7684\u6b65\u9aa4\u653e\u5728implementation\u91cc\u9762\uff1f\n  2020-Urban Function as a New Perspective for Adaptive Street Quality Assessment  Refer: Sustainability A Abstract  Street Quality Assessment =&gt; managing natural and public resources, organizing urban morphologies and improving city vitality from the perspective of the variation in urban functions urban function detection + urban function-driven multilevel street quality assessment   Introduction  assess street networks =&gt; enriches the current description of street networks and enhances the evaluation of street network performance these studies have discussed greenery, mobility patterns, and land-use connectivity but ignored the different urban functions that each type of street serves [\u9759\u6001\u7684\uff1f]the detection of urban functions in most research is static commercial, residential and traffic functions    ",
        "description": "",
        "id": 52,
        "section": "posts",
        "tags": [
            "\u57ce\u5e02\u529f\u80fd\u533a",
            "\u7279\u5f81\u878d\u5408",
            "\u8bba\u6587\u9605\u8bfb"
        ],
        "title": "Papers Reading:Urban functions/Urban land use",
        "uri": "/2020/10/21/102/"
    },
    {
        "content": " \u732e\u7ed9\u5341\u6708\u4efd\uff1a\u76f8\u9047\u3002\u6536\u83b7\u3002\u79ef\u7d2f\u3002\u611f\u52a8\u3002\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u7406\u60f3\u4e09\u65ec\",\rartist: \"\u9648\u9e3f\u5b87\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC-0ffca5.mp3\",\rcover: \"https://p1.music.126.net/cqTTEPAaxXG3cOwaE4E_-g==/109951163104103366.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%90%86%E6%83%B3%E4%B8%89%E6%97%AC-%E9%99%88%E9%B8%BF%E5%AE%87-411d88-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.10.1 \u5728\u5d07\u9633\uff0c\u5b59\u7e41\u7ed3\u5a5a\uff0c\u6211\u548c\u9648\u6d69\u505a\u4f34\u90ce\uff1b\u5cb3\u9633\u697c\u4e00\u65e5\u6e38\uff0c\u4e0e\u4f60\u76f8\u9047\u3002\u53ef\u601c\u5e0c\u5e0cjio\u53c8\u7d2b\u53c8\u80bf\uff1b\u7b2c\u4e94\u5929\u3002 2020.10.2 \u5728\u5f20\u5bb6\u8205\u8205\u8205\u5988\u7684\u5e26\u9886\u4e0b\uff0c\u4e0e\u5bb6\u4eba\u4e00\u8d77\u6e38\u73a9\u5185\u51b2-\u7476\u65cf\u53e4\u9547\u3002\u4e91\u95f4\u8d77\u76f8\u601d\uff1b\u7b2c\u516d\u5929\u3002 2020.10.3 \u51c6\u5907\u5bb4\u5e2d\u3001 2020.10.4 \u5f00\u5bb4\uff1b\u7b2c\u516b\u5929\u3002 2020.10.5 \u8fd4\u6821\uff1b\u54c8\u54c8\uff0c\u8bba\u6587\u5c0f\u4fee\u5566\uff0c\u8fd9\u6b21\u662f\u771f\u7684\u201c\u5c0f\u4fee\u201d~\uff1b\u7b2c\u4e00\u5929\u3002 2020.10.6 \u597d\u51b7\uff0c\u660e\u5929\u7a7f\u79cb\u88e4!? 2020.10.7 Idea: using street view image to evaluate urban road safety; \u7b2c\u4e09\u5929 2020.10.8 \u79d1\u62a5\u4f1a\uff1b\u7b2c\u56db\u5929\u3002 2020.10.9 \u6700\u7f8e\u7684\u4eba\u5728\u548c\u4f60\u804a\u5929?\uff1b\u7b2c\u4e94\u5929\u3002 2020.10.10 \u7533\u8bf7\u53c2\u8bc4\u201c\u9ad8\u6821GIS\u65b0\u79c0\u201d 2020.10.11 GS\u8001\u5e08\u5e2e\u6211\u8be6\u7ec6\u4fee\u6539\u4e86\u7a3f\u4ef6\uff0c\u9010\u5b57\u9010\u53e5\u3002\u83ab\u540d\u7684\u611f\u52a8\u3002\u524d\u4e24\u5929\u8fd8\u8ddfWJ\u5f00\u73a9\u7b11\uff0c\u81ea\u5df1\u5199\u7684\u8bba\u6587\uff0c\u9664\u4e86\u81ea\u5df1\u548c\u6da6\u8272\u7f16\u8f91\u4f1a\u9010\u5b57\u9010\u53e5\u9605\u8bfb\u6ca1\u4eba\u4f1a\u8ba4\u771f\u770b\u3002\u771f\u5fc3\u7684\u611f\u6fc0~ 2020.10.12 \u8981\u9884\u7ea6\u75ab\u82d7\u561b 2020.10.13 Elastic + kibana\u7684\u53ef\u89c6\u5316\u771f\u7684\u662f\u592a\u597d\u7528\u5566 2020.10.14 You deserve better; \u4eca\u5929\u628a\u5c0f\u7c73pro\u6362\u4e0a\u4e86Mac\u7cfb\u7edf\uff0c\u548c\u62ef\u6551\u8005\u642d\u914d\u4f7f\u7528\uff0c\u653e\u5728\u5bbf\u820d\u95f2\u7740\u592a\u6d6a\u8d39\u8d44\u6e90\u5566 2020.10.15 fast.io\u8981\u53d6\u6d88\u514d\u8d39\u5957\u9910\uff0c\u597d\u4e0d\u5bb9\u6613\u627e\u5230\u4e00\u4e2a\u597d\u7528\u7684\u5916\u94fe\u5e8a\u3002\u54ce\u3001 2020.10.16 \u6211\u662f\u4e0d\u662f\u592a\u95f2\u4e86? 2020.10.17 \u6211\u542c\u94a2\u7434\u66f2\u5355\u7eaf\u662f\u4e3a\u4e86\u53d1\u5446 2020.10.18 Jellyfin\u642d\u5efa\u5bb6\u5ead\u5f71\u9662\uff1bdocker\u642d\u5efa\r\u5728\u7ebf\u97f3\u4e50\u64ad\u653e\u5668;\u597d\u597d\u5b66\u4e00\u4e0b\u7a7f\u642d:https://www.zhihu.com/question/25464960/answer/487926263 2020.10.19 \u6211\u90fd\u662f\u70c2\u5728\u9aa8\u5b50\u91cc\u7684\u4eba\u4e86 \u4e00\u9897\u5e72\u51c0\u7eaf\u7cb9\u7684\u5fc3\u8fd8\u70ed\u7231\u7740\u4f60\u5462 2020.10.20 \u5c0f\u7406\u60f3\rMacBook Pro 13.3 \u270a 2020.10.21 \u60f3\u501f\u6765\u5168\u57ce\u7535\u529b\uff0c\u6211\u4eec\u7ea6\u5b9a\u6697\u53f7\uff0c\u4f60\u4e00\u8def\u7684\u706f\u6ce1\u660e\u706d\u4e09\u4e0b\uff0c\u77ed\u957f\u77ed\uff0c\u4fbf\u662f\u201c\u6211\u60f3\u4f60\u201d\uff0c\u4f60\u62ac\u5934\u770b\u770b\uff0c\u6574\u4e2a\u661f\u7a7a\u4e5f\u4f1a\u8ddf\u7740\u4e00\u8d77\u8fce\u5408\u7740\u6b22\u5feb\u95ea\u70c1\u3002 -\u70ed\u5e26\u6c7d\u6c34 2020.10.22 \u591c\u665a\u7684\u957f\u5ea6\u4f1a\u88ab\u65e0\u9650\u62c9\u957f \u665a\u98ce\u4e00\u904d\u4e00\u904d\u9677\u5165\u5faa\u73af \u5f02\u5e38\u7684\u9ad8\u6e29\u4e0d\u582a\u52a0\u73ed\u4e4b\u82e6 \u5730\u7403\u9000\u70e7 \u53cd\u5b63\u800c\u6765\u7684\u66b4\u96e8\u53d8\u5f97\u5306\u5306 \u4f46\u6211\u4e0d\u5728\u4e4e\u8fd9\u4e9b\u73a9\u610f\u513f \u4e0d\u60f3\u5173\u5fc3\u6e29\u5ba4\u6548\u5e94\u4e16\u754c\u548c\u5e73\u5b87\u5b99\u7206\u70b8 \u6211\u53ea\u60f3\u4f60\u5728\u54ea\u5728\u5e72\u561b 2020.10.23 \u5c31\u662f\u5f88\u611f\u52a8\u554a? 2020.10.24 \u7ec4\u961f\u53bb\u516c\u53f8\u9644\u8fd1\u7684\u8e66\u5e8a\u4f53\u9a8c\u9986 \u6ee1\u8db3\u4f60\u6240\u6709\u597d\u5947\u5fc3 2020.10.25 \u540e\u77e5\u540e\u89c9 2020.10.26 \u6d77\u6d0b\u662f\u7403\u9762\u7684\uff0c\u6e05\u6668\u6211\u4eec\u51fa\u53d1\uff0c\u5e26\u4e0a\u9152\u548c\u72d7\uff0c\u987a\u7740\u5b63\u98ce\u4e00\u76f4\u5411\u5357\uff0c\u518d\u5411\u5357\uff0c\u7a7f\u8fc7\u6d6e\u7a7a\u7684\u68d5\u6988\u5c9b\u5c7f\u3001\u4e94\u5f69\u9713\u8679\u706f\u8272\u7684\u6c34\u6bcd\u7fa4\u3001\u55b7\u5c04\u51b0\u84dd\u8272\u706b\u7130\u7684\u9cb8\u9c7c\u3001\u6c34\u9762\u4e0a\u5347\u8d77\u7684\u4ed9\u540e\u5ea7\u03b1\u661f\u3001\u5531\u7740\u6b4c\u7684\u963f\u523b\u6d1b\u4f0a\u5f97\u65af\uff0c\u508d\u665a\u5c31\u53ef\u4ee5\u5230\u5bb6\u3002 2020.10.27 \u6587\u7ae0\u7ec8\u4e8e\u4e2d\u5566~ \u5bf9\u4e8e\u79d1\u7814\u5de5\u4f5c\u8005\uff0c\u6700\u4ee4\u4eba\u5174\u594b\u7684\u4e00\u53e5\u8bdd\u83ab\u8fc7\u4e8e\u201cI am pleased to inform you that your manuscript has been accepted for publication. \u201d 2020.10.28  \u4f59\u79c0\u534e\u300a\u7ed9\u4f60\u300b\n\u4e00\u5bb6\u6734\u7d20\u7684\u8336\u9986\uff0c\u9762\u524d\u76ee\u5149\u6734\u7d20\u7684\u4f60\u7686\u4e3a\u6211\u559c\u6b22\n\u4f60\u7684\u80e1\u5b50\uff0c\u6628\u591c\u8f97\u8f6c\u7684\u9762\u8272\u8ba9\u6211\u5fe7\u4f24\n\u6211\u60f3\u5e26\u7ed9\u4f60\u7684\uff0c\u4e00\u8def\u5df2\u7ecf\u4e22\u5931\u5f97\u5dee\u4e0d\u591a\n\u9664\u4e86\u7a97\u5916\u51cb\u8c22\u7684\u6625\u8272\n\u9047\u89c1\u4f60\u4ee5\u540e\uff0c\u4f60\u4e0d\u505c\u5730\u7231\u522b\u4eba\uff0c\u4e00\u4e2a\u63a5\u4e00\u4e2a\n\u6211\u6ca1\u6709\u8d44\u683c\u5403\u918b\uff0c\u53ea\u80fd\u4e00\u6b21\u6b21\u9003\u4ea1\n\u6240\u4ee5\u4e00\u76f4\u6d3b\u7740\uff0c\u662f\u4e3a\u7b49\u4f60\u5e74\u66ae\n\u7b49\u4eba\u7fa4\u6563\u5c3d\uff0c\u7b49\u4f60\u7075\u9b42\u7684\u706b\u7130\u53d8\u4e3a\u7070\u70ec\n\u6211\u7231\u4f60\uff0c\u6211\u60f3\u62b1\u7740\u4f60\n\u62b1\u4f60\u5728\u4eba\u4e16\u91cc\u88ab\u9500\u8680\u7684\u8089\u4f53\n\u6211\u539f\u8c05\u4f60\u4e3a\u4e86\u5979\u4eec\u4e00\u6b21\u6b21\u4f24\u5bb3\u6211 \u56e0\u4e3a\u6211\u7231\u4f60\n\u6211\u4e5f\u6709\u8fc7\u6b32\u671b\u7684\u76db\u5e74\uff0c\u6709\u8fc7\u8eab\u5fc3\u4ff1\u88c2\u7684\u8bb8\u591a\u591c\u665a\n\u4f46\u662f\u6211\u4ece\u672a\u653e\u9010\u8fc7\u81ea\u5df1 \u6211\u8981\u6211\u7684\u8eab\u4f53\u548c\u5fc3\u4e00\u6837\u5e72\u51c0\n\u5c3d\u7ba1\u8fd9\u6837\uff0c\u5e76\u4e0d\u662f\u4e3a\u4e86\u89c1\u5230\u4f60 \u592a\u96be\u4e86\uff0c\u7ec8\u4e8e\u901a\u5173\u4e00\u6b21\u4e86\uff0c\u8fd8\u662f\u7528\u7684\u62f3\u5957\uff0c\u51c6\u786e\u8bf4\u5e94\u8be5\u662f\u96f7\u7535-\u51b0-\u6295\u63b7\u6d41~   2020.10.29 \u8bb0\u5f97\u65e9\u5148\u5e74\u5c11\u65f6 \u5927\u5bb6\u8bda\u8bda\u6073\u6073 \u8bf4\u4e00\u53e5 \u662f\u4e00\u53e5\uff1b\u6e05\u65e9\u4e0a\u706b\u8f66\u7ad9 \u957f\u8857\u9ed1\u6697\u65e0\u884c\u4eba \u5356\u8c46\u6d46\u7684\u5c0f\u5e97\u5192\u7740\u70ed\u6c14\uff1b\u4ece\u524d\u7684\u65e5\u8272\u53d8\u5f97\u6162 \u8f66\uff0c\u9a6c\uff0c\u90ae\u4ef6\u90fd\u6162 \u4e00\u751f\u53ea\u591f\u7231\u4e00\u4e2a\u4eba\uff1b\u4ece\u524d\u7684\u9501\u4e5f\u597d\u770b \u94a5\u5319\u7cbe\u7f8e\u6709\u6837\u5b50 \u4f60\u9501\u4e86 \u4eba\u5bb6\u90fd\u61c2\u4e86 -\u6728\u5fc3\u300a\u4ece\u524d\u6162\u300b 2020.10.30  The Corpse Bride\nWith this hand, I will lift your sorrows.\nYour cup will never empty, for i will be your wine.\nWith this candle, I will light your way in darkness.\nWith this ring, I ask you to be mine. \u50f5\u5c38\u65b0\u5a18\n\u4ee5\u6211\u7684\u624b\uff0c\u6765\u629a\u5e73\u4f60\u7684\u4f24\u60b2\u3002\n\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u611f\u5230\u5b64\u5bc2\uff0c\u56e0\u4e3a\u6211\u4f1a\u65f6\u523b\u4e0e\u4f60\u76f8\u4f34\u3002\n\u4ee5\u8fd9\u70db\u5149\uff0c\u6211\u4f1a\u4e3a\u4f60\u7167\u4eae\u6f2b\u6f2b\u524d\u8def\u3002\n\u4ee5\u8fd9\u6212\u6307\uff0c\u6211\u8bf7\u6c42\u4f60\u5c06\u4eba\u751f\u6258\u4ed8\u4e8e\u6211\u3002   2020.10.31 \u4eca\u5929\u5728\u62a5\u544a\u5385\u770blol S10\u603b\u51b3\u8d5b\uff0c\u7b2c\u4e00\u6b21\u611f\u53d7\u5927\u5bb6\u4e00\u8d77\u547c\u558a\u52a0\u6cb9\u7684\u6c14\u6c1b\uff0c\u5145\u6ee1\u70ed\u60c5\uff0c\u6709\u4e9b\u611f\u52a8  ",
        "description": "",
        "id": 53,
        "section": "posts",
        "tags": null,
        "title": "2020-10",
        "uri": "/posts/journals/2020-10-01-2020-10/"
    },
    {
        "content": " \u56fd\u5956\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"Attention\",\rartist: \"Charlie Puth\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/attention-062438.mp3\",\rcover: \"https://p1.music.126.net/78Lp0bu8KAVSNdtlNam0IQ==/109951164204025015.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/Attention-Charlie%20Puth-366df2-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.9.1 \u504f\u50fb\u7684\u672a\u6765\u57ce\u6821\u533a\u4e00\u4e0b\u5b50\u6765\u4e86\u8fd9\u4e48\u591a\u4eba\uff0c\u597d\u4e0d\u70ed\u95f9\u3001 2020.9.2 \u53c2\u8003\u522b\u4eba\u7684\u51fa\u79df\u8f66\u5904\u7406\u6d41\u7a0b\u8dd1\u4e86\u4e00\u904d\u3002\u522b\u4eba\u5904\u7406\u6570\u636e\u53ea\u9700\u51e0\u5206\u949f\uff0c\u4f60\u5904\u7406\u540c\u6837\u6570\u636e\u5199\u7684\u4ee3\u7801\u5374\u9700\u8981\u51e0\u4e2a\u5c0f\u65f6\uff0c\u4e5f\u662f\u9189\u4e86 2020.9.3 \u662f\u4ec0\u4e48\u8ba9\u4f60\u6211\u8d8a\u53d1\u7684\u758f\u8fdc\u3001 2020.9.4 \u5b9e\u9a8c\u5ba4\u4eba\u624b\u4e00\u4e2a\u673a\u68b0\u952e\u76d8\uff0c\u592a\u5435\u4eba\u4e86\uff01 2020.9.5 1) \u665a\u4e0a\u7761\u4e0d\u7740\uff0c\u65e9\u4e0a\u8d77\u4e0d\u6765\ud83d\udc3c; 2) that is your cage. 2020.9.6 \u6211\u53c8\u4e0d\u8106\u5f31 2020.9.7 \u518d\u8dd1\u6b655\u6b21\u5dee\u4e0d\u591a\u53ef\u4ee5\u51d1\u591f\u7b2c\u4e00\u4e2a100\u516c\u91cc\u4e86~ 2020.9.8 \u8ddf\u7504\u535a\u58eb\u591c\u804a\u611f\u60c5\uff0c\u6211\u8868\u793a\u538c\u5026\u8ffd\u6c42\uff0c\u4f1a\u89c9\u5f97\u8fc7\u7a0b\u5f88\u7d2f\uff0c\u4e14\u4ed8\u51fa\u4e0d\u4e00\u5b9a\u4f1a\u6709\u56de\u62a5\uff1b\u800c\u4ed6\u5374\u8bf4\u975e\u5e38\u559c\u6b22\u8ffd\u6c42\u5973\u751f\u8fc7\u7a0b\u4e2d\u7684\u65b0\u9c9c\u611f\uff0c\u5e76\u4f1a\u611f\u89c9\u5230\u523a\u6fc0\uff0c\u4ed6\u4f1a\u8868\u73b0\u7684\u4e3b\u52a8\ud83c\udf1a 2020.9.9 \u6536\u5230\u7eb8\u8d28\u7684CSC\u6d3e\u51fa\u6587\u4ef6\uff0c\u4e2d\u6587\u3001\u82f1\u6587\u6b63\u5f0f\u5199\u7740\u6211\u7684\u540d\u5b57\uff0c\u6807\u660e\u6211\u7684\u8eab\u4efd\u3002\u6211\u9010\u5b57\u9010\u53e5\u7684\u9605\u8bfb\uff0c\u751f\u6015\u9519\u8fc7\u90a3\u4e00\u4e2a\u7ec6\u8282\u3002\u52aa\u529b\u53ef\u4ee5\u6536\u5230\u56de\u62a5\uff0c\u81f3\u5c11\u5728\u5b66\u4e1a\u4e0a\u3001\u4e8b\u4e1a\u4e0a\u662f\u65e0\u7591\u7684\u3002\u81ea\u52c9\uff0c\u613f\u81ea\u5df1\u53ef\u4ee5\u66f4\u52a0\u52aa\u529b\uff01 2020.9.10 \u6625\u534e\u79cb\u5b9e\u590f\u8749\u51ac\u96ea 2020.9.11 \u559d\u5496\u5561\u7761\u4e0d\u7740 \u4e0d\u559d\u5496\u5561\u7761\u5f97\u9999 \u8fd9\u662f\u8981\u6212\u5496\u5561\uff1f 2020.9.12 \u6b63\u76f4\uff0c\u8c26\u900a\uff0c\u7eaf\u771f\uff0c\u52c7\u6562 2020.9.13 \u5176\u5b9e\u6ca1\u4ec0\u4e48\u611f\u89c9 \u53cd\u6b63\u8fd9\u4e2a\u4e16\u754c\u4e0a\u6ca1\u6709\u8c01\u80fd\u4e00\u76f4\u79bb\u4e0d\u5f00\u8c01 \u6211\u4e5f\u4e0d\u592a\u9700\u8981\uff1b\u7b2c\u4e00\u5929\uff1b\u62ff\u5f97\u8d77\uff0c\u653e\u5f97\u4e0b\u3002\u5b66\u4f1a\u653e\u5f03\uff0c\u63a7\u5236\u6b32\u671b\u3002 2020.9.14 \u51fa\u53bb\u770b\u4e86\u4e2a\u7535\u5f71\uff0c\u534a\u5e74\u4e86\u7b2c\u4e00\u6b21\u5728\u7535\u5f71\u9662\u770b\u7535\u5f71\u5427\uff0c\u5403\u4e86\u4e2a\u70e4\u9c7c\u8fd8\u88ab\u8001\u677f\u201c\u902e\u201d\u5230\uff1b\u7b2c\u4e8c\u5929\uff1b\u62e5\u62b1\u8fc7\u540e\u6211\u7684\u53cc\u624b\u5e94\u8be5\u653e\u5728\u54ea\u91cc\u3002 2020.9.15 \u4eca\u5929\u548c\u8001\u5e08\u65b0\u751f\u805a\u9910\uff0c\u804a\u4e86\u86ee\u591a\uff0c\u6709\u5f90\u8001\u5e08\u5728\uff0c\u6ca1\u6709\u60f3\u8c61\u4e2d\u90a3\u4e48\u5c34\u5c2c\u3002\u548c\u8001\u677f\u95f2\u804a\u86ee\u591a\uff0c\u4ed6\u8bb2\u4e86\u5f88\u591a\u8bfb\u4e66\u65f6\u5019\u7684\u4e8b\u60c5\uff0c\u86ee\u6709\u610f\u601d\u7684~\u8fd8\u6709\u5c31\u662f\u8001\u677f\u7adf\u7136\u662f\u8dd1\u6b65\u51cf\u80a5\u7684\uff0c\u4ed6\u6bcf\u5929\u65e9\u4e0a10km\uff01\u592a\u4e0d\u53ef\u601d\u8bae\u4e86\u3002\u4f46\u662f\u8f6c\u5ff5\u60f3\u60f3\u6211\u4e5f\u6709\u5e0c\u671b\u4e86\uff0c\u65e9\u4e0a\u8dd1\u6b65\u786e\u5b9e\u8981\u86ee\u591a\u6bc5\u529b\u7684\uff0c\u53ef\u4ee5\u8bd5\u4e00\u4e0b\u65e9\u70b9\u7761\u89c9\uff0c\u65e9\u4e0a\u8d77\u6765\u8dd1\u6b65\ud83c\udfc3\uff1bRestart, \u7b2c\u4e00\u5929\u3002 2020.9.16 \u4e00\u573a\u96e8 \u628a\u6211\u56f0\u5728\u8fd9\u91cc\uff1b\u7b2c\u4e8c\u5929\u3002 2020.9.17 \u7b2c\u4e09\u5929\u3002 2020.9.18 \u590d\u73b0\u4e86\u4e00\u4e2a\u89c6\u9891\u884c\u4eba\u68c0\u6d4b\rReal-time_multi-person_tracker\u7684\u4ee3\u7801\uff0c \u4f7f\u7528Yolov5 + Deep Sort with PyTorch\uff1bRestart, \u7b2c\u4e00\u5929\u3002 2020.9.19 \u5bf9\u6211\u4eec\u666e\u901a\u4eba\u6765\u8bf4\uff0c\u65e0\u8bba\u5728\u5927\u57ce\u5e02\u8fd8\u662f\u5c0f\u57ce\u5e02\uff0c\u90fd\u6709\u5f88\u591a\u9700\u8981\u53bb\u52aa\u529b\u548c\u6539\u53d8\u7684\u4e8b\uff0c\u4e0d\u5b58\u5728\u4e00\u52b3\u6c38\u9038\u7684\u9009\u62e9\u548c\u4eba\u751f\u3002 - From \u5170\u5361lanka08\uff1b \u7b2c\u4e8c\u5929\u3002 2020.9.20 Make it happen\uff1b\u7b2c\u4e09\u5929\u3002 2020.9.21 \u8fde\u7eed\u591a\u65e5\u7684\u5c0f\u96e8 \u662f\u5c0f\u5b69\u5b50\u6f6e\u6e7f\u7684\u574f\u813e\u6c14\uff1b\u4eca\u5929\u8def\u4e0a\u89c1\u5230\u5979\uff0c\u8fd8\u662f\u4e00\u89c1\u503e\u5fc3\uff0c\u5374\u6ca1\u6709\u52c7\u6c14\u518d\u63d0\u8ffd\u6c42\uff0c\u6216\u8bb8\u5979\u4e5f\u5728\u7b49\u6211\u5f00\u53e3\u5462\uff1fBy any chance&hellip;\uff1b \u7b2c\u56db\u5929\u3002 2020.9.22 Enclosed please find the manuscript. \u4e00\u5c01\u90ae\u4ef6\u5199\u4e86\u4e00\u4e2a\u591a\u5c0f\u65f6\ud83d\udce7\uff1b \u7b2c\u4e94\u5929\u3002 2020.9.23 \u6e23\u7537\u8bed\u5f55\uff1a\u5403\u4e86\u6ca1\uff0c\u65e9\u70b9\u7761\uff0c\u4eca\u5929\u5f88\u5fd9\u6709\u70b9\u7d2f\uff1b\u6ca1\u7535\u4e86\uff0c\u521a\u5f00\u673a\uff0c\u4eca\u5929\u4e00\u5929\u5728\u60f3\u4f60\uff1b\u4f60\u522b\u95f9\uff0c\u771f\u6ca1\u6709\uff0c\u5c31\u662f\u4e00\u5757\u559d\u70b9\u9152\uff1b\u4f60\u5f88\u597d\uff0c\u6211\u4e0d\u914d\uff0c\u5fd8\u4e86\u6211\u5427\u4e0b\u4e00\u4f4d \u54c8\u54c8\uff1b \u7b2c\u516d\u5929\u3002 2020.9.24 Have Patience. Ethan\uff1b\u640f\u4e00\u640f\uff0c\u52a0\u6cb9\u2604\uff1b\u7b2c\u4e03\u5929\uff01 2020.9.25 Hold on. Ethan\uff1b\u7b2c\u516b\u5929\u3002 2020.9.26 \u627e\u4e0d\u5230\u6b65\u884c\u8857\u7684\u6c5f\u6c49\u8def\u3001\u8212\u670d\u7684\u5929\u6c14\u3001\u60a0\u95f2\u7684\u6c49\u53e3\u6c5f\u6ee9\ud83e\udd17\uff1bRestart, \u7b2c\u4e00\u5929\u3002 2020.9.27 It is not suitable to do this in that room; Restart, \u7b2c\u4e00\u5929\u3002 2020.9.28 Live in the moment. \u7b2c\u4e8c\u5929 2020.9.29 \u8ddf\u8bba\u6587\uff0c\u5f20\u4fee\u8fdc\uff1b\u7b2c\u4e09\u5929\u3002 2020.9.30 \u56fd\u5956\u7b54\u8fa9\uff1b\u901a\u8fc7\u5566\ud83d\ude4b\uff1b\u5d07\u9633\uff1b\u7b2c\u56db\u5929\u3002  ",
        "description": "",
        "id": 54,
        "section": "posts",
        "tags": [
            "\u5f00\u5b66",
            "\u5931\u7720",
            "\u7504\u535a\u58eb",
            "\u5496\u5561",
            "\u770b\u7535\u5f71",
            "\u805a\u9910",
            "\u591a\u96e8",
            "Manuscript",
            "\u56fd\u5956",
            "\u5d07\u9633"
        ],
        "title": "2020-9",
        "uri": "/posts/journals/2020-09-01-2020-9/"
    },
    {
        "content": " \u8f6c\u8f7d\u81ea\rChinese NLP\uff0c\u6839\u636e\u4e2a\u4eba\u7406\u89e3\u505a\u9002\u5f53\u672d\u8bb0\u3002\n Chinese Word Segmentation Overview Chinese is written using characters (hanzi), where each character represents a syllable. A word is usually taken to consist of one or more character tokens. There are no spaces between words. Less than 3500 distinct characters are normally encountered. Word segmentation (or tokenization) is the process of dividing up a sequence of characters into a sequence of words.\nExample Input:\n\u4eb2 \u8bf7\u95ee\u6709\u4ec0\u4e48\u53ef\u4ee5\u5e2e\u60a8\u7684\u5417\uff1f Output:\n\u4eb2 \u8bf7\u95ee \u6709 \u4ec0\u4e48 \u53ef\u4ee5 \u5e2e \u60a8 \u7684 \u5417 \uff1f Metrics Word F1 score:\n Gold: \u5171\u540c \u521b\u9020 \u7f8e\u597d \u7684 \u65b0 \u4e16\u7eaa \u2014\u2014 \u4e8c\u25cb\u25cb\u4e00\u5e74 \u65b0\u5e74 \u8d3a\u8bcd\n  Hypothesis: \u5171\u540c \u521b\u9020 \u7f8e \u597d \u7684 \u65b0 \u4e16\u7eaa \u2014\u2014 \u4e8c\u25cb\u25cb\u4e00\u5e74 \u65b0\u5e74 \u8d3a\u8bcd\n Precision = 9 / 11 = 0.818\nRecall = 9 / 10 = 0.9\nF1 = 0.857\nChinese Word Embeddings Background Word embedding ingests a large corpus of text and outputs, for each word type, an n-dimensional vector of real numbers. This vector captures syntactic and semantic information about the word that can be employed to solve various NLP tasks. In Chinese, the unit of encoding may be a character or a sub-character unit, rather than a word. [\u8bcd\u5d4c\u5165\uff08Word embedding\uff09\u6444\u53d6\u4e86\u5927\u91cf\u7684\u6587\u672c\u8bed\u6599\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u8bcd\u7c7b\u578b\u8f93\u51fa\u4e00\u4e2an\u7ef4\u5b9e\u6570\u5411\u91cf\u3002 \u8fd9\u4e2a\u5411\u91cf\u6355\u83b7\u4e86\u5173\u4e8e\u8be5\u8bcd\u7684\u8bed\u6cd5\u548c\u8bed\u4e49\u4fe1\u606f\uff0c\u53ef\u4ee5\u7528\u6765\u89e3\u51b3\u5404\u79cdNLP\u4efb\u52a1\u3002 \u5728\u4e2d\u6587\u4e2d\uff0c\u7f16\u7801\u5355\u4f4d\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u6216\u4e00\u4e2a\u5b50\u5b57\u7b26\u5355\u4f4d\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u8bcd]\nExample Input:\nLarge corpus of text Output:\n\u201c\u67e5\u8be2\u201d, vec(W) = [-0.059569, 0.126913, 0.273161, 0.225467, -0.185914, 0.018743, -0.18434, 0.083859, -0.115781, -0.216993, 0.063437, -0.005511, 0.276968,\u2026, 0.254486] Standard Metrics Word vectors can be evaluated intrinsically (e.g., whether similar words get similar vectors) or extrinsically (e.g., to what extent word vectors can improve a sentiment analyzer). [\u8bcd\u5411\u91cf\u53ef\u4ee5\u4ece\u5185\u5728\uff08\u4f8b\u5982\uff0c\u76f8\u4f3c\u7684\u8bcd\u662f\u5426\u5f97\u5230\u76f8\u4f3c\u7684\u5411\u91cf\uff09\u6216\u5916\u5728\uff08\u4f8b\u5982\uff0c\u8bcd\u5411\u91cf\u53ef\u4ee5\u5728\u591a\u5927\u7a0b\u5ea6\u4e0a\u6539\u8fdb\u60c5\u611f\u5206\u6790\u5668\uff09\u8fdb\u884c\u8bc4\u4f30\u3002]\nIntrinsic evaluation looks at\n Word relatedness : Spearman correlation (\u2374) between human-labeled scores and scores generated by the embeddings on Chinese word similarity datasets wordsim-240 and wordsim-296 (translations of English resources). Word Analogy: Accuracy on the word analogy task (e.g: \u201c \u7537\u4eba (man) : \u5973\u4eba (woman) :: \u7236\u4eb2 (father) : X \u201d, where X chosen by cosine similarity). Different types of word analogy tasks (1) Capitals of countries (2) States/provinces of cities (3) Family words  Extrinsic evaluation:\n Accuracy on Chinese sentiment analysis task F1 score on Chinese named entity recognition task Accuracy on part-of-speech tagging task  See e.g. Torregrossa et al., 2020 for a more detailed comparison of metrics\nWord relatedness-Chinese word similarity lists  wordsim-240 and wordsim-296 list pairs of Chinese words with human similarity judgments proposed by Chen et. al. (2015) and SemEval Task 4: Evaluating Chinese Word Similarity. These are Chinese translations of the English lists prepared in 2002. Datasets can be found at https://github.com/Leonard-Xu/CWE/tree/master/data     Test set # word pairs with human similarity judgments     \rwordsim-240 240   \rwordsim-296 297    Metrics  Spearman correlation (\u2374) between human-labeled scores and scores generated by the embeddings on Chinese word similarity datasets. Implementation: https://github.com/HKUST-KnowComp/JWE/blob/master/src/word_sim.py  Results  The SoTA system (VCWE) published in NAACL 2019, combines intra-character compositionality (computed via convolutional neural network ) and inter-character compositionality (computed via a recurrent neural network with self-attention) to compute the word embeddings     System wordsim-240 (\u2374) wordsim-296 (\u2374)     \rSun et. al. (2019) (VCWE) 57.81 61.29   \rYu et. al. (2017) (JWE) 51.92 59.84    Word Analogy-Chinese word analogy lists Given \u201cFrance : Paris :: China : ?\u201d, a system should come up with the answer \u201cBeijing\u201d.\n Chen et. al. (2015) manually constructed 1,225 analogies in 3 domains  capitals of countries, state/provinces of cities, family relationships   Datasets can be found at: https://github.com/Leonard-Xu/CWE/blob/master/data/analogy.txt     Test set # analogies     Capitals of countries 687   States/provinces of cities 175   Family relationships 240    Metrics  Accuracy. Implementation: https://github.com/HKUST-KnowComp/JWE/blob/master/src/word_analogy.py  Results    System Accuracy (capital) Accuracy (state) Accuracy (family) Accuracy (total)     \rYu et. al. (2017) (JWE) 0.91 0.93 0.62 0.85   \rYin et. al. (2016) (MGE) 0.89 0.88 0.39 0.76   CBOW (baseline) 0.84 0.88 0.60 0.79    Extrinsic evaluation-Chinese sentiment analysis  This test measures how much the sentiment analysis task benefits from different word vectors. There is no agreed-upon baseline (e.g., sentiment classifier code), so it is difficult to compare across papers. Sentiment dataset available at http://sentic.net/chinese-review-datasets.zip (\rPeng et. al. (2018))  Consists of Chinese reviews in 4 domains: notebook, car, camera and phone Binary classification task: reviews are either positive or negative Does not have train/dev/test split.       Test set # positive reviews # negative reviews     Notebook 417 206   Car 886 286   Camera 1,558 673   Phone 1,713 843    Results    System Accuracy (notebook) Accuracy (car) Accuracy (camera) Accuracy (phone) Accuracy (overall)     \rSun et. al. (2019) (VCWE) 80.95 85.59 83.93 84.38 88.92   \rYu et. al. (2017) (JWE) 77.78 78.81 81.70 81.64 85.13   Baseline (skip-gram) 69.84 77.12 80.80 81.25 86.65    Extrinsic evaluation-Chinese name tagging  This test measures how much the name tagging task benefits from different word vectors. There is no agreed-upon baseline (e.g., name tagging code), so it is difficult to compare across papers. This evaluation evaluates entity taggers on three types of entities: Person (PER), Location (LOC), and Organization (ORG): Levow (2006)     Test set Size (words) Genre     SIGHAN 2006 NER MSRA 100,000 Newswire, Broadcast News, Weblog    Results    System F1 score     \rSun et. al. (2019) (VCWE) 85.77   \rYu et. al. (2017) (JWE) 85.30    Resources    Train set Size (words) Genre     SIGHAN 2006 NER MSRA 1.3M Newswire, Broadcast News, Weblog    Chinese Transliteration (\u4e2d\u6587\u7ffb\u8bd1) Background Transliteration translates proper names and technical terms across languages that use different alphabets and sound systems.\nExample input/output Input:\n\u7ea6\u7ff0\u4f0d\u5179 (yue han wu zi) Output:\nJohn Woods Standard Metrics  Word Accuracy in Top-1 (ACC) measures correctness of the first transliteration candidate in a candidate list produced by a transliteration system. Fuzziness in Top-1 (Mean F-score). Mean Reciprocal Rank (MRR). MAP measures precision in the n-best candidates for i-th source name, for which reference transliterations are available.  Chinese Text Classification Background Text classification assigns tags or categories to text according to its topical content, typically training on labeled documents. Topics are sometimes broad and akin to genre (news, sports, arts) but sometimes as fine-grained as hashtags.\nExample input/output Input:\n[\u56fd\u8db3]\u6709\u4fe1\u5fc3\u4e86 \u4e2d\u56fd\u56fd\u5965\u961f\u53d6\u5f97\u70ed\u8eab\u8d5b\u4e09\u8fde\u80dc Output:\nSports Standard Metrics  Accuracy: the percentage of correctly classified samples.  Chinese Text Summarization Background Text summarization takes a long text document and creates a shorter text document that is a fluent and accurate summary of the longer text document.\nExample Input:\n \u8f83\u65e9\u8fdb\u5165\u4e2d\u56fd\u5e02\u573a\u7684\u661f\u5df4\u514b\uff0c \u662f\u4e0d\u5c11\u5c0f\u8d44\u949f \u60c5\u7684\u54c1\u724c\u3002\u76f8\u6bd4\u5728\u7f8e\u56fd\u7684\u5e73\u6c11\u5f62\u8c61\uff0c\u661f\u5df4\u514b\u5728\u4e2d\u56fd\u5c31 \u663e\u5f97\u201c\u9ad8\u7aef\u201d\u5f97\u591a\u3002\u7528\u6599\u5e76\u65e0\u5dee\u522b\u7684\u4e00\u676f\u4e2d\u676f\u7f8e\u5f0f\u5496 \u5561\uff0c\u5728\u7f8e\u56fd\u4ec5\u7ea6\u5408\u4eba\u6c11\u5e0112\u5143\uff0c\u56fd\u5185\u8981\u535621\u5143\uff0c\u76f8\u5f53 \u4e8e\u8d35\u4e8675%\u3002\u7b2c\u4e00\u8d22\u7ecf\u65e5\u62a5 Output:\n\u5a92\u4f53\u79f0\u661f\u5df4\u514b\u7f8e\u5f0f\u5496\u5561\u552e\u4ef7\u4e2d\u56fd\u6bd4\u7f8e\u56fd \u8d3575%\u3002 Standard Metrics ROUGE compares an automatically produced summary with human-produced, reference summaries. ROUGE-1 records unigram overlap, ROUGE-2 bigram overlap, and ROUGE-L the longest common subsequence. ROUGE can be computed over characters or words. [ROUGE\u5c06\u81ea\u52a8\u751f\u6210\u7684\u6458\u8981\u4e0e\u4eba\u5de5\u751f\u6210\u7684\u53c2\u8003\u6458\u8981\u8fdb\u884c\u6bd4\u8f83\u3002 ROUGE-1\u8bb0\u5f55\u5355\u5b57\u91cd\u53e0\uff0cROUGE-2\u8bb0\u5f55\u5927\u5b57\u91cd\u53e0\uff0cROUGE-L\u8bb0\u5f55\u6700\u957f\u7684\u5171\u540c\u5e8f\u5217\u3002 ROUGE\u53ef\u4ee5\u5bf9\u5b57\u7b26\u6216\u5355\u8bcd\u8fdb\u884c\u8ba1\u7b97\u3002]\nImplementations\n \rhttp://www.berouge.com/Pages/default.aspx \rhttps://github.com/lancopku/superAE/blob/master/data/script/PythonROUGE.py  Chinese Spelling Correction Background A spelling corrector finds and correct typographical errors in text. These errors often occur between characters that are similar in appearance, pronunciation, or both.\n\u7ea0\u6b63\nExample Input:\n1986\u5e74\u6bd5\u4e1a\u4e8e\u56fd\u9632\u79d1\u6280\u5927\u5b66\u8ba1\u7b97\u673a\u5e94\u7528\u4e13\u4e1a\uff0c\u83b7\u5b66\u65f6\u5b66\u4f4d\u3002 Output:\n1986\u5e74\u6bd5\u4e1a\u4e8e\u56fd\u9632\u79d1\u6280\u5927\u5b66\u8ba1\u7b97\u673a\u5e94\u7528\u4e13\u4e1a\uff0c\u83b7\u5b66\u58eb\u5b66\u4f4d\u3002 (\u65f6 -&gt; \u58eb) Standard Metrics Spelling correction performance is typically evaluated using accuracy, precision, recall, and F1 score. These metrics can be computed at the character level or the sentence level. Detection and correction are typically evaluated separately.\n Detection: all locations of incorrect characters in a given passage should be completely identical with the gold standard. Correction: all locations and corresponding corrections of incorrect characters should be completely identical with the gold standard.  Chinese Simplified/Traditional Conversion Background Chinese Simplified/Traditional conversion converts simplified Chinese characters into traditional Chinese characters, and vice versa.\nExample Input:\n\u82df\u5229\u56fd\u5bb6\u751f\u6b7b\u4ee5,\u5c82\u56e0\u7978\u798f\u907f\u8d8b\u4e4b. Output:\n\u82df\u5229\u570b\u5bb6\u751f\u6b7b\u4ee5,\u8c48\u56e0\u798d\u798f\u907f\u8da8\u4e4b. Standard Metrics Accuracy\nStandard Test Set None, to our knowledge.\nChinese Sentiment Analysis Background Sentiment Analysis detects identifies and extracts subjective information from text.\nExample Input:\n\u603b\u7684\u611f\u89c9\u8fd9\u53f0\u673a\u5668\u8fd8\u4e0d\u9519\uff0c\u5b9e\u7528\u7684\u6709\uff1a\u9634\u9633\u5386\u663e\u793a\uff0c\u65f6\u95f4\u4e0e\u65e5\u671f\u5feb\u901f\u8f6c\u6362, \u8bb0\u4e8b\u672c\u7b49\u3002 Output:\nPositive Standard Metrics Accuracy\n The percentage of correctly classified samples on test set.  F1-score\n Combination of precision and recall. \rWiki Page  ",
        "description": "",
        "id": 55,
        "section": "posts",
        "tags": [
            "\u8f6c\u8f7d",
            "NLP",
            "Chinese NLP"
        ],
        "title": "\u8f6c\u8f7d-Chinese NLP",
        "uri": "/posts/notes/2020-08-10-%E8%BD%AC%E8%BD%BD-chinese-nlp/"
    },
    {
        "content": " \u5f00\u5b66\u524d\u7684\u4e00\u4e2a\u6708\uff0c\u5728\u5b66\u6821\u5c01\u95ed\u5ea6\u8fc7\u3001\u6709\u6536\u5230\u8d3a\u4fe1\u548c\u751f\u65e5\u7684\u559c\u60a6\uff0c\u6709\u5931\u7720\u3001\u9ebb\u6728\u3001\u4e0d\u77e5\u6240\u63aa\u7684\u5f77\u5fa8\u3002\u5f00\u59cb\u953b\u70bc\u4e86\uff0c\u6253\u7fbd\u6bdb\u7403\uff0c\u62cd\u7bee\u7403\uff0c\u9694\u4e00\u5929\u7684\u534a\u5c0f\u65f6\u6162\u8dd1\u3002\u7ee7\u7eed\u52a0\u6cb9\u5427\uff0c\u8fd8\u662f\u5f88\u559c\u6b22\u90a3\u53e5\u8bdd\uff0c\u8fdb\u4e00\u6b65\u6709\u8fdb\u4e00\u6b65\u7684\u6b22\u559c\u3002\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u4e0b\u96e8\u5929\",\rartist: \"\u4e0e\u5c11\u5e74\u4ed6,\u829d\u9ebbMochi\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E4%B8%8B%E9%9B%A8%E5%A4%A9-6b4bc9-Ag.mp3\",\rcover: \"https://p2.music.126.net/qRfggLX2Va3Wslqjr7FxSg==/109951164742550320.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E4%B8%8B%E9%9B%A8%E5%A4%A9-%E4%B8%8E%E5%B0%91%E5%B9%B4%E4%BB%96%2C%E8%8A%9D%E9%BA%BBMochi-4df7dd-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.8.1 \u516b\u6708\u6709\u5f88\u591a\u4e8b\u60c5\u8981\u53d1\u751f\u3001 2020.8.2 \u71ac\u5230\u51cc\u6668\u5feb\u4e24\u70b9\u8fd8\u6ca1\u7761\u7740 \u6211\u8fd9\u662f\u600e\u4e48\u4e86\ud83d\ude2d 2020.8.3 \u6628\u5929\u665a\u4e0a\u8d39\u52b2\u4e5d\u725b\u4e8c\u864e\u4e4b\u529b\u628a\u7a7a\u8c03\u63d2\u5934\u63d2\u5230\u63d2\u5ea7\u4e0a \u51ed\u501f\u7740\u5bcc\u8d35\u9669\u4e2d\u6c42\u7684\u7406\u5ff5 \u722c\u4e0a\u6447\u6447\u6643\u6643\u7684\u67b6\u5b50 \u771f\u662f\u62fc\u4e86\u8001\u547d\u4e86 2020.8.4 1\uff09\u5927\u8bba\u6587\u592a\u96be\u4e86\u3002\u53ea\u60f3\u5f00\u9898\u5c31\u597d\u5934\u75bc; 2\uff09\u4eba\u6240\u52aa\u529b\u7684\u4e00\u5207\u76ee\u7684\uff0c\u90fd\u662f\u4e3a\u4e86\u8ba9\u81ea\u5df1\u611f\u5230\u5e78\u798f\u3002 \u200b\u200b\u200b\u200b- From \u6f2b\u753b\u5bb6-\u90a3\u4e2a\u9ec4\u540c\u5b66 2020.8.5 \u6536\u5230\u8d3a\u4fe1\u7684\u90a3\u4e00\u523b\u5f88\u5e73\u6de1\uff0c\u591a\u5e74\u7684\u8ffd\u6c42\u548c\u52aa\u529b\u5f97\u5230\u4e86\u89c1\u8bc1\u3002\u5f88\u5f00\u5fc3\u80fd\u542c\u5230\u8001\u7238\u7684\u9ad8\u5174\uff0c\u5e0c\u671b\u5728\u4ed6\u773c\u91cc\u6211\u4e5f\u7b97\u4e00\u4e2a\u6709\u51fa\u606f\u7684\u5c0f\u5b50\uff0c\u4e0d\u8d1f\u8fd9\u4e48\u591a\u5e74\u4e00\u76f4\u60f9\u4ed6\u751f\u6c14\u3002 2020.8.6 \u751f\u65e5\u5feb\u4e50 2020.8.7 MASKED FOR REVIEW. \u4e0d\u77e5\u9053\u54ea\u91cc\u51fa\u4e86\u9519\ud83d\ude2d 2020.8.8 \u5927\u5bb6\u89c9\u5f97\u6211\u62ff\u5230\u8d44\u52a9\u4e4b\u540e\u5c31\u4f1a\u5f88\u95f2\u4e86\u3001\u6211\u6bcf\u5929\u90fd\u5728\u5fd9\u4ec0\u4e48\uff1f\u73b0\u5728\u53cd\u800c\u6210\u4e3a\u6211\u6700\u8ff7\u832b\u7684\u65f6\u671f\u3002\u611f\u89c9\u6709\u70b9\u50cf\u56de\u523015\u5e74\u5927\u5b66\u6bd5\u4e1a\u7684\u6691\u5047\uff0c\u5145\u6ee1\u6fc0\u60c5\u548c\u61a7\u61ac\u6765\u5230\u6b66\u6c49\uff0c\u6211\u8be5\u51c6\u5907\u4e9b\u4ec0\u4e48\u3001 2020.8.9 \u6028\u53ea\u6028\u4eba\u5728\u98ce\u4e2d \u805a\u6563\u90fd\u4e0d\u7531\u6211 2020.8.10 1) Mark - Kang Liu: POI-type semantic analysis + \u57ce\u5e02\u9053\u8def\u4ea4\u901a\u7a7a\u95f4\u4ea4\u4e92\u5ea6\u91cf; 2) \u5199\u624b\uff0c\u4e0d\u8981\u505c\u6b62\u9e2d\u2604 2020.8.11 \u8fdb\u4e00\u5bf8\u6709\u8fdb\u4e00\u5bf8\u7684\u6b22\u559c 2020.8.12 1) \u665a\u4e0a\u505a\u4e86\u4e00\u4e2a\u68a6\uff0c\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97\u5669\u68a6\u3002\u68a6\u89c1\u81ea\u5df1\u88ab\u5200\u6345\u4e86\uff0c\u55ef\uff0c\u66f4\u51c6\u786e\u7684\u662f\u88ab\u5200\u201c\u63d2\u201d\u4e86\u4e00\u4e0b\u3002\u7136\u540e\u5c31\u4e00\u76f4\u6342\u7740\u4f24\u53e3\u5728\u53bb\u533b\u9662\u7684\u8def\u4e0a\u3002\u662f\u7684\uff0c\u4e00\u76f4\u5728\u8def\u4e0a\uff0c\u77e5\u9053\u6211\u9192\u4e86\u3002\u5728\u8def\u4e0a\u7684\u65f6\u5019\u8fd8\u9047\u5230\u4e00\u4e9b\u5947\u8469\u751a\u81f3\u5947\u602a\u7684\u4e8b\u60c5\uff0c\u6bd4\u5982\u53f8\u673a\u534a\u8def\u53bb\u4e0a\u5395\u6240\u4e0a\u4e86\u597d\u4e45\uff0c\u6bd4\u5982\u8bf4\u8def\u4e0a\u6709\u7279\u522b\u591a\u7279\u522b\u591a\u7684\u5c0f\u9ebb\u96c0\u5374\u4e0d\u6015\u4eba\u4e0d\u98de\u8d70\u3002\u8fd8\u6709\u5c31\u662f\uff0c\u4f24\u53e3\u4e00\u76f4\u6ca1\u6d41\u8840\uff0c\u4f46\u662f\u611f\u89c9\u5230\u75db\u611f\u3002\u6700\u8fd1\u4e00\u76f4\u5728\u5931\u7720\u3001\u4e00\u76f4\u7761\u4e0d\u597d\u3002\u4e0d\u8fc7\u4e5f\u6709\u53d1\u73b0\uff0c\u6bd4\u5982\u8bf4\u5929\u732b\u7cbe\u7075\u7684\u767d\u566a\u97f3\u6709\u70b9\u4f5c\u7528\uff0c\u603b\u662f\u4e0d\u77e5\u4e0d\u89c9\u7684\u7761\u7740\u4e86\u3002\u539f\u7406\u662f\u4ec0\u4e48\u4e5f\u4e0d\u61c2\u3002 2) \u65af\u6587\u8d25\u7c7b\u672c\u7c7b\u3002 2020.8.13 1) \u6d77\u67af\u77f3\u70c2\u30022) \u591a\u770b\u8bba\u6587\u5c11\u7126\u8651\u3002 2020.8.14 \u62cd\u62cd\u6211\u7684\u5c0f\u7bee\u7403 2020.8.15 Sometimes you shuold switch off your brain. 2020.8.16 \u4fe1\u5de5\u697c\u505c\u7535\u4e86\u7adf\u7136\u4e0d\u77e5\u9053\u53bb\u54ea\u91cc\u3002\u3002\u5916\u9762\u592a\u70ed\u4e86\u4e0d\u60f3\u52a8\u5f39\u3002\u8eb2\u5728\u5bbf\u820d\u770b\u7535\u5f71\u5427 \u54c8\u54c8\u54c8 2020.8.17 \u6253\u996d\u78b0\u5230\u4e00\u4e2a\u8d85\u6709\u6c14\u8d28\u7684\u59b9\u5b50\uff0c\u54c7\u771f\u7684\u88ab\u60ca\u8273\u5230\u4e86\u3002\u540e\u6765\u8fdb\u95e8\u7684\u65f6\u5019\u53d1\u73b0\u5979\u4e5f\u662f\u4fe1\u5de5\u697c\u7684\uff0c\u771f\u7684\u662f\u5373\u60ca\u559c\u53c8\u65e0\u5948\u3001 2020.8.18 \u5730\u7406\u5927\u6570\u636e\u9a71\u52a8\u4e0b\u7684\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u53ca\u7a7a\u95f4\u4ea4\u4e92\u7814\u7a76 2020.8.19 \u4eca\u5929\u53bb\u548c\u6d69\u5b50\u8c08\u5fc3\uff0c\u5173\u4e8e\u5de5\u4f5c\u7684\u4e8b\u60c5\u3002\u6bcf\u4e2a\u4eba\u5728\u4e0d\u540c\u65f6\u671f\u90fd\u4f1a\u7ea0\u7ed3\uff0c\u90fd\u6709\u81ea\u5df1\u7684\u70e6\u607c\u3001\u53bb\u5149\u8c37\u5403\u4e86\u62ab\u8428\u89e3\u4e86\u5634\u998b\uff0c\u526a\u4e86\u77ed\u53d1\uff0c\u53d1\u578b\u5e08\u5f88\u201c\u624b\u6b8b\u201d\u5f88\u60f3\u5410\u69fd\uff0819.9\u65e2\u4e0d\u8981\u591a\u8bf4\u4e86\u5427\u554a\u81ea\u5df1\uff09\uff0c\u8fd8\u670985\u5ea6C\u7684\u7126\u7cd6\u739b\u5947\u6735 \u4e0b\u6b21\u8981\u5927\u676f \u6bcf\u6b21\u559d\u90fd\u4f1a\u60f3\u8d77\u4f60\uff08\u4e0d\u559d\u4e5f\u4f1a\u60f3Orz\uff09\uff0c\u8fd8\u6709\u53bb\u505a\u4e86\u80cc\u90e8\u6309\u6469 \u867d\u7136\u5f88\u75bc \u518d\u4e0d\u953b\u70bc\u5c31\u5e9f\u4e86 \u6bcf\u6b21\u4e5f\u53ea\u662f\u8bf4\u8bf4\u3002\u5173\u4e8e\u5de5\u4f5c\uff0c\u6211\u65e0\u4fdd\u7559\u7684\u8bc9\u8bf8\u6211\u81ea\u5df1\u7684\u60f3\u6cd5\uff0c\u4ece\u6211\u7684\u89d2\u5ea6\u7684\u5229\u4e0e\u5f0a\u3001\u4e0e\u4ed6\u6743\u8861\u3002\u795d\u597d\ud83c\udf3b 2020.8.20 Attention:: 2020.8.21 \u5728\u5b9e\u9a8c\u5ba4\u6253\u4e86\u4e00\u5929\u7684\u6e38\u620f\u4e86\ud83d\udc2d 2020.8.22 \u884c\u5427~ 2020.8.23 \u4e00\u4e2a\u661f\u671f\u8fc7\u53bb\u4e86\uff0c\u8bf4\u5b9e\u8bdd\u8fd9\u4e24\u5468\u6ca1\u505a\u4ec0\u4e48\u4e8b\u60c5\uff0c\u6bcf\u5929\u6765\u5b9e\u9a8c\u5ba4\u4e5f\u662f\u653e\u677e\u81ea\u5df1\u3001\u6e38\u620f\u6253\u5230\u4e86\u6700\u5f3a\u738b\u8005\u4e86\uff0c\u73b0\u5728\u53ef\u4ee5\u6536\u6536\u5fc3\u5566 \u660e\u5929\u5f00\u59cb\uff0c\u6162\u6162\u8fdb\u5165\u72b6\u6001\u5427\u3001 2020.8.24 1) Though we are far away in distance, please trust that our hearts are close. 2) \u57fa\u4e8e\u95ee\u9898\u9a71\u52a8\u7684\u7814\u7a76\uff0c\u4f7f\u7528\u6210\u719f\u7684\uff08\u673a\u5668\u5b66\u4e60\uff09\u7684\u65b9\u6cd5\u89e3\u51b3\u95ee\u9898\u5373\u53ef\uff0c\u65e0\u9700\u968f\u5927\u6d41\uff0c\u5173\u6ce8\u70ed\u95e8\u7684\u65b9\u6cd5\u3002+ \u591a\u770b\u8bba\u6587\u627e\u95ee\u9898\u5440\ud83d\ude02 -\u718a\u54e5 2020.8.25 \u5b64\u5be1\uff08\u5471~\uff09 2020.8.26 \u73b0\u5728\u7684\u6211\u633a\u597d\uff0c\u867d\u7136\u6ca1\u6709\u8c08\u604b\u7231\uff0c\u4f46\u65e5\u5b50\u8fc7\u5f97\u6709\u58f0\u6709\u8272\uff0c\u770b\u4e66\uff0c\u5199\u5b57\uff0c\u77e5\u9053\u81ea\u5df1\u60f3\u8981\u4ec0\u4e48\u4e0d\u60f3\u8981\u4ec0\u4e48\uff0c\u66f4\u559c\u6b22\u52a8\u7269\uff0c\u4e00\u76f4\u4ee5\u6765\u90fd\u60f3\u517b\u6761\u72d7\uff0c\u867d\u7136\u6709\u65f6\u4f1a\u89c9\u5f97\u5b64\u5355\uff0c\u5e76\u4e0d\u4f1a\u5b64\u72ec\u3002\u552f\u4e00\u9057\u61be\u5e76\u6127\u759a\u7684\u662f\u7236\u6bcd\u5bf9\u6211\u5a5a\u59fb\u7684\u62c5\u5fe7\u3002\u8fd8\u662f\u8bb8\u4e2a\u613f\u5427\uff0c\u5e0c\u671b\u6211\u80fd\u9047\u5230\u4e2a\u5408\u9002\u7684\u4eba\u8ba9\u6211\u91cd\u65b0\u4fe1\u4efb\uff0c\u4f9d\u8d56\uff0c\u5e76\u5bf9\u65e5\u540e\u751f\u6d3b\u5145\u6ee1\u671f\u5f85\u3002 2020.8.27 TGIS\u7684\u6587\u7ae0\u88ab\u62d2\u4e86\u3001 2020.8.28 Four-Oh-Four\ud83c\udf1d 2020.8.29 1) Interesting project - Neural Cellular Automata; 2) \u4e00\u7bc7\u597d\u7684\u8bba\u6587\u9700\u8981\u915d\u917f 2020.8.30 \u5e73\u5e73\u65e0\u5947\u7684\u5468\u672b 2020.8.31 \u5f00\u5b66\u5566 \u5927\u5bb6\u90fd\u56de\u5b66\u6821\u4e86 \u5047\u671f\u7ed3\u675f\uff01\u23f3  ",
        "description": "",
        "id": 56,
        "section": "posts",
        "tags": [
            "\u5931\u7720",
            "\u751f\u65e5",
            "\u8d3a\u4fe1",
            "\u8ff7\u832b",
            "\u5947\u602a\u7684\u68a6",
            "\u767d\u566a\u97f3",
            "\u505c\u7535",
            "\u60f3\u5f00",
            "\u8c08\u5fc3",
            "\u6e38\u620f",
            "\u884c\u5427",
            "\u5b64\u5be1",
            "\u5f00\u5b66"
        ],
        "title": "2020-8",
        "uri": "/posts/journals/2020-08-01-2020-8/"
    },
    {
        "content": " \u518d\u6b21\u7814\u8bfb\u5730\u7406\u5927\u6570\u636e\u7684\u5b9e\u65bd\u65b9\u6848\uff0c\u4ee5\u671f\u542f\u53d1\u5f00\u9898\u3001\u5927\u8bba\u6587\u7075\u611f\uff0c\u5e76\u505a\u7b80\u8981\u7b14\u8bb0\u3001\u8bb0\u5f55\u3002\n \u9879\u76ee\u4e3b\u8981\u5185\u5bb9 \u5730\u7406\u5927\u6570\u636e\u7edf\u4e00\u8868\u8fbe\u3001\u805a\u5408\u4e0e\u53ef\u89c6\u5316\u6316\u6398\u7406\u8bba \u9762\u5411\u5bf9\u5730\u89c2\u6d4b\u3001\u793e\u4ea4\u7f51\u7edc\u7b49\u7ed3\u6784\u5316\u548c\u975e\u7ed3\u6784\u5316\u5730\u7406\u5927\u6570\u636e\u7684\u8ba4\u77e5\u3001\u534f\u540c\u8868\u8fbe\u548c\u7406\u89e3\u7684\u9700\u6c42\uff0c\u62df\u4ece\u5730\u7406\u5927\u6570\u636e\u7684\u65f6\u7a7a\u8ba4\u77e5\u2192\u5730\u7406\u5927\u6570\u636e\u7edf\u4e00\u8868\u8fbe\u2192\u5730\u7406\u5927\u6570\u636e\u805a\u5408\u2192\u5730\u7406\u5927\u6570\u636e\u7684\u7edf\u8ba1\u63a8\u65ad\u4e0e\u53ef\u89c6\u5316\u6316\u6398\u7b49\u65b9\u9762,\u5f00\u5c55\u5730\u7406\u5927\u6570\u636e\u8ba4\u77e5\u4e0e\u7406\u89e3\u7684\u57fa\u7840\u7406\u8bba\u548c\u5730\u7406\u5927\u6570\u636e\u534f\u540c\u3001\u805a\u5408\u4e0e\u8868\u8fbe\u7684\u5173\u952e\u6280\u672f\u7814\u53d1\uff0c\u5b9e\u73b0\u5bf9\u5730\u7406\u5927\u6570\u636e\u7684\u672c\u8eab\u7684\u8ba4\u77e5\u548c\u7406\u89e3\uff0c\u4e3a\u5730\u7406\u5927\u6570\u636e\u7684\u6df1\u5ea6\u5206\u6790\u548c\u6316\u6398\u63d0\u4f9b\u57fa\u7840\u3002\n \u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u8ba4\u77e5\u6a21\u578b\uff0c\u7814\u7a76\u5730\u7406\u5927\u6570\u636e\u7684\u4ea7\u751f\u673a\u7406\u3001\u8ba4\u77e5\u65b9\u5f0f\u4e0e\u8868\u73b0\u5f62\u5f0f\uff0c\u6784\u5efa\u591a\u89c6\u89d2\u4ea4\u4e92\u7684\u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u8ba4\u77e5\u3001\u6982\u5ff5\u5316\u63cf\u8ff0\u4e0e\u5f62\u5f0f\u5316\u8868\u8fbe\u6a21\u578b\uff1b    \u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u7edf\u4e00\u6846\u67b6\u4e0e\u534f\u540c\u8868\u8fbe\uff0c\u7814\u7a76\u5730\u7406\u5927\u6570\u636e\u5c3a\u5ea6\u3001\u8bed\u4e49\u3001\u65f6\u95f4\u3001\u5173\u7cfb\u7b49\u591a\u5143\u7279\u5f81\u5f52\u4e00\u5316\u8868\u8fbe\u65b9\u6cd5\uff0c\u6784\u5efa\u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u7edf\u4e00\u6846\u67b6\u4e0e\u534f\u540c\u8868\u8fbe\u6a21\u578b\uff1b\n  \u5730\u7406\u5927\u6570\u636e\u4e0d\u786e\u5b9a\u6027\u5206\u6790\u4e0e\u7edf\u8ba1\u63a8\u65ad\uff0c\u7814\u7a76\u5730\u7406\u5927\u6570\u636e\u4e0d\u786e\u5b9a\u6027\u53ca\u5176\u4f20\u64ad\u673a\u7406\uff0c\u6784\u5efa\u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u7edf\u8ba1\u63a8\u65ad\u6a21\u578b\uff1b\n  \u5730\u7406\u5927\u6570\u636e\u591a\u5143\u805a\u5408\u5206\u6790\uff0c\u7814\u7a76\u57fa\u4e8e\u4f4d\u7f6e\u3001\u8bed\u4e49\u3001\u65f6\u95f4\u3001\u5173\u7cfb\u7b49\u7684\u5730\u7406\u5927\u6570\u636e\u805a\u5408\u6a21\u5f0f\uff0c\u5b9e\u73b0\u4e0d\u540c\u5c3a\u5ea6\u3001\u4e0d\u540c\u65f6\u6001\u3001\u4e0d\u540c\u89c6\u89d2\u3001\u4e0d\u540c\u8bed\u4e49\u65f6\u7a7a\u5927\u6570\u636e\u7684\u534f\u540c\u3001\u4fe1\u606f\u6d3e\u751f\u4e0e\u589e\u6b96\uff1b\n  \u5730\u7406\u5927\u6570\u636e\u52a8\u6001\u53ef\u89c6\u5316\u6316\u6398\uff0c\u6784\u5efa\u96c6\u6210\u65f6\u95f4\u3001\u7a7a\u95f4\u3001\u8bed\u4e49\u548c\u5173\u7cfb\u591a\u7ef4\u5ea6\u7279\u5f81\u7684\u5927\u6570\u636e\u611f\u77e5\u6a21\u578b\u548c\u52a8\u6001\u53ef\u89c6\u5316\u6316\u6398\u7b97\u6cd5\uff0c\u5b9e\u73b0\u5730\u7406\u5927\u6570\u636e\u5728\u7ebf\u53ef\u89c6\u5316\u6316\u6398\u53ca\u52a8\u6001\u5236\u56fe\u8868\u8fbe\n  \u5730\u7406\u5927\u6570\u636e\u4f4d\u7f6e\u591a\u91cd\u611f\u77e5 \u4f4d\u7f6e\u662f\u5e7f\u4e49\u7684\u7a7a\u95f4\u6982\u5ff5\uff0c\u53ef\u4ee5\u662f\u7ecf\u7eac\u5ea6\u5750\u6807\u6240\u6307\u4ee3\u7684\u552f\u4e00\u7a7a\u95f4\u5b9e\u4f53\u70b9\uff0c\u53ef\u4ee5\u662f\u7531\u7279\u5b9a\u8fb9\u754c\u56f4\u6210\u7684\u5730\u7406\u9762\u72b6\u533a\u57df\uff0c\u4ea6\u53ef\u4ee5\u662f\u5177\u6709\u6a21\u7cca\u8fb9\u754c\u7684\u7279\u5b9a\u573a\u6240\u3002\u4f4d\u7f6e\u4fe1\u606f\u662f\u4ee5\u4f4d\u7f6e\u4f5c\u4e3a\u7a7a\u95f4\u8f7d\u4f53\u7684\u5730\u7406\u4fe1\u606f\uff0c\u662f\u4eba\u7c7b\u884c\u4e3a\u548c\u60c5\u611f\u5728\u65f6\u7a7a\u7ef4\u5ea6\u4e0a\u7684\u53cd\u6620\uff0c\u5f80\u5f80\u5305\u542b\u6d3b\u52a8\u3001\u5173\u8054\u3001\u4ea4\u4e92\u3001\u60c5\u611f\u3001\u7279\u5f81\u7b49\u8bed\u4e49\u4fe1\u606f\uff0c\u5177\u6709\u7a7a\u95f4\u7279\u5f81\u3001\u65f6\u95f4\u7279\u6027\u3001\u4f4d\u7f6e\u4e0d\u786e\u5b9a\u6027\u3001\u63cf\u8ff0\u5f62\u5f0f\u591a\u6837\u6027\u7b49\u7279\u70b9\u3002\u4f4d\u7f6e\u611f\u77e5\u5728\u6307\u5728\u77e5\u8bc6\u53d1\u73b0\u5c42\u9762\uff0c\u83b7\u53d6\u5bf9\u4f4d\u7f6e\u7684\u8ba4\u77e5\u4ee5\u53ca\u5bf9\u4f4d\u7f6e\u4fe1\u606f\u7684\u7406\u89e3\u7684\u8fc7\u7a0b\uff0c\u80fd\u591f\u5b9e\u73b0\u5bf9\u5730\u7406\u5927\u6570\u636e\u4f4d\u7f6e\u591a\u91cd\u8bed\u4e49\u7684\u7406\u89e3\uff0c\u5e76\u4e14\u4e3a\u65f6\u7a7a\u683c\u5c40\u7684\u7406\u89e3\u4e0e\u900f\u89c6\u3001\u5730\u7406\u4e8b\u4ef6\u7684\u53d1\u73b0\u53ca\u9884\u8b66\u63d0\u4f9b\u652f\u6301\u3002\u5730\u7406\u5927\u6570\u636e\u4f4d\u7f6e\u591a\u91cd\u611f\u77e5\u5c06\u89e3\u51b3\u5730\u7406\u5927\u6570\u636e\u4e2d\u7684\u4f4d\u7f6e\u8ba4\u77e5\u4e0e\u8bed\u4e49\u7406\u89e3\u7684\u95ee\u9898\uff0c\u4e3a\u7ed3\u6784-\u529f\u80fd\u7684\u7406\u89e3\u548c\u8981\u7d20\u4e92\u4f5c\u7528\u7814\u7a76\u63d0\u4f9b\u8868\u8fbe\u7684\u6838\u5fc3\u5143\u7d20\u3002\n \u57fa\u4e8e\u4f4d\u7f6e\u8bed\u4e49\u8868\u8fbe\u7406\u8bba\u6a21\u578b\uff0c\u6784\u5efa\u6a21\u7cca\u4f4d\u7f6e\u7cbe\u51c6\u5316\u65b9\u6cd5\uff0c\u5b9e\u73b0\u4f4d\u7f6e\u8bed\u4e49\u5728\u73b0\u5b9e\u4e16\u754c\u548c\u865a\u62df\u4e16\u754c\u4e2d\u7684\u4e00\u81f4\u8868\u8fbe\uff1b \u5730\u7406\u4f4d\u7f6e\u4fe1\u606f\u81ea\u52a8\u53d1\u73b0\u4e0e\u5339\u914d\uff0c\u7814\u7a76\u4f4d\u7f6e\u4fe1\u606f\u7684\u81ea\u52a8\u53d1\u73b0\u3001\u63d0\u53d6\u3001\u8ddf\u8e2a\u4e0e\u5339\u914d\u65b9\u6cd5\u4ee5\u53ca\u591a\u5c42\u6b21\u7a7a\u95f4\u5173\u7cfb\u63cf\u8ff0\u6a21\u578b\uff1b \u4f4d\u7f6e\u8bed\u4e49\u5173\u8054\u4e0e\u7a7a\u95f4\u884c\u4e3a\u63a8\u6d4b\uff0c\u7814\u7a76\u4f4d\u7f6e\u4e0a\u7684\u6d3b\u52a8\u3001\u5173\u8054\u3001\u4ea4\u4e92\u3001\u60c5\u611f\u548c\u7279\u5f81\u7b49\u591a\u91cd\u8bed\u4e49\u7684\u5927\u6570\u636e\u611f\u77e5\u7406\u8bba\u548c\u65b9\u6cd5\uff0c\u53d1\u73b0\u4f4d\u7f6e\u7684\u6df1\u5c42\u77e5\u8bc6\uff0c\u5b9e\u73b0\u591a\u91cd\u4f4d\u7f6e\u8bed\u4e49\u7684\u6df1\u5c42\u4fe1\u606f\u611f\u77e5\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u7814\u7a76\u4f4d\u7f6e\u8bed\u4e49\u5173\u8054\u3001\u63a8\u7406\u65b9\u6cd5\uff0c\u652f\u6301\u57fa\u4e8e\u4f4d\u7f6e\u8bed\u4e49\u7684\u5e94\u7528\uff1b \u865a\u62df\u7a7a\u95f4\u4f4d\u7f6e\u53ca\u573a\u6240\u8868\u8fbe\u4e0e\u91cd\u5efa\uff0c\u4ece\u865a\u62df\u793e\u4ea4\u7a7a\u95f4\u548c\u865a\u62df\u73b0\u5b9e\u7a7a\u95f4\u4e24\u4e2a\u5c42\u9762\uff0c\u7814\u7a76\u865a\u62df\u7a7a\u95f4\u4e2d\u4f4d\u7f6e\u8bed\u4e49\u7684\u8868\u8fbe\u4e0e\u91cd\u5efa\u65b9\u6cd5\uff0c\u53ca\u5176\u4e0e\u73b0\u5b9e\u7a7a\u95f4\u7684\u5173\u8054\u6620\u5c04\u673a\u7406\uff1b \u57fa\u4e8e\u4f4d\u7f6e\u7684\u4e2a\u6027\u5316\u63a8\u8350\u5e94\u7528\uff0c\u4ee5\u5317\u4eac\u3001\u4e0a\u6d77\u7b49\u7279\u5927\u57ce\u5e02\u4e3a\u7814\u7a76\u5bf9\u8c61\uff0c\u5f00\u5c55\u60c5\u5883\u611f\u77e5\u7684\u4e2a\u6027\u5316\u65c5\u6e38\u666f\u70b9\u63a8\u8350\u3001\u57ce\u5e02\u5546\u4e1a\u7f51\u70b9\u7684\u8d2d\u7269\u63a8\u8350\u3001\u8bbe\u65bd\u9009\u5740\u63a8\u8350\u7b49\u4e09\u7c7b\u5e94\u7528\u793a\u8303\u3002  \u901a\u8fc7\u4e0a\u8ff0\u7814\u7a76\uff0c\u9762\u5411\u793e\u4ea4\u7f51\u6d88\u8d39\u6027\u5927\u6570\u636e\uff0c\u7a81\u7834\u4f4d\u7f6e\u6570\u636e\u81ea\u52a8\u53d1\u73b0\u548c\u6a21\u7cca\u4f4d\u7f6e\u7cbe\u51c6\u5316\u7b49\u5173\u952e\u95ee\u9898\uff0c\u6784\u5efa\u4eba-\u5730-\u65f6\u6846\u67b6\u4e0b\u5730\u7406\u5927\u6570\u636e\u4f4d\u7f6e\u591a\u91cd\u611f\u77e5\u7684\u7406\u8bba\u6a21\u578b\u4e0e\u6280\u672f\u4f53\u7cfb\uff0c\u5efa\u7acb\u5730\u7406\u5927\u6570\u636e\u6a21\u7cca\u4f4d\u7f6e\u7cbe\u51c6\u5316\u8868\u8fbe\u6a21\u578b\u3001\u5b9e\u73b0\u5730\u7406\u4f4d\u7f6e\u53ca\u7a7a\u95f4\u5173\u7cfb\u7684\u81ea\u52a8\u53d1\u73b0\u4e0e\u5339\u914d\u3001\u4f4d\u7f6e\u8bed\u4e49\u5173\u8054\u4e0e\u7a7a\u95f4\u884c\u4e3a\u63a8\u6d4b\u3001\u865a\u62df\u7a7a\u95f4\u4f4d\u7f6e\u53ca\u573a\u6240\u8868\u8fbe\u4e0e\u91cd\u5efa\u7b49\u5173\u952e\u6280\u672f\uff0c\u5e76\u5f00\u5c55\u57fa\u4e8e\u4f4d\u7f6e\u8bed\u4e49\u7684\u57ce\u5e02\u7a7a\u95f4\u5206\u6790\u4e0e\u4e2a\u6027\u5316\u63a8\u8350\u5e94\u7528\uff0c\u6700\u7ec8\u5b9e\u73b0\u5730\u7406\u5927\u6570\u636e\u4f4d\u7f6e\u591a\u91cd\u611f\u77e5\u3002\n\u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u683c\u5c40\u7406\u89e3\u4e0e\u900f\u89c6 \u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u683c\u5c40\u7406\u89e3\u4e0e\u900f\u89c6\u662f\u4ee5\u7cbe\u7ec6\u5316\u5730\u7406\u7a7a\u95f4\u7ed3\u6784\u6784\u5efa\u4e3a\u57fa\u7840\uff0c\u9075\u5faa\u4ece\u7a7a\u95f4\u3001\u65f6\u95f4\u3001\u5c5e\u6027\u4e09\u4e2a\u7ef4\u5ea6\u5bf9\u5bf9\u5730\u89c2\u6d4b\u5927\u6570\u636e\u9690\u542b\u7684\u65f6\u7a7a\u6a21\u5f0f\u8fdb\u884c\u6316\u6398\u7684\u601d\u8def\uff0c\u5206\u522b\u8bbe\u8ba1\u4e86\u591a\u5c42\u611f\u77e5\u5668\uff08\u7a7a\u95f4\uff09\u3001\u65f6\u7a7a\u534f\u540c\u53cd\u6f14\uff08\u65f6\u95f4\uff09\u548c\u591a\u7c92\u5ea6\u51b3\u7b56\u5668\uff08\u5c5e\u6027\uff09\u4e09\u5927\u5173\u952e\u6a21\u578b\uff0c\u91cd\u70b9\u89e3\u51b3\u5730\u7406\u5b9e\u4f53\u5f62\u6001\u3001\u7c7b\u578b\u3001\u6f14\u5316\u4e0e\u9690\u542b\u6a21\u5f0f\u6316\u6398\u7b49\u5173\u952e\u95ee\u9898\uff0c\u5e76\u63d0\u4f9b\u9762\u5411\u4e8b\u4ef6\u53d1\u751f\u7684\u56fe\u8c31\u8ba1\u7b97\u4e0e\u5e94\u7528\u670d\u52a1\u3002\u5177\u4f53\u6765\u8bb2\uff0c\u662f\u5728\u5bf9\u7a7a\u95f4\u7ed3\u6784\u8fdb\u884c\u7c92\u5316\u57fa\u7840\u4e0a\uff0c\u9010\u6b65\u878d\u5165\u65f6\u5e8f\u6f14\u5316\u7279\u5f81\u3001\u81ea\u7136\u4e0e\u793e\u4f1a\u7ecf\u6d4e\u9759\u6001\u5c5e\u6027\u4ee5\u53ca\u751f\u4ea7\u6d3b\u52a8\u52a8\u6001\u4fe1\u606f\uff0c\u5bf9\u57fa\u4e8e\u56fe\u6591\u7684\u65f6\u7a7a\u5206\u5e03\u7279\u5f81\u3001\u9690\u542b\u529f\u80fd\u5c5e\u6027\u3001\u65f6\u7a7a\u52a8\u529b\u673a\u5236\u7b49\u8fdb\u884c\u7cbe\u51c6\u6a21\u5f0f\u63a8\u6d4b\u4e0e\u4e13\u9898\u5236\u56fe\uff0c\u8fdb\u800c\u4e3a\u5e94\u7528\u793a\u8303\u63d0\u4f9b\u8d44\u6e90\u914d\u7f6e\u89c4\u5212\u3001\u5b9c\u5c45\u73af\u5883\u8bc4\u4ef7\u548c\u751f\u4ea7\u6d3b\u52a8\u51b3\u7b56\u7b49\u4fe1\u606f\u670d\u52a1\u3002\n \u5730\u7406\u56fe\u6591\u7a7a\u95f4\u7ed3\u6784\u611f\u77e5\u4e0e\u53d8\u5316\u66f4\u65b0\uff0c\u7814\u53d1\u591a\u5c42\u611f\u77e5\u5668\u6a21\u578b\uff0c\u63a2\u7d22\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u56fe\u6591\u5f62\u6001\u63d0\u53d6\u3001\u57fa\u4e8e\u8fc1\u79fb\u5b66\u4e60\u7684\u56fe\u6591\u7c7b\u578b\u5224\u522b\u3001\u56fe\u6591\u5f62\u6001\u7ed3\u6784\u4e0e\u7c7b\u578b\u4e0e\u6307\u6807\u7684\u6f14\u5316\u66f4\u65b0\u673a\u5236\u3001\u56fe\u6591\u7a7a\u95f4\u7ed3\u6784\u6784\u5efa\u4e0e\u591a\u5c3a\u5ea6\u8868\u8fbe\uff0c\u5b9e\u73b0\u56fe\u6591\u7a7a\u95f4\u683c\u5c40\u7684\u611f\u77e5\u5c42\u7406\u89e3\uff1b \u5730\u7406\u56fe\u6591\u65f6\u5e8f\u5206\u6790\u4e0e\u6307\u6807\u53cd\u6f14\uff0c\u7814\u7a76\u65f6\u7a7a\u534f\u540c\u53cd\u6f14\u6a21\u578b\uff0c\u5728\u56fe\u6591\u7ed3\u6784\u4e0a\u878d\u5408\u5404\u79cd\u6765\u6e90\u7684\u9065\u611f\u6570\u636e\uff0c\u53d1\u5c55\u57fa\u4e8e\u56fe\u6591\u7684\u65f6\u5e8f\u6570\u636e\u5904\u7406\u4e0e\u7279\u5f81\u91cd\u5efa\uff0c\u7814\u7a76\u5229\u7528\u65f6\u5e8f\u53d8\u5316\u53cd\u6f14\u56fe\u6591\u6750\u8d28\u3001\u8986\u76d6\u7c7b\u578b\u4ee5\u53ca\u57ce\u5e02\u73af\u5883\u5b9a\u91cf\u6307\u6807\u7684\u65b9\u6cd5\uff0c\u5bf9\u53d8\u5316\u6307\u6807\u8fdb\u884c\u5b9a\u91cf\u8ba1\u7b97\u4e0e\u5206\u6790\u8bc4\u4ef7\uff0c\u5b9e\u73b0\u5bf9\u5730\u7406\u5927\u6570\u636e\u673a\u7406\u5c42\u7684\u7406\u89e3\uff1b \u56fe\u6591\u52a8\u529b\u6a21\u5f0f\u6316\u6398\u4e0e\u65f6\u7a7a\u89e3\u6790\uff0c\u5728\u6536\u96c6\u591a\u6e90\u591a\u6a21\u6001\u6570\u636e\u57fa\u7840\u4e0a\uff0c\u7814\u7a76\u56fe\u6591\u201c\u9759-\u52a8\u201d\u6001\u5c5e\u6027\u6269\u5c55\u65b9\u6cd5\u4ee5\u53ca\u57fa\u4e8e\u591a\u7c92\u5ea6\u8ba1\u7b97\u7684\u89c4\u5219\u63d0\u53d6\u4e0e\u63a8\u6d4b\u5236\u56fe\u65b9\u6cd5\uff0c\u5e76\u7814\u5236\u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u89e3\u6790\u5de5\u5177\u96c6\uff0c\u901a\u8fc7\u56fe\u6591\u5355\u5143\u7684\u591a\u6e90\u4fe1\u606f\u805a\u5408\uff0c\u9010\u5c42\u5b9e\u73b0\u5730\u7406\u5927\u6570\u636e\u9690\u542b\u529f\u80fd\u5c5e\u6027\u7684\u900f\u89c6\u548c\u65f6\u7a7a\u52a8\u529b\u6a21\u5f0f\u7684\u6316\u6398\uff1b \u5730\u7406\u6001\u52bf\u56fe\u8c31\u8ba1\u7b97\u4e0e\u5e94\u7528\u670d\u52a1\uff0c\u57fa\u4e8e\u4ee5\u4e0a\u4e09\u5927\u7814\u7a76\u5185\u5bb9\uff0c\u7814\u7a76\u8d44\u6e90\u914d\u7f6e\u56fe\u8c31\u3001\u5c45\u4f4f\u73af\u5883\u56fe\u8c31\u4ee5\u53ca\u751f\u4ea7\u6d3b\u52a8\u56fe\u8c31\u7684\u5236\u4f5c\u548c\u670d\u52a1\uff0c\u5e76\u9009\u62e9\u76f8\u5173\u7814\u7a76\u533a\u5f00\u5c55\u5e94\u7528\u793a\u8303\uff0c\u4e3a\u9879\u76ee\u7814\u7a76\u63d0\u4f9b\u9762\u5411\u4e8b\u4ef6\u53d1\u751f\u7684\u56fe\u8c31\u8ba1\u7b97\u4e0e\u5e94\u7528\u670d\u52a1\u652f\u6491\u3002  \u5730\u7406\u5927\u6570\u636e\u591a\u5143\u6d41\u534f\u540c\u8ba1\u7b97 \u5730\u7406\u5927\u6570\u636e\u591a\u5143\u6d41\u534f\u540c\u8ba1\u7b97\u5c06\u56f4\u7ed5\u57ce\u5e02\u6d41\u52a8\u548c\u533a\u57df\u4ea4\u4e92\u7684\u5e94\u7528\u95ee\u9898\uff0c\u89e3\u51b3\u5730\u7406\u6d41\u6570\u636e\u7684\u4e92\u4f5c\u7528\u89e3\u6790\u4e0e\u7cfb\u7edf\u5206\u6790\u7b49\u5173\u952e\u95ee\u9898\u3002\n \u5730\u7406\u6d41\u65f6\u7a7a\u8868\u8fbe\u6a21\u578b\uff0c\u7814\u7a76\u5730\u7406\u6d41\u8fc7\u7a0b\u7684\u8868\u8fbe\u6a21\u578b\uff0c\u6784\u5efa\u5730\u7406\u591a\u5143\u6d41\u5bf9\u8c61\u7684\u65f6\u7a7a\u7edf\u4e00\u6846\u67b6\u548c\u534f\u540c\u8868\u8fbe\u65b9\u6cd5\uff1b \u5730\u7406\u6d41\u7a7a\u95f4\u7684\u534f\u540c\u8ba1\u7b97\u4e0e\u6a21\u5f0f\u5206\u6790\uff0c\u7814\u7a76\u5730\u7406\u6d41\u4f4d\u7f6e\u3001\u5730\u7406\u6d41\u4e8b\u4ef6\u7684\u5173\u8054\u5206\u6790\u65b9\u6cd5\uff0c\u6784\u5efa\u5730\u7406\u6d41\u8981\u7d20\u534f\u540c\u6a21\u5f0f\u6316\u6398\u6a21\u578b\uff1b \u5730\u7406\u591a\u5143\u6d41\u7f51\u7edc\u7ed3\u6784\u6d4b\u5ea6\u4e0e\u8bc6\u522b\uff0c\u7814\u7a76\u5730\u7406\u591a\u5143\u6d41\u7f51\u7edc\u6a21\u578b\u7684\u6784\u5efa\u65b9\u6cd5\u3001\u7f51\u7edc\u7ed3\u6784\u7684\u6d4b\u5ea6\u6307\u6807\u53ca\u7f51\u7edc\u6a21\u5f0f\u7684\u8bc6\u522b\u65b9\u6cd5\uff1b \u5730\u7406\u591a\u5143\u6d41\u8981\u7d20\u4e92\u4f5c\u7528\u89e3\u6790\uff0c\u4ee5\u57ce\u5e02\u6d41\u4e3a\u5bf9\u8c61\u7814\u7a76\u5176\u4e92\u4f5c\u7528\u5f71\u54cd\u673a\u7406\u4ee5\u53ca\u76f8\u5173\u6a21\u578b\uff1b \u5730\u7406\u591a\u5143\u6d41\u7684\u4e0d\u786e\u5b9a\u6027\u5206\u6790\uff0c\u7814\u7a76\u5730\u7406\u591a\u5143\u6d41\u5206\u6790\u7684\u4e0d\u786e\u5b9a\u6027\u6765\u6e90\u3001\u5206\u7c7b\u53ca\u8868\u8fbe\uff0c\u8bc4\u4f30\u5730\u7406\u591a\u5143\u6d41\u5206\u6790\u65b9\u6cd5\u7684\u4e0d\u786e\u5b9a\u6027\uff1b \u5730\u7406\u591a\u5143\u6d41\u65f6\u7a7a\u8fc7\u7a0b\u4eff\u771f\u6a21\u578b\u4e0e\u5e94\u7528\uff0c\u4ee5\u5317\u4eac\u4e3a\u4ee3\u8868\u7684\u4eac\u6d25\u5180\u5178\u578b\u57ce\u5e02\u53ca\u82cf\u5dde\u3001\u6a2a\u7434\u5b9e\u9a8c\u533a\u7b49\u57ce\u5e02\u7cfb\u7edf\u4e3a\u4f8b\uff0c\u7814\u7a76\u5730\u7406\u591a\u5143\u6d41\u4e92\u4f5c\u7528\u6a21\u578b\u4e0b\u7684\u6f14\u5316\u8fc7\u7a0b\u6a21\u62df\u4e0e\u60c5\u666f\u5206\u6790\uff0c\u5e94\u7528\u4e8e\u57ce\u5e02\u516c\u5171\u8d44\u6e90\u5229\u7528\u7684\u8bc4\u4f30\u4e0e\u4f18\u5316\uff0c\u4e3a\u57ce\u5e02\u52a8\u6001\u76d1\u6d4b\u3001\u667a\u6167\u4ea4\u901a\u3001\u516c\u5171\u5b89\u5168\u3001\u57ce\u5e02\u89c4\u5212\u7b49\u63d0\u4f9b\u51b3\u7b56\u652f\u6491\u3002  \u5730\u7406\u5927\u6570\u636e\u5178\u578b\u4e8b\u4ef6\u53d1\u73b0\u53ca\u9884\u8b66 \u5730\u7406\u5927\u6570\u636e\u5178\u578b\u4e8b\u4ef6\u53d1\u73b0\u53ca\u9884\u8b66\u9488\u5bf9\u81ea\u7136\u548c\u4eba\u6587\u7b49\u5730\u7406\u4e8b\u4ef6\u7684\u65f6\u7a7a\u4e0d\u786e\u5b9a\u6027\u3001\u7a81\u53d1\u6027\u53ca\u590d\u6742\u5173\u8054\u6027\uff0c\u7cfb\u7edf\u7814\u7a76\u865a\u62df\u7a7a\u95f4\u4e0e\u7269\u7406\u4e16\u754c\u878d\u5408\u7684\u5730\u7406\u4e8b\u4ef6\u8ba4\u77e5\u8868\u8fbe\u3001\u65f6\u7a7a\u5f02\u5e38\u7279\u5f81\u63a2\u6d4b\u3001\u516c\u5171\u4e8b\u4ef6\u5feb\u901f\u53d1\u73b0\u53ca\u53ef\u4fe1\u9884\u8b66\u7b49\u5173\u952e\u6280\u672f\uff0c\u5e76\u9009\u62e9\u7a81\u53d1\u516c\u5171\u5b89\u5168\u3001\u91cd\u5927\u81ea\u7136\u707e\u5bb3\u7b49\u5178\u578b\u5730\u7406\u4e8b\u4ef6\u6848\u4f8b\u7814\u5236\u5730\u5b66\u4fe1\u606f\u56fe\u8c31\u3002\n\u4ee5\u5730\u7406\u4e8b\u4ef6\u5728\u771f\u5b9e\u5730\u7406\u7a7a\u95f4\u548c\u865a\u62df\u7f51\u7edc\u7a7a\u95f4\u7684\u8ba4\u77e5\u4e3a\u57fa\u7840\uff0c\u7814\u7a76\u4e0e\u6784\u5efa\u865a\u62df\u7a7a\u95f4\u70ed\u70b9\u4e8b\u4ef6\u53d1\u73b0\uff0c\u771f\u5b9e\u5730\u7406\u7a7a\u95f4\u65f6\u7a7a\u5f02\u5e38\u63a2\u6d4b\u53ca\u878d\u5408\u591a\u6a21\u6001\u5730\u7406\u5927\u6570\u636e\u7684\u4e8b\u4ef6\u5730\u7406\u8bed\u4e49\u5173\u8054\u4e0e\u63a8\u7406\u65b9\u6cd5\u4f53\u7cfb\uff0c\u4e3a\u5168\u9762\u523b\u753b\u5730\u7406\u4e8b\u4ef6\u672c\u6e90\u3001\u8fc7\u7a0b\u53ca\u7ed3\u679c\u9884\u8b66\u5960\u5b9a\u57fa\u7840\u3002\n \u5730\u7406\u4e8b\u4ef6\u7684\u8ba4\u77e5\u4e0e\u5efa\u6a21\u3002\u7814\u7a76\u5730\u7406\u4e8b\u4ef6\u5728\u793e\u4ea4\u7f51\u7edc\u3001\u5a92\u4f53\u7b49\u865a\u62df\u7a7a\u95f4\u548c\u5ba2\u89c2\u4e16\u754c\u7684\u8868\u8c61\u3001\u4f20\u64ad\u548c\u65f6\u7a7a\u7fa4\u805a\u7279\u5f81\uff1b\u4e0d\u540c\u7c7b\u578b\u5730\u7406\u4e8b\u4ef6\u7684\u5206\u7c7b\u4f53\u7cfb\u53ca\u8ba4\u77e5\u7b49\uff0c\u5efa\u7acb\u5730\u7406\u4e8b\u4ef6\u7684\u6f14\u5316\u6982\u5ff5\u6a21\u578b\u53ca\u5f62\u5f0f\u5316\u8868\u8fbe\uff0c\u4e3a\u5730\u7406\u4e8b\u4ef6\u53d1\u73b0\u4e0e\u6316\u6398\u63d0\u4f9b\u7406\u8bba\u6846\u67b6\uff1b \u5730\u7406\u7a7a\u95f4\u4e0e\u865a\u62df\u7a7a\u95f4\u5f02\u5e38\u63a2\u6d4b\u4e0e\u6316\u6398\u3002\u57fa\u4e8e\u5730\u7406\u4e8b\u4ef6\u5728\u5730\u7406\u7a7a\u95f4\u548c\u865a\u62df\u7a7a\u95f4\u7684\u4ea7\u751f-\u6f14\u5316\u4f20\u64ad-\u7ea7\u8054\u7b49\u7684\u8ba4\u77e5\uff0c\u5f00\u5c55\u865a\u62df\u7a7a\u95f4\u7684\u7fa4\u805a\u884c\u4e3a\u4e0e\u4e8b\u4ef6\u53d1\u73b0\u7684\u53ef\u89c6\u5316\u8868\u8fbe\u3001\u5730\u7406\u7a7a\u95f4\u7684\u5f02\u5e38\u63a2\u6d4b\u4e0e\u6a21\u5f0f\u6316\u6398\u7814\u7a76\uff0c\u5efa\u7acb\u4e0d\u540c\u7a7a\u95f4\u4e0b\u4e0d\u540c\u7c7b\u578b\u5730\u7406\u4e8b\u4ef6\u7684\u70b9-\u6d41-\u683c\u5c40-\u7f51\u7edc\u7684\u591a\u5c42\u6b21\u3001\u591a\u5c3a\u5ea6\u5f02\u5e38\u63a2\u6d4b\u4e0e\u6316\u6398\u7684\u65b9\u6cd5\u4f53\u7cfb\uff1b \u5730\u7406\u4e8b\u4ef6\u53d1\u73b0\u4e0e\u91cd\u6784\u3002\u57fa\u4e8e\u865a\u62df\u7a7a\u95f4\u4e0e\u5730\u7406\u7a7a\u95f4\u7684\u5f02\u5e38\u63a2\u6d4b\u4e0e\u6a21\u5f0f\u6316\u6398\uff0c\u7814\u7a76\u5730\u7406\u4e8b\u4ef6\u5728\u865a\u62df\u7a7a\u95f4\u548c\u5730\u7406\u7a7a\u95f4\u4e4b\u95f4\u7684\u5173\u8054\u8026\u5408\u6a21\u5f0f\u53ca\u5f62\u5f0f\u5316\u8868\u8fbe\uff0c\u5efa\u7acb\u5730\u7406\u4e8b\u4ef6\u7684\u7a7a\u95f4\u8bed\u4e49\u6a21\u578b\uff0c\u548c\u57fa\u4e8e\u5730\u7406\u8bed\u4e49\u5173\u8054\u6a21\u5f0f\u6316\u6398\u53ca\u4e0d\u540c\u7a7a\u95f4\u4e92\u8054\u7684\u5386\u53f2\u4e8b\u4ef6\u91cd\u6784\u65b9\u6cd5\uff0c\u5b9e\u73b0\u5730\u7406\u4e8b\u4ef6\u4e0d\u540c\u7a7a\u95f4\u4e92\u8054\u4e0e\u53d1\u73b0\uff0c\u91cd\u6784\u4e0e\u53ef\u89c6\u5316\u7684\u65b9\u6cd5\u4f53\u7cfb\u3002 \u5730\u7406\u4e8b\u4ef6\u7684\u6a21\u62df\u4e0e\u9884\u8b66\u3002\u57fa\u4e8e\u4e0d\u540c\u7a7a\u95f4\u5730\u7406\u4e8b\u4ef6\u7684\u4e92\u8054\u4e0e\u91cd\u6784\uff0c\u7814\u7a76\u4e0d\u540c\u7c7b\u578b\u5730\u7406\u4e8b\u4ef6\u7a81\u53d1\u540e\u5728\u865a\u62df\u7a7a\u95f4\u548c\u5730\u7406\u7a7a\u95f4\u7684\u4fe1\u606f\u4f20\u64ad\u673a\u5236\u53ca\u7ea7\u8054\u6548\u5e94\uff0c\u5efa\u7acb\u5730\u7406\u4e8b\u4ef6\u7684\u201c\u7ea7\u8054\u6548\u5e94-\u6001\u52bf\u63a8\u6f14\u201d\u7684\u60c5\u666f\u6a21\u62df\u53ca\u63a8\u7406\u9884\u8b66\u65b9\u6cd5\uff0c\u5b9e\u73b0\u5730\u7406\u4e8b\u4ef6\u7684\u63d0\u524d\u9884\u8b66\u4e0e\u5e94\u6025\u51b3\u7b56\u3002 \u5178\u578b\u5730\u7406\u4e8b\u4ef6\u5feb\u901f\u53d1\u73b0\u4e0e\u9884\u8b66\u5b9e\u4f8b\u7814\u7a76\uff0c\u57fa\u4e8e\u4e0a\u8ff0\u6a21\u578b\u4e0e\u65b9\u6cd5\uff0c\u9009\u62e9\u57ce\u5e02\u4ea4\u901a\u3001\u91cd\u5927\u81ea\u7136\u707e\u5bb3\u4ee5\u53ca\u793e\u4f1a\u5b89\u5168\u7b49\u51e0\u4e2a\u9886\u57df\u7684\u5178\u578b\u4e8b\u4ef6\u6848\u4f8b\u5f00\u5c55\u4e0d\u540c\u7c7b\u578b\u5730\u7406\u4e8b\u4ef6\u7684\u8ba4\u77e5\u8868\u8fbe\u3001\u91cd\u6784\u53ca\u7ea7\u8054\u9884\u8b66\u7684\u5b9e\u4f8b\u7814\u7a76\uff0c\u6784\u5efa\u70b9-\u8f68\u8ff9-\u683c\u5c40-\u7f51\u7edc\u591a\u5c42\u6b21\uff0c\u591a\u7ef4\u5ea6\u7684\u4e8b\u4ef6\u53d1\u73b0\u4e0e\u9884\u8b66\u96c6\u6210\u4e0e\u51b3\u7b56\u5e73\u53f0\uff0c\u4e3a\u89e3\u51b3\u57ce\u5e02\u4ea4\u901a\u62e5\u5835\u3001\u81ea\u7136\u707e\u5bb3\u53ca\u516c\u5171\u5b89\u5168\u95ee\u9898\u63d0\u4f9b\u6280\u672f\u652f\u6491\u3002  \u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u89e3\u6790\u539f\u578b\u7cfb\u7edf \u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u89e3\u6790\u539f\u578b\u7cfb\u7edf\uff0c\u901a\u8fc7\u5efa\u7acb\u57fa\u4e8e\u5927\u6570\u636e\u4e91\u5e73\u53f0\u7684\u5730\u7406\u5927\u6570\u636e\u5206\u5e03\u5f0f\u8ba1\u7b97\u4e0e\u6a21\u578b\u96c6\u6210\u5e73\u53f0\uff0c\u5b9e\u73b0\u5730\u7406\u5927\u6570\u636e\u7684\u65f6\u7a7a\u89e3\u6790\u5e76\u5f00\u5c55\u5e94\u7528\u793a\u8303\u3002\n \u5730\u7406\u5927\u6570\u636e\u5b58\u50a8\u7ba1\u7406\u5e73\u53f0\uff0c\u7814\u7a76\u6d77\u91cf\u5730\u7406\u5927\u6570\u636e\u7684\u7d22\u5f15\u673a\u5236\u4e0e\u5b58\u50a8\u67b6\u6784\uff0c\u5b9e\u73b0\u591a\u6e90\u5730\u7406\u5927\u6570\u636e\u7684\u4e00\u4f53\u5316\u5b58\u50a8\u4e0e\u7ba1\u7406\uff1b \u5730\u7406\u5927\u6570\u636e\u9ad8\u6027\u80fd\u8ba1\u7b97\u67b6\u6784\uff0c\u7814\u7a76\u9488\u5bf9\u5730\u7406\u5927\u6570\u636e\u8ba1\u7b97\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97\u67b6\u6784\u4e0e\u9ad8\u6027\u80fd\u8ba1\u7b97\u6a21\u5f0f\uff0c\u6784\u5efa\u53ef\u62d3\u5c55\u7684\u5730\u7406\u5927\u6570\u636e\u9ad8\u6027\u80fd\u8ba1\u7b97\u73af\u5883\uff1b \u5730\u7406\u5927\u6570\u636e\u6a21\u578b\u7b97\u6cd5\u96c6\u6210\u73af\u5883\uff0c\u7814\u7a76\u677e\u8026\u5408\u6a21\u5f0f\u4e0b\u7684\u7cfb\u7edf\u96c6\u6210\u65b9\u5f0f\uff0c\u6784\u5efa\u7075\u6d3b\u7684\u5730\u7406\u5927\u6570\u636e\u5e94\u7528\u6a21\u578b\u7b97\u6cd5\u96c6\u6210\u5e73\u53f0\uff1b \u5730\u7406\u5927\u6570\u636e\u6316\u6398\u7684\u7b97\u6cd5\u6a21\u5757\uff0c100\u79cd\u5730\u7406\u5927\u6570\u636e\u89e3\u6790\u7b97\u6cd5\u7684\u4ee3\u7801\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u529f\u80fd\u6a21\u5757\u7684\u7cfb\u7edf\u96c6\u6210\u4e0e\u6d4b\u8bd5\uff1b \u5730\u7406\u5927\u6570\u636e\u53ef\u89c6\u5316\u5206\u6790\u6a21\u5757\uff0c\u7814\u7a76\u9762\u5411\u663e\u793a\u7ec8\u7aef\u7684\u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u52a8\u6001\u53ef\u89c6\u5316\u6280\u672f\uff0c\u5b9e\u73b0\u5730\u7406\u5927\u6570\u636e\u7684\u53ef\u89c6\u5316\u4ea4\u4e92\u5206\u6790\uff1b \u5730\u7406\u5927\u6570\u636e\u865a\u62df\u73af\u5883\u4eff\u771f\u6a21\u5757\uff0c\u7814\u7a76\u5730\u7406\u5927\u6570\u636e\u7684\u9ad8\u7ef4\u52a8\u6001\u8fc7\u7a0b\u8868\u8fbe\u4e0e\u865a\u62df\u73b0\u5b9e\u573a\u666f\u6a21\u62df\uff1b \u5730\u7406\u5927\u6570\u636e\u65f6\u7a7a\u89e3\u6790\u5e94\u7528\u6a21\u5757\uff0c\u9762\u5411\u4ea4\u901a\u3001\u7a81\u53d1\u81ea\u7136\u707e\u5bb3\u4ee5\u53ca\u793e\u4f1a\u5b89\u5168\u7b49\u9886\u57df\uff0c\u6784\u5efa\u4ee5\u5730\u7406\u4e8b\u4ef6\u63a8\u65ad\u4e0e\u9884\u8b66\u4e3a\u6838\u5fc3\u7684\u5e94\u7528\u5206\u6790\u6a21\u5757\u3002  \u611f\u5174\u8da3\u7684\u6280\u672f\u8def\u7ebf \u6d3b\u52a8\u611f\u77e5 \u6240\u5c5e\u5b50\u8bfe\u9898\uff1a2.2.3\u4f4d\u7f6e\u8bed\u4e49\u5173\u8054\u4e0e\u7a7a\u95f4\u884c\u4e3a\u63a8\u6d4b\n \u9488\u5bf9\u57fa\u4e8e\u6d77\u91cf\u5e26\u6709\u4e2a\u4f53\u65f6\u7a7a\u6807\u8bb0\u7684\u5730\u7406\u5927\u6570\u636e\uff0c\u611f\u77e5\u5176\u4e2d\u8574\u542b\u7684\u4eba\u7c7b\u79fb\u52a8\u6a21\u5f0f\u548c\u6d3b\u52a8\u7279\u5f81\uff0c\u901a\u8fc7\u7814\u7a76\u591a\u6e90\u5730\u7406\u5927\u6570\u636e\u878d\u5408\u7684\u65b9\u6cd5\uff0c\u5efa\u7acb\u4f4d\u7f6e\u6d3b\u52a8\u611f\u77e5\u7684\u65b9\u6cd5\u4f53\u7cfb\uff0c\u5b9e\u73b0\u4f4d\u7f6e\u6d3b\u52a8\u8bed\u4e49\u7684\u591a\u89d2\u5ea6\u8868\u8fbe\uff0c\u4e30\u5bcc\u5730\u7406\u4f4d\u7f6e\u7684\u8bed\u4e49\u4fe1\u606f\u3002    \u6d3b\u52a8\u611f\u77e5\uff1a\u5bf9\u4e2a\u4f53\u79fb\u52a8\u884c\u4e3a\u7684\u611f\u77e5\u548c\u5bf9\u6d3b\u52a8\u65f6\u53d8\u89c4\u5f8b\u7684\u611f\u77e5\n \u4e2a\u4f53\u79fb\u52a8\u884c\u4e3a\u4ece\u5fae\u89c2\u5c42\u9762\u4f53\u73b0\u4e86\u6d3b\u52a8\u7684\u65f6\u7a7a\u8db3\u8ff9\uff0c\u5728\u7edf\u8ba1\u610f\u4e49\u4e0a\u80fd\u591f\u53cd\u6620\u7fa4\u4f53\u6d3b\u52a8\u7684\u65f6\u7a7a\u89c4\u5f8b\u3002  \u505c\u7559\u65f6\u95f4\u5206\u5e03\u5bf9\u4eba\u7c7b\u4e2a\u4f53\u7684\u7a7a\u95f4\u6269\u6563\u901f\u5ea6\u6709\u7740\u51b3\u5b9a\u6027\u7684\u5f71\u54cd \u51fa\u884c\u8ddd\u79bb\u5206\u5e03\u5219\u76f4\u63a5\u53cd\u6620\u57ce\u5e02\u7684\u7ecf\u6d4e\u6027\u548c\u6548\u7387\uff0c\u5e76\u5bf9\u4f20\u67d3\u75c5\u7684\u4f20\u64ad\u8303\u56f4\u548c\u7fa4\u4f53\u611f\u67d3\u7387\u7b49\u6709\u663e\u8457\u7684\u5f71\u54cd \u8f68\u8ff9\u71b5\u5219\u96c6\u4e2d\u53cd\u6620\u4e86\u4e2a\u4f53\u5c45\u6c11\u79fb\u52a8\u6d3b\u52a8\u7684\u4e3b\u89c2\u610f\u613f\u548c\u60ef\u6027\u6a21\u5f0f\uff0c\u7a81\u51fa\u5c45\u6c11\u79fb\u52a8\u6d3b\u52a8\u5185\u5728\u7684\u91cd\u590d\u6027\u3001\u89c4\u5f8b\u6027\u548c\u53ef\u9884\u6d4b\u6027   \u6d3b\u52a8\u6307\u6807\u5728\u805a\u5408\u5c42\u9762\u4e0a\u5448\u73b0\u51fa\u968f\u65f6\u95f4\u7684\u6f14\u53d8\u89c4\u5f8b\uff0c\u4f5c\u4e3a\u5730\u7406\u4f4d\u7f6e\u6d3b\u52a8\u7684\u5178\u578b\u7279\u5f81\uff0c\u4e0e\u793e\u4f1a\u7ecf\u6d4e\u5c5e\u6027\u76f4\u63a5\u76f8\u5173\u3002    \u8fd0\u7528\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362\uff08Discrete Fourier Transform\uff09\u5206\u6790\u7684\u65b9\u6cd5\u53d1\u73b0\u5e8f\u5217\u7684\u4e3b\u8981\u65f6\u95f4\u533a\u95f4\u957f\u5ea6\uff08Dominant period length\uff09\uff0c\u4ece\u800c\u6316\u6398\u6d3b\u52a8\u7684\u5468\u671f\u6027\u7279\u5f81\u3002\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362\u662f\u5085\u91cc\u53f6\u53d8\u6362\u5728\u65f6\u57df\u548c\u9891\u57df\u4e0a\u90fd\u5448\u73b0\u79bb\u6563\u7684\u5f62\u5f0f\uff0c\u5728\u5904\u7406\u5730\u7406\u5927\u6570\u636e\u65f6\uff0c\u4ee5\u4f4d\u7f6e\u91c7\u6837\u7684\u65f6\u95f4\u987a\u5e8f\u4f5c\u4e3a\u65f6\u57df\u6a2a\u8f74\uff0c\u6d3b\u52a8\u6307\u6807\u5982\u7b7e\u5230\u6570\u3001\u4e0a\u4e0b\u8f66\u6570\u7b49\u4f5c\u4e3a\u9891\u57df\u7eb5\u8f74\uff0c\u5c06\u65f6\u57df\u4fe1\u53f7\u7684\u91c7\u6837\u53d8\u6362\u4e3a\u5728\u79bb\u6563\u65f6\u95f4\u5085\u91cc\u53f6\u53d8\u6362\uff08DTFT\uff09\u9891\u57df\u7684\u91c7\u6837\u3002\u901a\u5e38\uff0c\u57ce\u5e02\u5c45\u6c11\u6d3b\u52a8\u7684\u4e3b\u5bfc\u5468\u671f\u4e3a24\u5c0f\u65f6\uff0c\u53ca\u6bcf\u5929\u7684\u6d3b\u52a8\u89c4\u5f8b\u5927\u4f53\u76f8\u4f3c\u3002\n  \u5173\u8054\u611f\u77e5 \u6240\u5c5e\u5b50\u8bfe\u9898\uff1a2.2.3\u4f4d\u7f6e\u8bed\u4e49\u5173\u8054\u4e0e\u7a7a\u95f4\u884c\u4e3a\u63a8\u6d4b\n \u9488\u5bf9\u5730\u7406\u573a\u6240\u4e4b\u95f4\u7684\u5173\u8054\u7279\u5f81\uff0c\u6d4b\u5ea6\u5730\u7406\u573a\u6240\u7684\u7a7a\u95f4\u8054\u7cfb\u72b6\u6001\uff0c\u5efa\u7acb\u7f51\u7edc\u7279\u5f81\u63d0\u53d6\u548c\u89c4\u5f8b\u6316\u6398\u65b9\u6cd5\uff0c\u523b\u753b\u7f51\u7edc\u7684\u5c40\u90e8\u805a\u96c6\u6027\u548c\u6574\u4f53\u7684\u8fde\u901a\u6027\u7b49\u7279\u5f81\uff0c\u5b9e\u73b0\u5730\u7406\u573a\u6240\u7684\u7f51\u7edc\u5173\u8054\u7279\u5f81\u611f\u77e5\uff0c\u4e30\u5bcc\u5730\u7406\u573a\u6240\u8bed\u4e49\u7684\u611f\u77e5\u5185\u5bb9\u3002   \u7f51\u7edc\u57fa\u672c\u7279\u5f81\u7814\u7a76\u5185\u5bb9\uff1a\u7f51\u7edc\u8ddd\u79bb\u7684\u6d4b\u5ea6\uff0c\u7f51\u7edc\u8fde\u901a\u6027\u6d4b\u5ea6\uff0c\u7ed3\u6784\u6d1e\u5206\u6790\uff0c\u5c0f\u56e2\u4f53\u5206\u6790\uff0c\u4ee5\u53ca\u7f51\u7edc\u4e2d\u5fc3\u6027\u5206\u6790 \u7f51\u7edc\u793e\u533a\u7ec4\u56e2\u8bc6\u522b\u7814\u7a76\u5185\u5bb9\uff1a\u5728\u57fa\u4e8e\u5173\u8054\u611f\u77e5\u6784\u5efa\u7684\u5d4c\u5165\u5f0f\u7a7a\u95f4\u7f51\u7edc\u4e2d\uff0c\u7531\u4e8e\u7f51\u7edc\u5b58\u5728\u5206\u5c42\u7ed3\u6784\u7279\u5f81\u4e14\u7f51\u7edc\u4e2d\u8282\u70b9\u7684\u5ea6\u5206\u5e03\u4e0d\u540c\uff0c\u67d0\u4e9b\u8282\u70b9\u7ec4\u5448\u73b0\u51fa\u5185\u90e8\u5bc6\u96c6\u5916\u90e8\u677e\u6563\u7684\u7ed3\u6784\u7279\u5f81\uff0c\u8fd9\u4e9b\u8282\u70b9\u7ec4\u901a\u5e38\u88ab\u79f0\u4e3a\u201c\u793e\u56e2\u201d\u3002\u5bf9\u7f51\u7edc\u4e2d\u7684\u793e\u533a\u7ec4\u56e2\u8bc6\u522b\u662f\u5173\u8054\u611f\u77e5\u4e2d\u7684\u91cd\u8981\u7814\u7a76\u5185\u5bb9 \u7f51\u7edc\u62d3\u6251\u7ed3\u6784\u5206\u6790\u53ca\u7f51\u7edc\u6700\u4f18\u5316\u7814\u7a76\uff1a\u7f51\u7edc\u805a\u96c6\u7cfb\u6570\u3001\u7f51\u7edc\u5206\u5c42\u6a21\u5757\u5ea6\u7814\u7a76\u3001\u7f51\u7edc\u62d3\u6251\u7ed3\u6784\u6f14\u5316\uff0c\u4ee5\u53ca\u57fa\u4e8e\u5730\u7406\u7ea6\u675f\u7684\u7f51\u7edc\u6700\u4f18\u5316\u7814\u7a76\u3002  \u60c5\u611f\u611f\u77e5  \u5229\u7528\u5e26\u6709\u5730\u7406\u6807\u7b7e\u7684\u793e\u4ea4\u5a92\u4f53\u5927\u6570\u636e\uff0c\u5efa\u7acb\u65f6\u7a7a\u5206\u6790\u65b9\u6cd5\uff0c\u83b7\u53d6\u7279\u5b9a\u4f4d\u7f6e\u6216\u573a\u6240\u7684\u7279\u5f81\u8bcd\uff0c\u611f\u77e5\u4e0e\u4f4d\u7f6e\u76f8\u5173\u7684\u60c5\u611f\u4fe1\u606f\uff0c\u5e76\u63a2\u7d22\u4eba\u4eec\u5bf9\u4e8e\u7279\u5b9a\u65f6\u95f4\u7684\u60c5\u611f\u54cd\u5e94\uff0c\u5b9e\u73b0\u5730\u7406\u573a\u6240\u7684\u60c5\u611f\u4fe1\u606f\u7684\u611f\u77e5\u3002   \u9488\u5bf9\u83b7\u53d6\u5230\u7684\u793e\u4ea4\u5a92\u4f53\u60c5\u611f\u6570\u636e\uff0c\u9996\u5148\u91c7\u7528\u6587\u672c\u8bed\u4e49\u6316\u6398\u65b9\u6cd5\u4ee5\u53ca\u56fe\u50cf\u8bc6\u522b\u548c\u6df1\u5ea6\u5b66\u4e60\u6316\u6398\u6570\u636e\u4e2d\u7684\u8bed\u4e49\u4fe1\u606f\uff0c\u5728\u8bed\u4e49\u4fe1\u606f\u63d0\u53d6\u7684\u57fa\u7840\u4e0a\uff0c\u8fd0\u7528\u51b3\u7b56\u6811\u3001\u5173\u8054\u89c4\u5219\u548c\u7c97\u7cd9\u96c6\u7b49\u57fa\u4e8e\u89c4\u5219\u7684\u5206\u7c7b\u65b9\u6cd5\u6216\u6734\u7d20\u8d1d\u53f6\u65af\u3001\u652f\u6301\u5411\u91cf\u673a\u3001K\u5747\u503c\u7b49\u57fa\u4e8e\u7edf\u8ba1\u7684\u5206\u7c7b\u65b9\u6cd5\u5bf9\u60c5\u611f\u8bed\u4e49\u7684\u7279\u5f81\u8fdb\u884c\u5206\u7c7b\uff0c\u5e76\u5c06\u6240\u5f97\u60c5\u611f\u6620\u5c04\u5230\u5730\u7406\u573a\u6240\u4e2d\uff0c\u5b9e\u73b0\u5730\u7406\u573a\u6240\u7684\u60c5\u611f\u4fe1\u606f\u8868\u8fbe\u3002\u6700\u7ec8\uff0c\u901a\u8fc7\u8bed\u4e49\u6316\u6398\u548c\u5206\u7c7b\u800c\u611f\u77e5\u5230\u7684\u5730\u7406\u4f4d\u7f6e\u60c5\u611f\u8bed\u4e49\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5e94\u7528\u5230\u5177\u4f53\u7684\u573a\u666f\u4e2d\uff0c\u5982\uff1a\u83b7\u53d6\u7279\u5b9a\u5730\u7406\u4f4d\u7f6e\u7684\u529f\u80fd\u4e3b\u9898\u6216\u8bc4\u4ef7\u6307\u6807\u3001\u8ffd\u8e2a\u707e\u5bb3\u3001\u75be\u75c5\u548c\u4e8b\u6545\u7b49\u70ed\u70b9\u4e8b\u4ef6\u7684\u65f6\u7a7a\u6f14\u5316\u7b49  \u7a7a\u95f4\u884c\u4e3a\u63a8\u6d4b   \u9488\u5bf9\u8868\u5f81\u65f6\u7a7a\u4e2a\u4f53\u884c\u4e3a\u7684\u5730\u7406\u5927\u6570\u636e\uff0c\u901a\u8fc7\u5148\u9a8c\u77e5\u8bc6\u5e93\u548c\u7a7a\u95f4\u4e8b\u52a1\u6570\u636e\u5e93\uff0c\u6784\u5efa\u51fa\u4f4d\u7f6e\u8bed\u4e49-\u7a7a\u95f4\u884c\u4e3a\u89c4\u5219\u6570\u636e\u5e93\uff0c\u901a\u8fc7\u591a\u79cd\u65b9\u6cd5\u5728\u4f4d\u7f6e\u8bed\u4e49\u548c\u7a7a\u95f4\u884c\u4e3a\u3001\u4e0d\u540c\u7a7a\u95f4\u884c\u4e3a\u4ee5\u53ca\u4e0d\u540c\u4f4d\u7f6e\u4e4b\u95f4\u5efa\u7acb\u5173\u8054\u4e0e\u63a8\u65ad\u6a21\u578b\uff0c\u5b9e\u73b0\u5bf9\u4e2a\u4f53\u4ee5\u53ca\u7fa4\u4f53\u7684\u7a7a\u95f4\u51fa\u884c\u8f68\u8ff9\u63a8\u6d4b\u3001\u884c\u4e3a\u7c7b\u578b\u9884\u6d4b\u7b49\u5185\u5bb9\u3002\n \u6839\u636e\u4e2a\u4f53\u6216\u7fa4\u4f53\u5f53\u524d\u7684\u884c\u4e3a\uff0c\u63a8\u65ad\u5c06\u8981\u5230\u8fbe\u7684\u7a7a\u95f4\u4f4d\u7f6e \u6839\u636e\u5f53\u524d\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\u9884\u6d4b\u5c06\u8981\u53d1\u751f\u7684\u884c\u4e3a\u7c7b\u578b \u6839\u636e\u5f53\u524d\u4f4d\u7f6e\u63a8\u65ad\u5c06\u6765\u6240\u5904\u7684\u4f4d\u7f6e\uff0c\u6839\u636e\u5f53\u524d\u7a7a\u95f4\u884c\u4e3a\u63a8\u65ad\u5c06\u6765\u7684\u7a7a\u95f4\u884c\u4e3a     \u7a7a\u95f4\u884c\u4e3a\u63a8\u8350\u4e3b\u8981\u7684\u63a8\u6d4b\u6a21\u578b  \u7a7a\u95f4\u884c\u4e3a\u8d1d\u53f6\u65af\u6982\u7387(Bayesian probability)\u6a21\u578b: \u5bf9\u4e8e\u5386\u53f2\u884c\u4e3a\u53ca\u5bf9\u5e94\u4f4d\u7f6e\u8bed\u4e49\u6570\u636e\u5b66\u4e60\u7a7a\u95f4\u884c\u4e3a\u3001\u4f4d\u7f6e\u95f4\u7684\u6761\u4ef6\u6982\u7387\u5206\u5e03\uff0c\u7136\u540e\u57fa\u4e8e\u6b64\u6a21\u578b\uff0c\u5bf9\u7ed9\u5b9a\u7684\u884c\u4e3a\u6216\u4f4d\u7f6e\u4fe1\u606f\uff0c\u5229\u7528\u8d1d\u53f6\u65af\u5b9a\u7406\u6c42\u51fa\u540e\u9a8c\u6982\u7387\u6700\u5927\u7684\u4e0b\u4e00\u65f6\u523b\u7684\u7a7a\u95f4\u884c\u4e3a \u4ee5\u6df1\u5ea6\u5b66\u4e60(deep learning)\u65b9\u6cd5\u6784\u5efa\u9884\u6d4b\u6a21\u578b \u91c7\u7528\u7f51\u7edc\u5206\u6790(network analysis)\u7684\u65b9\u6cd5: \u5c06\u4f4d\u7f6e\u89c6\u4e3a\u7f51\u7edc\u7684\u8282\u70b9\uff0c\u5c06\u7a7a\u95f4\u884c\u4e3a\u9644\u52a0\u5230\u8282\u70b9\u4e0a\uff0c\u8fb9\u7684\u6743\u91cd\u53ef\u7531\u4f4d\u7f6e\u95f4\u7684\u8ddd\u79bb\u548c\u884c\u4e3a\u95f4\u7684\u8f6c\u79fb\u6982\u7387\u786e\u5b9a\u3002\u7531\u6b64\u5f62\u6210\u7f51\u7edc\u6a21\u578b\u540e\uff0c\u5c06\u4e2a\u4f53\u6216\u7fa4\u4f53\u5d4c\u5165\u5230\u7f51\u7edc\u8282\u70b9\u4e2d\uff0c\u4f9d\u636e\u7f51\u7edc\u6f14\u5316\u548c\u4f20\u64ad\u539f\u7406\uff0c\u5c06\u5386\u53f2\u7684\u884c\u4e3a\u548c\u4f4d\u7f6e\u4fe1\u606f\u3001\u5f53\u524d\u7684\u884c\u4e3a\u4fe1\u606f\u4f5c\u4e3a\u8f93\u5165\uff0c\u63a8\u6d4b\u5176\u6700\u6709\u53ef\u80fd\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u5e76\u5bf9\u8fde\u7eed\u7684\u7a7a\u95f4\u4f4d\u7f6e\u7684\u53d8\u5316\u8fdb\u884c\u6a21\u62df\u548c\u63a8\u65ad\u3002 \u96c6\u6210\u591a\u6e90\u4fe1\u606f\u7684\u5b9a\u6027\u7a7a\u95f4\u63a8\u7406(qualitative spatial reasoning)\u65b9\u6cd5    ",
        "description": "",
        "id": 57,
        "section": "posts",
        "tags": [
            "\u5730\u7406\u5927\u6570\u636e",
            "\u672d\u8bb0"
        ],
        "title": "\u5730\u7406\u5927\u6570\u636e\u6316\u6398\u4e13\u9879\u5b9e\u65bd\u65b9\u6848-\u672d\u8bb0",
        "uri": "/posts/notes/2020-07-31-%E5%9C%B0%E7%90%86%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%B8%93%E9%A1%B9%E5%AE%9E%E6%96%BD%E6%96%B9%E6%A1%88-%E6%9C%AD%E8%AE%B0/"
    },
    {
        "content": " \u62f7\u8d1d\u81ea\rGithub-StyleTransferTrilogy\u3002Github\u4e0a\u5237\u5230\u6bd4\u8f83\u597d\u73a9\u7684\u98ce\u683c\u8fc1\u79fb\u7684\u4ee3\u7801\u548c\u8bb2\u89e3\uff0c\u5e76\u505a\u90e8\u5206\u7b14\u8bb0\n \u98ce\u683c\u8fc1\u79fb\u4e09\u90e8\u66f2 (Style Transfer Trilogy) \u98ce\u683c\u8fc1\u79fb\u662f\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u4efb\u52a1\uff0c\u901a\u8fc7\u98ce\u683c\u8fc1\u79fb\u53ef\u4ee5\u4f7f\u4e00\u5f20\u56fe\u7247\u4fdd\u6301\u672c\u8eab\u5185\u5bb9\u5927\u81f4\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\u5448\u73b0\u51fa\u53e6\u5916\u4e00\u5f20\u56fe\u7247\u7684\u98ce\u683c\u3002\u672c\u6587\u4f1a\u4ecb\u7ecd\u4ee5\u4e0b\u4e09\u79cd\u98ce\u683c\u8fc1\u79fb\u65b9\u5f0f\u4ee5\u53ca\u5bf9\u5e94\u7684\u4ee3\u7801\u5b9e\u73b0\uff1a\n \u56fa\u5b9a\u98ce\u683c\u56fa\u5b9a\u5185\u5bb9\u7684\u666e\u901a\u98ce\u683c\u8fc1\u79fb\uff08\rA Neural Algorithm of Artistic Style\uff09 \u56fa\u5b9a\u98ce\u683c\u4efb\u610f\u5185\u5bb9\u7684\u5feb\u901f\u98ce\u683c\u8fc1\u79fb\uff08\rPerceptual Losses for Real-Time Style Transfer and Super-Resolution\uff09 \u4efb\u610f\u98ce\u683c\u4efb\u610f\u5185\u5bb9\u7684\u6781\u901f\u98ce\u683c\u8fc1\u79fb\uff08\rMeta Networks for Neural Style Transfer\uff09  \u672c\u6587\u6240\u4f7f\u7528\u7684\u73af\u5883\u662f pytorch 0.4.0\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u5176\u4ed6\u7684\u7248\u672c\uff0c\u7a0d\u4f5c\u4fee\u6539\u5373\u53ef\u6b63\u786e\u8fd0\u884c\u3002\n\u56fa\u5b9a\u98ce\u683c\u56fa\u5b9a\u5185\u5bb9\u7684\u666e\u901a\u98ce\u683c\u8fc1\u79fb \u6700\u65e9\u7684\u98ce\u683c\u8fc1\u79fb\u5c31\u662f\u5728\u56fa\u5b9a\u98ce\u683c\u3001\u56fa\u5b9a\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\u505a\u7684\u98ce\u683c\u8fc1\u79fb\uff0c\u8fd9\u662f\u6700\u6162\u7684\u65b9\u6cd5\uff0c\u4e5f\u662f\u6700\u7ecf\u5178\u7684\u65b9\u6cd5\u3002\n\u6700\u539f\u59cb\u7684\u98ce\u683c\u8fc1\u79fb\u7684\u601d\u8def\u5f88\u7b80\u5355\uff0c\u628a\u56fe\u7247\u5f53\u505a\u53ef\u4ee5\u8bad\u7ec3\u7684\u53d8\u91cf\uff0c\u901a\u8fc7\u4f18\u5316\u56fe\u7247\u6765\u964d\u4f4e\u4e0e\u5185\u5bb9\u56fe\u7247\u7684\u5185\u5bb9\u5dee\u5f02\u4ee5\u53ca\u964d\u4f4e\u4e0e\u98ce\u683c\u56fe\u7247\u7684\u98ce\u683c\u5dee\u5f02\uff0c\u8fed\u4ee3\u8bad\u7ec3\u591a\u6b21\u4ee5\u540e\uff0c\u751f\u6210\u7684\u56fe\u7247\u5c31\u4f1a\u4e0e\u5185\u5bb9\u56fe\u7247\u7684\u5185\u5bb9\u4e00\u81f4\uff0c\u540c\u65f6\u4e5f\u4f1a\u4e0e\u98ce\u683c\u56fe\u7247\u7684\u98ce\u683c\u4e00\u81f4\u3002\nVGG16 VGG16 \u662f\u4e00\u4e2a\u5f88\u7ecf\u5178\u7684\u6a21\u578b\uff0c\u5b83\u901a\u8fc7\u5806\u53e0 3x3 \u7684\u5377\u79ef\u5c42\u548c\u6c60\u5316\u5c42\uff0c\u5728 ImageNet \u4e0a\u83b7\u5f97\u4e86\u4e0d\u9519\u7684\u6210\u7ee9\u3002\u6211\u4eec\u4f7f\u7528\u5728 ImageNet \u4e0a\u7ecf\u8fc7\u9884\u8bad\u7ec3\u7684 VGG16 \u6a21\u578b\u53ef\u4ee5\u5bf9\u56fe\u50cf\u63d0\u53d6\u51fa\u6709\u7528\u7684\u7279\u5f81\uff0c\u8fd9\u4e9b\u7279\u5f81\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u53bb\u8861\u91cf\u4e24\u4e2a\u56fe\u50cf\u7684\u5185\u5bb9\u5dee\u5f02\u548c\u98ce\u683c\u5dee\u5f02\u3002\n\u5728\u8fdb\u884c\u98ce\u683c\u8fc1\u79fb\u4efb\u52a1\u65f6\uff0c\u6211\u4eec\u53ea\u9700\u8981\u63d0\u53d6\u5176\u4e2d\u51e0\u4e2a\u6bd4\u8f83\u91cd\u8981\u7684\u5c42\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9 pytorch \u81ea\u5e26\u7684\u9884\u8bad\u7ec3 VGG16 \u6a21\u578b\u7a0d\u4f5c\u4e86\u4e00\u4e9b\u4fee\u6539\uff1a\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  class VGG(nn.Module): def __init__(self, features): super(VGG, self).__init__() self.features = features self.layer_name_mapping = { &#39;3&#39;: &#34;relu1_2&#34;, &#39;8&#39;: &#34;relu2_2&#34;, &#39;15&#39;: &#34;relu3_3&#34;, &#39;22&#39;: &#34;relu4_3&#34; } for p in self.parameters(): p.requires_grad = False def forward(self, x): outs = [] for name, module in self.features._modules.items(): x = module(x) if name in self.layer_name_mapping: outs.append(x) return outs vgg16 = models.vgg16(pretrained=True) vgg16 = VGG(vgg16.features[:23]).to(device).eval()   \u7ecf\u8fc7\u4fee\u6539\u7684 VGG16 \u53ef\u4ee5\u8f93\u51fa relu1_2,relu2_2,relu3_3,relu4_3 \u8fd9\u51e0\u4e2a\u7279\u5b9a\u5c42\u7684\u7279\u5f81\u56fe\u3002\u4e0b\u9762\u8fd9\u4e24\u53e5\u4ee3\u7801\u5c31\u662f\u5b83\u7684\u7528\u6cd5\uff1a\n1 2  features = vgg16(input_img) content_features = vgg16(content_img)   \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5f53\u6211\u4eec\u4f7f\u7528 vgg16 \u5bf9 input_img \u8ba1\u7b97\u7279\u5f81\u65f6\uff0c\u5b83\u4f1a\u8fd4\u56de\u56db\u4e2a\u77e9\u9635\u7ed9 features\uff0c\u5047\u8bbe input_img \u7684\u5c3a\u5bf8\u662f [1, 3, 512, 512]\uff08\u56db\u4e2a\u7ef4\u5ea6\u5206\u522b\u4ee3\u8868 batch, channels, height, width\uff09\uff0c\u90a3\u4e48\u5b83\u8fd4\u56de\u7684\u56db\u4e2a\u77e9\u9635\u7684\u5c3a\u5bf8\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n relu1_2 [1, 64, 512, 512] relu2_2 [1, 128, 256, 256] relu3_3 [1, 256, 128, 128] relu4_3 [1, 512, 64, 64]  \u5185\u5bb9 \u6211\u4eec\u8fdb\u884c\u98ce\u683c\u8fc1\u79fb\u7684\u65f6\u5019\uff0c\u5fc5\u987b\u4fdd\u8bc1\u751f\u6210\u7684\u56fe\u50cf\u4e0e\u5185\u5bb9\u56fe\u50cf\u7684\u5185\u5bb9\u4e00\u81f4\u6027\uff0c\u4e0d\u7136\u98ce\u683c\u8fc1\u79fb\u5c31\u53d8\u6210\u827a\u672f\u521b\u4f5c\u4e86\u3002\u90a3\u4e48\u5982\u4f55\u8861\u91cf\u4e24\u5f20\u56fe\u7247\u7684\u5185\u5bb9\u5dee\u5f02\u5462\uff1f\u5f88\u7b80\u5355\uff0c\u901a\u8fc7 VGG16 \u8f93\u51fa\u7684\u7279\u5f81\u56fe\u6765\u8861\u91cf\u56fe\u7247\u7684\u5185\u5bb9\u5dee\u5f02\u3002\n\u63d0\u793a\uff1a\u5728\u672c\u65b9\u6cd5\u4e2d\u6ca1\u6709 Image Transform Net\uff0c\u4e3a\u4e86\u8868\u8ff0\u65b9\u4fbf\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u7b2c\u4e8c\u7bc7\u8bba\u6587\u4e2d\u7684\u56fe\u3002\n\u8fd9\u91cc\u4f7f\u7528\u7684\u635f\u5931\u51fd\u6570\u662f\uff1a\n\u5176\u4e2d\uff1a\n \u662f\u8f93\u5165\u56fe\u50cf\uff08\u4e5f\u5c31\u662f\u751f\u6210\u7684\u56fe\u50cf\uff09 \u662f\u5185\u5bb9\u56fe\u50cf \u4ee3\u8868 VGG16 \u5728\u8fd9\u91cc\u662f relu3_3 \u6307\u7684\u662f x \u56fe\u50cf\u8f93\u5165\u5230 VGG \u4ee5\u540e\u7684\u7b2c j \u5c42\u7684\u7279\u5f81\u56fe \u662f\u7b2c j \u5c42\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8  \u6839\u636e\u751f\u6210\u56fe\u50cf\u548c\u5185\u5bb9\u56fe\u50cf\u5728 relu3_3\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u7684\u5747\u65b9\u8bef\u5dee\uff08Mean Squared Error\uff09\u6765\u4f18\u5316\u751f\u6210\u7684\u56fe\u50cf\u4e0e\u5185\u5bb9\u56fe\u50cf\u4e4b\u95f4\u7684\u5185\u5bb9\u4e00\u81f4\u6027\u3002\n\u90a3\u4e48\u5199\u6210\u4ee3\u7801\u5c31\u662f\u8fd9\u6837\u7684\uff1a\n1  content_loss = F.mse_loss(features[2], content_features[2]) * content_weight   \u56e0\u4e3a\u6211\u4eec\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u7ecf\u8fc7\u5728 ImageNet \u9884\u8bad\u7ec3\u8fc7\u7684 VGG16 \u63d0\u53d6\u7684\u7279\u5f81\u56fe\uff0c\u6240\u4ee5\u5b83\u80fd\u63d0\u53d6\u51fa\u56fe\u50cf\u7684\u9ad8\u7ea7\u7279\u5f81\uff0c\u901a\u8fc7\u4f18\u5316\u751f\u6210\u56fe\u50cf\u548c\u5185\u5bb9\u56fe\u50cf\u7279\u5f81\u56fe\u7684 mse\uff0c\u53ef\u4ee5\u8feb\u4f7f\u751f\u6210\u56fe\u50cf\u7684\u5185\u5bb9\u4e0e\u5185\u5bb9\u56fe\u50cf\u5728 VGG16 \u7684 relu3_3 \u4e0a\u8f93\u51fa\u76f8\u4f3c\u7684\u7ed3\u679c\uff0c\u56e0\u6b64\u751f\u6210\u56fe\u50cf\u548c\u5185\u5bb9\u56fe\u50cf\u5728\u5185\u5bb9\u4e0a\u662f\u4e00\u81f4\u7684\u3002\n\u98ce\u683c Gram \u77e9\u9635 \u90a3\u4e48\u5982\u4f55\u8861\u91cf\u8f93\u5165\u56fe\u50cf\u4e0e\u98ce\u683c\u56fe\u50cf\u4e4b\u95f4\u7684\u5185\u5bb9\u5dee\u5f02\u5462\uff1f\u8fd9\u91cc\u5c31\u9700\u8981\u63d0\u51fa\u4e00\u4e2a\u65b0\u7684\u516c\u5f0f\uff0cGram \u77e9\u9635\uff1a\n\u5176\u4e2d\uff1a\n \u662f\u8f93\u5165\u56fe\u50cf\uff08\u4e5f\u5c31\u662f\u751f\u6210\u7684\u56fe\u50cf\uff09 \u662f\u98ce\u683c\u56fe\u50cf \u662f\u7b2c j \u5c42\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u7684\u5c3a\u5bf8\u3002 \u6307\u7684\u662f x \u56fe\u50cf\u7684\u7b2c j \u5c42\u7279\u5f81\u56fe\u5bf9\u5e94\u7684 Gram \u77e9\u9635\uff0c\u6bd4\u5982 64 \u4e2a\u5377\u79ef\u6838\u5bf9\u5e94\u7684\u5377\u79ef\u5c42\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u7684 Gram \u77e9\u9635\u7684\u5c3a\u5bf8\u662f \u3002 \u6307\u7684\u662f Gram \u77e9\u9635\u7b2c \u5750\u6807\u5bf9\u5e94\u7684\u503c\u3002 \u6307\u7684\u662f x \u56fe\u50cf\u8f93\u5165\u5230 VGG \u4ee5\u540e\u7684\u7b2c j \u5c42\u7684\u7279\u5f81\u56fe\uff0c\u6307\u7684\u662f\u7279\u5f81\u56fe \u5750\u6807\u5bf9\u5e94\u7684\u503c\u3002  Gram \u77e9\u9635\u7684\u8ba1\u7b97\u65b9\u6cd5\u5176\u5b9e\u5f88\u7b80\u5355\uff0cGram \u77e9\u9635\u7684 \u5750\u6807\u5bf9\u5e94\u7684\u503c\uff0c\u5c31\u662f\u7279\u5f81\u56fe\u7684\u7b2c \u5f20\u548c\u7b2c \u5f20\u56fe\u5bf9\u5e94\u5143\u7d20\u76f8\u4e58\uff0c\u7136\u540e\u5168\u90e8\u52a0\u8d77\u6765\u5e76\u4e14\u9664\u4ee5 \u7684\u7ed3\u679c\u3002\u6839\u636e\u516c\u5f0f\u6211\u4eec\u53ef\u4ee5\u5f88\u5bb9\u6613\u63a8\u65ad\u51fa Gram \u77e9\u9635\u662f\u5bf9\u79f0\u77e9\u9635\u3002\n\u5177\u4f53\u5230\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u4e0b\u9762\u7684\u51fd\u6570\uff1a\n1 2 3 4 5 6  def gram_matrix(y): (b, ch, h, w) = y.size() features = y.view(b, ch, w * h) features_t = features.transpose(1, 2) gram = features.bmm(features_t) / (ch * h * w) return gram   \u53c2\u8003\u94fe\u63a5\uff1a\n\rhttps://github.com/pytorch/examples/blob/0.4/fast_neural_style/neural_style/utils.py#L21-L26\n\u5047\u8bbe\u6211\u4eec\u8f93\u5165\u4e86\u4e00\u4e2a [1, 3, 512, 512] \u7684\u56fe\u50cf\uff0c\u4e0b\u9762\u5c31\u662f\u5404\u4e2a\u77e9\u9635\u7684\u5c3a\u5bf8\uff1a\n relu1_2 [1, 64, 512, 512]\uff0cgram [1, 64, 64] relu2_2 [1, 128, 256, 256]\uff0cgram [1, 128, 128] relu3_3 [1, 256, 128, 128]\uff0cgram [1, 256, 256] relu4_3 [1, 512, 64, 64]\uff0cgram [1, 512, 512]  \u98ce\u683c\u635f\u5931 \u6839\u636e\u751f\u6210\u56fe\u50cf\u548c\u98ce\u683c\u56fe\u50cf\u5728 relu1_2\u3001relu2_2\u3001relu3_3\u3001relu4_3 \u8f93\u51fa\u7684\u7279\u5f81\u56fe\u7684 Gram \u77e9\u9635\u4e4b\u95f4\u7684\u5747\u65b9\u8bef\u5dee\uff08MeanSquaredError\uff09\u6765\u4f18\u5316\u751f\u6210\u7684\u56fe\u50cf\u4e0e\u98ce\u683c\u56fe\u50cf\u4e4b\u95f4\u7684\u98ce\u683c\u5dee\u5f02\uff1a\n\u5176\u4e2d\uff1a\n \u662f\u8f93\u5165\u56fe\u50cf\uff08\u4e5f\u5c31\u662f\u751f\u6210\u7684\u56fe\u50cf\uff09 \u662f\u98ce\u683c\u56fe\u50cf \u6307\u7684\u662f x \u56fe\u50cf\u7684\u7b2c j \u5c42\u7279\u5f81\u56fe\u5bf9\u5e94\u7684 Gram \u77e9\u9635  \u90a3\u4e48\u5199\u6210\u4ee3\u7801\u5c31\u662f\u4e0b\u9762\u8fd9\u6837\uff1a\n1 2 3 4 5 6  style_grams = [gram_matrix(x) for x in style_features] style_loss = 0 grams = [gram_matrix(x) for x in features] for a, b in zip(grams, style_grams): style_loss += F.mse_loss(a, b) * style_weight   \u8bad\u7ec3 \u90a3\u4e48\u98ce\u683c\u8fc1\u79fb\u7684\u76ee\u6807\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u76f4\u63a5\u5c06\u4e24\u4e2a loss \u6309\u6743\u503c\u52a0\u8d77\u6765\uff0c\u7136\u540e\u5bf9\u56fe\u7247\u4f18\u5316 loss\uff0c\u5373\u53ef\u4f18\u5316\u51fa\u65e2\u6709\u5185\u5bb9\u56fe\u50cf\u7684\u5185\u5bb9\uff0c\u4e5f\u6709\u98ce\u683c\u56fe\u50cf\u7684\u98ce\u683c\u7684\u56fe\u7247\u3002\u4ee3\u7801\u5982\u4e0b\uff1a\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  input_img = content_img.clone() optimizer = optim.LBFGS([input_img.requires_grad_()]) style_weight = 1e6 content_weight = 1 run = [0] while run[0] &lt;= 300: def f(): optimizer.zero_grad() features = vgg16(input_img) content_loss = F.mse_loss(features[2], content_features[2]) * content_weight style_loss = 0 grams = [gram_matrix(x) for x in features] for a, b in zip(grams, style_grams): style_loss += F.mse_loss(a, b) * style_weight loss = style_loss + content_loss if run[0] % 50 == 0: print(&#39;Step {}: Style Loss: {:4f}Content Loss: {:4f}&#39;.format( run[0], style_loss.item(), content_loss.item())) run[0] += 1 loss.backward() return loss optimizer.step(f)   \u6b64\u5904\u4f7f\u7528\u4e86 LBFGS\uff0c\u6240\u4ee5 loss \u9700\u8981\u5305\u88c5\u5728\u4e00\u4e2a\u51fd\u6570\u91cc\uff0c\u4ee3\u7801\u53c2\u8003\u4e86\uff1a\nhttps://pytorch.org/tutorials/advanced/neural_style_tutorial.html\n\u6548\u679c \u6700\u7ec8\u6548\u679c\u5982\u56fe\u6240\u793a\uff1a\n\u53ef\u4ee5\u770b\u5230\u751f\u6210\u7684\u56fe\u50cf\u65e2\u6709\u98ce\u683c\u56fe\u50cf\u7684\u98ce\u683c\uff0c\u4e5f\u6709\u5185\u5bb9\u56fe\u50cf\u7684\u5185\u5bb9\uff0c\u5f88\u5b8c\u7f8e\u3002\u4e0d\u8fc7\u751f\u6210\u4e00\u5e45256x256 \u7684\u56fe\u50cf\u5728 1080ti \u4e0a\u9700\u898118.6s\uff0c\u8fd9\u4e2a\u65f6\u95f4\u633a\u957f\u7684\uff0c\u8c08\u4e0d\u4e0a\u5b9e\u65f6\u6027\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u6765\u770b\u770b\u7b2c\u4e8c\u7bc7\u8bba\u6587\u4e2d\u7684\u65b9\u6cd5\u3002\n\u56fa\u5b9a\u98ce\u683c\u4efb\u610f\u5185\u5bb9\u7684\u5feb\u901f\u98ce\u683c\u8fc1\u79fb \u6709\u4e86\u4e0a\u9762\u7684\u94fa\u57ab\uff0c\u7406\u89e3\u56fa\u5b9a\u98ce\u683c\u4efb\u610f\u5185\u5bb9\u7684\u5feb\u901f\u98ce\u683c\u8fc1\u79fb\u5c31\u7b80\u5355\u5f88\u591a\u4e86\u3002\u601d\u8def\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u5148\u642d\u5efa\u4e00\u4e2a\u8f6c\u6362\u7f51\u7edc\uff0c\u7136\u540e\u901a\u8fc7\u4f18\u5316\u8f6c\u6362\u7f51\u7edc\u7684\u6743\u503c\u6765\u5b9e\u73b0\u5feb\u901f\u98ce\u683c\u8fc1\u79fb\u3002\u7531\u4e8e\u8fd9\u4e2a\u8f6c\u6362\u7f51\u7edc\u53ef\u4ee5\u63a5\u53d7\u4efb\u610f\u56fe\u50cf\uff0c\u6240\u4ee5\u8fd9\u662f\u4efb\u610f\u5185\u5bb9\u7684\u98ce\u683c\u8fc1\u79fb\u3002\n\u6a21\u578b \u6a21\u578b\u7ed3\u6784\u5f88\u7b80\u5355\uff0c\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff1a\n \u964d\u7ef4\uff0c\u4e09\u5c42\u5377\u79ef\u5c42\uff0c\u9010\u6e10\u63d0\u5347\u901a\u9053\u6570\u4e3a128\uff0c\u5e76\u4e14\u901a\u8fc7 stride \u628a\u7279\u5f81\u56fe\u7684\u5bbd\u9ad8\u7f29\u5c0f\u4e3a\u539f\u6765\u7684\u516b\u5206\u4e4b\u4e00 5\u4e2a ResidualBlock \u5806\u53e0 \u5347\u7ef4\uff0c\u4e09\u5c42\u5377\u79ef\u5c42\uff0c\u9010\u6e10\u964d\u4f4e\u901a\u9053\u6570\u4e3a3\uff0c\u5e76\u4e14\u901a\u8fc7 nn.Upsample \u628a\u7279\u5f81\u56fe\u7684\u5bbd\u9ad8\u8fd8\u539f\u4e3a\u539f\u6765\u7684\u5927\u5c0f  \u5148\u964d\u7ef4\u518d\u5347\u7ef4\u662f\u4e3a\u4e86\u51cf\u5c11\u8ba1\u7b97\u91cf\uff0c\u4e2d\u95f4\u7684 5 \u4e2a Residual \u7ed3\u6784\u53ef\u4ee5\u5b66\u4e60\u5982\u4f55\u5728\u539f\u56fe\u4e0a\u6dfb\u52a0\u5c11\u91cf\u5185\u5bb9\uff0c\u6539\u53d8\u539f\u56fe\u7684\u98ce\u683c\u3002\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u770b\u770b\u4ee3\u7801\u3002\nConvLayer 1 2 3 4 5 6 7 8 9 10 11 12  def ConvLayer(in_channels, out_channels, kernel_size=3, stride=1, upsample=None, instance_norm=True, relu=True): layers = [] if upsample: layers.append(nn.Upsample(mode=&#39;nearest&#39;, scale_factor=upsample)) layers.append(nn.ReflectionPad2d(kernel_size // 2)) layers.append(nn.Conv2d(in_channels, out_channels, kernel_size, stride)) if instance_norm: layers.append(nn.InstanceNorm2d(out_channels)) if relu: layers.append(nn.ReLU()) return layers   \u9996\u5148\u6211\u4eec\u5b9e\u73b0\u4e86\u4e00\u4e2a\u51fd\u6570\uff0cConvLayer\uff0c\u5b83\u5305\u542b\uff1a\n \rnn.Upsample\uff08\u53ef\u9009\uff09 \rnn.ReflectionPad2d \rnn.Conv2d \rnn.InstanceNorm2d\uff08\u53ef\u9009\uff09 \rnn.ReLU\uff08\u53ef\u9009\uff09  \u56e0\u4e3a\u6bcf\u4e2a\u5377\u79ef\u5c42\u524d\u540e\u90fd\u53ef\u80fd\u4f1a\u7528\u5230\u8fd9\u4e9b\u5c42\uff0c\u4e3a\u4e86\u7b80\u5316\u4ee3\u7801\uff0c\u6211\u4eec\u5c06\u5b83\u5199\u6210\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u8fd9\u4e9b\u5c42\u7528\u4e8e\u642d\u5efa\u6a21\u578b\u3002\nResidualBlock 1 2 3 4 5 6 7 8 9 10  class ResidualBlock(nn.Module): def __init__(self, channels): super(ResidualBlock, self).__init__() self.conv = nn.Sequential( *ConvLayer(channels, channels, kernel_size=3, stride=1), *ConvLayer(channels, channels, kernel_size=3, stride=1, relu=False) ) def forward(self, x): return self.conv(x) + x   \u8fd9\u91cc\u5199\u7684\u5c31\u4e0d\u662f\u51fd\u6570\uff0c\u800c\u662f\u4e00\u4e2a\u7c7b\uff0c\u56e0\u4e3a\u5b83\u5185\u90e8\u5305\u542b\u8bb8\u591a\u5c42\uff0c\u800c\u4e14\u5e76\u4e0d\u662f\u7b80\u5355\u7684\u81ea\u4e0a\u800c\u4e0b\u7684\u7ed3\u6784\uff08Sequential\uff09\uff0c\u800c\u662f\u6709\u4e86\u8de8\u5c42\u7684\u8fde\u63a5\uff08self.conv(x) + x\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7ee7\u627f nn.Module\uff0c\u5b9e\u73b0 forward \u51fd\u6570\uff0c\u624d\u80fd\u5b9e\u73b0\u8de8\u5c42\u8fde\u63a5\u3002\nTransformNet \u6700\u540e\u8fd9\u4e2a\u6a21\u578b\u5c31\u5f88\u7b80\u5355\u4e86\uff0c\u7167\u7740\u8bba\u6587\u91cc\u7ed9\u51fa\u7684\u8868\u683c\u642d\u5efa\u5373\u53ef\u3002\u6211\u4eec\u8fd9\u91cc\u4e3a\u4e86\u5b9e\u9a8c\u65b9\u4fbf\uff0c\u6dfb\u52a0\u4e86 base \u53c2\u6570\uff0c\u5f53 base=8 \u65f6\uff0c\u5377\u79ef\u6838\u7684\u4e2a\u6570\u662f\u6309 8, 16, 32 \u9012\u589e\u7684\uff0c\u5f53 base=32 \u65f6\uff0c\u5377\u79ef\u6838\u4e2a\u6570\u662f\u6309 32, 64, 128 \u9012\u589e\u7684\u3002\u6709\u4e86\u8fd9\u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u6309\u9700\u589e\u52a0\u6a21\u578b\u89c4\u6a21\uff0cbase \u8d8a\u5927\uff0c\u56fe\u50cf\u8d28\u91cf\u8d8a\u597d\u3002\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  class TransformNet(nn.Module): def __init__(self, base=32): super(TransformNet, self).__init__() self.downsampling = nn.Sequential( *ConvLayer(3, base, kernel_size=9), *ConvLayer(base, base*2, kernel_size=3, stride=2), *ConvLayer(base*2, base*4, kernel_size=3, stride=2), ) self.residuals = nn.Sequential(*[ResidualBlock(base*4) for i in range(5)]) self.upsampling = nn.Sequential( *ConvLayer(base*4, base*2, kernel_size=3, upsample=2), *ConvLayer(base*2, base, kernel_size=3, upsample=2), *ConvLayer(base, 3, kernel_size=9, instance_norm=False, relu=False), ) def forward(self, X): y = self.downsampling(X) y = self.residuals(y) y = self.upsampling(y) return y   \u6570\u636e \u8bad\u7ec3\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 COCO train 2014\u3001val2014\u3001test2014\uff0c \u4e00\u5171\u6709 164k \u56fe\u50cf\uff0c\u5b9e\u9645\u4e0a\u539f\u8bba\u6587\u53ea\u7528\u4e86\u8bad\u7ec3\u96c6\uff0880k\uff09\u3002\u56fe\u50cf\u5bbd\u9ad8\u90fd\u662f256\u3002\n We resize each of the 80k training images to 256 \u00d7 256 and train our networks with a batch size of 4 for 40,000 iterations, giving roughly two epochs over the training data.\n 1 2 3 4 5 6 7 8 9 10 11 12  batch_size = 4 width = 256 data_transform = transforms.Compose([ transforms.Resize(width), transforms.CenterCrop(width), transforms.ToTensor(), tensor_normalizer, ]) dataset = torchvision.datasets.ImageFolder(&#39;/home/ypw/COCO/&#39;, transform=data_transform) data_loader = torch.utils.data.DataLoader(dataset, batch_size=batch_size, shuffle=True)   \u8fd4\u56de\uff1a\nDataset ImageFolder Number of datapoints: 164062 Root Location: /home/ypw/COCO/ Transforms (if any): Compose( Resize(size=256, interpolation=PIL.Image.BILINEAR) CenterCrop(size=(256, 256)) ToTensor() Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]) ) Target Transforms (if any): None \u5176\u4e2d\u7684 tensor_normalizer \u662f\u4e3a\u4e86\u4f7f\u7528 pytorch \u81ea\u5e26\u7684\u9884\u8bad\u7ec3\u6a21\u578b\uff0c\u5728\u5b98\u65b9\u6587\u6863\u4e2d\u63d0\u5230\u4e86\u8981\u8fdb\u884c\u9884\u5904\u7406\uff1a\rhttps://pytorch.org/docs/master/torchvision/models.html\n1 2 3  cnn_normalization_mean = [0.485, 0.456, 0.406] cnn_normalization_std = [0.229, 0.224, 0.225] tensor_normalizer = transforms.Normalize(mean=cnn_normalization_mean, std=cnn_normalization_std)   \u8bad\u7ec3 \u8d85\u53c2\u6570 \u867d\u7136\r\u5b98\u65b9\u5f00\u6e90\u7ed9\u51fa\u7684 style_weight \u662f 5\uff0c\u4f46\u662f\u6211\u8fd9\u91cc\u6d4b\u8bd5\u5f97\u5e76\u4e0d\u7406\u60f3\uff0c\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u9884\u8bad\u7ec3\u6743\u503c\u3001\u4e0d\u540c\u7684\u9884\u5904\u7406\u65b9\u5f0f\u9020\u6210\u7684\u5dee\u5f02\uff0c\u8bbe\u7f6e\u4e3a 1e5 \u662f\u6bd4\u8f83\u7406\u60f3\u7684\u3002\n We use Adam [51] with a learning rate of 1 \u00d7 10\u22123.\n \u4f18\u5316\u5668\u4f7f\u7528\u4e86\u8bba\u6587\u4e2d\u63d0\u5230\u7684 Adam 1e-3\u3002\n The output images are regularized with total variation regularization with a strength of between and , chosen via cross-validation per style target.\n tv_weight \u611f\u89c9\u6ca1\u6709\u592a\u5927\u53d8\u5316\uff0c\u6240\u4ee5\u6309\u8bba\u6587\u4e2d\u7ed9\u51fa\u7684\u53c2\u8003\u8bbe\u7f6e\u4e86 1e-6\u3002\n train our networks with a batch size of 4 for 40,000 iterations\n batch_size \u6309\u8bba\u6587\u8bbe\u7f6e\u4e3a\u4e864\u3002\n\u7531\u4e8e\u6211\u8fd9\u91cc\u4f7f\u7528\u7684\u56fe\u7247\u53d8\u591a\u4e86\uff0c\u6240\u4ee5\u4e3a\u4e86\u4fdd\u6301\u548c\u5b98\u65b9\u7684\u8bad\u7ec3 step \u4e00\u81f4\uff0840k\uff09\uff0c\u8bad\u7ec3\u4ee3\u6570\uff08epoch\uff09\u8bbe\u7f6e\u4e3a\u4e861\u3002\nTotalVariation  Total Variation Regularization. To encourage spatial smoothness in the output image , we follow prior work on feature inversion [6,20] and super- resolution [48,49] and make use of total variation regularizer .\n \u8bba\u6587\u4e2d\u63d0\u5230\u4e86\u4e00\u4e2a TV Loss\uff0c\u8fd9\u662f\u4e3a\u4e86\u5e73\u6ed1\u56fe\u50cf\u3002\u5b83\u7684\u8ba1\u7b97\u65b9\u6cd5\u5f88\u7b80\u5355\uff1a\n\u5c06\u56fe\u50cf\u6c34\u5e73\u548c\u5782\u76f4\u5e73\u79fb\u4e00\u4e2a\u50cf\u7d20\uff0c\u4e0e\u539f\u56fe\u76f8\u51cf\uff0c\u7136\u540e\u8ba1\u7b97\u7edd\u5bf9\u503c\u7684\u548c\uff0c\u5c31\u662f TotalVariation\u3002\n\u53c2\u8003\u94fe\u63a5\uff1a\rhttps://en.wikipedia.org/wiki/Total_variation_denoising\n\u4ee3\u7801 \u7531\u4e8e\u4ee3\u7801\u592a\u957f\uff0c\u8fd9\u91cc\u53ea\u8d34\u4e00\u4e9b\u5173\u952e\u4ee3\u7801\uff1a\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  for batch, (content_images, _) in pbar: optimizer.zero_grad() # \u4f7f\u7528\u98ce\u683c\u6a21\u578b\u9884\u6d4b\u98ce\u683c\u8fc1\u79fb\u56fe\u50cf content_images = content_images.to(device) transformed_images = transform_net(content_images) transformed_images = transformed_images.clamp(-3, 3) # \u4f7f\u7528 vgg16 \u8ba1\u7b97\u7279\u5f81 content_features = vgg16(content_images) transformed_features = vgg16(transformed_images) # content loss content_loss = content_weight * F.mse_loss(transformed_features[1], content_features[1]) # total variation loss y = transformed_images tv_loss = tv_weight * (torch.sum(torch.abs(y[:, :, :, :-1] - y[:, :, :, 1:])) + torch.sum(torch.abs(y[:, :, :-1, :] - y[:, :, 1:, :]))) # style loss style_loss = 0. transformed_grams = [gram_matrix(x) for x in transformed_features] for transformed_gram, style_gram in zip(transformed_grams, style_grams): style_loss += style_weight * F.mse_loss(transformed_gram, style_gram.expand_as(transformed_gram)) # \u52a0\u8d77\u6765 loss = style_loss + content_loss + tv_loss loss.backward() optimizer.step()   \u901a\u8fc7\u5bf9 loss \u7684\u4f18\u5316\uff0c\u8fdb\u800c\u7ea6\u675f\u6a21\u578b\u8f93\u51fa\u4e0e\u5185\u5bb9\u56fe\u50cf\u7684\u5185\u5bb9\u76f8\u4f3c\u3001\u4e0e\u98ce\u683c\u56fe\u50cf\u98ce\u683c\u76f8\u4f3c\u7684\u56fe\u50cf\uff0c\u4ece\u800c\u5f97\u5230\u4e00\u4e2a\u53ef\u4ee5\u8f83\u5feb\u901f\u5ea6\u8f93\u51fa\u98ce\u683c\u8fc1\u79fb\u56fe\u50cf\u7684\u6a21\u578b\u3002\n\u6548\u679c \u6700\u7ec8\u6548\u679c\u5982\u56fe\u6240\u793a\uff1a\n\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u4efb\u610f\u5185\u5bb9\u56fe\u7247\uff0c\u8f6c\u6362\u7f51\u7edc\u90fd\u80fd\u8f6c\u6362\u4e3a\u56fa\u5b9a\u98ce\u683c\u7684\u56fe\u50cf\u3002\u6839\u636e\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u8fdb\u884c\u7684\u6d4b\u901f\uff0c1080ti \u53ef\u4ee5\u57284.82\u79d2\u5185\u5b8c\u6210 1000 \u5f20\u56fe\u50cf\u7684\u98ce\u683c\u8fc1\u79fb\uff0c\u76f8\u5f53\u4e8e207fps\uff0c\u53ef\u4ee5\u8bf4\u662f\u5177\u6709\u4e86\u5b9e\u65f6\u6027\uff1a\n\u4f46\u662f\u6574\u4e2a\u6a21\u578b\u7684\u8bad\u7ec3\u65f6\u95f4\u9700\u89811\u5c0f\u65f654\u5206\u949f\uff0c\u5982\u679c\u6211\u4eec\u60f3\u505a\u4efb\u610f\u98ce\u683c\u56fe\u50cf\u7684\u98ce\u683c\u8fc1\u79fb\uff0c\u8fd9\u4e2a\u65f6\u95f4\u51e0\u4e4e\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\uff0c\u56e0\u6b64\u8ba9\u6211\u4eec\u6765\u770b\u770b\u7b2c\u4e09\u7bc7\u8bba\u6587\u7684\u601d\u8def\u3002\n\u4efb\u610f\u98ce\u683c\u4efb\u610f\u5185\u5bb9\u7684\u6781\u901f\u98ce\u683c\u8fc1\u79fb \u9996\u5148\u6211\u4eec\u5148\u5bf9\u4e09\u79cd\u60c5\u51b5\u8fdb\u884c\u603b\u7ed3\uff1a\n\u60c5\u51b51 \u5176\u4e2d\uff1a\n \u662f\u5185\u5bb9\u635f\u5931\u51fd\u6570 \u662f\u98ce\u683c\u635f\u5931\u51fd\u6570 \u662f\u5185\u5bb9\u6743\u91cd \u662f\u98ce\u683c\u6743\u91cd \u662fVGG16\u7684\u56fa\u5b9a\u6743\u503c \u662f\u98ce\u683c\u56fe\u50cf \u662f\u5185\u5bb9\u56fe\u50cf \u662f\u8f93\u5165\u56fe\u50cf  \u90a3\u4e48\u901a\u8fc7\u5bf9\u8f93\u5165\u56fe\u50cf \u8fdb\u884c\u8bad\u7ec3\uff0c\u6211\u4eec\u80fd\u591f\u5f97\u5230\u56fa\u5b9a\u98ce\u683c\u3001\u56fa\u5b9a\u5185\u5bb9\u7684\u98ce\u683c\u8fc1\u79fb\u56fe\u50cf\u3002\n\u60c5\u51b52 \u5176\u4e2d\uff1a\n \u662f\u751f\u6210\u56fe\u50cf\uff0c\u662f\u56fe\u50cf\u8f6c\u6362\u7f51\u7edc  \u901a\u8fc7\u5bf9\u6743\u503c\u7684\u4f18\u5316\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5feb\u901f\u98ce\u683c\u8fc1\u79fb\u6a21\u578b\uff0c\u5b83\u80fd\u591f\u5bf9\u4efb\u4f55\u5185\u5bb9\u56fe\u50cf\u8fdb\u884c\u98ce\u683c\u8f6c\u6362\uff0c\u8f93\u51fa\u540c\u4e00\u79cd\u98ce\u683c\u7684\u98ce\u683c\u8fc1\u79fb\u56fe\u50cf\u3002\n\u60c5\u51b53  \u662f \u7684\u6743\u503c \u662f\u8f6c\u6362\u7f51\u7edc\u7684\u6743\u503c\uff0c\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u8bf4\u8f6c\u6362\u7f51\u7edc\u7684\u6743\u503c\u662f MetaNet \u901a\u8fc7\u98ce\u683c\u56fe\u50cf\u751f\u6210\u7684\u3002 \u662f\u8f6c\u6362\u7f51\u7edc\u751f\u6210\u7684\u56fe\u50cf\uff0c  \u603b\u7684\u6765\u8bf4\u5c31\u662f\u98ce\u683c\u56fe\u50cf\u8f93\u5165 \u5f97\u5230\u8f6c\u6362\u7f51\u7edc \uff0c\u8f6c\u6362\u7f51\u7edc\u53ef\u4ee5\u5c06\u4efb\u610f\u5185\u5bb9\u56fe\u50cf\u8fdb\u884c\u8f6c\u6362\u3002\u901a\u8fc7\u8f93\u5165\u5927\u91cf\u98ce\u683c\u56fe\u50cf\u548c\u5185\u5bb9\u56fe\u50cf \uff0c\u53ef\u4ee5\u8bad\u7ec3\u51fa\u80fd\u591f\u4ea7\u51fa\u671f\u671b\u6743\u503c\u7684 \u3002\u8be5\u6a21\u578b\u53ef\u4ee5\u8f93\u5165\u4efb\u610f\u98ce\u683c\u56fe\u50cf\uff0c\u8f93\u51fa\u60c5\u51b52\u4e2d\u7684\u8fc1\u79fb\u6a21\u578b\uff0c\u8fdb\u800c\u5b9e\u73b0\u4efb\u610f\u98ce\u683c\u4efb\u610f\u5185\u5bb9\u7684\u98ce\u683c\u8fc1\u79fb\u3002\n\u8f6c\u6362\u7f51\u7edc\uff08TransformNet\uff09 \u8bba\u6587\u4e2d\u7684\u8f6c\u6362\u7f51\u7edc\u5f88\u6709\u610f\u601d\uff0c\u7c89\u8272\u90e8\u5206\u7684\u6743\u91cd\u662f\u7531 MetaNet \u751f\u6210\u7684\uff0c\u800c\u7070\u8272\u90e8\u5206\u7684\u6743\u91cd\u5219\u4e0e MetaNet \u4e00\u8d77\u8bad\u7ec3\u3002\u7531\u4e8e\u8fd9\u4e2a\u6a21\u578b\u7684\u9700\u6c42\u6bd4\u8f83\u4e2a\u6027\u5316\uff0c\u6211\u4eec\u7684\u4ee3\u7801\u9700\u8981\u4e00\u4e9b\u6280\u5de7\uff0c\u4e0b\u9762\u8ba9\u6211\u4eec\u8be6\u7ec6\u5c55\u5f00\u8ba8\u8bba\u3002\nMyConv2D \u8f6c\u6362\u7f51\u7edc\u7684\u7ed3\u6784\u8fd8\u662f\u4e0e\u4e4b\u524d\u7684\u4e00\u6837\uff0c\u4f46\u662f\u4e3a\u4e86\u8c03\u7528\u65b9\u4fbf\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u65b0\u7684\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u548c\u5377\u79ef\u5c42\u7c7b\u4f3c\uff0c\u4f46\u662f\u6743\u503c\u548c\u504f\u7f6e\u90fd\u9700\u8981\u662f\u5e38\u91cf\u3002\u8fd9\u662f\u56e0\u4e3a\u6743\u503c\u5df2\u7ecf\u662f MetaNet \u7684\u8f93\u51fa\uff0c\u5982\u679c\u8d4b\u503c\u4e3a TransformNet \u7684\u6743\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8ba1\u7b97\u56fe\u5c31\u65ad\u4e86\uff0c\u8fd9\u4e0d\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\uff0c\u6211\u4eec\u5e94\u8be5\u8ba9 MetaNet \u7684\u8f93\u51fa\u7ee7\u7eed\u53c2\u4e0e\u8ba1\u7b97\u56fe\uff0c\u76f4\u5230\u8ba1\u7b97\u51fa loss\uff0c\u4e0d\u7136 MetaNet \u7684\u6743\u503c\u5c06\u4e0d\u4f1a\u66f4\u65b0\u3002\u56e0\u6b64\u6211\u4eec\u4e8b\u5148\u4e86\u4e00\u4e2a\u65b0\u7684\u7c7b\uff0cMyConv2D\u3002\n\u4e3a\u4e86\u4f53\u73b0\u4e24\u8005\u7684\u5dee\u5f02\uff0c\u6211\u4eec\u4f7f\u7528 TensorBoard \u8fdb\u884c\u4e86\u53ef\u89c6\u5316\uff1a\n\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\uff0cnn.Conv2d \u5185\u90e8\u6709\u4e24\u4e2a\u53c2\u6570\uff08 Paramter\uff09\uff0c\u8fd9\u662f\u53ef\u4ee5\u53c2\u4e0e\u8bad\u7ec3\u53c2\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728 loss.backward() \u7684\u65f6\u5019\u4f1a\u8ba1\u7b97\u5bf9\u5e94\u7684\u68af\u5ea6\u3002\u800c MyConv2D \u91cc\u9762\u7684\u6743\u503c\u548c\u504f\u7f6e\u90fd\u662f\u5e38\u91cf\uff08Constant\uff09\uff0c\u4e0d\u4f1a\u8ba1\u7b97\u76f8\u5e94\u7684\u68af\u5ea6\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n1 2 3 4 5 6 7 8 9 10 11 12 13  class MyConv2D(nn.Module): def __init__(self, in_channels, out_channels, kernel_size=3, stride=1): super(MyConv2D, self).__init__() self.weight = torch.zeros((out_channels, in_channels, kernel_size, kernel_size)).to(device) self.bias = torch.zeros(out_channels).to(device) self.in_channels = in_channels self.out_channels = out_channels self.kernel_size = (kernel_size, kernel_size) self.stride = (stride, stride) def forward(self, x): return F.conv2d(x, self.weight, self.bias, self.stride)   ConvLayer \u4e3a\u4e86\u533a\u5206\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a\n \u6743\u503c\u662f\u662f\u53ef\u8bad\u7ec3\u7684\u53c2\u6570 \u6743\u503c\u7531 MetaNet \u7ed9\u51fa  \u6211\u4eec\u5199\u51fa\u4e86\u4e0b\u9762\u7684\u4ee3\u7801\uff1a\n1 2 3 4 5 6 7 8 9  def ConvLayer(in_channels, out_channels, kernel_size=3, stride=1, upsample=None, instance_norm=True, relu=True, trainable=False): ...... if trainable: layers.append(nn.Conv2d(in_channels, out_channels, kernel_size, stride)) else: layers.append(MyConv2D(in_channels, out_channels, kernel_size, stride)) ...... return layers   \u5f88\u7b80\u5355\uff0c\u5f53\u6743\u503c\u7531 MetaNet \u7ed9\u51fa\u65f6\uff0c\u5b83\u662f\u4e0d\u53c2\u4e0e\u8bad\u7ec3\u7684\uff0c\u6211\u4eec\u8bbe\u7f6e trainable=False\uff0c\u7136\u540e\u4f7f\u7528 MyConv2D \u5c42\u3002\nTransformNet \u4e0b\u9762\u5c31\u76f4\u63a5\u8d34\u4ee3\u7801\u4e86\uff0c\u6a21\u578b\u7ed3\u6784\u6309\u7167\u4e0a\u9762\u8bba\u6587\u4e2d\u7684\u56fe\u53bb\u642d\u5c31\u597d\u3002\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  class TransformNet(nn.Module): def __init__(self, base=8): super(TransformNet, self).__init__() self.base = base self.downsampling = nn.Sequential( *ConvLayer(3, base, kernel_size=9, trainable=True), *ConvLayer(base, base*2, kernel_size=3, stride=2), *ConvLayer(base*2, base*4, kernel_size=3, stride=2), ) self.residuals = nn.Sequential(*[ResidualBlock(base*4) for i in range(5)]) self.upsampling = nn.Sequential( *ConvLayer(base*4, base*2, kernel_size=3, upsample=2), *ConvLayer(base*2, base, kernel_size=3, upsample=2), *ConvLayer(base, 3, kernel_size=9, instance_norm=False, relu=False, trainable=True), ) def forward(self, X): y = self.downsampling(X) y = self.residuals(y) y = self.upsampling(y) return y ....   TransformNet(32) \u6bcf\u4e00\u5c42\u5bf9\u5e94\u7684\u6743\u91cd\u6570\u91cf\u5982\u4e0b\uff1a\ndefaultdict(int, {'downsampling.5': 18496, 'downsampling.9': 73856, 'residuals.0.conv.1': 147584, 'residuals.0.conv.5': 147584, 'residuals.1.conv.1': 147584, 'residuals.1.conv.5': 147584, 'residuals.2.conv.1': 147584, 'residuals.2.conv.5': 147584, 'residuals.3.conv.1': 147584, 'residuals.3.conv.5': 147584, 'residuals.4.conv.1': 147584, 'residuals.4.conv.5': 147584, 'upsampling.2': 73792, 'upsampling.7': 18464}) \u901a\u8fc7 TensorBoard\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6a21\u578b\u7ed3\u6784\u8fdb\u884c\u53ef\u89c6\u5316\uff1a\nMetaNet \u90a3\u4e48\u6211\u4eec\u600e\u4e48\u6837\u624d\u80fd\u83b7\u5f97 TransformNet \u7684\u6743\u503c\u5462\uff1f\u5f53\u7136\u662f\u8f93\u5165\u98ce\u683c\u56fe\u50cf\u7684\u7279\u5f81\u3002\n\u90a3\u4e48\u6211\u4eec\u77e5\u9053\u98ce\u683c\u56fe\u50cf\u7ecf\u8fc7 VGG16 \u8f93\u51fa\u7684 relu1_2\u3001relu2_2\u3001relu3_3\u3001relu4_3 \u5c3a\u5bf8\u662f\u5f88\u5927\u7684\uff0c\u5047\u8bbe\u56fe\u50cf\u7684\u5c3a\u5bf8\u662f (256, 256)\uff0c\u90a3\u4e48\u5377\u79ef\u5c42\u8f93\u51fa\u7684\u5c3a\u5bf8\u5206\u522b\u662f (64, 256, 256)\u3001(128, 128, 128)\u3001(256, 64, 64)\u3001(512, 32, 32)\uff0c\u5373\u4f7f\u53d6\u5176 Gram \u77e9\u9635\uff0c(64, 64)\u3001(128, 128)\u3001(256, 256)\u3001(512, 512) \u4e5f\u662f\u975e\u5e38\u5927\u7684\u3002\u6211\u4eec\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u4f7f\u7528 512*512 \u4e2a\u7279\u5f81\u6765\u751f\u6210 147584 \u4e2a\u6743\u503c\uff08residual \u5c42\uff09\uff0c\u90a3\u4e48\u8fd9\u5c42\u5168\u8fde\u63a5\u5c42\u7684 w \u5c31\u662f 512x512x147584=38688260096 \u4e2a\uff0c\u5047\u8bbe w \u7684\u683c\u5f0f\u662f float32\uff0c\u90a3\u4e48\u5149\u662f\u4e00\u4e2a w \u5c31\u6709 144GB \u8fd9\u4e48\u5927\uff0c\u8fd9\u51e0\u4e4e\u662f\u4e0d\u53ef\u5b9e\u73b0\u7684\u3002\u90a3\u4e48\u7b2c\u4e09\u7bc7\u8bba\u6587\u5c31\u63d0\u5230\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u53ea\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u5377\u79ef\u6838\u8f93\u51fa\u7684\u5185\u5bb9\u7684\u5747\u503c\u548c\u6807\u51c6\u5dee\u3002\n We compute the mean and stand deviations of two feature maps of the style image and the transferred image as style features.\n \u53ea\u8ba1\u7b97\u5747\u503c\u548c\u6807\u51c6\u5dee\uff0c\u4e0d\u8ba1\u7b97 Gram \u77e9\u9635\uff0c\u8fd9\u91cc\u7684\u7279\u5f81\u5c31\u53d8\u4e3a\u4e86 (64+128+256+512)x2=1920 \u7ef4\uff0c\u660e\u663e\u5c0f\u4e86\u5f88\u591a\u3002\u4f46\u662f\u6211\u4eec\u7a0d\u52a0\u8ba1\u7b97\u5373\u53ef\u77e5\u9053\uff0c1920x(18496+73856+147584x10+73792+18464)=3188060160\uff0c\u5047\u8bbe\u662f float32\uff0c\u90a3\u4e48\u6743\u503c\u81f3\u5c11\u6709 11.8GB\uff0c\u663e\u7136\u65e0\u6cd5\u5728\u4e00\u5757 1080ti \u4e0a\u5b9e\u73b0 MetaNet\u3002\u90a3\u4e48\u4f5c\u8005\u53c8\u63d0\u51fa\u4e86\u4e00\u4e2a\u60f3\u6cd5\uff0c\u4f7f\u7528\u5206\u7ec4\u5168\u8fde\u63a5\u5c42\u3002\n The dimension of hidden vector is 1792 without specification. The hidden features are connected with the filters of each conv layer of the network in a group manner to decrease the parameter size, which means a 128 dimensional hidden vector for each conv layer.\n \u610f\u601d\u5c31\u662f\u9690\u85cf\u5c42\u5168\u8fde\u63a5\u5c42\u4f7f\u752814x128=1792\u4e2a\u795e\u7ecf\u5143\uff0c\u8fd9\u4e2a14\u5bf9\u5e94\u7684\u5c31\u662f TransformNet \u91cc\u9762\u7684\u6bcf\u4e00\u5c42\u5377\u79ef\u5c42\uff08downsampling2\u5c42\uff0cresidual10\u5c42\uff0cupsampling2\u5c42\uff09\uff0c\u7136\u540e\u6bcf\u4e00\u5c42\u5377\u79ef\u5c42\u7684\u6743\u503c\u53ea\u8fde\u63a5\u5176\u4e2d\u7684\u4e00\u5c0f\u7247128\uff0c\u90a3\u4e48\u6574\u4f53\u7ed3\u6784\u53c2\u8003\u4e0b\u56fe\uff1a\n\u5982\u679c\u770b\u4e0d\u6e05\u53ef\u4ee5\u70b9\u51fb\u67e5\u770b\u539f\u56fe\u3002\n\u5728\u7ecf\u8fc7\u91cd\u91cd\u52aa\u529b\u4e4b\u540e\uff0c\u6a21\u578b\u5927\u5c0f\u7ec8\u4e8e\u9650\u5236\u5728 1GB \u4ee5\u5185\u4e86\u3002\u5f53 base=32 \u65f6\uff0c\u4fdd\u5b58\u4e3a pth \u6587\u4ef6\u7684\u6a21\u578b\u5927\u5c0f\u4e3a 870MB\u3002\n\u4e0b\u9762\u662f\u4ee3\u7801\uff1a\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  class MetaNet(nn.Module): def __init__(self, param_dict): super(MetaNet, self).__init__() self.param_num = len(param_dict) self.hidden = nn.Linear(1920, 128*self.param_num) self.fc_dict = {} for i, (name, params) in enumerate(param_dict.items()): self.fc_dict[name] = i setattr(self, &#39;fc{}&#39;.format(i+1), nn.Linear(128, params)) def forward(self, mean_std_features): hidden = F.relu(self.hidden(mean_std_features)) filters = {} for name, i in self.fc_dict.items(): fc = getattr(self, &#39;fc{}&#39;.format(i+1)) filters[name] = fc(hidden[:,i*128:(i+1)*128]) return filters   \u76f4\u63a5 print \u6a21\u578b\uff1a\nMetaNet( (hidden): Linear(in_features=1920, out_features=1792, bias=True) (fc1): Linear(in_features=128, out_features=18496, bias=True) (fc2): Linear(in_features=128, out_features=73856, bias=True) (fc3): Linear(in_features=128, out_features=147584, bias=True) (fc4): Linear(in_features=128, out_features=147584, bias=True) (fc5): Linear(in_features=128, out_features=147584, bias=True) (fc6): Linear(in_features=128, out_features=147584, bias=True) (fc7): Linear(in_features=128, out_features=147584, bias=True) (fc8): Linear(in_features=128, out_features=147584, bias=True) (fc9): Linear(in_features=128, out_features=147584, bias=True) (fc10): Linear(in_features=128, out_features=147584, bias=True) (fc11): Linear(in_features=128, out_features=147584, bias=True) (fc12): Linear(in_features=128, out_features=147584, bias=True) (fc13): Linear(in_features=128, out_features=73792, bias=True) (fc14): Linear(in_features=128, out_features=18464, bias=True) ) \u6570\u636e  There are about 120k images in MS- COCO trainval set and about 80k images in the test set of WikiArt.\n \u8981\u60f3\u8bad\u7ec3\u8fd9\u4e48\u5927\u7684\u6a21\u578b\uff0c\u90a3\u4e48\u5c31\u5fc5\u987b\u8981\u6d77\u91cf\u7684\u98ce\u683c\u56fe\u50cf\u548c\u5185\u5bb9\u56fe\u50cf\u3002\u539f\u8bba\u6587\u4f9d\u65e7\u9009\u62e9\u4e86 COCO \u4f5c\u4e3a\u5185\u5bb9\u6570\u636e\u96c6\u3002\u800c\u98ce\u683c\u6570\u636e\u96c6\u9009\u62e9\u4e86 WikiArt\uff0c\u8be5\u6570\u636e\u96c6\u5305\u542b\u5927\u91cf\u827a\u672f\u4f5c\u54c1\uff0c\u5f88\u9002\u5408\u4f5c\u4e3a\u98ce\u683c\u8fc1\u79fb\u7684\u98ce\u683c\u56fe\u7247\u3002\n During training, each content image or style image is resized to keep the smallest dimension in the range [256, 480], and randomly cropped regions of size 256 \u00d7 256.\n \u8bba\u6587\u63d0\u5230\u56fe\u50cf\u8981\u5148\u7f29\u653e\u5230 [256, 480] \u7684\u5c3a\u5bf8\uff0c\u7136\u540e\u518d\u968f\u673a\u88c1\u526a\u4e3a 256 \u00d7 256\u3002\n\u4ee3\u7801\u5982\u4e0b\uff1a\n1 2 3 4 5 6 7 8  data_transform = transforms.Compose([ transforms.RandomResizedCrop(width, scale=(256/480, 1), ratio=(1, 1)), transforms.ToTensor(), tensor_normalizer ]) style_dataset = torchvision.datasets.ImageFolder(&#39;/home/ypw/WikiArt/&#39;, transform=data_transform) content_dataset = torchvision.datasets.ImageFolder(&#39;/home/ypw/COCO/&#39;, transform=data_transform)   \u8bad\u7ec3 \u8d85\u53c2\u6570  The weight of content loss is 1 while the weight of style loss is 250.\n \u867d\u7136\u8bba\u6587\u91cc\u7ed9\u51fa\u7684 style_weight \u662f 250\uff0c\u4f46\u662f\u6211\u8fd9\u91cc\u6d4b\u8bd5\u5f97\u5e76\u4e0d\u7406\u60f3\uff0c\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u3001\u4e0d\u540c\u7684\u9884\u5904\u7406\u65b9\u5f0f\u9020\u6210\u7684\u5dee\u5f02\uff0c\u8bbe\u7f6e\u4e3a 25 \u662f\u6bd4\u8f83\u7406\u60f3\u7684\u3002\n We use Adam (Kingma and Ba 2014) with fixed learning rate 0.001 for 600k iterations without weight decay.\n \u4f18\u5316\u5668\u4f7f\u7528\u4e86\u8bba\u6587\u4e2d\u63d0\u5230\u7684 Adam 1e-3\u3002\n The transferred images are regularized with total variations loss with a strength of 10.\n \u56e0\u4e3a\u8fd9\u7bc7\u8bba\u6587\u7684\u4f5c\u8005\u7528\u7684\u662f caffe\uff0cVGG16 \u7684\u9884\u8bad\u7ec3\u6743\u503c\u4e0e pytorch \u5dee\u5f02\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u6211\u8fd9\u91cc\u7684 tv_weight \u6ca1\u6709\u8bbe\u7f6e\u4e3a\u8bba\u6587\u4e2d\u768410\uff0c\u800c\u662f\u9009\u62e9\u4e86 1e-4\u3002\n The batch size of content images is 8 and the meta network is trained for 20 iterations before changing the style image.\n \u8fd9\u91cc\u7684 batch_size \u5f88\u6709\u610f\u601d\uff0c\u6bcf\u6b21\u67658\u5f20\u5185\u5bb9\u56fe\u7247\uff0c\u4f46\u662f\u6bcf\u5f53\u8bad\u7ec320\u4e2a batch \u4e4b\u540e\uff0c\u6362\u4e00\u5f20\u98ce\u683c\u56fe\u7247\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u4fdd\u8bc1 TransformNet \u80fd\u5728\u6bcf\u5f20\u98ce\u683c\u56fe\u50cf\u4e0a\u90fd\u6536\u655b\u4e00\u6bb5\u65f6\u95f4\uff0c\u5207\u6362\u56fe\u50cf\u53c8\u80fd\u4fdd\u8bc1 MetaNet \u80fd\u591f\u9002\u5e94\u6240\u6709\u7684\u98ce\u683c\u56fe\u50cf\u3002\n\u4ee3\u7801 \u7531\u4e8e\u4ee3\u7801\u592a\u957f\uff0c\u8fd9\u91cc\u4e5f\u53ea\u8d34\u4e00\u4e9b\u5173\u952e\u4ee3\u7801\uff1a\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  for batch, (content_images, _) in pbar: # \u6bcf 20 \u4e2a batch \u968f\u673a\u6311\u9009\u4e00\u5f20\u65b0\u7684\u98ce\u683c\u56fe\u50cf\uff0c\u8ba1\u7b97\u5176\u7279\u5f81 if batch % 20 == 0: style_image = random.choice(style_dataset)[0].unsqueeze(0).to(device) style_features = vgg16(style_image) style_mean_std = mean_std(style_features) # \u68c0\u67e5\u7eaf\u8272 x = content_images.cpu().numpy() if (x.min(-1).min(-1) == x.max(-1).max(-1)).any(): continue optimizer.zero_grad() # \u4f7f\u7528\u98ce\u683c\u56fe\u50cf\u751f\u6210\u98ce\u683c\u6a21\u578b weights = metanet(mean_std(style_features)) transform_net.set_weights(weights, 0) # \u4f7f\u7528\u98ce\u683c\u6a21\u578b\u9884\u6d4b\u98ce\u683c\u8fc1\u79fb\u56fe\u50cf content_images = content_images.to(device) transformed_images = transform_net(content_images) # \u4f7f\u7528 vgg16 \u8ba1\u7b97\u7279\u5f81 content_features = vgg16(content_images) transformed_features = vgg16(transformed_images) transformed_mean_std = mean_std(transformed_features) # content loss content_loss = content_weight * F.mse_loss(transformed_features[2], content_features[2]) # style loss style_loss = style_weight * F.mse_loss(transformed_mean_std, style_mean_std.expand_as(transformed_mean_std)) # total variation loss y = transformed_images tv_loss = tv_weight * (torch.sum(torch.abs(y[:, :, :, :-1] - y[:, :, :, 1:])) + torch.sum(torch.abs(y[:, :, :-1, :] - y[:, :, 1:, :]))) # \u6c42\u548c loss = content_loss + style_loss + tv_loss loss.backward() optimizer.step()   \u8fd9\u91cc\u6709\u51e0\u70b9\u95ee\u9898\u503c\u5f97\u601d\u8003\uff1a\n \u5982\u679c\u5185\u5bb9\u56fe\u50cf\u662f\u7eaf\u8272\u7684\uff0c\u90a3\u4e48\u6743\u503c\u4f1a\u76f4\u63a5 nan\uff0c\u539f\u56e0\u4e0d\u660e\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u9700\u8981\u68c0\u67e5\u7eaf\u8272\uff0c\u7136\u540e continue \u6765\u907f\u514d nan\u3002 \u6743\u503c\u4f1a\u9010\u6e10\u589e\u5927\uff0c\u76ee\u524d\u6ca1\u6709\u6bd4\u8f83\u597d\u7684\u89e3\u51b3\u65b9\u6848\u3002  \u6548\u679c \u6700\u7ec8\u6548\u679c\u5982\u56fe\u6240\u793a\uff1a\n\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u4efb\u610f\u5185\u5bb9\u56fe\u7247\uff0c\u8f6c\u6362\u7f51\u7edc\u90fd\u80fd\u8f6c\u6362\u4e3a\u56fa\u5b9a\u98ce\u683c\u7684\u56fe\u50cf\u3002\n\u6839\u636e\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u8fdb\u884c\u7684\u6d4b\u901f\uff0c1080ti \u53ef\u4ee5\u57288.48\u79d2\u5185\u5bf9 1000 \u5f20\u98ce\u683c\u56fe\u50cf\u4ea7\u51fa\u98ce\u683c\u8fc1\u79fb\u6a21\u578b\uff0c\u76f8\u5f53\u4e8e117fps\u3002\u800c\u98ce\u683c\u8fc1\u79fb\u6a21\u578b\u8f6c\u6362\u7684\u901f\u5ea6\u4e5f\u5f88\u5feb\uff0c\u8fbe\u5230\u4e864.59\u79d2\uff0c\u76f8\u5f53\u4e8e217fps\u3002\u5047\u8bbe\u6211\u4eec\u6bcf\u4e00\u5e27\u90fd\u7528\u4e0d\u540c\u7684\u98ce\u683c\uff0c\u8f6c\u63621000\u5f20\u56fe\u7247\u4e5f\u53ea\u9700\u898113.1\u79d2\uff0c\u76f8\u5f53\u4e8e76fps\uff0c\u53ef\u4ee5\u8bf4\u505a\u5230\u4e86\u5b9e\u65f6\u4efb\u610f\u98ce\u683c\u4efb\u610f\u5185\u5bb9\u7684\u6781\u901f\u98ce\u683c\u8fc1\u79fb\u3002\n\u603b\u7ed3 \u6211\u4eec\u4f7f\u7528 pytorch \u5b9e\u73b0\u4e86\u4ee5\u4e0b\u4e09\u79cd\u98ce\u683c\u8fc1\u79fb\uff1a\n \u56fa\u5b9a\u98ce\u683c\u56fa\u5b9a\u5185\u5bb9\u7684\u666e\u901a\u98ce\u683c\u8fc1\u79fb\uff08\rA Neural Algorithm of Artistic Style\uff09 \u56fa\u5b9a\u98ce\u683c\u4efb\u610f\u5185\u5bb9\u7684\u5feb\u901f\u98ce\u683c\u8fc1\u79fb\uff08\rPerceptual Losses for Real-Time Style Transfer and Super-Resolution\uff09 \u4efb\u610f\u98ce\u683c\u4efb\u610f\u5185\u5bb9\u7684\u6781\u901f\u98ce\u683c\u8fc1\u79fb\uff08\rMeta Networks for Neural Style Transfer\uff09  \u9996\u5148\u7b2c\u4e00\u7bc7\u8bba\u6587\u6253\u7834\u4e86\u4ee5\u5f80\u7684\u601d\u7ef4\u5b9a\u5f0f\uff1a\u53ea\u6709\u6743\u503c\u53ef\u4ee5\u8bad\u7ec3\u3002\u5b83\u901a\u8fc7\u5bf9\u56fe\u50cf\u8fdb\u884c\u8bad\u7ec3\u5b9e\u73b0\u4e86\u98ce\u683c\u8fc1\u79fb\u3002\u7136\u540e\u7b2c\u4e8c\u7bc7\u8bba\u6587\u5c31\u6bd4\u8f83\u6b63\u5e38\uff0c\u901a\u8fc7\u8bad\u7ec3\u4e00\u4e2a\u6a21\u578b\u6765\u5b9e\u73b0\u98ce\u683c\u8fc1\u79fb\u3002\u7b2c\u4e09\u7bc7\u8bba\u6587\u5c31\u5f88\u795e\u5947\u4e86\uff0c\u901a\u8fc7\u6a21\u578b\u6765\u751f\u6210\u6743\u503c\uff0c\u8fdb\u800c\u5b9e\u73b0\u4efb\u610f\u98ce\u683c\u7684\u98ce\u683c\u8fc1\u79fb\u3002\u4e0d\u5f97\u4e0d\u611f\u8c22\u8fd9\u4e9b\u8d70\u5728\u79d1\u6280\u524d\u6cbf\u7684\u79d1\u7814\u5de5\u4f5c\u8005\uff0c\u7ed9\u4e86\u6211\u4eec\u8bb8\u591a\u65b0\u5947\u7684\u601d\u8def\u3002\n",
        "description": "",
        "id": 58,
        "section": "posts",
        "tags": [
            "\u98ce\u683c\u8fc1\u79fb",
            "style transfer",
            "\u6df1\u5ea6\u5b66\u4e60"
        ],
        "title": "2020-07-18-\u98ce\u683c\u8fc1\u79fb\u4e09\u90e8\u66f2",
        "uri": "/posts/notes/2020-07-18-%E9%A3%8E%E6%A0%BC%E8%BF%81%E7%A7%BB%E4%B8%89%E9%83%A8%E6%9B%B2/"
    },
    {
        "content": " \u7eed\r\u535a\u58eb\u8bba\u6587\u9605\u8bfb\u672d\u8bb0-1\n \u6784\u9020-\u6d41\u4f53-\u6210\u77ff\u7cfb\u7edf\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u6a21\u62df\u7814\u7a76 \u718a\u4e49\u8f89-2019-\u4e2d\u56fd\u5730\u8d28\u5927\u5b66\uff08\u6b66\u6c49\uff09\n\u5f90\u8001\u5e08\u63a8\u8350\uff08\u6574\u4f53\u6846\u67b6\u5f88\u68d2\uff0c\u975e\u5e38\u503c\u5f97\u53c2\u8003\u30023\u4e2a90\u5206\u7684\u5927\u8bba\u6587\uff09\n\u7eea\u8bba\u90e8\u5206 \u7814\u7a76\u80cc\u666f\u4e0e\u610f\u4e49  \u7b2c\u4e00\u6bb5\uff08\u4ecb\u7ecd\u6784\u9020-\u6d41\u4f53-\u6210\u77ff\u7cfb\u7edf\uff09  \u77ff\u5e8a-\u77ff\u5e8a\u7684\u5f62\u6210-\u5b50\u8fc7\u7a0b\u7684\u5f71\u54cd-\u591a\u56e0\u7d20\u5f71\u54cd \u6784\u9020\u548c\u6d41\u4f53\u662f\u6700\u91cd\u8981\u7684\u63a7\u5236\u56e0\u7d20  \u6784\u9020\u548c\u6784\u9020\u5e94\u529b\uff1a\u63a7\u5236\u4e00\u5b9a\u533a\u57df\u4e2d\u5404\u5730\u8d28\u4f53\u95f4\u8026\u5408\u5173\u7cfb\u7684\u4e3b\u5bfc\u56e0\u7d20 \u6d41\u4f53\uff1a\u6210\u77ff\u7269\u8d28\u4ece\u77ff\u6e90\u5730\u6c72\u53d6\u5e76\u642c\u8fd0\u7684\u4e3b\u8981\u5a92\u4ecb   \u6784\u9020-\u6d41\u4f53-\u6210\u77ff\u7cfb\u7edf\uff1a\u5728\u65f6\u7a7a\u8303\u56f4\u5185\uff0c\u4ee5\u6784\u9020\u548c\u6d41\u4f53\u7684\u4e3b\u5bfc\u4f5c\u7528\uff0c\u63a7\u5236\u5e76\u6539\u9020\u4e0e\u77ff\u5e8a\u5f62\u6210\u3001\u4fdd\u5b58\u7d27\u5bc6\u76f8\u5173\u7684\u5730\u8d28\u8981\u7d20\u3001\u8fc7\u7a0b\u53ca\u5176\u6700\u7ec8\u4ea7\u7269\u7684\u6574\u4f53\uff0c\u662f\u4e00\u4e2a\u7531\u591a\u79cd\u7ec4\u6210\u548c\u591a\u91cd\u4f5c\u7528\u76f8\u4e92\u8026\u5408\u7684\u590d\u6742\u52a8\u529b\u5b66\u7cfb\u7edf\u3002 \u5bf9\u6df1\u5165\u4e86\u89e3\u6210\u77ff\u6d41\u4f53\u8fd0\u79fb\u4ee5\u53ca\u6210\u77ff\u5143\u7d20\u5bcc\u96c6\u8fc7\u7a0b\u5177\u6709\u91cd\u8981\u610f\u4e49   \u7b2c\u4e8c\u6bb5\uff08\u9610\u8ff0\u5f53\u524d\u7814\u7a76\u73b0\u72b6\uff0c\u5f15\u51fa\u672c\u6587\u7814\u7a76\u4e3b\u9898\u53ca\u7814\u7a76\u5185\u5bb9\uff0c\u7b80\u4ecb\u672c\u6587\u7814\u7a76\u4f5c\u7528\u53ca\u610f\u4e49\uff09  \u76ee\u524d\u5bf9\u4e8e\u6210\u77ff\u8fc7\u7a0b\u7684\u7814\u7a76\u4e3b\u8981\u8868\u73b0\u5728\u4e24\u4e2a\u65b9\u9762  \u4fa7\u91cd\u4e8e\u91ce\u5916\u89c2\u6d4b\u4e0e\u5730\u7403\u5316\u5b66\u5206\u6790\u65b9\u6cd5  \u5982\u77ff\u5e8a\u5730\u8d28\u5730\u7403\u5316\u5b66\u7279\u5f81\u3001\u6210\u77ff\u65f6\u4ee3\u7b49 \u7814\u7a76\u5927\u591a\u6570\u90fd\u505c\u7559\u5728\u6982\u5ff5\u6a21\u578b\u7684\u5b9a\u6027\u63cf\u8ff0\u7684\u9636\u6bb5   \u4fa7\u91cd\u4e8e\u6210\u77ff\u4f5c\u7528\u52a8\u529b\u5b66\u6a21\u578b  \u901a\u8fc7\u5b9a\u91cf\u6570\u5b66\u6a21\u578b\u4e0e\u6570\u503c\u6a21\u62df\u5b9e\u73b0\u5728\u8ba1\u7b97\u673a\u7684\u865a\u62df\u65f6\u7a7a\u4e2d\u518d\u73b0\u6574\u4e2a\u6210\u77ff\u590d\u6742\u7cfb\u7edf\u7684\u6f14\u5316\u8fdb\u7a0b \u4e3b\u8981\u7814\u7a76\u5bf9\u8c61\uff1a\u6210\u77ff\u7269\u8d28\u7684\u5316\u5b66\u8fd0\u52a8\u548c\u5404\u79cd\u529b\u5b66\u8fd0\u52a8 \u5728\u5316\u5b66\u52a8\u529b\u5b66\u548c\u5404\u79cd\u52a8\u529b\u5b66\u7814\u7a76\u7684\u57fa\u7840\u4e0a\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4e0a\u5347\u5230\u5bf9\u590d\u6742\u7cfb\u7edf\u548c\u590d\u6742\u8fc7\u7a0b\u6df1\u5c42\u6b21\u3001\u666e\u904d\u52a8\u529b\u5b66\u89c4\u5f8b\u7684\u7814\u7a76-\u5206\u5f62\u7406\u8bba\u3001\u6df7\u6c8c\u52a8\u529b\u5b66\u53ca\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u65b9\u6cd5     \u975e\u7ebf\u6027\u7406\u8bba\u548c\u590d\u6742\u6027\u7406\u8bba\uff0c\u7279\u522b\u662f\u6df7\u6c8c\u7406\u8bba\u3001\u5206\u5f62/\u591a\u91cd\u5206\u5f62\u7406\u8bba\u3001\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7b49\u7406\u8bba\uff0c\u5bf9\u63ed\u793a\u77ff\u5e8a\u5f62\u6210\u7684\u590d\u6742\u8fc7\u7a0b\u3001\u6210\u77ff\u7269\u8d28\u7684\u5bcc\u96c6\u89c4\u5f8b\u3001\u6210\u77ff\u4fe1\u606f\u7684\u83b7\u53d6\u5177\u6709\u975e\u5e38\u91cd\u8981\u7684\u610f\u4e49  \u5206\u5f62/\u591a\u91cd\u5206\u5f62\u6a21\u578b\u591a\u4fa7\u91cd\u4e8e\u5bf9\u73b0\u8c61\u7684\u8868\u73b0\u5f62\u5f0f\u63cf\u8ff0\u548c\u89e3\u91ca\u73b0\u8c61\u7684\u590d\u6742\u7279\u5f81 \u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u5219\u4fa7\u91cd\u4e8e\u73b0\u8c61\u7684\u673a\u7406\u4e0e\u672c\u8d28\u89c4\u5f8b\u5206\u6790   \u81ea\u7ec4\u7ec7\u4e34\u754c\u6027  \u590d\u6742\u6027\u7cfb\u7edf\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u6027\uff0c\u5bf9\u4e8e\u6df1\u5165\u7406\u89e3\u7cfb\u7edf\u590d\u6742\u6027\u4ea7\u751f\u673a\u7406\u5177\u6709\u91cd\u8981\u4f5c\u7528 \u57fa\u4e8e\u5143\u80de\u81ea\u52a8\u673a\u7684\u6570\u503c\u6a21\u62df\u65b9\u6cd5\u662f\u7814\u7a76\u5177\u6709\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u8fc7\u7a0b\u7684\u91cd\u8981\u5de5\u5177\u3002   \u8bba\u6587\u5de5\u4f5c\uff1a\u57fa\u4e8e\u6b64\uff0c\u8bba\u6587  \u5229\u7528\u5143\u80de\u81ea\u52a8\u673a\u6a21\u578b\u6570\u503c\u91cd\u73b0\u6784\u9020-\u6d41\u4f53\u8026\u5408\u4f5c\u7528\u4e0b\u7684\u590d\u6742\u6027\u6210\u77ff\u8fc7\u7a0b\uff0c \u5206\u6790\u6d41\u4f53\u53c2\u4e0e\u4e0b\u65ad\u88c2\u8fc7\u7a0b\u4ee5\u53ca\u5b83\u4eec\u5bf9\u6210\u77ff\u5143\u7d20\u81ea\u7ec4\u7ec7\u5bcc\u96c6\u6210\u77ff\u7684\u5236\u7ea6\u4e0e\u5f71\u54cd\uff0c \u5b9a\u91cf\u8ba4\u8bc6\u6784\u9020\u548c\u6d41\u4f53\u5bf9\u77ff\u5e8a\u7684\u65f6\u7a7a\u5206\u5e03\u89c4\u5f8b\u53ca\u5143\u7d20\u7684\u8fc1\u79fb\u4e0e\u5bcc\u96c6\u89c4\u5f8b\u7684\u5f71\u54cd\u3002   \u4f5c\u7528\uff1a  \u4e00\u65b9\u9762\u53ef\u4ee5\u5398\u6e05\u6784\u9020-\u6d41\u4f53\u76f8\u4e92\u4f5c\u7528\u5bf9\u6210\u77ff\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u8fc7\u7a0b\u7684\u5236\u7ea6\u4f5c\u7528\uff0c\u6709\u52a9\u4e8e\u6df1\u5165\u7406\u89e3\u6210\u77ff\u6f14\u5316\u8fc7\u7a0b\uff1b \u53e6\u4e00\u65b9\u9762\u5168\u9762\u7efc\u5408\u63a2\u7d22\u975e\u7ebf\u6027\u548c\u590d\u6742\u6027\u79d1\u5b66\u5728\u6210\u77ff\u7cfb\u7edf\u4e2d\u7684\u5e94\u7528\u3002   \u610f\u4e49\uff1a  \u5229\u7528\u5143\u80de\u81ea\u52a8\u673a\u6a21\u62df\u73b0\u8c61\u7684\u673a\u7406\uff0c\u63ed\u793a\u73b0\u8c61\u672c\u8d28\u89c4\u5f8b\uff08\u8fc7\u7a0b\uff09\uff1b \u5229\u7528\u5206\u5f62\u6a21\u578b\u63cf\u8ff0\u73b0\u8c61\u7684\u8868\u73b0\u5f62\u5f0f\uff08\u7ed3\u679c\uff09\uff0c\u4e8c\u8005\u878d\u4e3a\u4e00\u4f53\uff0c\u4e30\u5bcc\u975e\u7ebf\u6027\u4e0e\u590d\u6742\u6027\u7406\u8bba\u5728\u590d\u6742\u6027\u6210\u77ff\u7cfb\u7edf\u4e2d\u7684\u5e94\u7528\u3002      \u56fd\u5185\u5916\u7814\u7a76\u73b0\u72b6\u4e0e\u5b58\u5728\u95ee\u9898 \u5f15\u8a00\u6bb5\uff1a\n \u6784\u9020-\u6d41\u4f53-\u6210\u77ff\u7cfb\u7edf  \u5177\u6709\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7684\u5185\u5728\u57fa\u672c\u7279\u6027 \u5f62\u6210\u673a\u7406\u548c\u89e6\u53d1\u673a\u5236\u6781\u5176\u590d\u6742\uff0c\u5373\u53ef\u8868\u73b0\u51fa\u786e\u5b9a\u6027\u4e5f\u4f1a\u8868\u73b0\u51fa\u4e00\u5b9a\u7684\u968f\u673a\u6027 \u8ba4\u77e5\u548c\u9884\u6d4b\u8fd9\u7c7b\u73b0\u8c61\u610f\u4e49\u91cd\u5927\u7684\u540c\u65f6\u4e5f\u5145\u6ee1\u6311\u6218   \u5728\u590d\u6742\u6027\u7279\u5f81\u4e0a\u5177\u6709\u9ad8\u5ea6\u7684\u76f8\u4f3c\u6027  \u53ef\u5229\u7528\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7406\u8bba\u548c\u6a21\u578b\u52a0\u4ee5\u89e3\u91ca \u5bf9\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7684\u7406\u89e3\u591a\u6e90\u4e8e\u5143\u80de\u81ea\u52a8\u673a\u7684\u6570\u503c\u6a21\u62df   \u57fa\u4e8e\u6b64\uff0c\u8bba\u6587  \u9996\u5148\u603b\u7ed3\u4e86\u6784\u9020-\u6d41\u4f53-\u6210\u77ff\u7cfb\u7edf\u53ca\u5176\u52a8\u529b\u5b66\u7814\u7a76\u73b0\u72b6 \u968f\u540e\u5bf9\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u5728\u5730\u5b66\u91cc\u7684\u5e94\u7528\u73b0\u72b6\u8fdb\u884c\u4e86\u603b\u7ed3\u5f52\u7eb3    \u6784\u9020-\u6d41\u4f53-\u6210\u77ff\u7cfb\u7edf\u53ca\u5176\u52a8\u529b\u5b66\u7814\u7a76\u73b0\u72b6  \u7b2c\u4e00\u6bb5  \u6210\u77ff\u7cfb\u7edf  \u77ff\u5e8a\u5b66\u7814\u7a76\u7684\u4e00\u4e2a\u91cd\u8981\u7814\u7a76\u65b9\u5411 \u6982\u5ff5\uff08\u662f\u4e00\u4e2a\u5177\u6709\u6210\u77ff\u529f\u80fd\u7684\u5730\u8d28\u7cfb\u7edf\uff09 \u4f17\u591a\u5b50\u7cfb\u7edf\u76f8\u4e92\u4f5c\u7528\u548c\u76f8\u4e92\u4f9d\u5b58\u7ec4\u6210\u7684\u6709\u673a\u6574\u4f53   \u5185\u90e8\u7ed3\u6784  \u63a7\u5236\u6210\u77ff\u56e0\u7d20\uff1a\u5982\u6784\u9020\u3001\u5ca9\u6d46\u3001\u53d8\u8d28\u3001\u6d41\u4f53\u3001\u70ed\u52a8\u529b \u6210\u77ff\u8981\u7d20\uff1a\u5982\u77ff\u6e90\u3001\u6d41\u4f53\u3001\u80fd\u91cf\u3001\u7a7a\u95f4\u3001\u65f6\u95f4\u7b49 \u6210\u77ff\u4f5c\u7528\u8fc7\u7a0b\uff1a\u5982\u6210\u77ff\u53d1\u751f\u3001\u6301\u7eed\u3001\u7ec8\u7ed3\u4ee5\u53ca\u6210\u77ff\u540e\u7684\u53d8\u5316\u548c\u4fdd\u5b58\u7b49\uff1b \u6210\u77ff\u4ea7\u7269\uff1a\u5982\u77ff\u5e8a\u548c\u5f02\u5e38\u7cfb\u5217   \u6784\u9020-\u6d41\u4f53-\u6210\u77ff\u7cfb\u7edf\u6982\u5ff5\u7684\u63d0\u51fa\uff1a\u57fa\u4e8e\u533a\u57df\u6210\u77ff\u5b66\u7814\u7a76\u7684\u4e0d\u65ad\u6df1\u5165\uff0c\u5b66\u8005\u8ba4\u8bc6\u5230\u6784\u9020\u4e0e\u6d41\u4f53\u4e4b\u95f4\u5e76\u975e\u5404\u81ea\u72ec\u7acb\u800c\u662f\u5b58\u5728\u5f3a\u70c8\u7684\u76f8\u4e92\u4f5c\u7528\uff0c\u5e76\u5728\u6210\u77ff\u4f5c\u7528\u8fc7\u7a0b\u4e2d\u5177\u6709\u91cd\u8981\u610f\u4e49\uff0c\u8fdb\u800c\u63d0\u51fa\u4e86\u6784\u9020-\u6d41\u4f53-\u6210\u77ff\u7cfb\u7edf\u7684\u6982\u5ff5   \u7b2c\u4e8c\u6bb5\uff08\u8fd9\u90e8\u5206\u8bb2\u6784\u9020\u5e94\u529b\u548c\u6d41\u4f53\u5728\u6210\u77ff\u8fc7\u7a0b\u4e2d\u7684\u91cd\u8981\u4f5c\u7528\u5427\uff0c\u592a\u4e13\u4e1a\u4e86\u770b\u4e0d\u61c2\uff09  \u6784\u9020-\u6d41\u4f53\u7684\u65f6\u7a7a\u6f14\u5316\u8fc7\u7a0b \u6784\u9020\u5e94\u529b \u6d41\u4f53   \u7b2c\u4e09\u6bb5  \u6784\u9020-\u6d41\u4f53\u8026\u5408\u6210\u77ff\u52a8\u529b\u5b66  \u63d0\u4f9b\u4e86\u6709\u6548\u7814\u7a76\u9014\u5f84 \u4fa7\u91cd\u7814\u7a76\u6210\u77ff\u4f5c\u7528\u673a\u5236\uff0c\u6f14\u5316\u8fc7\u7a0b\u53ca\u5176\u52a8\u529b\u6765\u6e90 \u7814\u7a76\u7684\u6838\u5fc3\u4e3a\u6784\u9020\u4e0e\u6d41\u4f53\u4e4b\u95f4\u8026\u5408\u4f5c\u7528\u4e0b\u7684\u6210\u77ff\u7cfb\u7edf\u5f62\u6210\u8fc7\u7a0b\u53ca\u5176\u52a8\u529b\u5b66\u7279\u5f81   \u6784\u9020-\u6d41\u4f53-\u6210\u77ff\u7cfb\u7edf  \u76f8\u4e92\u8026\u5408\u7684\u4e00\u4e2a\u590d\u6742\u7684\u52a8\u529b\u5b66\u7cfb\u7edf \u7814\u7a76\u8fc7\u7a0b\u53ef\u4ece\u4f20\u7edf\u7684\u5bf9\u77ff\u5e8a\u6210\u56e0\u53ca\u6210\u77ff\u89c4\u5f8b\u7684\u7814\u7a76\u3001\u9759\u6001\u7684\u5b9a\u6027\u7814\u7a76\u4e0a\u5347\u5230\u52a8\u6001\u7684\u5b9a\u91cf\u7814\u7a76   \u76ee\u524d\u5bf9\u6210\u77ff\u52a8\u529b\u5b66\u7684\u7814\u7a76  \u7531\u4f20\u7edf\u7684\u4fa7\u91cd\u4e8e\u5316\u5b66\u8fc7\u7a0b\u800c\u8f83\u5c11\u5173\u6ce8\u4e0e\u6210\u77ff\u76f8\u5173\u7684\u7269\u7406\u8fc7\u7a0b\uff0c\u8f6c\u5411\u591a\u76f8\u3001\u591a\u7ec4\u6210\u548c\u591a\u8026\u5408\u65b9\u5411\u53d1\u5c55 \u6784\u9020-\u6d41\u4f53\u8026\u5408\u6210\u77ff\u52a8\u529b\u5b66\u6bd4\u5355\u4e00\u7684\u6d41\u4f53\u6216\u6784\u9020\u65b9\u9762\u7684\u7814\u7a76\u66f4\u63a5\u8fd1\u5730\u8d28\u4e8b\u5b9e \u5b9e\u8d28\u662f\u901a\u8fc7\u9610\u660e\u6784\u9020\u53d8\u5f62\u4e0e\u6d41\u4f53\u70ed-\u529b\u5b66-\u5316\u5b66\u76f8\u4e92\u4f5c\u7528\u548c\u8026\u5408\uff0c\u6765\u63a2\u8ba8\u5bf9\u77ff\u5e8a\u5f62\u6210\u548c\u5206\u5e03\u7684\u5236\u7ea6\u4f5c\u7528   \u4e00\u7cfb\u5217\u6210\u77ff\u52a8\u529b\u5b66\u6a21\u578b  \u4e00\u4e2a\u5178\u578b\u7684\u52a8\u529b\u5b66\u673a\u5236     \u7b2c\u56db\u6bb5\uff1a\u8ba1\u7b97\u673a\u6570\u503c\u6a21\u62df\u5728\u7406\u89e3\u6784\u9020-\u6d41\u4f53\u8026\u5408\u6210\u77ff\u52a8\u529b\u5b66\u673a\u5236\u65b9\u9762\u610f\u4e49\u91cd\u5927\uff0c\u4e3a\u7406\u89e3\u77ff\u5e8a\u6210\u56e0\u3001\u670d\u52a1\u627e\u77ff\u52d8\u63a2\u548c\u4f18\u9009\u627e\u77ff\u9776\u533a\u4e0a\u53d1\u6325\u4e86\u91cd\u8981\u4f5c\u7528\u3002 \u7b2c\u4e94\u6bb5  \u6210\u77ff\u52a8\u529b\u5b66\u8fdb\u4e00\u6b65\u4e0a\u5347\u5230\u590d\u6742\u7cfb\u7edf\u7684\u7406\u8bba\u548c\u65b9\u6cd5 \u5730\u8d28\u7cfb\u7edf\u590d\u6742\u6027\u7814\u7a76 \u6210\u77ff\u590d\u6742\u6027\u7814\u7a76   \u7b2c\u516d\u6bb5  \u6210\u77ff\u8fc7\u7a0b  \u5730\u7403\u7cfb\u7edf\u5185\u7684\u4e00\u79cd\u81ea\u7ec4\u7ec7\u4e34\u754c\u73b0\u8c61 \u6700\u7ec8\u4ea7\u7269\u6ee1\u8db3\u5e42\u5f8b\u5206\u5e03 \u53ef\u7528\u5206\u5f62/\u591a\u91cd\u5206\u5f62\u6a21\u578b\u6765\u63cf\u8ff0   \u5206\u5f62  \u7528\u4e8e\u523b\u753b\u7269\u4f53\u5728\u4e0d\u540c\u7684\u5c3a\u5ea6\u4e0b\u5177\u6709\u81ea\u76f8\u4f3c\u7684\u51e0\u4f55\u6027\u8d28 \u5206\u5f62\u9891\u7387\u5206\u5e03 \u6210\u77ff\u5143\u7d20\u5728\u65f6\u7a7a\u5206\u5e03\u4e0a\u8868\u73b0\u51fa\u4e0d\u5747\u5300\u6027=&gt;\u65f6\u7a7a\u5206\u5e03\u7ed3\u6784\u7684\u7814\u7a76=&gt;\u7b80\u5355\u7684\u5206\u5f62\u9891\u7387\u5206\u5e03\u5219\u4e0d\u8db3\u4ee5\u5ea6\u91cf\u6210\u77ff\u7269\u8d28\u65f6\u7a7a\u5206\u5e03\u7ed3\u6784\u89c4\u5f8b \u591a\u91cd\u5206\u5f62\u7406\u8bba      \u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u5e94\u7528\u7814\u7a76\u73b0\u72b6   \u7b2c\u4e00\u6bb5\uff08\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7406\u8bba\uff09\n \u4f5c\u8005\u79d1\u666e \u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u73b0\u8c61\u7684\u7406\u89e3\u591a\u6e90\u4e8e\u5143\u80de\u81ea\u52a8\u673a\u7684\u6570\u503c\u6a21\u62df    \u7b2c\u4e8c\u6bb5\uff08\u5143\u80de\u81ea\u52a8\u673a\uff09\n \u5728\u65f6\u95f4\u3001\u7a7a\u95f4\u548c\u72b6\u6001\u4e0a\u90fd\u8868\u73b0\u4e3a\u79bb\u6563\u72b6\u6001\uff0c\u5e38\u7528\u4e8e\u7814\u7a76\u81ea\u7ec4\u7ec7\u7cfb\u7edf\u7684\u6f14\u5316\u8fc7\u7a0b \u590d\u6742\u7cfb\u7edf\u53ef\u6e90\u81ea\u4e8e\u7b80\u5355\u5b50\u7cfb\u7edf\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528 \u57fa\u4e8e\u5fae\u5206\u65b9\u7a0b\u5f0f\u52a8\u529b\u5b66\u6a21\u578b\u53ef\u80fd\u5b58\u5728\u51e0\u4e2a\u4e0d\u8db3 \u5143\u80de\u81ea\u52a8\u673a\u4e0d\u662f\u901a\u8fc7\u4e25\u683c\u7684\u7269\u7406\u65b9\u7a0b\u6216\u51fd\u6570\u6765\u8868\u8fbe\uff0c\u800c\u662f\u901a\u8fc7\u4e00\u7cfb\u5217\u5c40\u90e8\u6f14\u5316\u89c4\u5219\u6784\u6210\uff0c\u5b83\u4e3a\u7814\u7a76\u590d\u6742\u52a8\u529b\u5b66\u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u53ef\u4f9b\u9009\u62e9\u7684\u65b9\u6cd5    \u7b2c\u4e09-\u516b\u6bb5\uff08\u5143\u80de\u81ea\u52a8\u673a\u5728\u4e0d\u540c\u9886\u57df\u7684\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7814\u7a76\uff09\n  \u7b2c\u4e09\u6bb5\uff1a\u7b80\u4ecb\u57fa\u4e8e\u5143\u80de\u81ea\u52a8\u673a\u6a21\u578b\u7684\u5730\u9707\u8fc7\u7a0b\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7814\u7a76\n  \u7b2c\u56db\u6bb5\uff1a\u7b80\u4ecb\u57fa\u4e8e\u5143\u80de\u81ea\u52a8\u673a\u6a21\u578b\u706b\u5c71\u65ad\u88c2\u7cfb\u7edf\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7814\u7a76\n  \u7b2c\u4e94\u6bb5\uff1a\u7b80\u4ecb\u57fa\u4e8e\u5143\u80de\u81ea\u52a8\u673a\u6a21\u578b\u6ed1\u5761\u73b0\u8c61\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7814\u7a76\n  \u6ed1\u5761\u89c4\u6a21\u4e0e\u9891\u7387\u6ee1\u8db3\u5e42\u5f8b\u5206\u5e03\n  \u6c99\u5806\u5143\u80de\u81ea\u52a8\u673a\u6a21\u578b\n    \u7b2c\u516d\u6bb5\uff1a\u5d29\u584c\u3001\u6ed1\u5761\u3001\u6ce5\u77f3\u6d41\u7b49\u5730\u8d28\u707e\u5bb3\u8fd0\u52a8\u8fc7\u7a0b\u7684\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\n  \u7b2c\u4e03\u6bb5\uff1a\u57fa\u4e8e\u5143\u80de\u81ea\u52a8\u673a\u7684\u68ee\u6797\u706b\u707e\u6a21\u578b\n  \u7b2c\u516b\u6bb5\uff1a\u8303\u56f4\u5e7f\u6cdb\u5730\u533a\u4e2d\u964d\u6c34\u91cf\u53ca\u5176\u4ed6\u6c34\u6587\u53d8\u91cf\u65f6\u95f4\u5e8f\u5217\u5747\u8868\u73b0\u51fa\u81ea\u7ec4\u7ec7\u4e34\u754c\u7279\u6027\n    \u7b2c\u4e5d\u6bb5\uff08\u603b\u7ed3\uff09\n \u4e00\u65b9\u9762\u53ef\u4ece\u8fd9\u4e9b\u81ea\u7136\u73b0\u8c61\u5177\u6709\u7684\u5e42\u5f8b\u5206\u5e03\u3001\u957f\u7a0b\u76f8\u5173\u6027\u3001\u5c3a\u5ea6\u4e0d\u53d8\u6027\u30011/f \u566a\u58f0\u7b49\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7684\u590d\u6742\u6027\u7279\u5f81\u7740\u624b \u53e6\u4e00\u65b9\u9762\u53ef\u501f\u52a9\u5143\u80de\u81ea\u52a8\u673a\u5f3a\u5927\u7684\u590d\u6742\u7cfb\u7edf\u5efa\u6a21\u80fd\u529b\u548c\u7075\u6d3b\u7684\u6269\u5c55\u80fd\u529b\uff0c\u5bf9\u6a21\u578b\u5404\u7ec4\u6210\u90e8\u5206\u8fdb\u884c\u7075\u6d3b\u7684\u6269\u5c55\uff0c\u4ece\u800c\u6784\u5efa\u76f8\u5e94\u7684\u4e13\u9898\u5143\u80de\u81ea\u52a8\u673a\u6a21\u578b\uff0c\u6765\u628a\u63e1\u73b0\u8c61\u81ea\u7ec4\u7ec7\u6f14\u5316\u7684\u5185\u5728\u673a\u5236 \u5bf9\u4e8e\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7684\u6210\u77ff\u8fc7\u7a0b\u7684\u5143\u80de\u81ea\u52a8\u673a\u6a21\u62df\u8fd8\u6709\u5f85\u8fdb\u4e00\u6b65\u7814\u7a76    \u5b58\u5728\u7684\u4e3b\u8981\u95ee\u9898   \u7814\u7a76\u4e3b\u9898\uff1a\u6784\u9020-\u6d41\u4f53-\u6210\u77ff\u7cfb\u7edf\u7684\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u6a21\u62df\u5206\u6790\n  \u76ee\u524d\u5bf9\u8fd9\u7c7b\u6210\u77ff\u7cfb\u7edf\u7684\u7814\u7a76\u4fa7\u91cd\u4e8e\u6210\u77ff\u4f5c\u7528\u52a8\u529b\u5b66\u6a21\u578b\u7684\u7814\u7a76\n  \u975e\u7ebf\u6027\u7406\u8bba\u548c\u590d\u6742\u6027\u7406\u8bba\n  \u73b0\u6709\u5bf9\u70ed\u6db2\u6210\u77ff\u8fc7\u7a0b\u7684\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7814\u7a76\u591a\u4fa7\u91cd\u4e8e\u5229\u7528\u5206\u5f62/\u591a\u91cd\u5206\u5f62\u6a21\u578b\u5bf9\u73b0\u8c61\u7684\u8868\u73b0\u5f62\u5f0f\u63cf\u8ff0\u548c\u89e3\u91ca\u73b0\u8c61\u7684\u590d\u6742\u7279\u5f81\uff1b\u800c\u5bf9\u4e8e\u4ea7\u751f\u8fd9\u4e9b\u590d\u6742\u7279\u5f81\u7684\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7684\u5185\u5728\u673a\u7406\u7684\u7814\u7a76\u8fd8\u6709\u5f85\u8fdb\u4e00\u6b65\u6df1\u5165\n  \u8fdb\u4e00\u6b65\u89e3\u51b3\u8fd9\u7c7b\u79d1\u5b66\u95ee\u9898\n \u57fa\u7840\uff1a\u5df2\u6709\u7684\u5178\u578b\u6210\u77ff\u52a8\u529b\u5b66\u6a21\u578b\uff0c\u5730\u9707\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u6570\u503c\u6a21\u578b \u5229\u7528\u5143\u80de\u81ea\u52a8\u673a\u6a21\u578b  \u6570\u503c\u5316\u6a21\u62df\u6d41\u4f53\u5728\u65ad\u5c42\u5e26\u4e2d\u6cbf\u65ad\u88c2\u4e0a\u5347\u8fd0\u79fb\u8fc7\u7a0b\u4ee5\u53ca\u201c\u65ad\u88c2\u9600-\u5730\u9707\u6cf5\u5438-\u5468\u671f\u6027\u7834\u88c2\u6108\u5408\u201d\u7684\u6784\u9020-\u6d41\u4f53\u8026\u5408\u6210\u77ff\u52a8\u529b\u5b66\u6a21\u5f0f \u6a21\u62df\u6210\u77ff\u6d41\u4f53\u8f93\u8fd0\u548c\u6210\u77ff\u5b9a\u4f4d\u8fc7\u7a0b   \u63ed\u793a  \u6d41\u4f53\u53c2\u4e0e\u4e0b\u5730\u9707\u4ee5\u53ca\u65ad\u88c2\u6784\u9020\u751f\u6210\u673a\u5236 \u6210\u77ff\u6d41\u4f53\u8fd0\u79fb\u673a\u5236 \u6784\u9020-\u6d41\u4f53\u8026\u5408\u4f5c\u7528\u4e0b\u6210\u77ff\u7269\u8d28\u5982\u4f55\u8fd0\u79fb\u4e0e\u81ea\u7ec4\u7ec7\u5bcc\u96c6\u6210\u77ff\u8fc7\u7a0b      \u7814\u7a76\u5185\u5bb9\u4e0e\u601d\u8def \u7814\u7a76\u5185\u5bb9 \u9488\u5bf9\u76ee\u524d\u6240\u5b58\u5728\u7684\u95ee\u9898\uff0c\u8bba\u6587\u4ece\u6d41\u4f53\u5448\u6279\u6b21\u4e0a\u5347\u8fd0\u79fb\u4ee5\u53ca\u65ad\u88c2\u9600\u6210\u77ff\u6a21\u578b\u5165\u624b\uff0c\u63d0\u53d6\u5176\u6f14\u5316\u89c4\u5219\uff0c\u5e76\u6574\u5408\u5230\u5143\u80de\u81ea\u52a8\u673a\u6a21\u578b\u4e2d\uff0c\u8ba1\u7b97\u673a\u91cd\u73b0\u5176\u6f14\u5316\u8fc7\u7a0b\uff0c\u8fdb\u800c\u5bf9\u6784\u9020-\u6d41\u4f53\u8026\u5408\u6210\u77ff\u8fc7\u7a0b\u7684\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u8fdb\u884c\u5206\u6790\n \u4ece\u4e24\u65b9\u9762\u63a2\u8ba8\u65ad\u88c2\u6784\u9020\u4f53\u7cfb\u7684\u81ea\u7ec4\u7ec7\u4e34\u754c\u7279\u6027  \u4ece\u77ff\u5e8a\u65ad\u88c2\u6784\u9020\u4f53\u7cfb\u5728\u7a7a\u95f4\u4e0a\u5177\u5907\u7684\u5206\u5f62\u5206\u5e03\u7279\u6027\u6765\u63a2\u8ba8\u65ad\u88c2\u6784\u9020\u8fc7\u7a0b\u7684\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027 \u501f\u52a9\u5730\u9707\u5f39\u7c27-\u6ed1\u5757\u5143\u80de\u81ea\u52a8\u673a\u6a21\u578b\u6765\u63a2\u8ba8\u4e0d\u540c\u5916\u529b\u9a71\u52a8\u4e0b\u65ad\u88c2\u6f14\u5316\u8fc7\u7a0b\u7684\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027   \u5728\u5730\u9707\u5f39\u7c27-\u6ed1\u5757\u5143\u80de\u81ea\u52a8\u673a\u6570\u503c\u6a21\u578b\u57fa\u7840\u4e0a+\u8003\u8651\u6d41\u4f53\u538b\u529b\u5bf9\u5ca9\u77f3\u7834\u88c2\u7684\u5f71\u54cd+\u8109\u4f53\u7684\u5f62\u6001\u4e0e\u5206\u5e03\u4e0d\u89c4\u5219\u6027\u8fdb\u884c\u5206\u6790 \u5bf9\u5730\u9707\u65ad\u5c42\u5e26\u4e2d\u6784\u9020-\u6d41\u4f53\u8026\u5408\u4f5c\u7528\u5bf9\u6210\u77ff\u7269\u8d28\u8fd0\u79fb\u3001\u81ea\u7ec4\u7ec7\u5bcc\u96c6\u6210\u77ff\u8fc7\u7a0b\u7684\u5f71\u54cd\u8fdb\u884c\u6a21\u62df\u5206\u6790  \u7814\u7a76\u601d\u8def \u4e3b\u8981\u6b65\u9aa4\n \u8bbe\u5b9a\u5143\u80de\u5c5e\u6027\u3001\u5143\u80de\u72b6\u6001\u4ee5\u53ca\u5143\u80de\u90bb\u5c45\u7c7b\u578b \u63d0\u53d6\u7cfb\u7edf\u6f14\u5316\u89c4\u5219 \u6a21\u62df\u7ed3\u679c\u5206\u6790  \u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7814\u7a76\u76f8\u5173\u7406\u8bba \u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7406\u8bba \u627e\u5230\u8fd9\u4e2a\r\u767d\u8bdd\u6587\u89e3\u91ca\n\u81ea\u7ec4\u7ec7  \u81ea\u7ec4\u7ec7\uff08Self-organized\uff09:\u5728\u6ca1\u6709\u5916\u754c\u7684\u7279\u5b9a\u5e72\u6270\u4f5c\u7528\u4e0b\uff0c\u7cfb\u7edf\u5185\u90e8\u7ec4\u5206\u901a\u8fc7\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528\u81ea\u53d1\u5730\u5b9e\u73b0\u7cfb\u7edf\u5728\u65f6\u95f4\u3001\u7a7a\u95f4\u548c\u529f\u80fd\u4e0a\u7684\u6709\u5e8f\u6f14\u5316\u3002  \u5747\u5300\u7b80\u5355\u7684\u5e73\u8861\u72b6\u6001 \u6f14\u53d8 \u590d\u6742\u6709\u5e8f\u7684\u975e\u5e73\u8861\u72b6\u6001 \u7cfb\u7edf\u901a\u8fc7\u81ea\u7ec4\u7ec7\u6f14\u5316\u800c\u5f62\u6210\u7a33\u5b9a\u72b6\u6001\u7279\u5f81   \u81ea\u7ec4\u7ec7\u7406\u8bba\uff1a\u7814\u7a76\u7cfb\u7edf\u5728\u4e00\u5b9a\u7ea6\u675f\u6761\u4ef6\u4e0b\uff0c\u4ece\u65e0\u5e8f\u81ea\u53d1\u6f14\u53d8\u4e3a\u6709\u5e8f\uff0c\u4ece\u4f4e\u7ea7\u65e0\u5e8f\u81ea\u53d1\u6f14\u53d8\u4e3a\u9ad8\u7ea7\u6709\u5e8f\u7684\u5185\u5728\u4f5c\u7528\u673a\u5236\u3002  \u7406\u8bba\u7fa4\uff1a\u8017\u6563\u7ed3\u6784\u7406\u8bba\u3001\u534f\u540c\u5b66\u7406\u8bba\u3001\u7a81\u53d8\u8bba\u3001\u5206\u5f62\u7406\u8bba\u3001\u6df7\u6c8c\u7406\u8bba=&gt;\u5171\u540c\u6784\u6210\u4e86\u81ea\u7ec4\u7ec7\u7684\u7406\u8bba\u6846\u67b6 \u8017\u6563\u7ed3\u6784\u7406\u8bba\uff1a\u4fa7\u91cd\u4e8e\u5bf9\u53ef\u53d1\u751f\u81ea\u7ec4\u7ec7\u6f14\u5316\u8fc7\u7a0b\u53ca\u81ea\u7ec4\u7ec7\u7cfb\u7edf\u6784\u5efa\u6240\u9700\u6761\u4ef6\u7684\u7814\u7a76=&gt;\u81ea\u7ec4\u7ec7\u6761\u4ef6\u65b9\u6cd5\u8bba \u534f\u540c\u5b66\u7406\u8bba\uff1a\u4fa7\u91cd\u4e8e\u7814\u7a76\u81ea\u7ec4\u7ec7\u6f14\u5316\u8fc7\u7a0b\u5efa\u7acb\u4e4b\u540e\u81ea\u7ec4\u7ec7\u6d3b\u529b\u7684\u4fdd\u6301\u8fc7\u7a0b=&gt;\u81ea\u7ec4\u7ec7\u52a8\u529b\u5b66\u65b9\u6cd5\u8bba \u7a81\u53d8\u8bba\uff1a\u4fa7\u91cd\u4e8e\u7814\u7a76\u7cfb\u7edf\u81ea\u7ec4\u7ec7\u6f14\u5316\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u6f14\u5316\u9014\u5f84=&gt;\u81ea\u7ec4\u7ec7\u6f14\u5316\u9014\u5f84\u65b9\u6cd5\u8bba \u5206\u5f62\u7406\u8bba\uff1a\u4fa7\u91cd\u4e8e\u81ea\u7ec4\u7ec7\u6f14\u5316\u8fc7\u7a0b\u4e2d\uff0c\u7cfb\u7edf\u4ece\u7b80\u5355\u6027\u7ed3\u6784\u5230\u590d\u6742\u6027\u7ed3\u6784\u7684\u53d8\u5316\u8fc7\u7a0b=&gt;\u81ea\u7ec4\u7ec7\u6f14\u5316\u7a7a\u95f4\u5f62\u6001\u65b9\u6cd5\u8bba \u6df7\u6c8c\u7406\u8bba\uff1a\u4fa7\u91cd\u4e8e\u7cfb\u7edf\u81ea\u7ec4\u7ec7\u6f14\u5316\u8fc7\u7a0b\u4e2d\u65f6\u95f4\u7684\u590d\u6742\u6027\u95ee\u9898\u7814\u7a76=&gt;\u81ea\u7ec4\u7ec7\u52a8\u529b\u5b66\u53d1\u5c55\u65b9\u6cd5\u8bba    \u4e34\u754c\u6027  \u4e34\u754c\u6027\uff08Criticality\uff09:  \u4e0e\u7269\u7406\u5b66\u4e2d\u7684\u8fde\u7eed\u76f8\u53d8\u5177\u6709\u7c7b\u4f3c\u7684\u7279\u6027: \u7cfb\u7edf\u5185\u90e8\u5177\u6709\u5b8c\u5168\u76f8\u540c\u7684\u7269\u7406\u548c\u5316\u5b66\u6027\u8d28\u7684\u5747\u5300\u90e8\u5206\u53ef\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u76f8\uff0c\u5f53\u7269\u8d28\u7684\u7269\u7406\u5316\u5b66\u6027\u8d28\u53d1\u751f\u6539\u53d8\uff0c\u8db3\u4ee5\u4f7f\u7269\u8d28\u4ece\u4e00\u4e2a\u76f8\u8f6c\u53d8\u4e3a\u53e6\u4e00\u76f8\u65f6\uff0c\u6b64\u65f6\u7cfb\u7edf\u53d1\u751f\u76f8\u53d8\u3002 \u4e34\u754c\u6001\u7684\u7cfb\u7edf\u5f80\u5f80\u8868\u73b0\u51fa \u957f\u7a0b\u65f6\u7a7a\u76f8\u5173\u6027 \u548c \u65f6\u7a7a\u5206\u5f62\u7ed3\u6784 \u4e24\u4e2a\u663e\u8457\u7684\u7279\u6027(\u4e0d\u61c2)    \u81ea\u7ec4\u7ec7\u4e34\u754c\u6027   \u81ea\u7ec4\u7ec7\u4e34\u754c\u6027: \u89e3\u91ca\u590d\u6742\u6027\u7cfb\u7edf\u7684\u65f6-\u7a7a\u5ef6\u5c55\u5e76\u5177\u6709\u5de8\u5927\u76f8\u4e92\u4f5c\u7528\u7684\u52a8\u529b\u5b66\u884c\u4e3a\n  \u517c\u5177\u65f6\u95f4\u548c\u7a7a\u95f4\u81ea\u7531\u5ea6\u7684\u65f6-\u7a7a\u5ef6\u5c55\u7684\u5f00\u653e\u52a8\u529b\u5b66\u7cfb\u7edf: \u5982\u5730\u8d28\u5b66\u3001\u5730\u9707\u5b66\u3001\u6c14\u8c61\u5b66\u7b49\u9886\u57df\n \u4e0d\u9700\u8981\u8fdb\u884c\u4efb\u4f55\u5916\u90e8\u63a7\u5236\u56e0\u7d20\u7684\u8c03\u8282\u4e0e\u4e3b\u5bfc \u5728\u5916\u754c\u80fd\u91cf\u53ca\u7269\u8d28\u8f93\u5165\u7684\u9a71\u52a8\u4e0b \u7cfb\u7edf\u5185\u90e8\u5b50\u7cfb\u7edf\u4e4b\u95f4\u901a\u8fc7\u975e\u7ebf\u6027\u76f8\u4e92\u4f5c\u7528\uff0c\u53ef\u81ea\u53d1\u6f14\u5316\u5230\u4e00\u4e2a\u5728\u5b8f\u89c2\u52a8\u529b\u5b66\u7a33\u5b9a\u800c\u5728\u5c40\u57df\u52a8\u529b\u5b66\u4e0a\u4e0d\u7a33\u5b9a\u7684\u4e34\u754c\u72b6\u6001\u3002    \u4e34\u754c\u72b6\u6001\u4e0b,\n \u5916\u754c\u5bf9\u7cfb\u7edf\u5fae\u5c0f\u7684\u6270\u52a8\u53ef\u80fd\u88ab\u65e0\u9650\u653e\u5927 \u53ef\u89e6\u53d1\u94fe\u5f0f\u53cd\u5e94\u751a\u81f3\u5f71\u54cd\u5230\u6574\u4e2a\u7cfb\u7edf \u5bfc\u81f4\u4e86\u7cfb\u7edf\u7684\u957f\u7a0b\u65f6\u7a7a\u5173\u7cfb\u7279\u6027\u7684\u4ea7\u751f\uff0c\u5728\u7cfb\u7edf\u53d1\u751f\u5d29\u584c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u5411\u5916\u754c\u8017\u6563\u8f93\u51fa\u7269\u8d28\u548c\u80fd\u91cf    \u81ea\u7ec4\u7ec7\u4e34\u754c\u52a8\u529b\u5b66\u5177\u6709\u4e00\u5b9a\u7684\u9c81\u68d2\u6027\n \u5916\u754c\u6270\u52a8\u53ca\u7cfb\u7edf\u5185\u90e8\u6da8\u843d\u5bf9\u521d\u59cb\u6761\u4ef6\u7684\u6539\u53d8\u6781\u5176\u4e0d\u654f\u611f\uff0c\u8868\u73b0\u51fa\u4e00\u5b9a\u7684\u7a33\u5b9a\u6027 \u7cfb\u7edf\u5728\u504f\u79bb\u4e34\u754c\u72b6\u6001\u4e4b\u540e\u4e5f\u4f1a\u81ea\u53d1\u6f14\u5316\u56de\u5f52\u4e34\u754c\u72b6\u6001    \u5448\u4e34\u754c\u6001\u7684\u7cfb\u7edf\u5e38\u5728\u7a7a\u95f4\u548c\u65f6\u95f4\u4e0a\u8868\u73b0\u51fa\u5206\u5f62\u7279\u6027\uff0c\u5176\u8017\u6563\u7684\u80fd\u91cf\u548c\u7269\u8d28\u89c4\u6a21\u5c3a\u5ea6\u5206\u5e03\u53ef\u7528\u5e42\u5f8b\u5206\u5e03\u6765\u5ea6\u91cf\n  \u8fd9\u7c7b\u52a8\u6001\u7cfb\u7edf\n  \u80fd\u91cf\u52a0\u5165\u5230\u7cfb\u7edf\u4ee5\u6301\u7eed\u7f13\u6162\u7684\u3001\u5747\u5300\u7684\u65b9\u5f0f\u8fdb\u884c\n  \u80fd\u91cf\u8017\u6563\u5219\u4ee5\u77ac\u65f6\u7684\u3001\u5d29\u584c\u5f0f\u7684\u7684\u65b9\u5f0f\u8fdb\u884c\n  \u6c99\u5806\u6a21\u578b\uff08\u79d1\u666e\u535a\u6587\uff1a\r\u8de8\u51fa\u7406\u89e3\u201c\u81ea\u76f8\u4f3c\u201c\u7684\u4e00\u5c0f\u6b65\uff09\n \u5728\u8be5\u6c99\u5806\u6a21\u578b\u4e2d\uff0c\u7f13\u6162\u7684\u5411\u4e00\u4e2a\u5e73\u53f0\u4e0a\u6dfb\u52a0\u6c99\u7c92\uff0c\u9010\u6e10\u5f62\u6210\u4e00\u4e2a\u6c99\u5806 \u5728\u6c99\u5806\u5f62\u6210\u7684\u521d\u59cb\u9636\u6bb5\uff0c\u65b0\u52a0\u5165\u7684\u6c99\u7c92\u53d7\u5230\u4f4e\u5761\u5ea6\u7684\u5236\u7ea6\u4e0d\u4f1a\u51fa\u73b0\u8fdc\u8ddd\u79bb\u7684\u6ed1\u52a8 \u968f\u7740\u6c99\u7c92\u7684\u52a0\u5165\uff0c\u6c99\u5806\u5761\u5ea6\u589e\u52a0\uff0c\u6b64\u65f6\u65b0\u52a0\u5165\u7684\u6c99\u7c92\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u7684\u7ed3\u679c\uff0c\u6c99\u7c92\u53ef\u80fd\u4f1a\u843d\u5728\u539f\u5730\u6216\u4ec5\u51fa\u73b0\u8fd1\u8ddd\u79bb\u6ed1\u52a8\uff0c\u4e5f\u6709\u53ef\u80fd\u5f15\u53d1\u94fe\u5f0f\u53cd\u5e94\u751a\u81f3\u53d1\u751f\u5927\u8303\u56f4\u6c99\u7c92\u5d29\u584c\uff0c\u5176\u5d29\u584c\u5927\u5c0f\u53ef\u80fd\u4ec5\u5305\u542b\u5c11\u6570\u6c99\u7c92\uff0c\u4e5f\u6709\u53ef\u80fd\u6d89\u53ca\u5230\u6c99\u5806\u8868\u9762\u6240\u6709\u6c99\u7c92\u3002 \u6c99\u5806\u7cfb\u7edf\u6b64\u65f6\u8868\u73b0\u51fa\u81ea\u7ec4\u7ec7\u4e34\u754c\u7279\u6027  \u80fd\u91cf\u8017\u6563\uff08\u6c99\u7c92\u5d29\u584c\uff09\u7684\u89c4\u6a21\u53ca\u5c3a\u5ea6\u5206\u5e03\u670d\u4ece\u5e42\u5f8b\u5206\u5e03 \u5728\u65f6\u95f4\u4e0a\u5176\u9891\u8c31\u8868\u73b0\u51fa \u566a\u58f0\u7684\u7279\u70b9   \u5229\u7528\u5143\u80de\u81ea\u52a8\u673a\u6570\u503c\u6a21\u62df\u65b9\u6cd5\u53ef\u91cd\u73b0\u8be5\u8fc7\u7a0b\uff0c\u5e76\u53ef\u5f97\u5230\u4e0e\u5b9e\u9645\u6c99\u5806\u6a21\u578b\u51e0\u4e4e\u76f8\u7b26\u7684\u975e\u7ebf\u6027\u7279\u6027   \u4e8c\u7ef4\u5e73\u9762\u6a21\u578b\u8868\u793a \u5c0f\u603b\u7ed3\uff1a\u6c99\u5806\u6a21\u578b\u53ef\u8868\u73b0\u51fa\u4e30\u5bcc\u7684\u975e\u7ebf\u6027\u7279\u6027\uff0c\u5728\u8bbe\u7f6e\u4e0d\u540c\u6a21\u578b\u53c2\u6570\u7684\u6761\u4ef6\u4e0b\uff0c\u5982\u4e34\u754c\u9ad8\u5ea6 \u53d6\u4e0d\u540c\u6574\u6570\u503c\u3001\u5d29\u584c\u4e4b\u540e\u6c99\u7c92\u9009\u62e9\u6ed1\u5411\u968f\u673a\u65b9\u5411\u3001\u8bbe\u7f6e\u4e0d\u540c\u8fb9\u754c\u6761\u4ef6\uff0c\u6a21\u578b\u5747\u53ef\u8868\u73b0\u51fa\u5e42\u5f8b\u5206\u5e03\u7279\u6027\uff0c\u8868\u660e\u6c99\u5806\u6a21\u578b\u6f14\u5316\u8fc7\u7a0b\u9075\u4ece\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7684\u5185\u7980\u5c5e\u6027\u3002      \u603b\u7ed3\uff1a\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u7cfb\u7edf\uff0c\n \u7cfb\u7edf\u5177\u6709\u8017\u6563\u7ed3\u6784\uff0c\u9700\u8981\u5916\u754c\u80fd\u91cf\u7684\u4e0d\u65ad\u52a0\u5165\uff0c\u5982\u6c99\u5806\u6a21\u578b\u4e2d\u6c99\u7c92\u7684\u8fde\u7eed\u52a0\u5165\u3001\u5730\u8d28\u7cfb\u7edf\u4e2d\u5730\u58f3\u7684\u8fd0\u52a8\u3002 \u7cfb\u7edf\u5448\u73b0\u51fa\u9c81\u68d2\u6027\uff0c\u4e0e\u7cfb\u7edf\u521d\u59cb\u8bbe\u7f6e\u72b6\u6001\u65e0\u5173\u3002 \u7cfb\u7edf\u8fbe\u5230\u4e34\u754c\u6001\u65f6\uff0c\u53d1\u751f\u7684\u80fd\u91cf\u8017\u6563\u4e8b\u4ef6\u89c4\u6a21\u548c\u65f6\u95f4\u53ef\u7528\u5e42\u5f8b\u5206\u5e03\u5ea6\u91cf\uff0c\u8868\u73b0\u51fa\u65f6\u7a7a\u957f\u7a0b\u76f8\u5173\u6027\u3002    \u5143\u80de\u81ea\u52a8\u673a \u5143\u80de\u81ea\u52a8\u673a\u7684\u5b9a\u4e49\u4e0e\u6784\u6210   \u4e00\u79cd\u7684\u52a8\u529b\u5b66\u7cfb\u7edf\n \u65f6\u95f4\u3001\u7a7a\u95f4\u548c\u72b6\u6001\u4e0a\u90fd\u79bb\u6563 \u5728\u76f8\u540c\u7684\u5c40\u90e8\u6f14\u5316\u89c4\u5219\u4f5c\u7528\u4e0b\u540c\u6b65\u66f4\u65b0 \u533a\u522b\u4e8e\u4e00\u822c\u7684\u52a8\u529b\u5b66\u6a21\u578b\uff0c\u5143\u80de\u81ea\u52a8\u673a\u901a\u8fc7\u4e00\u7cfb\u5217\u5c40\u90e8\u6f14\u5316\u89c4\u5219\u53d6\u4ee3\u4f20\u7edf\u7684\u7531\u7269\u7406\u65b9\u7a0b\u548c\u51fd\u6570\u6765\u5b9a\u4e49\u6a21\u578b\u7ed3\u6784\u3002    \u6784\u6210\u8981\u7d20\n  \u5143\u80de\n  \u72b6\u6001\n  \u5143\u80de\u7a7a\u95f4\uff1a \u4efb\u610f\u7ef4\u6570\uff08\u4e00\u7ef4\u3001\u4e8c\u7ef4\u6216\u591a\u7ef4\uff09\u7684\u7a7a\u95f4\u89c4\u5219\u5212\u5206\n  \u90bb\u57df\uff1a\n \u51af\u8bfa\u4f9d\u66fc\uff08Von. Neumann\uff09\u578b \u6469\u5c14\uff08Moore\uff09\u578b \u6269\u5c55\u7684\u6469\u5c14\uff08Moore\uff09\u578b    \u8f6c\u6362\u89c4\u5219\uff1a \u5143\u80de\u4ece\u5f53\u524d\u72b6\u6001\u6f14\u5316\u5230\u4e0b\u4e00\u65f6\u523b\u72b6\u6001\u7684\u52a8\u529b\u5b66\u72b6\u6001\u8f6c\u79fb\u51fd\u6570\n \u53ef\u901a\u8fc7\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u81ea\u52a8\u5b66\u4e60\u6f14\u5316\u89c4\u5219 \u4e5f\u53ef\u5728\u73b0\u8c61\u6f14\u5316\u7684\u6982\u5ff5\u6a21\u578b\u57fa\u7840\u4e4b\u4e0a\u63d0\u53d6\u6a21\u578b\u6f14\u5316\u89c4\u5219    \u65f6\u95f4\n    \u5143\u80de\u81ea\u52a8\u673a\u7684\u5206\u7c7b\u53ca\u7279\u5f81  \u57fa\u672c\u7279\u5f81  \u540c\u8d28\u6027\uff1a\u4e3b\u8981\u53cd\u6620\u5728\u5143\u80de\u7a7a\u95f4\u5185\u7684\u6bcf\u4e2a\u5143\u80de\u5355\u5143\u683c\u90fd\u4ee5\u76f8\u540c\u7684\u8f6c\u6362\u89c4\u5219\u6216\u51fd\u6570\u6f14\u5316 \u9f50\u6b21\u6027\uff1a\u4e3b\u8981\u6307\u5143\u80de\u5177\u5907\u76f8\u540c\u7684\u5927\u5c0f\u3001\u5f62\u72b6\u53ca\u7a7a\u95f4\u5206\u5e03\u65b9\u5f0f\uff1b \u7a7a\u95f4\u79bb\u6563\uff1a\u5143\u80de\u4e3b\u8981\u5206\u5e03\u5728\u6309\u7167\u7279\u5b9a\u89c4\u5219\u5212\u5206\u7684\u79bb\u6563\u7684\u5143\u80de\u7a7a\u95f4\u4e0a\uff1b \u65f6\u95f4\u79bb\u6563\uff1a\u7cfb\u7edf\u6f14\u5316\u4ee5\u7b49\u95f4\u8ddd\u7684\u79bb\u6563\u65f6\u95f4\u5206\u6b65\u8fdb\u884c\uff0c\u5143\u80de\u5728\u65f6\u523b\u7684\u72b6\u6001\u76f4\u63a5\u53d6\u51b3\u4e8e\u8be5\u5143\u80de\u53ca\u5176\u90bb\u57df\u5143\u80de\u5728 \u65f6\u523b\u7684\u72b6\u6001\u3002\u5143\u80de\u81ea\u52a8\u673a\u7684\u79bb\u6563\u65f6\u95f4\u53d8\u91cf\u4e0e\u5fae\u5206\u65b9\u7a0b\u4e2d\u7684\u8fde\u7eed\u65f6\u95f4\u53d8\u91cf\u76f8\u5bf9\u7acb\uff1b \u72b6\u6001\u79bb\u6563\u6709\u9650\uff1a\u5143\u80de\u7684\u72b6\u6001\u53ea\u5305\u542b\u6709\u9650\u4e2a\u6570\u7684\u79bb\u6563\u503c\uff1b \u8ba1\u7b97\u540c\u6b65\u5e76\u884c\uff1a\u5404\u4e2a\u5143\u80de\u5728\u67d0\u4e00\u65f6\u523b\u7684\u72b6\u6001\u53d8\u5316\u662f\u72ec\u7acb\u7684\u884c\u4e3a\uff0c\u76f8\u4e92\u4e4b\u95f4\u4e0d\u4f1a\u5b58\u5728\u5f71\u54cd\uff0c\u56e0\u800c\u5176\u6f14\u5316\u53ca\u6570\u636e\u5904\u7406\u8fc7\u7a0b\u662f\u540c\u6b65\u8fdb\u884c\u7684\uff0c\u9002\u5408\u6784\u5efa\u5e76\u884c\u8ba1\u7b97\u8fc7\u7a0b\uff1b \u65f6\u7a7a\u5c40\u90e8\u6027\uff1a\u6bcf\u4e00\u4e2a\u5143\u80de\u5728\u65f6\u523b\u7684\u72b6\u6001\u53d6\u51b3\u4e8e\u5176\u90bb\u57df\u5143\u80de\u5355\u5143\u5728\u65f6\u523b\u7684\u72b6\u6001\uff0c\u8868\u73b0\u51fa\u65f6\u7a7a\u5c40\u90e8\u6027\uff1b \u53d8\u91cf\u7ef4\u6570\u65e0\u9650\uff1a\u5143\u80de\u81ea\u52a8\u673a\u7684\u5143\u80de\u7a7a\u95f4\u662f\u5b9a\u4e49\u5728\u4e00\u7ef4\u3001\u4e8c\u7ef4\u6216\u591a\u7ef4\u7a7a\u95f4\u4e0a\u7684\u65e0\u7a77\u7ef4\u52a8\u529b\u7cfb\u7edf\u3002\u5728\u5177\u4f53\u5e94\u7528\u4e2d\u6216\u8ba1\u7b97\u673a\u6a21\u62df\u65f6\u5f80\u5f80\u5904\u7406\u7531\u5927\u91cf\u5143\u80de\u7ec4\u6210\u7684\u7cfb\u7edf\uff0c\u56e0\u800c\u4e5f\u8868\u73b0\u51fa\u5143\u80de\u81ea\u52a8\u673a\u7814\u7a76\u4e2d\u7684\u9ad8\u7ef4\u7279\u6027\u3002   \u5143\u80de\u81ea\u52a8\u673a\u7684\u52a8\u529b\u5b66\u884c\u4e3a: \u5e73\u7a33\u578b\u3001\u5468\u671f\u578b\u3001\u6df7\u6c8c\u578b\u3001\u590d\u6742\u578b \u81ea\u4e0b\u800c\u4e0a\u7684\u8ba1\u7b97\u6a21\u578b  \u591a\u91cd\u5206\u5f62\u6a21\u578b \u65ad\u88c2\u6784\u9020\u7684\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u5206\u6790 \u6d41\u4f53\u4e0a\u5347\u8fd0\u79fb\u53ca\u8109\u4f53\u5f62\u6210\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u5206\u6790 \u6784\u9020-\u6d41\u4f53\u8026\u5408\u6210\u77ff\u4f5c\u7528\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027\u6a21\u62df\u5206\u6790 \u603b\u7ed3\u4e0e\u5c55\u671b \u6df1\u5ea6\u5377\u79ef\u5b66\u4e60\u652f\u6301\u4e0b\u7684\u5efa\u7b51\u7269\u6a21\u5f0f\u5206\u6790 \u664f\u96c4\u950b-2019-\u6b66\u6c49\u5927\u5b66\n\u7528\u65b0\u65b9\u6cd5\u89e3\u51b3\u7ecf\u5178\u95ee\u9898\n\u5c42\u6b21\u5206\u660e\uff1b\u5584\u4e8e\u4e3e\u4f8b\u5b50\uff0c\u5bb9\u6613\u7406\u89e3\uff1b\u5199\u7684\u86ee\u597d\u7684;\n\u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u8bb2\u7684\u86ee\u597d\u7684\uff0c\u7279\u522b\u662f\u56fe\u753b\u7684\u6e05\u6670\u6613\u61c2\uff0c\u6587\u7ae0\u4e2d\u53ef\u4ee5\u501f\u9274\n\u8bba\u6587\u5199\u7684\u662f\u771f\u7684\u597d\uff0c\u5305\u62ec\u5b9e\u9a8c\u548c\u5206\u6790\u9636\u6bb5\u7684\u601d\u8def\u548c\u8fc7\u7a0b\uff0c\u90fd\u662f\u503c\u5f97\u501f\u9274\u7684\u3002\u6587\u7ae0\u7684\u5185\u5bb9\u4e5f\u5f88\u4e30\u5bcc\uff0c\u6ca1\u6709\u611f\u89c9\u591a\u4f59\u7684\u8bdd\uff0c\u4ee5\u540e\u5199\u8bba\u6587\u4e0d\u77e5\u9053\u5199\u4ec0\u4e48\u5185\u5bb9\u4e86\uff0c\u53ef\u4ee5\u8fc7\u6765\u591a\u770b\u770b\u3002\n\u53ef\u4ee5\u8ffd\u4e00\u4e0b\u82f1\u6587\u8bba\u6587\n\u7eea\u8bba\u90e8\u5206 \u9009\u9898\u80cc\u666f\u4e0e\u610f\u4e49   \u6a21\u5f0f\u53ef\u4ee5\u6cdb\u6307\u4e00\u5207\u4e8b\u7269\u4e4b\u95f4\u7684\u89c4\u5f8b\u5173\u7cfb\uff0c\u5305\u62ec\u56fe\u5f62\u56fe\u50cf\u3001\u6587\u5b57\u7b26\u53f7\u3001\u8fd0\u52a8\u72b6\u6001\uff0c\u751a\u81f3\u662f\u62bd\u8c61\u5173\u7cfb\u548c\u601d\u7ef4\u65b9\u5f0f\n  \u7a7a\u95f4\u6a21\u5f0f: \u5728\u57fa\u7840\u7684\u8868\u8fbe\u7ed3\u6784\u4e0a\u6240\u63d0\u70bc\u51fa\u66f4\u9ad8\u5c42\u6b21\u7684\u7a7a\u95f4\u5173\u7cfb\u6216\u65f6\u95f4\u89c4\u5f8b\n \u57fa\u4e8e\u6805\u683c\u6a21\u578b\u5b58\u50a8\u8868\u8fbe\u7684\u56fe\u50cf\u4e2d\u6240\u5171\u5b58\u7684\u7eb9\u7406\u3001\u5f62\u72b6\u6216\u7279\u5b9a\u5bf9\u8c61 (\u4ece\u9ad8\u5206\u8fa8\u7387\u5f71\u50cf\u4e2d\u63d0\u53d6\u5efa\u7b51\u7269\u533a\u57df) \u57fa\u4e8e\u77e2\u91cf\u6570\u636e\u5b58\u50a8\u8868\u8fbe\u7684\u56fe\u5f62\u4e2d\u5bf9\u8c61\u6240\u5177\u5907\u7684\u4e00\u4e9b\u91cd\u590d\u51fa\u73b0\u7684\u7279\u5f81 (\u5730\u5f62\u56fe\u4e2d\u91cd\u590d\u51fa\u73b0\u7684\u57ce\u5e02\u9053\u8def\u683c\u7f51\u3001\u73af\u5f62\u3001\u653e\u5c04\u5f62\u6001\u7b49 ) \u57fa\u4e8e\u65f6\u95f4\u5e8f\u5217\u5b58\u50a8\u7684\u65f6\u7a7a\u6570\u636e\u4e2d\u6240\u5448\u73b0\u7684\u53d8\u5316\u89c4\u5f8b (\u4ece\u4eba\u4eec\u7684\u51fa\u884c\u8f68\u8ff9\u4e2d\u53ef\u63a2\u6d4b\u51fa\u4eba\u7c7b\u6d3b\u52a8\u7684\u884c\u4e3a\u6a21\u5f0f)    \u5efa\u7b51\u7269\n \u5730\u7406\u7a7a\u95f4\u6570\u636e\u5e93\u4e2d\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\uff0c\u662f\u8868\u8fbe\u7a7a\u95f4\u73b0\u8c61\u3001\u652f\u6491\u7a7a\u95f4\u5206\u6790\u548c\u63d0\u4f9b\u7a7a\u95f4\u670d\u52a1\u7684\u57fa\u7840\u4e4b\u4e00\u3002 \u65e0\u8bba\u5728\u4e2a\u4f53\u5f62\u6001\u8fd8\u662f\u7fa4\u7ec4\u7ed3\u6784\uff0c\u90fd\u5b58\u5728\u663e\u8457\u7684\u6a21\u5f0f\u7279\u5f81\uff1a  \u5177\u6709\u8f83\u5f3a\u7684\u4eba\u4e3a\u6027\uff0c\u7279\u5f81\u53ef\u63a7 \u57ce\u5e02\u7ecf\u8fc7\u6570\u767e\u751a\u81f3\u5343\u5e74\u7684\u81ea\u6211\u53d1\u5c55\u548c\u6f14\u5316\uff0c\u5df2\u5f62\u6210\u4e00\u5b9a\u7a33\u5b9a\u6027\u7684\u7ed3\u6784\u89c4\u5f8b\uff0c\u800c\u5efa\u7b51\u7269\u662f\u8868\u8fbe\u8fd9\u79cd\u89c4\u5f8b\u6700\u76f4\u63a5\u7684\u8f7d\u4f53\u4e4b\u4e00      \u5982\u4f55\u5bf9\u8fd9\u79cd\u6a21\u5f0f\u7279\u5f81\u8fdb\u884c\u8868\u8fbe\u3001\u5206\u7c7b\u3001\u8bc6\u522b\u3001\u5206\u6790\u4e5f\u662f\u5b66\u8005\u4eec\u6240\u9752\u7750\u7684\u65b9\u5411\u4e4b\u4e00\uff0c \u5177\u6709\u8f83\u4e3a\u663e\u8457\u7684\u5b9e\u9645\u610f\u4e49\uff1a\n \u4ece\u5730\u7406\u4fe1\u606f\u79d1\u5b66\u89d2\u5ea6\uff0c\u7814\u7a76\u5efa\u7b51\u7269\u6a21\u5f0f\u7ed3\u6784\u6709\u76ca\u4e8e\u5730\u7406\u7a7a\u95f4\u6570\u636e\u5e93\uff0c\u7279\u522b\u662f\u591a\u5c3a\u5ea6\u6570\u636e\u5e93\u7684\u5efa\u8bbe\u3001\u66f4\u65b0\u548c\u8d28\u91cf\u8bc4\u4ef7 \u4ece\u57ce\u5e02\u79d1\u5b66\u89d2\u5ea6\uff0c \u63a2\u7d22\u5efa\u7b51\u7269\u7684\u6a21\u5f0f\u7279\u70b9\u6709\u52a9\u4e8e\u6df1\u5165\u63ed\u793a\u4eba\u7c7b\u6d3b\u52a8\u89c4\u5f8b\uff0c \u7406\u89e3\u4eba\u7c7b\u4e0e\u7a7a\u95f4\u7684\u4ea4\u4e92\u8fc7\u7a0b\uff0c \u5e76\u5e94\u7528\u4e8e\u57ce\u5e02\u89c4\u5212\u548c\u7ba1\u7406\u3002 \u4ece\u5730\u7406\u5b66\u89d2\u5ea6\uff0c\u5206\u6790\u5efa\u7b51\u7269\u6a21\u5f0f\u5206\u5e03\u6709\u5229\u4e8e\u8fdb\u4e00\u6b65\u4e86\u89e3\u653f\u6cbb\u3001\u7ecf\u6d4e\u3001\u6587\u5316\u3001\u5b97\u6559\u7279\u70b9\uff0c \u8be0\u91ca\u6c11\u65cf\u751a\u81f3\u5168\u4eba\u7c7b\u6587\u660e\u7684\u53d1\u5c55\u548c\u6f14\u5316\u89c4\u5f8b\u3002    \u5c3d\u7ba1\u5efa\u7b51\u7269\u7684\u6a21\u5f0f\u7814\u7a76\u5728\u5f88\u591a\u5e94\u7528\u4e0a\u90fd\u6709\u7740\u57fa\u7840\u652f\u6491\u4f5c\u7528\uff0c\u4f46\u76ee\u524d\u7814\u7a76\u6210\u679c\u5e76\u4e0d\u6210\u719f\u5b8c\u5584\uff1a\n \u4ee5\u89c6\u89c9\u8ba4\u77e5\u4e3a\u57fa\u7840\u7684\u4eba\u5de5\u8bc6\u522b\u9636\u6bb5\uff0c\u79bb\u81ea\u52a8\u5316\u7684\u6a21\u5f0f\u8bc6\u522b\u548c\u8868\u8fbe\u4ecd\u6709\u4e0d\u5c0f\u7684\u8ddd\u79bb \u5efa\u7b51\u7269\u7684\u5b58\u50a8\u548c\u8868\u8fbe\u65b9\u5f0f\u4e5f\u7ed9\u540e\u7eed\u7684\u5206\u6790\u548c\u5904\u7406\u5e26\u6765\u4e00\u4e9b\u56f0\u96be  \u5efa\u7b51\u7269\u7684\u4e8c\u7ef4\u9762\u72b6\u7ed3\u6784\uff0c \u76f8\u6bd4\u4e8e\u5176\u540c\u6e90\u6570\u636e\u4f53\u7cfb\u2014\u2014\u9053\u8def\u7f51\u7684\u70b9\u3001 \u7ebf\u7ed3\u6784\uff0c \u5728\u5f62\u72b6\u3001 \u5f62\u6001\u4e0a\u66f4\u96be\u4ee5\u5f62\u5f0f\u5316\u548c\u5b9a\u91cf\u5316 \u9053\u8def\u7f51\u901a\u8fc7\u4ea4\u53c9\u53e3\u3001\u7acb\u4ea4\u6865\u7b49\u8fde\u901a\uff0c\u800c\u5efa\u7b51\u7269\u5757\u4e4b\u95f4\u76f8\u4e92\u5206\u79bb\uff0c\u5728\u5173\u7cfb\u8868\u8fbe\u4e0a\u5b58\u5728\u4e00\u5b9a\u7684\u6a21\u7cca\u6027\u548c\u4e0d\u786e\u5b9a\u6027\uff0c\u96be\u4ee5\u7edf\u4e00\u63cf\u8ff0      \u6df1\u5ea6\u5b66\u4e60\n \u4ee5\u5efa\u7b51\u7269\u4e3a\u5904\u7406\u5bf9\u8c61\u4e4b\u4e00\u7684\u7a7a\u95f4\u6a21\u5f0f\u5206\u6790\u548c\u7a7a\u95f4\u8ba4\u77e5\u95ee\u9898\u4e0a\uff0c \u5f15\u5165\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u6240\u9762\u4e34\u7684\u6700\u5927\u969c\u788d\u662f\u6570\u636e\u7ec4\u7ec7\u7ed3\u6784\u7684\u975e\u89c4\u8303\u6027\uff0c\u5373\u91c7\u7528\u51e0\u4f55\u6a21\u578b\u8868\u8fbe\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 \u8bba\u6587\u5c1d\u8bd5\u4ee5\u56fe\u7ed3\u6784\u4e3a\u6570\u636e\u57fa\u7840\uff0c \u6784\u5efa\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u5e76\u4e3a\u5efa\u7b51\u7269\u6a21\u5f0f\u5206\u6790\u7b49\u7ecf\u5178\u95ee\u9898\u63d0\u4f9b\u65b0\u7684\u601d\u8def\u548c\u65b9\u6cd5\uff0c\u8fd9\u4e5f\u662f\u672c\u7814\u7a76\u7684\u4e3b\u8981\u52a8\u673a\u6240\u5728\u3002    \u5efa\u7b51\u7269\u6a21\u5f0f\u7814\u7a76 \u4e0d\u540c\u5c3a\u5ea6\u4e0b\u7684\u5efa\u7b51\u7269\u6a21\u5f0f  \u5fae\u89c2\u5c3a\u5ea6\u4e0b\u7684\u4e2a\u4f53\u5f62\u6001\u6a21\u5f0f  \u4ece\u8ba1\u7b97\u673a\u5b58\u50a8\u7684\u89d2\u5ea6\uff0c\u5efa\u7b51\u7269\u662f\u7531\u4e00\u7cfb\u5217\u7a7a\u95f4\u70b9\u76f8\u4e92\u8fde\u63a5\u6240\u6784\u6210\u7684\u96c6\u5408\uff0c \u5176\u6240\u7ec4\u5408\u5f97\u5230\u7684\u5f62\u6001\u7ed3\u6784\u662f\u4eba\u4eec\u5bf9\u5efa\u7b51\u7269\u6a21\u5f0f\u6700\u5fae\u89c2\u7684\u7406\u89e3 \u5728\u5c40\u90e8\u7ed3\u6784\u4e0a\uff0c\u5efa\u7b51\u7269\u7684\u76f4\u89d2\u8f6c\u6298\u3001 \u8f74\u7ebf\u5bf9\u79f0\u548c\u65b9\u5411\u8d70\u5411\u7b49\u7279\u5f81 \u5355\u4f53\u5efa\u7b51\u7269\u7684\u6574\u4f53\u5f62\u72b6\u7279\u5f81   \u4e2d\u89c2\u5c3a\u5ea6\u4e0b\u7684\u7fa4\u7ec4\u7ed3\u6784\u6a21\u5f0f  \u4e00\u5b9a\u8303\u56f4\u5185\u5efa\u7b51\u7269\uff08\u5373\u5efa\u7b51\u7269\u7fa4\u7ec4\uff09 \u7684\u8fde\u63a5\u5173\u7cfb\u548c\u5f62\u6001\u7ed3\u6784 \u4e3b\u89c2\u548c\u5ba2\u89c2\u56e0\u7d20   \u5b8f\u89c2\u5c3a\u5ea6\u4e0b\u7684\u5927\u533a\u57df\u7ed3\u6784\u6a21\u5f0f  \u5927\u89c4\u6a21\u5efa\u7b51\u533a\u57df\u7684\u6574\u4f53\u6027\u5730\u57df\u7ed3\u6784   \u4e09\u79cd\u5c3a\u5ea6\u5bf9\u5e94\u4e09\u79cd\u8ba4\u77e5\u5f62\u5f0f\uff1a\u7a7a\u95f4\u7279\u5f81\u611f\u77e5\u3001\u7a7a\u95f4\u5bf9\u8c61\u8ba4\u77e5\u548c\u7a7a\u95f4\u683c\u5c40\u8ba4\u77e5  \u5efa\u7b51\u7269\u6a21\u5f0f\u7684\u7279\u70b9  \u8054\u60f3\u6027\uff08\u8c61\u5f81\u6027\uff09\uff1a\u5bf9\u4e8b\u7269\u7684\u6b21\u8981\u4fe1\u606f\u8fdb\u884c\u62bd\u8c61\u548c\u7b80\u5316\uff0c \u800c\u5bf9\u4e3b\u8981\u4fe1\u606f\u8fdb\u884c\u63d0\u53d6\u548c\u589e\u5f3a \u4e0d\u786e\u5b9a\u6027\uff08\u6a21\u7cca\u6027\uff09 \uff1a  \u5efa\u7acb\u6a21\u7cca\u96b6\u5c5e\u5ea6\u51fd\u6570 \u5c06\u5f62\u72b6\u7684\u76f8\u4f3c\u6027\u5212\u5206\u4e3a\u4e0d\u540c\u7684\u7b49\u7ea7\uff1a\u975e\u5e38\u76f8\u4f3c\u3001\u76f8\u4f3c\u3001\u5f31\u76f8\u4f3c\u3001\u4e0d\u76f8\u4f3c   \u90e8\u5206\u4e0e\u6574\u4f53\u7ec4\u5408\u6027\uff08\u5c42\u6b21\u6027\uff09\uff1a  \u5efa\u7b51\u7269\u6a21\u5f0f\u7684\u90e8\u5206\u4e0e\u6574\u4f53\u7ec4\u5408\u6027 \u9aa8\u67b6\u7ebf\uff1a\u5efa\u7b51\u7269\u5185\u90e8\u7684\u9aa8\u67b6\u7ebf\u548c\u5efa\u7b51\u7269\u4e4b\u95f4\u7684\u9aa8\u67b6\u7ebf    \u5efa\u7b51\u7269\u6a21\u5f0f\u8bc6\u522b\u548c\u5206\u6790\u65b9\u6cd5  \u5728\u5927\u5c3a\u5ea6\u57ce\u5e02\u7a7a\u95f4\u4e2d\uff0c\u5efa\u7b51\u7269\u7684\u4e2a\u4f53\u8868\u8fbe\u5728\u65b9\u5411\u3001\u5c3a\u5bf8\u548c\u5f62\u72b6\u7b49\u65b9\u9762\u90fd\u5177\u6709\u8f83\u7a33\u5b9a\u7684\u6a21\u5f0f\u6027\u3002 \u968f\u7740\u6bd4\u4f8b\u5c3a\u7684\u7f29\u51cf\uff0c \u5b66\u8005\u4eec\u5bf9\u5efa\u7b51\u7269\u6a21\u5f0f\u7684\u5206\u6790\u7126\u70b9\u4ece\u76ee\u6807\u7684\u4e2a\u4f53\u7279\u5f81\u8f6c\u5411\u7fa4\u7ec4\u5206\u5e03\u6240\u9690\u542b\u7684\u7a7a\u95f4\u7ed3\u6784\u5316\u4fe1\u606f\u548c\u76f8\u5173\u89c4\u5f8b\uff0c\u8be5\u5206\u6790\u8fc7\u7a0b\u901a\u5e38\u57fa\u4e8e\u805a\u7c7b\u6765\u5b8c\u6210\uff1b\u5efa\u7b51\u7269\u805a\u7c7b\u901a\u5e38\u9700\u8981\u7efc\u5408\u8003\u8651\u4f4d\u7f6e\u65b9\u5411\u3001\u5f62\u72b6\u5927\u5c0f\u3001\u89c6\u89c9\u8ddd\u79bb\u7b49\u56e0\u7d20\u5ea6\u91cf\u76ee\u6807\u4e4b\u95f4\u7684\u90bb\u8fd1\u6027 \u5728\u8ddd\u79bb\u5ea6\u91cf\u7684\u57fa\u7840\u4e0a\uff0c\u9488\u5bf9\u5efa\u7b51\u7269\u7684\u805a\u7c7b\u4e5f\u6210\u679c\u9887\u4e30\uff0c\u4e3b\u8981\u5305\u62ec\u5212\u5206\u7b97\u6cd5\u3001\u5c42\u6b21\u7b97\u6cd5\u3001\u5bc6\u5ea6\u7b97\u6cd5\u3001\u683c\u7f51\u7b97\u6cd5\u4ee5\u53ca\u56fe\u8bba\u7b97\u6cd5\u7b49\u51e0\u7c7b \u5efa\u7b51\u7269\u5728\u805a\u7c7b\u540e\u6240\u5448\u73b0\u7684\u5206\u5e03\u6392\u5217\u5373\u5efa\u7b51\u7269\u7684\u7ed3\u6784\u6a21\u5f0f \u603b\u7ed3\uff1a  \u6838\u5fc3\u95ee\u9898\u96c6\u4e2d\u5728\u7279\u5f81\u63cf\u8ff0\u548c\u5173\u7cfb\u8868\u8fbe \u4e3b\u8981\u65b9\u6cd5\u662f\u57fa\u4e8e\u56fe\u7ed3\u6784\u7684\u51e0\u4f55\u5ea6\u91cf\u548c\u57fa\u4e8e\u8ba4\u77e5\u5fc3\u7406\u5b66\u7684\u5224\u65ad\u7b56\u7565    \u5730\u7406\u7a7a\u95f4\u6570\u636e\u7684\u6df1\u5ea6\u5b66\u4e60 \u6df1\u5ea6\u5b66\u4e60\u6982\u8ff0 ==\u4ee5\u540e\u5199AI\u3001DL\u76f8\u5173\u80cc\u666f\u53ef\u4ee5\u501f\u9274\u8fd9\u4e2a==\n \u4eba\u5de5\u667a\u80fd\uff08Artificial intelligence, AI\uff09 \u653f\u5e9c\u91cd\u89c6AI\uff0c\u76f8\u7ee7\u51fa\u53f0\u5404\u79cd\u89c4\u5212\u7eb2\u8981 \u6df1\u5ea6\u5b66\u4e60\uff08Deep learning\uff09\u662f\u5b9e\u73b0\u4eba\u5de5\u667a\u80fd\u7684\u4e00\u79cd\u6280\u672f\u548c\u65b9\u6cd5 \u70ed\u5ea6\u589e\u957f\uff1aSCI \u8bba\u6587\u6570\u91cf\u548c Google \u641c\u7d22\u8d8b\u52bf \u4f53\u73b0 DL\u7684\u8fed\u4ee3\u4e0e\u53d8\u9769  \u63a8\u7406\u4e3a\u4e3b\u5bfc\u7684\u8bde\u751f\u9636\u6bb5 \u4ee5\u77e5\u8bc6\u548c\u4e13\u5bb6\u7cfb\u7edf\u4e3a\u4e3b\u5bfc\u7684\u5bd2\u51ac\u9636\u6bb5 \u4ee5\u5b66\u4e60\u4e3a\u4e3b\u5bfc\u7684\u590d\u5174\u9636\u6bb5   \u795e\u7ecf\u7f51\u7edc\uff08Neural network\uff09\u7684\u54c1\u724c\u91cd\u5851  \u7ed3\u6784\u4e0a\u5e76\u884c\u8ba1\u7b97 \u529f\u80fd\u4e0a\u81ea\u9002\u5e94\u5b66\u4e60\u80fd\u529b   \u65e0\u6cd5\u5b8c\u5168\u89e3\u91ca + \u7f3a\u5c11\u7b97\u529b\u652f\u6301  \u7406\u8bba\u4e0a\u4e00\u5ea6\u88ab\u6761\u4ef6\u53ca\u89c4\u5219\u8868\u8fbe\u7406\u8bba\uff08\u5982\u4e13\u5bb6\u7cfb\u7edf\uff09\u6240\u538b\u5236 \u65b9\u6cd5\u4e0a\u4e5f\u88ab\u66f4\u7b80\u6d01\u3001\u89e3\u91ca\u6027\u66f4\u5f3a\u7684\u6a21\u578b\uff08\u5982\u652f\u6301\u5411\u91cf\u673a\uff09\u6240\u8d85\u8d8a   \u968f\u7740\u8ba1\u7b97\u80fd\u529b\u7684\u63d0\u5347\u3001\u6570\u636e\u65f6\u4ee3\u7684\u6765\u4e34\uff0c\u795e\u7ecf\u7f51\u7edc\u5f00\u59cb\u9010\u6e10\u590d\u5174  \u53d7\u751f\u7269\u5b66\u542f\u53d1\u7684\u90a3\u79cd\u65b9\u6cd5\u5df2\u7ecf\u5f88\u5927\u7a0b\u5ea6\u4e0a\u88ab\u629b\u5f03 \u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u57fa\u4e8e\u7edf\u8ba1\u5b66\u548c\u4fe1\u53f7\u5904\u7406\u7684\u66f4\u52a0\u5b9e\u7528\u7684\u65b9\u6cd5    \u6df1\u5ea6\u5b66\u4e60\u5728\u7a7a\u95f4\u6570\u636e\u5206\u6790\u4e2d\u7684\u6f5c\u5728\u53ef\u884c\u6027 \u62df\u5408\u80fd\u529b\uff08Approximation ability\uff0c\u5373\u5bf9\u8bad\u7ec3\u6570\u636e\u7684\u7279\u5f81\u63d0\u53d6\uff09+ \u5f52\u7eb3\u80fd\u529b\uff08Generalization ability\uff0c\u5373\u57fa\u4e8e\u8bad\u7ec3\u6570\u636e\u63d0\u53d6\u7684\u7279\u5f81\u5e94\u7528\u5230\u5176\u4ed6\u6570\u636e\uff09\n  \u5927\u6570\u636e\u65f6\u4ee3\u4e30\u5bcc\u7684\u7a7a\u95f4\u6570\u636e\u8d44\u6e90\u4e3a\u6df1\u5ea6\u5b66\u4e60\u63d0\u4f9b\u7d20\u6750\n \u57fa\u7840\u5730\u7406\u4fe1\u606f\u6570\u636e\u5e93\u4f53\u7cfb \u4f17\u6e90\u5730\u7406\u4fe1\u606f    \u901a\u8fc7\u89c6\u89c9\u4fe1\u606f\u7684\u673a\u5668\u5b66\u4e60\u53d1\u73b0\u7a7a\u95f4\u6570\u636e\u7684\u6a21\u5f0f\u3001\u5f62\u6001\n  \u5730\u7406\u7a7a\u95f4\u6570\u636e\u5177\u5907\u5178\u578b\u7684\u5c40\u90e8\u76f8\u5173\u6027\u548c\u591a\u5c3a\u5ea6\u7279\u5f81\n \u5377\u79ef\u6838\u548c\u6743\u503c\u5171\u4eab\u7b49\u6280\u672f\u5b9e\u73b0\u7684\u5c40\u90e8\u7279\u5f81\u4fdd\u6301 \u6c60\u5316\u7b49\u64cd\u4f5c\u5b9e\u73b0\u591a\u5c3a\u5ea6\u7684\u7279\u5f81\u63d0\u53d6    \u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u4e3a\u5730\u7406\u7a7a\u95f4\u7684\u667a\u80fd\u95ee\u9898\u63d0\u4f9b\u89e3\u51b3\u9014\u5f84\n  \u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u5728\u7a7a\u95f4\u6570\u636e\u5904\u7406\u4e2d\u6709\u591a\u7ef4\u5ea6\u5e94\u7528\u7684\u53ef\u80fd\n  \u4f46\u73b0\u6709\u7814\u7a76\u4e2d\uff0c \u5176\u4e3b\u8981\u662f\u5e94\u7528\u4e8e\u9065\u611f\u5f71\u50cf\u7b49\u6805\u683c\u6570\u636e\n  \u9488\u5bf9\u77e2\u91cf\u7684\u7a7a\u95f4\u6570\u636e\uff0c \u76f4\u63a5\u91c7\u7528\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u7684\u5e94\u7528\u5219\u5be5\u5be5\u65e0\u51e0 \u3002\u5904\u7406\u7b56\u7565\uff1a\n \u5176\u4e00\u662f\u5c06\u77e2\u91cf\u6570\u636e\u6805\u683c\u5316 \u5176\u4e8c\u662f\u820d\u5f03\u5bf9\u8c61\u5728\u7a7a\u95f4\u4e0a\u7684\u5173\u7cfb\uff0c\u5c06\u4e8c\u7ef4\u6570\u636e\u964d\u7ef4\u4e3a\u4e00\u7ef4\u6570\u636e\uff0c\u5e76\u57fa\u4e8e\u65e0\u5e8f\u7684\u6570\u636e\u8fdb\u884c\u7279\u5f81\u5b66\u4e60    \u5236\u7ea6\u6df1\u5ea6\u5b66\u4e60\u5e94\u7528\u4e8e\u7a7a\u95f4\u77e2\u91cf\u6570\u636e\u5904\u7406\u7684\u4e3b\u8981\u539f\u56e0\u662f\u5e38\u89c4\u7684\u5b66\u4e60\u6a21\u578b\u5bf9\u8f93\u5165\u6570\u636e\u6709\u89c4\u8303\u6027\u8981\u6c42\uff0c\u5373\u8981\u6c42\u8f93\u5165\u6570\u636e\u7684\u90bb\u57df\u7ed3\u6784\uff08\u5c40\u90e8\u611f\u53d7\u91ce\uff09\u662f\u56fa\u5b9a\u7684\u3001\u89c4\u8303\u7684\u3001\u53ef\u51c6\u786e\u5b9a\u4e49\u7684\n \u56fe\u50cf\u5904\u7406\u4e2d\u7684\u6b63\u65b9\u5f62\u6805\u683c\u6570\u636e\u548c\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u7ebf\u6027\u5e8f\u5217\u6570\u636e \u5bf9\u5730\u7406\u4fe1\u606f\u79d1\u5b66\u4e2d\u7684\u5927\u591a\u6570\u77e2\u91cf\u6570\u636e\uff0c\u5176\u6570\u636e\u4e4b\u95f4\u7684\u6392\u5217\u3001\u7ec4\u5408\u548c\u8fde\u63a5\u5173\u7cfb\u662f\u975e\u5e38\u591a\u6837\u7684\uff0c \u901a\u5e38\u4e5f\u662f\u7528\u975e\u89c4\u8303\u7ed3\u6784\u7684\u56fe\u6765\u5efa\u6a21\uff0c \u96be\u4ee5\u6ee1\u8db3\u5e38\u89c4\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u7684\u6570\u636e\u8f93\u5165\u8981\u6c42      \u6df1\u5ea6\u5b66\u4e60\u7684\u65b0\u65b9\u5411\uff1a\u56fe\u5377\u79ef\u7f51\u7edc  \u56fe\u5377\u79ef\u7f51\u7edc  \u7efc\u8ff0\u8bba\u6587\uff1a\rGeometric deep learning: going beyond Euclidean data;    \u7a7a\u95f4\u65b9\u6cd5\uff1a\u7a7a\u95f4\u65b9\u6cd5\u76f4\u63a5\u5728\u56fe\u7684\u8282\u70b9\u57df\u6784\u9020\u5377\u79ef\u8fd0\u7b97 \u8c31\u65b9\u6cd5\uff1a \u8c31\u65b9\u6cd5\u662f\u4ee5\u56fe\u5085\u91cc\u53f6\u53d8\u6362\uff08Graph Fourier transform\uff09 \u7406\u8bba\u4e3a\u57fa\u7840\uff0c\u5728\u8c31\u57df\u6267\u884c\u5377\u79ef\u8fd0\u7b97 \u56fe\u5377\u79ef\u7f51\u7edc\u662f\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u7684\u5ef6\u4f38\uff0c\u76f8\u5173\u7814\u7a76\u6210\u679c\u5df2\u5c1d\u8bd5\u5e94\u7528\u4e8e\u5904\u7406  \u6b27\u5f0f\u7ed3\u6784\u6570\u636e\uff08Euclidean data\uff09 \u975e\u6b27\u5f0f\u7ed3\u6784\u6570\u636e\uff08non-Euclidean data\uff09 \u5efa\u7b51\u7269\u4f5c\u4e3a\u4e00\u79cd\u5178\u578b\u7684\u975e\u89c4\u8303\u5316\u7a7a\u95f4\u6570\u636e    \u5730\u7406\u6df1\u5ea6\u5b66\u4e60   \u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u642d\u5efa\u4e86\u6df1\u5ea6\u5b66\u4e60\u4e0e\u7a7a\u95f4\u77e2\u91cf\u6570\u636e\u5206\u6790\u4e4b\u95f4\u7684\u6865\u6881\uff0c \u4e3a\u6df1\u5ea6\u5b66\u4e60\u5e94\u7528\u4e8e\u4e0d\u540c\u6570\u636e\u7ec4\u7ec7\u65b9\u5f0f\u7684\u5730\u7406\u7a7a\u95f4\u6570\u636e\u8865\u5145\u4e86\u4e00\u5757\u91cd\u8981\u7684\u62fc\u56fe   \u5730\u7406\u6df1\u5ea6\u5b66\u4e60\u7684\u4e0d\u540c\u5c42\u6b21\n \u56fe\u6df1\u5ea6\u5b66\u4e60\uff08 Graph DL\uff09\uff1a \u5982\u4f55\u5c06\u6df1\u5ea6\u5b66\u4e60\u63a8\u5e7f\u5230\u5e7f\u6cdb\u7684\u3001\u901a\u7528\u7684\u56fe\u7ed3\u6784\u4e2d \u51e0\u4f55\u6df1\u5ea6\u5b66\u4e60\uff08 Geometric DL\uff09\uff1a\u51e0\u4f55\u5f62\u6001\u7279\u5f81\u6216\u6a21\u5f0f\u7684\u7406\u89e3, \u4f8b\u5982\u4ece\u9053\u8def\u4ea4\u901a\u7f51\u7edc\u4e2d\u8bc6\u522b\u4ea4\u53c9\u53e3\u3001\u4ece\u5efa\u7b51\u7269\u7fa4\u7ec4\u4e2d\u8bc6\u522b\u683c\u7f51\u7b49 \u5730\u7406\u6df1\u5ea6\u5b66\u4e60\uff08Geographical DL\uff09 \uff1a\u5730\u5b66\u95ee\u9898\uff0c\u5176\u5b66\u4e60\u7684\u7279\u5f81\u6216\u6a21\u5f0f\u90fd\u5c06\u88ab\u8d4b\u4e88\u4e86\u66f4\u5f3a\u7684\u8bed\u4e49\u4fe1\u606f\u548c\u5730\u7406\u610f\u4e49 \u4e09\u4e2a\u5c42\u6b21\u5206\u522b\u4ece\u201c\u6570\u201d\u3001\u201c\u5f62\u201d\u3001\u201c\u5730\u201d \u7b49\u4e0d\u540c\u89d2\u5ea6\u5207\u5165\uff0c\u6700\u7ec8\u5f62\u6210\u5b8c\u6574\u7684\u5730\u7406\u6df1\u5ea6\u5b66\u4e60\u6982\u5ff5\u3002 \u4f46\u662f\u76ee\u524d\u7814\u7a76\u4ecd\u5904\u4e8e\u6570\u5b66\u65b9\u6cd5\u5c42\u6b21\uff0c\u9488\u5bf9\u5730\u7406\u610f\u4e49\u4e0a\u51e0\u4f55\u5f62\u6001\u5206\u6790\u548c\u5e94\u7528\u95ee\u9898\u89e3\u51b3\u76f8\u5173\u7684\u6210\u679c\u8f83\u4e3a\u7a00\u7f3a    \u200b\n\u7814\u7a76\u5185\u5bb9\u53ca\u8bba\u6587\u7ec4\u7ec7 \u7814\u7a76\u5bf9\u8c61  \u7814\u7a76\u5bf9\u8c61\uff1a\u5efa\u7b51\u7269 \u5173\u6ce8\uff1a \u5728\u4e2a\u4f53\u8868\u8fbe\u548c\u7fa4\u7ec4\u5206\u5e03\u4e0a\u7684\u7ed3\u6784\u548c\u6a21\u5f0f\u7279\u5f81 \u7814\u7a76\u65b9\u6cd5\uff1a\u57fa\u4e8e\u56fe\u5085\u91cc\u53f6\u7406\u8bba\u548c\u5377\u79ef\u5b9a\u7406\u7684\u56fe\u5377\u79ef\u8fd0\u7b97\u53ca\u5728\u6b64\u57fa\u7840\u4e0a\u6784\u5efa\u7684\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5 \u5b9e\u9a8c\u6570\u636e  \u5e7f\u5dde\u5e02\u591a\u5c3a\u5ea6\u57ce\u5e02\u6570\u636e\u5e93 2012\u5e74\u5b8c\u6210 \u5305\u62ec\u4e86 1:2k\u3001 1:10k\u3001 1:25k\u3001 1:50k \u7b49\u591a\u4e2a\u5c3a\u5ea6\u7684\u5efa\u7b51\u7269\u3001\u6c34\u7cfb\u3001\u9053\u8def\u7f51\u7b49\u57fa\u7840\u5730\u7406\u6570\u636e \u5efa\u7b51\u7269\u662f\u4ee5\u77e2\u91cf\u591a\u8fb9\u5f62\u8868\u793a\uff0c\u9053\u8def\u548c\u6c34\u7cfb\u4ee5\u77e2\u91cf\u7ebf\u6bb5\u8868\u793a    \u7814\u7a76\u5185\u5bb9  \u57fa\u4e8e\u56fe\u7ed3\u6784\u7684\u6df1\u5ea6\u5b66\u4e60\u7406\u8bba \u4e2a\u4f53\u5efa\u7b51\u7269\u7684\u5f62\u72b6\u8868\u8fbe\u4e0e\u5339\u914d \u5efa\u7b51\u7269\u7fa4\u7ec4\u805a\u96c6\u5173\u7cfb\u63a2\u6d4b \u5efa\u7b51\u7269\u7fa4\u7ec4\u7ed3\u6784\u6a21\u5f0f\u5212\u5206  \u5b9e\u9a8c\u5e73\u53f0 \u5185\u5bb9\u7ec4\u7ec7 \u56fe\u76f4\u89c2\u5f62\u8c61\n\u5efa\u7b51\u7269\u6a21\u5f0f\u5206\u6790\u7684\u51e0\u4f55\u6a21\u578b\u548c\u7406\u8bba\u57fa\u7840 \u5efa\u7b51\u7269\u7a7a\u95f4\u6a21\u5f0f \u7a7a\u95f4\u6a21\u5f0f\u7684\u79d1\u5b66\u8303\u7574  \u793e\u4f1a\u5b66\u89d2\u5ea6\u3001\u8ba1\u7b97\u673a\u89d2\u5ea6\u3001\u8ba1\u7b97\u673a\u89d2\u5ea6 \u7a7a\u95f4\u4fe1\u606f\u79d1\u5b66\u89d2\u5ea6  \u6a21\u5f0f\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4eba\u4eec\u4e0e\u7a7a\u95f4\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\u5bf9\u7a7a\u95f4\u6240\u5f62\u6210\u7684\u4e00\u79cd\u7406\u89e3\u548c\u8868\u8fbe \u4ea4\u4e92\u8fc7\u7a0b\u4e0e\u7a7a\u95f4\u884c\u4e3a\uff08\u5982\u5bfc\u822a\u3001\u63a2\u8def\u7b49\uff09 \u5bc6\u5207\u76f8\u5173\uff0c \u662f\u57fa\u4e8e\u7ecf\u9a8c\u7684\uff0c \u4e14\u53d7\u7a7a\u95f4\u73af\u5883\u5927\u5c0f\u7684\u7ea6\u675f \u7a7a\u95f4\u6a21\u5f0f\u7684\u7814\u7a76\u4e5f\u53ef\u4ee5\u4ece\u7a7a\u95f4\u5c3a\u5bf8\uff08Sizes of space\uff09 \u548c\u7a7a\u95f4\u7c7b\u578b\uff08Kinds of space\uff09 \u4e24\u4e2a\u7ef4\u5ea6\u5c55\u5f00   \u7a7a\u95f4\u7c7b\u578b\u7ef4\u5ea6\u7684\u8868\u73b0\u5f62\u5f0f  \u611f\u77e5\u7a7a\u95f4\uff1a\u5728\u8f83\u5c0f\u5c3a\u5bf8\u7a7a\u95f4\u73af\u5883\u4e2d\uff08\u8f83\u5c0f\u7269\u4f53\u5230\u623f\u95f4\u8303\u56f4\uff09\uff0c\u4e3b\u8981\u662f\u901a\u8fc7\u611f\u77e5\u884c\u4e3a\u4e0e\u7a7a\u95f4\u4ea4\u4e92\uff0c\u4f8b\u5982\u89e6\u78b0\u67d0\u4e00\u7269\u4f53 \u8ba4\u77e5\u7a7a\u95f4\uff1a\u5728\u4e2d\u7b49\u5c3a\u5bf8\u7a7a\u95f4\u73af\u5883\u4e2d\uff08\u623f\u5c4b\u5230\u57ce\u5e02\u8303\u56f4\uff09\uff0c\u4e3b\u8981\u662f\u901a\u8fc7\u8ba4\u77e5\u884c\u4e3a\u4e0e\u7a7a\u95f4\u4ea4\u4e92\uff0c\u4f8b\u5982\u89c6\u89c9\u8fa8\u8bc6\u67d0\u4e00\u533a\u57df \u7b26\u53f7\u7a7a\u95f4\uff1a\u5728\u8f83\u5927\u5c3a\u5bf8\u7a7a\u95f4\u73af\u5883\u4e2d\uff08\u5c0f\u533a\u5230\u5b87\u5b99\u8303\u56f4\uff09\uff0c\u4e3b\u8981\u662f\u901a\u8fc7\u7b26\u53f7\u8c61\u5f81\u65b9\u5f0f\u4e0e\u7a7a\u95f4\u4ea4\u4e92\uff0c\u4f8b\u5982\u70b9\u72b6\u7b26\u53f7\u8868\u8fbe\u57ce\u5e02    \u5efa\u7b51\u7269\u57fa\u672c\u6a21\u5f0f\u4e0e\u5206\u7c7b  \u5efa\u7b51\u7269\u7684\u6a21\u5f0f\u5206\u7c7b  \u6a21\u5f0f\u5212\u5206\u4f53\u7cfb\u7684\u4fa7\u91cd\u70b9\u4e0d\u540c\uff0c \u5373\u7a7a\u95f4\u7c7b\u578b\u7684\u5212\u5206\u610f\u4e49\u4e0d\u540c  \u4ece\u57ce\u5e02\u5efa\u6a21\u89d2\u5ea6\u7684\u6a21\u5f0f\u5206\u7c7b\u4fa7\u91cd\u4e8e\u5efa\u7b51\u7269\u7684\u7269\u7406\u610f\u4e49 \u4ece\u793e\u4f1a\u7ecf\u6d4e\u529f\u80fd\u548c\u4f7f\u7528\u7528\u9014\u89d2\u5ea6\u7684\u5206\u7c7b\u4fa7\u91cd\u4e8e\u5efa\u7b51\u7269\u7684\u793e\u4f1a\u610f\u4e49 \u4ece\u6570\u5b57\u5236\u56fe\u548c\u89c6\u89c9\u611f\u77e5\u89d2\u5ea6\u7684\u5206\u7c7b\u5219\u4fa7\u91cd\u4e8e\u5efa\u7b51\u7269\u7684\u60c5\u611f\u610f\u4e49    \u652f\u6491\u5efa\u7b51\u7269\u6a21\u5f0f\u5206\u6790\u7684\u51e0\u4f55\u6a21\u578b \u51e0\u4f55\u6a21\u578b\u7279\u70b9\n \u80fd\u591f\u63cf\u8ff0\u5efa\u7b51\u7269\u7684\u7a7a\u95f4\u7279\u5f81\u548c\u8bed\u4e49\u6027\u8d28 \u80fd\u591f\u8868\u8fbe\u5efa\u7b51\u7269\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5982\u65b9\u5411\u5173\u7cfb\u3001\u62d3\u6251\u5173\u7cfb\u548c\u8ddd\u79bb\u5173\u7cfb\u7b49 \u80fd\u591f\u652f\u6301\u57fa\u672c\u7684\u51e0\u4f55\u64cd\u4f5c\uff0c\u5982\u5408\u5e76\u3001\u5220\u9664\u3001\u79fb\u4f4d\u7b49  \u7ea6\u675f Delaunay \u4e09\u89d2\u7f51   Delaunay \u4e09\u89d2\u7f51\u4e24\u4e2a\u91cd\u8981\u6027\u8d28\n \u7a7a\u5916\u63a5\u5706\u6027\u8d28 \u6700\u5927\u6700\u5c0f\u89d2\u6027\u8d28    \u7ea6\u675f Delaunay \u4e09\u89d2\u7f51\n  \u5730\u7406\u7a7a\u95f4\u5bf9\u8c61\u6784\u5efa\u4e09\u89d2\u7f51\u6a21\u578b\u65f6\uff0c\u5bf9\u8c61\u7684\u8fb9\u754c\u5e94\u8be5\u4fdd\u6301\u4e0e\u4e09\u89d2\u5f62\u7684\u8fb9\u754c\u4e00\u81f4 =&gt; \u72ed\u957f\u7684\u4e09\u89d2\u5f62\u95ee\u9898\n  \u91c7\u7528\u52a0\u5bc6\u70b9\u65b9\u5f0f\u6784\u5efa\u7ea6\u675f Delaunay \u4e09\u89d2\u7f51\n    \u7c7b Voronoi \u56fe\n \u5bf9\u8c61\u4e0e\u5468\u56f4\u90bb\u8fd1\u5bf9\u8c61\u5bf9\u5e73\u9762\u7a7a\u95f4\u7684\u7ade\u4e89\u7ed3\u679c \u6709\u6548\u5730\u53cd\u6620\u51fa\u7a7a\u95f4\u5bf9\u8c61\u7684\u5f71\u54cd\u533a\u57df \u7ebf\u72b6\u548c\u9762\u72b6\u8981\u7d20 Voronoi \u56fe =&gt; \u7c7b Voronoi \u5256\u5206\u56fe  \u826f\u597d\u6027\u8d28\uff08\u5e94\u7528\u4e8e\u5730\u7406\u5bf9\u8c61\u5efa\u6a21\uff09  \u9664\u8fb9\u754c\u533a\u57df\uff0c\u4e09\u89d2\u5f62\u7684\u9aa8\u67b6\u7ebf\u8fde\u63a5\u540e\u5f62\u6210\u4e86\u95ed\u5408\u73af\uff0c\u6bcf\u4e2a\u73af\u5305\u56f4\u4e00\u4e2a\u5efa\u7b51\u7269\u591a\u8fb9\u5f62\uff0c \u4e14\u533a\u57df\u5185\u7684\u70b9\u90fd\u8fd1\u4f3c\u4e0e\u8be5\u5efa\u7b51\u7269\u8ddd\u79bb\u6700\u8fd1 \u5185\u90e8\u533a\u57df\u4e2d\u95ed\u5408\u73af\u7684\u8fb9\u6784\u6210\u4e86\u5efa\u7b51\u7269\u4e4b\u95f4\u7a7a\u767d\u533a\u57df\u7684\u8fd1\u4f3c\u5256\u5206 \u9aa8\u67b6\u7ebf\u4e0e\u5efa\u7b51\u7269\u51f8\u58f3\u8fde\u63a5\u540e\u53ef\u5f62\u6210\u8fb9\u754c\u533a\u57df\u7684\u95ed\u5408\u73af\uff0c\u540c\u6837\u6bcf\u4e2a\u73af\u5305\u56f4\u7740\u4e00\u4e2a\u8fb9\u754c\u5904\u7684\u5efa\u7b51\u7269\u591a\u8fb9\u5f62      \u6700\u5c0f\u652f\u6491\u6811\uff08MST\uff09  \u5229\u7528\u6761\u8fb9\u5c06\u4e2a\u5bf9\u8c61\u76f8\u4e92\u8fde\u63a5\u7684\u6781\u5c0f\u8fde\u901a\u5b50\u56fe \u5efa\u7b51\u7269\u7684 MST  \u5c06\u6bcf\u4e2a\u5efa\u7b51\u7269\u4e0e\u6700\u90bb\u8fd1\u7684\u5efa\u7b51\u7269\u8054\u7cfb\u8d77\u6765\uff0c \u660e\u786e\u4e86\u90bb\u8fd1\u5173\u7cfb \u5b58\u50a8\u5efa\u7b51\u7269\u7684\u201c\u94fe\u6761\u201d \u4fdd\u7559\u4e86\u5efa\u7b51\u7269\u4e4b\u95f4\u7684\u987a\u5e8f\uff0c\u5e76\u9690\u542b\u5730\u4f20\u8fbe\u4e86\u5efa\u7b51\u7269\u7fa4\u7ec4\u7684\u7ebf\u6027\u5f62\u72b6\uff0c\u6709\u6548\u5730\u987e\u53ca\u4e86\u5efa\u7b51\u7269\u4e4b\u95f4\u7684\u8fde\u7eed\u6027 \u4e0d\u5b58\u5728\u5faa\u73af\u7ed3\u6784\uff0c\u53ef\u8f7b\u677e\u8fdb\u884c\u5206\u5272\u6216\u805a\u5408\u64cd\u4f5c\uff0c\u5728\u5efa\u7b51\u7269\u805a\u7c7b\u548c\u5c40\u90e8\u7ed3\u6784\u8bc6\u522b\u8fc7\u7a0b\u4e2d\u6781\u5177\u4ef7\u503c\u3002    \u5efa\u7b51\u7269\u6a21\u5f0f\u7684\u7406\u8bba\u57fa\u7840\u548c\u8ba4\u77e5\u53c2\u91cf \u4ece\u8ba4\u77e5\u89d2\u5ea6\u8ba8\u8bba\u5176\u6a21\u5f0f\u7279\u5f81-\u4ece\u8ba4\u77e5\u89d2\u5ea6\u8ba8\u8bba\u5176\u6a21\u5f0f\u7279\u5f81-\u7ed3\u5408\u8ba4\u77e5\u5fc3\u7406\u5b66\u9886\u57df\u77e5\u8bc6-Gestalt \u7406\u8bba\nGestalt \u8ba4\u77e5\u7406\u8bba  Gestalt \u89c4\u5f8b\u539f\u5219  \u8ba4\u77e5\u53c2\u91cf\u63cf\u8ff0 \u5b9a\u91cf\u5316\u7684\u6a21\u578b\n  \u4e2a\u4f53\u5efa\u7b51\u7269\u7684\u8ba4\u77e5\u53c2\u91cf: \u4f4d\u7f6e\u3001\u5c3a\u5bf8\u3001\u65b9\u5411\u548c\u5f62\u72b6\n  \u5efa\u7b51\u7269\u7fa4\u7ec4\u7684\u8ba4\u77e5\u53c2\u91cf\uff1a\n  \u5bc6\u5ea6\n  \u8ddd\u79bb     \u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u4e3b\u7ebf\uff1a\u201c\u56fe-\u5377\u79ef-\u5b66\u4e60\u201d\n \u201c\u56fe\u201d\u662f\u6570\u5b66\u7ed3\u6784 \u201c\u5377\u79ef\u201d\u662f\u8fd0\u7b97\u64cd\u4f5c \u201c\u5b66\u4e60\u201d\u662f\u4f18\u5316\u6c42\u89e3\u8fc7\u7a0b  \u56fe\u7406\u8bba\u57fa\u7840 \u57fa\u672c\u5b9a\u4e49 \u62c9\u666e\u62c9\u65af\u77e9\u9635 \u62c9\u666e\u62c9\u65af\u77e9\u9635\u4e00\u822c\u7528\u6765\u8868\u8ff0\u65e0\u5411\u56fe\n\u76f8\u5173\u53c2\u8003\n \u5feb\u901f\u4e86\u89e3\uff1a\r\u3010\u56fe\u8bba\u3011\u62c9\u666e\u62c9\u65af\u77e9\u9635\uff08Laplacian matrix\uff09 \u63a8\u5bfc\uff08\u56fe\u51fd\u6570\uff09\uff1a\r\u62c9\u666e\u62c9\u65af\u7b97\u5b50\u548c\u62c9\u666e\u62c9\u65af\u77e9\u9635  \u56fe\u5377\u79ef\u8fd0\u7b97 \u5c06\u56fe\u8282\u70b9\u57df\u7684\u5377\u79ef\u8fd0\u7b97\u8f6c\u6362\u4e3a\u5085\u91cc\u53f6\u57df\u7684\u70b9\u4e58\u8fd0\u7b97\n\u5085\u91cc\u53f6\u53d8\u6362  \u4efb\u4f55\u4e00\u4e2a\uff08\u5468\u671f\u6027\uff09\u51fd\u6570\uff08\u6216\u4fe1\u53f7\uff09\u53ef\u4ee5\u7531\u4e00\u7ec4\u5408\u9002\u7684\u4e09\u89d2\u51fd\u6570\u7ec4\u5408\u800c\u6210 \u672c\u8d28\u4e0a\uff0c\u5085\u91cc\u53f6\u53d8\u6362\u662f\u4f7f\u7528\u4e00\u79cd\u7279\u6b8a\u7684\u6b63\u4ea4\u57fa\uff08\u6b63\u4ea4\u51fd\u6570\uff09\u5bf9\u539f\u59cb\u51fd\u6570\u8fdb\u884c\u7ebf\u6027\u53d8\u6362 \u5085\u91cc\u53f6\u53d8\u6362\u5728\u4e8e\u5c06\u51fd\u6570\uff08\u6216\u4fe1\u53f7\uff09\u4ece\u4e00\u4e2a\u57df\uff08\u5982\u65f6\u95f4\u57df\u6216\u7a7a\u95f4\u57df\uff09 \u8f6c\u6362\u5230\u53e6\u4e00\u4e2a\u57df\uff08\u5982\u9891\u7387\u57df\uff09\uff0c\u5373\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u6216\u89d2\u5ea6\u5448\u73b0\u540c\u6837\u7684\u4fe1\u606f\uff1b \u4e14\u53d8\u6362\u8fc7\u7a0b\u4fe1\u606f\u603b\u91cf\u4fdd\u6301\u4e0d\u53d8\uff0c\u5373\u6ee1\u8db3\u5e15\u585e\u74e6\u5c14\u5b9a\u7406 \u6838\u5fc3\u601d\u60f3\u662f\u53d8\u6362\u548c\u5206\u89e3\uff0c\u5728\u7a7a\u95f4\u6570\u636e\u5206\u6790\u4e2d\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u6570\u636e\u7684\u591a\u5c3a\u5ea6\u8868\u8fbe\u548c\u53d8\u6362  \u5377\u79ef\u8fd0\u7b97  \u901a\u8fc7\u4e24\u4e2a\u53ef\u79ef\u51fd\u6570\u548c\u5f97\u5230\u65b0\u51fd\u6570\u7684\u8fd0\u7b97\u8fc7\u7a0b \u5377\u79ef\u8fd0\u7b97\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u6b21\u7ffb\u8f6c\u64cd\u4f5c\uff08\u201c\u5377\u201d\uff09\u548c\u5e73\u79fb\u52a0\u6743\u6c42\u548c\uff08\u201c\u79ef\u201d\uff09   \u5377\u79ef\u5b9a\u7406: \u6ee1\u8db3\u51fd\u6570\u5377\u79ef\u7684\u5085\u91cc\u53f6\u53d8\u6362\u7b49\u4e8e\u51fd\u6570\u5085\u91cc\u53f6\u7684\u4e58\u79ef  \u56fe\u5085\u91cc\u53f6\u53d8\u6362  \u5085\u91cc\u53f6\u53d8\u6362\u672c\u8d28\u4e0a\u662f\u5229\u7528\u4e00\u7ec4\u6b63\u4ea4\u7684\u4e09\u89d2\u51fd\u6570\u5bf9\u539f\u59cb\u51fd\u6570\u8fdb\u884c\u7ebf\u6027\u53d8\u6362 \u5bf9\u4e8e\u56fe\u7ed3\u6784\u6570\u636e, \u5229\u7528\u6b63\u4ea4\u7684\u62c9\u666e\u62c9\u65af\u77e9\u9635\u7684\u7279\u5f81\u5411\u91cf\u4ee3\u66ff\u4e09\u89d2\u8c10\u6ce2\u51fd\u6570\u8fdb\u884c\u7ebf\u6027\u53d8\u6362 \u56fe\u51fd\u6570\uff08\u6216\u51fd\u6570\uff09 \u7684\u4e24\u79cd\u8868\u8fbe: \u7a7a\u95f4\u8282\u70b9\u57df\u548c\u62c9\u666e\u62c9\u65af\u7279\u5f81\u57df  \u56fe\u5085\u91cc\u53f6\u53d8\u6362\u5bf9\u5e94\u7684\u5219\u662f\u7a7a\u95f4\uff08\u8282\u70b9\uff09\u57df\u548c\u8c31\uff08\u7279\u5f81\uff09\u57df\u7684\u5173\u7cfb  \u56fe\u5377\u79ef\u8fd0\u7b97  \u56fe\u7ed3\u6784\u6570\u636e\uff0c \u8282\u70b9\u6392\u5217\u4e0d\u5747\u5300\uff0c\u90bb\u57df\u7ed3\u6784\u4e0d\u56fa\u5b9a\uff0c \u96be\u4ee5\u6267\u884c\u201c\u7ffb\u8f6c\u201d \u64cd\u4f5c=&gt;\u65e0\u6cd5\u5b9a\u4e49\u8282\u70b9\u57df\u7684\u5377\u79ef\u8fd0\u7b97 \u5c06\u56fe\u7684\u5377\u79ef\u8fd0\u7b97\u8f6c\u6362\u4e3a\u8c31\u57df\u4e2d\u5085\u91cc\u53f6\u53d8\u6362\u7684\u70b9\u4e58\u8fd0\u7b97 \u4e09\u4e2a\u6b65\u9aa4\uff1a\u56fe\u5085\u91cc\u53f6\u53d8\u6362\u3001\u70b9\u79ef\u8fd0\u7b97\u548c\u56fe\u5085\u91cc\u53f6\u9006\u53d8\u6362  \u4e89\u8bae\u6027\u95ee\u9898  \u8c31\u7279\u5f81\u548c\u56fe\u7ed3\u6784\u5e76\u4e0d\u5b8c\u5168\u7b49\u4ef7 \u8be5\u8fd0\u7b97\u4e0e\u5e38\u89c4\u5377\u79ef\u8fd0\u7b97\u5e76\u65e0\u76f4\u63a5\u5bf9\u5e94\u5173\u7cfb    \u57fa\u4e8e\u591a\u9879\u5f0f\u62df\u5408\u7684\u5feb\u901f\u5c40\u90e8\u5377\u79ef \u795e\u7ecf\u7f51\u7edc \u795e\u7ecf\u5143\u5904\u7406\u5355\u5143   \u6700\u65e9\u7684\u795e\u7ecf\u5143\u8ba1\u7b97\u6a21\u578b\uff1aM-P\u6a21\u578b\n  \u672c\u8d28\u4e0a\u662f\u201c\u52a0\u6743\u548c\u8f6c\u79fb\u201d \u7684\u6570\u5b66\u6a21\u578b\n  \u7f51\u7edc\u62d3\u6251\u7ed3\u6784\uff08\u67b6\u6784\uff09   \u611f\u77e5\u5668\uff08Perceptron\uff09\n  \u53cc\u5c42\u611f\u77e5\u5668\n\u53cc\u5c42\u611f\u77e5\u5668\u4f7f\u5f97\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\u66f4\u5f3a\uff0c \u5728\u7406\u8bba\u4e0a\u5df2\u88ab\u8bc1\u660e\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u590d\u6742\u7684\u5206\u7c7b\u95ee\u9898\n  \u591a\u5c42\u611f\u77e5\u5668\uff08Multilayer oerceotron, MLP\uff09\n  \u5b66\u4e60\u8fc7\u7a0b   \u5728\u8bad\u7ec3\u4e4b\u524d\uff0c \u7f51\u7edc\u4e2d\u7684\u8fde\u63a5\u6743\u91cd\u548c\u504f\u7f6e\u91cf\u90fd\u88ab\u968f\u673a\u521d\u59cb\u5316\uff0c\u4e4b\u540e\u6839\u636e\u8bad\u7ec3\u6570\u636e\u4e0d\u65ad\u8c03\u6574\uff0c\u5373\u5b66\u4e60\n  \u57fa\u4e8e\u68af\u5ea6\u7684\u53cd\u5411\u4f20\u64ad\uff08Back propagation\uff0c BP\uff09 \u7b97\u6cd5\n \u6b63\u5411\u4f20\u64ad\u8fc7\u7a0b: \u8f93\u5165\u5e26\u6807\u7b7e\u7684\u8bad\u7ec3\u6837\u672c\uff0c \u7ecf\u8f93\u5165\u5c42\u548c\u9690\u542b\u5c42\u7684\u72b6\u6001\u8f6c\u79fb\uff0c\u6700\u7ec8\u901a\u8fc7\u8f93\u51fa\u5c42\u5f97\u5230\u7f51\u7edc\u4f30\u8ba1\u503c \u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b: \u6bd4\u8f83\u4f30\u8ba1\u503c\u4e0e\u6807\u7b7e\u503c\uff0c\u82e5\u6709\u8bef\u5dee\uff0c\u5c06\u8bef\u5dee\u901a\u8fc7\u94fe\u5f0f\u6c42\u5bfc\u6cd5\u5219\u7531\u8f93\u51fa\u5c42\u4f20\u64ad\u5230\u9690\u542b\u5c42\u548c\u8f93\u5165\u5c42\uff0c\u5e76\u5229\u7528\u68af\u5ea6\u4e0b\u964d\u7b97\u6cd5\uff08Gradient descent\uff09 \u8c03\u6574\u795e\u7ecf\u5143\u6743\u503c \u5c0f\u6279\u91cf\u68af\u5ea6\u4e0b\u964d\u6cd5    \u53ef\u63a5\u6536\u591a\u4e2a\u5916\u754c\u8f93\u5165\u4fe1\u606f\uff0c\u5e76\u901a\u8fc7\u81ea\u8eab\u4e00\u7ec4\u76f8\u4e92\u8fde\u63a5\u7684\u795e\u7ecf\u5143\u5904\u7406\u5355\u5143\u5bf9\u8f93\u5165\u4fe1\u606f\u8fdb\u884c\u7ebf\u6027\u6216\u975e\u7ebf\u6027\u64cd\u4f5c\uff0c\u6700\u7ec8\u4ea7\u751f\u8f93\u51fa\u7ed3\u679c\u7684\u5e76\u884c\u5f0f\u3001\u5206\u5e03\u5f0f\u8ba1\u7b97\u6a21\u578b\u3002\n  \u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc \u5377\u79ef\u795e\u7ecf\u7f51\u7edc  \u7f51\u7edc\u7684\u4f18\u5316\u8fc7\u7a0b\u5373\u8c03\u6574\u5377\u79ef\u6838\u53c2\u6570\u548c\u504f\u7f6e\u91cf\u7684\u8fc7\u7a0b   \u6c60\u5316\uff1a\u8ba1\u7b97\u67d0\u4e00\u5c40\u90e8\u8303\u56f4\u7684\u7edf\u8ba1\u503c \u4ee5\u8f83\u5c0f\u5c3a\u5bf8\u5377\u79ef\u63d0\u53d6\u7a7a\u95f4\u5c40\u90e8\u7ed3\u6784\uff0c \u5e76\u7ec4\u5408\u5f97\u5230\u6574\u4f53\u7279\u5f81\uff0c \u8be5\u8fc7\u7a0b\u662f\u4e00\u79cd\u591a\u5c3a\u5ea6\u7684\u7279\u5f81\u8868\u5f81\u65b9\u5f0f \u4f18\u52bf  \u7279\u5f81\u63d0\u53d6\u8fc7\u7a0b\u7b26\u5408\u5bf9\u8c61\u7684\u8bed\u4e49\u5206\u89e3\u6027\u548c\u8ba4\u77e5\u5c42\u6b21\u6027 \u4f7f\u7528\u8f83\u5c0f\u5c3a\u5bf8\u7684\u5377\u79ef\u6838\u64cd\u4f5c\u8f93\u5165\u4fe1\u53f7\uff0c\u80fd\u5927\u5e45\u51cf\u5c11\u6a21\u578b\u7684\u53c2\u6570\u6570\u91cf\u3001 \u964d\u4f4e\u6a21\u578b\u590d\u6742\u6027\uff0c\u4ece\u800c\u63d0\u9ad8\u6a21\u578b\u5b66\u4e60\u80fd\u529b    \u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc   \u601d\u60f3\n \u6bcf\u4e00\u4e2a\u795e\u7ecf\u5143\u5904\u7406\u5355\u5143\u90fd\u53ef\u4ee5\u63a5\u6536\u540c\u4e00\u56fe\u7ed3\u6784\u4e0a\u7684\u591a\u4e2a\u8f93\u5165\u4fe1\u53f7\uff0c\u5373\u53ef\u4ee5\u8f93\u5165\u591a\u7ef4\u7684\u56fe\u7ed3\u6784\u4fe1\u53f7 \u795e\u7ecf\u5143\u8fd0\u7b97\u64cd\u4f5c\u90fd\u5177\u5907\u7a7a\u95f4\u5c40\u90e8\u7279\u6027\uff0c\u5373\u8fd0\u7b97\u540e\u7684\u56fe\u8282\u70b9\u8f93\u51fa\u4ec5\u548c\u90bb\u57df\u8282\u70b9\u76f8\u5173 \u90fd\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u5171\u4eab\u51cf\u5c11\u53c2\u6570\u3001\u964d\u4f4e\u6a21\u578b\u590d\u6742\u5ea6\uff0c\u4e00\u4e2a\u7ef4\u5ea6\u4e0b\u7684\u56fe\u8f93\u5165\u4fe1\u53f7\u4ec5\u9700\u8981\u5c11\u91cf\u8fd0\u7b97\u53c2\u6570    \u56fe\u6c60\u5316\n  \u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08Graph convolutional neural network\uff0c GCNN\uff09\n\u8fd9\u4e2a\u56fe\u771f\u7684\u5f88\u5bb9\u6613\u770b\u61c2GCNN\u4e86\uff01\n  GCNN \u6a21\u578b\u4e2d\u7684\u6d88\u606f\u4f20\u9012\u8fc7\u7a0b\uff1a\u5efa\u7b51\u7269\u53ca\u5176\u90bb\u57df\u7684\u63cf\u8ff0\u53c2\u91cf\u901a\u8fc7\u67d0\u79cd\u975e\u7ebf\u6027\u53d8\u6362\uff0c\u5f97\u5230\u65b0\u7279\u5f81\uff0c\u800c\u53d8\u6362\u8fc7\u7a0b\u4e2d\u7684\u53c2\u6570\u5219\u901a\u8fc7\u8bad\u7ec3\u5f97\u5230\n   \u5e94\u7528\u4e2d\uff0c\u53ef\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8c03\u6574 GCNN \u67b6\u6784  \u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u8fc7\u7a0b \u9762\u5411\u8fb9\u754c\u5316\u7b80\u7684\u4e2a\u4f53\u5efa\u7b51\u7269\u5f62\u72b6\u5206\u6790 \u5f15\u8a00  P1  \u5f62\u72b6 \u5f62\u72b6\u5206\u6790\uff1a\u6a21\u5f0f\u7684\u63d0\u53d6\u548c\u63cf\u8ff0\u8fc7\u7a0b  \u51e0\u4f55\u7279\u5f81\u7684\u5b9a\u91cf\u63cf\u8ff0\uff1a\u4ece\u8ba4\u77e5\u7684\u89d2\u5ea6\uff0c \u91c7\u7528\u67d0\u4e2a\u6307\u6807\u63cf\u8ff0\u5f62\u72b6\uff0c\u5982\u7d27\u51d1\u5ea6\u3001\u5206\u5f62\u7ef4\u5ea6\u3001\u5ef6\u5c55\u5ea6\u3001\u51f9\u5ea6\u3001\u91cd\u53e0\u5ea6\u7b49 \u7ed3\u6784\u6a21\u5f0f\u7684\u81ea\u52a8\u8bc6\u522b\uff1a\u4ece\u6a21\u5f0f\u5206\u6790\u7684\u89d2\u5ea6\uff0c\u628a\u4e00\u4e9b\u7a33\u5b9a\u7684\u3001\u5178\u578b\u7684\u3001\u91cd\u590d\u51fa\u73b0\u7684\u5f62\u72b6\u7406\u89e3\u4e3a\u6a21\u5f0f     P2  \u4ece\u5efa\u7b51\u7269\u4e2d\u63d0\u53d6\u7a33\u5b9a\u3001\u5178\u578b\u7279\u5f81\u5f62\u72b6\u7684\u8fc7\u7a0b\u5219\u9700\u8981\u8003\u8651\u5176\u5730\u7406\u610f\u4e49\u548c\u5e94\u7528\u573a\u666f \u8bba\u6587\u8003\u8651\u5730\u56fe\u7efc\u5408\u7684\u5e94\u7528\u573a\u666f\uff0c\u5373\u5efa\u7b51\u7269\u8fb9\u754c\u5316\u7b80\uff0c\u6765\u5206\u6790\u4e2a\u4f53\u5efa\u7b51\u7269\u7684\u5f62\u72b6\u6a21\u5f0f   P3  \u8fb9\u754c\u5316\u7b80 \u76ee\u7684\u662f\u5bf9\u5efa\u7b51\u7269\u8f6e\u5ed3\u8fdb\u884c\u62bd\u8c61\u548c\u7b80\u5316\uff0c\u540c\u65f6\u4fdd\u6301\u5176\u51e0\u4f55\u7279\u5f81\u3001\u7fa4\u843d\u7ed3\u6784\u53ca\u5206\u5e03\u6a21\u5f0f \u5bfb\u627e\u91cd\u590d\u51fa\u73b0\u7684\u5f62\u72b6\uff0c\u4ea6\u79f0\u4e4b\u4e3a\u6a21\u677f\uff0c \u5e76\u5229\u7528\u8fd9\u4e9b\u6a21\u677f\u7f6e\u6362\u5177\u6709\u76f8\u4f3c\u5f62\u72b6\u7ed3\u6784\u7684\u5efa\u7b51\u7269\u6765\u5b8c\u6210\u5316\u7b80 \u7814\u7a76\u8fdb\u5c55  \u5f62\u72b6\u7684\u5f62\u5f0f\u5316\u63cf\u8ff0 \u5efa\u7b51\u7269\u8fb9\u754c\u5316\u7b80      \u5f62\u72b6\u7684\u5f62\u5f0f\u5316\u63cf\u8ff0 \u5efa\u7b51\u7269\u8fb9\u754c\u5316\u7b80 \u51e0\u4f55\u3001\u5f62\u6001\u5b66\u548c\u4f18\u5316\u7b97\u6cd5\n\u9762\u5411\u8fb9\u754c\u5316\u7b80\u7684\u4e2a\u4f53\u5efa\u7b51\u7269\u5f62\u72b6\u5206\u6790 \u603b\u4f53\u6846\u67b6  \u57fa\u672c\u601d\u8def\uff1a\u63d0\u53d6\u4e00\u4e9b\u7a33\u5b9a\u7684\u5f62\u72b6\u5e76\u6784\u5efa\u4e00\u7cfb\u5217\u7684\u6a21\u677f \u4e09\u4e2a\u6b65\u9aa4\uff1a\u6a21\u677f\u6784\u5efa\u3001\u5f62\u72b6\u5ea6\u91cf\u548c\u6a21\u677f\u5339\u914d  \u6a21\u677f\u6784\u5efa   \u6a21\u677f\u5e93\n  \u5927\u81f4\u5212\u5206\u4e3a\u56db\u7c7b\uff1a\u7b80\u5355\u5f62\u72b6\u3001 \u8c61\u5f81\u5f62\u72b6\u3001 \u590d\u5408\u5f62\u72b6\u548c\u81ea\u52a8\u63d0\u53d6\u5f62\u72b6\n  \u200b\t\u56db\u7c7b\u6a21\u677f\u7684\u793a\u4f8b\uff0c \u5176\u4e2d\u6a21\u677f A\u3001 B \u662f\u7b80\u5355\u5f62\u72b6\uff0c\u6a21\u677f C\u3001 D \u662f\u8c61\u5f81\u5f62\u72b6\uff0c\u6a21\u677f E \u662f\u590d\u5408\u5f62\u72b6\uff0c\u6a21\u677f F-J \u662f\u81ea\u52a8\u63d0\u53d6\u5f62\u72b6\n\u76f8\u4f3c\u6027\u5ea6\u91cf \u57fa\u4e8e\u8f6c\u89d2\u51fd\u6570\u7684\u76f8\u4f3c\u6027\u5ea6\u91cf   \u8f6c\u89d2\u51fd\u6570\uff08Turning function, TF\uff09\n  \u5c06\u4e8c\u7ef4\u5efa\u7b51\u7269\u5f62\u72b6\u8f6c\u6362\u4e3a\u4e00\u7ef4\u51fd\u6570\u8868\u8fbe\n  \u5bf9\u4e8e\u591a\u8fb9\u5f62\ud835\udc34\u3001 \ud835\udc35\uff0c\u5206\u522b\u8bb0\u5176\u8f6c\u89d2\u51fd\u6570\u4e3a\ud835\udc53\ud835\udc34(\ud835\udc60)\u3001 \ud835\udc53\ud835\udc35(\ud835\udc60)\uff0c\u5176\u5f62\u72b6\u5dee\u5f02\u53ef\u5229\u7528\u51fd\u6570\u7ec4\u6210\u7684\ud835\udc3f\ud835\udc5d\u7a7a\u95f4\u8ddd\u79bb\u6765\u5ea6\u91cf\uff0c\u5b9a\u4e49\u8ddd\u79bb\ud835\udc3f\ud835\udc5d(\ud835\udc34, \ud835\udc35) \uff1b\u591a\u8fb9\u5f62\ud835\udc34\u3001 \ud835\udc35\u76f8\u4f3c\u5ea6\u8d8a\u9ad8\uff0c\u5219\ud835\udc3f\ud835\udc5d(\ud835\udc34, \ud835\udc35)\u503c\u8d8a\u5c0f\uff1b\u5bf9\u591a\u8fb9\u5f62\u65cb\u8f6c\u89d2\u5ea6\u548c\u8fb9\u754c\u8d77\u59cb\u70b9\u7684\u9009\u62e9\u90fd\u975e\u5e38\u654f\u611f\n  \u5f62\u72b6\u76f8\u4f3c\u5ea6\ud835\udc462(\ud835\udc34, \ud835\udc35) \uff1b\u591a\u8fb9\u5f62\u7684\u7f29\u653e\u3001\u5e73\u79fb\u7b49\u5e76\u4e0d\u4f1a\u5f71\u54cd\u76f8\u4f3c\u6027\u7684\u8ba1\u7b97\uff1b\u4e0d\u540c\u8d77\u59cb\u70b9\u548c\u8ba1\u7b97\u65b9\u5411\uff0c\u5176\u76f8\u4f3c\u5ea6\u4e5f\u4e0d\u76f8\u540c\n  \u901a\u8fc7\u904d\u5386\u6a21\u677f\u4e0a\u6240\u6709\u7684\u8f6c\u89d2\u8282\u70b9\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff0c\u6bd4\u8f83\u5404\u8282\u70b9\u76f8\u4f3c\u503c\uff0c\u53d6\u5176\u6700\u5c0f\u503c\u5373\u8be5\u6a21\u677f\u4e0e\u5efa\u7b51\u7269\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\n  \u57fa\u4e8e GCNN \u7684\u5f62\u72b6\u81ea\u7f16\u7801\u6a21\u578b   \u8fb9\u754c\u70b9\u7279\u5f81\n  \u57fa\u4e8e\u5c40\u90e8\u7ed3\u6784\n  \u57fa\u4e8e\u533a\u57df\u7ed3\u6784\n    \u57fa\u4e8e\u56fe\u5377\u79ef\u8fd0\u7b97\u7684\u81ea\u7f16\u7801\u5668\uff08Graph convolutional autoencoder, GCA\uff09\n  \u4ee5\u56fe\u5377\u79ef\u8fd0\u7b97\u4ee3\u66ff\u5168\u8fde\u63a5\u7684\u795e\u7ecf\u5143\u8fd0\u7b97\n  \u4e0d\u9700\u8981\u8f93\u5165\u6570\u636e\u7684\u6807\u6ce8\u4fe1\u606f\uff0c\u5373\u662f\u975e\u76d1\u7763\u5b66\u4e60\n  \u5173\u6ce8\u91cd\u70b9\u4e5f\u4e0d\u5728\u4e8e\u8f93\u51fa\u7ed3\u679c\uff0c\u800c\u5728\u4e8e\u5bf9\u4e2d\u95f4\u7f16\u7801\u65b9\u5f0f\u52a0\u5165\u4e00\u4e9b\u7279\u5b9a\u7ea6\u675f\u4ece\u800c\u5b9e\u73b0\u67d0\u4e9b\u76ee\u7684\uff0c\u4f8b\u5982\u51cf\u5c11\u8868\u8fbe\u7ef4\u5ea6\u4ee5\u63d0\u53d6\u5176\u4e3b\u8981\u7279\u5f81\uff0c \u5b9e\u73b0\u964d\u7ef4\u76ee\u7684\n  \u96c6\u6210\u548c\u538b\u7f29\u4e86\u539f\u59cb\u7684\u5f62\u72b6\u63cf\u8ff0\uff0c\u5f97\u5230\u65b0\u7684\u5f62\u72b6\u7f16\u7801\u65b9\u5f0f\u3002 \u57fa\u4e8e\u8be5\u7f16\u7801\u53ef\u4f7f\u7528\u6b27\u5f0f\u8ddd\u79bb\u7b49\u8ba1\u7b97\u5f97\u5230\u5f62\u72b6\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\n    \u57fa\u4e8e\u6700\u5c0f\u4e8c\u4e58\u7684\u6a21\u677f\u5339\u914d   \u6a21\u677f\u7684\u5339\u914d\u8fc7\u7a0b\u9700\u8981\u4fdd\u8bc1\u6a21\u677f\u4e0e\u539f\u59cb\u5efa\u7b51\u7269\u7684\u4f4d\u7f6e\u3001 \u5c3a\u5bf8\u3001\u65b9\u5411\u4e00\u81f4 =&gt; 2D Helmert \u53d8\u6362\u6a21\u578b\n  \u6839\u636e\u6700\u5c0f\u4e8c\u4e58\u539f\u7406\uff0c \u8bef\u5dee\u6700\u5c0f\u65f6\uff0c \u6a21\u677f\u4e0e\u5efa\u7b51\u7269\u8fbe\u5230\u201c\u6700\u4f73\u201d \u5339\u914d\u72b6\u6001\n  \u5efa\u7b51\u7269\u548c\u6a21\u677f\u7684\u8fb9\u754c\u70b9\u6570\u91cf\u548c\u6b21\u5e8f\u90fd\u4e0d\u786e\u5b9a\uff0c\u56e0\u6b64\u5728\u4f7f\u7528\u6700\u5c0f\u4e8c\u4e58\u6a21\u578b\u4e4b\u524d\uff0c\u9700\u8981\u5efa\u7acb\u5176\u5339\u914d\u5173\u7cfb\n  \u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u5efa\u7acb\u5efa\u7b51\u7269\u4e0e\u6a21\u677f\u8fb9\u754c\u4e0a\u5f27\u6bb5\u7684\u5339\u914d\u5173\u7cfb\n  \u5b9e\u9a8c\u4e0e\u7ed3\u679c  \u6bd4\u8f83\u57fa\u4e8e\u8f6c\u89d2\u51fd\u6570\u548c GCA \u6a21\u578b\u5bf9\u5f62\u72b6\u8868\u8fbe\u7684\u6709\u6548\u6027 \u8bba\u8ff0\u6a21\u677f\u5339\u914d\u5316\u7b80\u65b9\u6cd5\u7684\u5408\u7406\u6027\u548c\u53ef\u884c\u6027  \u6570\u636e\u51c6\u5907\u548c\u6a21\u677f\u5e93  625 \u4e2a\u5efa\u7b51\u7269\u591a\u8fb9\u5f62 \u5305\u542b\u82e5\u5e72\u5178\u578b\u7684\u5c45\u4f4f\u793e\u533a \u6a21\u677f\u5e93\uff1a\u4ee5\u4eba\u5de5\u65b9\u5f0f\u63d0\u53d6\uff0c54\u4e2a\u6a21\u7248  \u5f62\u72b6\u76f8\u4f3c\u6027\u5ea6\u91cf\u5b9e\u9a8c   \u5ea6\u91cf\u6307\u6807-\u5339\u914d\u5ea6\n  \u6bd4\u8f83\u548c\u8ba8\u8bba\u8f6c\u89d2\u51fd\u6570\u548c GCA \u6a21\u578b\u5bf9\u5f62\u72b6\u76f8\u4f3c\u6027\u5ea6\u91cf\u7684\u6709\u6548\u6027\n  \u8bad\u7ec3 GCA \u6a21\u578b\u6240\u9700\u7684\u6570\u636e\u96c6\n  \u9488\u5bf9 11 \u4e2a\u5178\u578b\u5efa\u7b51\u7269\u6784\u5efa\u51fa 11 \u4e2a\u76f8\u5e94\u7684\u6a21\u677f\uff0c\u5e76\u901a\u8fc7\u51e0\u4f55\u53d8\u6362\u65b9\u5f0f\u5bf9\u6a21\u677f\u52a0\u5165\u566a\u97f3\n  \u53ef\u8bbe\u7f6e\u4e0d\u540c\u7684\u53d8\u6362\u5f3a\u5ea6\u03c3\n  \u6309\u6b63\u6001\u5206\u5e03\u4e3a\u6bcf\u4e00\u79cd\u53d8\u6362\u968f\u673a\u751f\u6210 100 \u79cd\u5f3a\u5ea6\uff0c\u6700\u7ec8\u5f97\u5230 5500 \u4e2a\u5f62\u72b6\u7ec4\u6210\u7684\u8bad\u7ec3\u6570\u636e\u96c6\n    GCA \u6a21\u578b\u8bad\u7ec3\n  \u901a\u8fc7\u52a0\u5bc6\u70b9\u7684\u65b9\u5f0f\u5f97\u5230\u6bcf\u4e2a\u5efa\u7b51\u7269 64 \u4e2a\u8fb9\u754c\u70b9\n  \u6bcf\u4e2a\u8fb9\u754c\u70b9\u57fa\u4e8e\u5c40\u90e8\u7ed3\u6784\u548c\u533a\u57df\u7ed3\u6784\u7684 7 \u4e2a\u7279\u5f81\uff0c\u7279\u5f81\u91c7\u7528Z-score \u65b9\u6cd5\u6807\u51c6\u5316\n  \u6a21\u578b\u53c2\u6570\uff1a\u8f93\u5165\u6279\u91cf\u6570\u4e3a 100\uff0c\u91c7\u7528 Sigmoid \u51fd\u6570\u6fc0\u6d3b\uff0c \u8f93\u51fa\u4e3a 32 \u7ef4\u7279\u5f81\u3002 Adam \u4f18\u5316\u7b97\u6cd5\u88ab\u7528\u4e8e\u6c42\u89e3\u6a21\u578b\uff0c \u5176\u5b66\u4e60\u7387\u548c\u6307\u6570\u8870\u51cf\u7387\u5206\u522b\u4e3a 0.001 \u548c 0.95\u3002 \u6a21\u578b\u7ecf\u8fc7 50 \u8f6e\u8bad\u7ec3\u3002\n    \u57fa\u4e8e\u8f6c\u89d2\u51fd\u6570\u4e0e GCA \u6a21\u578b\u8ba1\u7b97\u7684\u76f8\u4f3c\u5ea6\u4e0e\u5339\u914d\u5ea6\u4e4b\u95f4\u7684\u76f8\u5173\u6027-\u5448\u9ad8\u5ea6\u6b63\u76f8\u5173\n  t-SNE \u7b97\u6cd5GCA \u7f16\u7801\u7279\u5f81\u964d\u7ef4\u53ef\u89c6\u5316\n  \u76f8\u4f3c\u7684\u5f62\u72b6\u5176\u4f4d\u7f6e\u70b9\u4e5f\u8f83\u4e3a\u63a5\u8fd1\n  \u5176\u4ed6\u51e0\u7c7b\u5f62\u72b6\u90fd\u53ef\u4ee5\u4ece\u89c6\u89c9\u4e0a\u533a\u5206\u51fa\u660e\u663e\u7684\u7fa4\u7c07\u5173\u7cfb\n  \u7531\u4e8e\u5f62\u72b6\u7684\u590d\u6742\u6027\uff0c\u5e76\u4e0d\u5b58\u5728\u54ea\u79cd\u5f62\u72b6\u5ea6\u91cf\u65b9\u6cd5\u5728\u5904\u7406\u4e0d\u540c\u5e94\u7528\u573a\u666f\u65f6\u90fd\u80fd\u5177\u5907\u663e\u8457\u4f18\u52bf\n \u5bf9\u4e8e\u8f6c\u89d2\u51fd\u6570\uff0c\u5176\u4ec5\u8003\u8651\u4e86\u8fb9\u754c\u70b9\u5207\u89d2\u7279\u5f81\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u5b58\u5728\u8fde\u7eed\u5f2f\u66f2\u7684\u5efa\u7b51\u7269\uff0c\u5176\u5207\u89d2\u53d8\u5316\u53ef\u80fd\u5b58\u5728\u9707\u8361\uff0c\u4ece\u800c\u5bfc\u81f4\u5f62\u72b6\u5ea6\u91cf\u6548\u679c\u4e0d\u751a\u7406\u60f3 GCA \u6a21\u578b\u53ef\u4ee5\u8003\u8651\u8fb9\u754c\u70b9\u66f4\u591a\u7684\u63cf\u8ff0\u7279\u5f81\uff0c\u4f46\u7f16\u7801\u540e\u7684\u8868\u8fbe\u5b9e\u9645\u4e0a\u662f\u4e00\u79cd\u6709\u635f\u538b\u7f29\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u5bf9\u67d0\u4e9b\u53c2\u91cf\u7684\u654f\u611f\u6027      \u6a21\u677f\u5339\u914d\u5316\u7b80\u5b9e\u9a8c  \u4ee5\u8f6c\u89d2\u51fd\u6570\u5ea6\u91cf\u5f62\u72b6\u76f8\u4f3c\u6027\uff0c\u5e76\u4f7f\u7528\u6240\u6784\u5efa\u7684\u6a21\u677f\u5e93\u5bf9\u5b9e\u9a8c\u533a\u57df\u5185\u7684\u5efa\u7b51\u7269\u8fdb\u884c\u5316\u7b80 \uff08\u8fd9\u91cc\u5e76\u6ca1\u6709\u91c7\u7528GCA \u6a21\u578b\uff09 \u5316\u7b80\u540e\uff0c \u5176\u5f62\u72b6\u66f4\u52a0\u89c4\u6574\u3001 \u7edf\u4e00 \u6a21\u677f\u5339\u914d\u65b9\u6cd5\u7684\u4f18\u52bf\u5728\u4e8e\u80fd\u66f4\u597d\u5730\u4fdd\u6301\u5c40\u90e8\u8303\u56f4\u5185\u5efa\u7b51\u7269\u5f62\u72b6\u7684\u89c4\u6574\u6027\u548c\u7edf\u4e00\u6027 \u5b9a\u91cf\u5316\u7edf\u8ba1\u5206\u6790\uff1a\u7ed3\u679c\u8868\u660e[0,0.25]\u533a\u95f4\u5185\u5efa\u7b51\u7269\u6570\u5360\u6bd4\u4e3a 94.2%\uff0c \u8fd9\u8868\u660e\u6a21\u677f\u5339\u914d\u5316\u7b80\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53ef\u4ee5\u53d6\u5f97\u8f83\u4ee4\u4eba\u6ee1\u610f\u7684\u7ed3\u679c  \u6a21\u677f\u5339\u914d\u65b9\u6cd5\u6bd4\u8f83  \u57fa\u4e8e\u6700\u5c0f\u4e8c\u4e58\u6cd5\u7684\u6a21\u677f\u5339\u914d\uff0c\u5e76\u4e0e\u5176\u4ed6\u4e24\u4e2a\u65b9\u6cd5\u8fdb\u884c\u4e86\u6bd4\u8f83\uff08\u51e0\u4f55\u5ea6\u91cf\u65b9\u6cd5\uff0c\u6700\u5c0f\u5916\u63a5\u77e9\u5f62\uff08SBR\uff09\u65b9\u6cd5\uff09  \u5206\u6790\u4e0e\u8ba8\u8bba  \u6a21\u677f\u7684\u591a\u6837\u6027 \u7c97\u7c92\u5ea6\u4e0e\u7ec6\u7c92\u5ea6\u6a21\u677f  \u672c\u7ae0\u5c0f\u7ed3  \u805a\u7126\u4e8e\u4e2a\u4f53\u5efa\u7b51\u7269\u5f62\u72b6\u6a21\u5f0f\u7684\u5206\u6790\uff1b\u5e76\u9488\u5bf9\u5730\u56fe\u7efc\u5408\u7684\u5e94\u7528\u573a\u666f\uff0c \u4ece\u6574\u4f53\u4e0a\u63d0\u70bc\u51fa\u4e00\u4e9b\u7a33\u5b9a\u7684\u3001\u5178\u578b\u7684\u3001\u91cd\u590d\u51fa\u73b0\u7684\u5f62\u72b6\u4f5c\u4e3a\u6a21\u677f\uff0c\u6765\u66ff\u6362\u539f\u59cb\u7684\u5efa\u7b51\u7269\uff0c\u5b9e\u73b0\u8fb9\u754c\u5316\u7b80 \u9762\u5411\u8fb9\u754c\u5316\u7b80\u4efb\u52a1\u7684\u4e2a\u4f53\u5efa\u7b51\u7269\u5f62\u72b6\u5206\u6790\u6846\u67b6\uff0c\u5305\u62ec\u6a21\u677f\u6784\u5efa\u3001\u76f8\u4f3c\u6027\u5ea6\u91cf\u3001\u6a21\u677f\u5339\u914d\u4e09\u4e2a\u4e3b\u8981\u6b65\u9aa4  \u4ee3\u8868\u6027\u5f62\u72b6\u6a21\u677f\u5e93 \u5efa\u7b51\u7269\u548c\u6a21\u677f\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u5ea6\u91cf \u57fa\u4e8e\u8f6c\u89d2\u51fd\u6570\u548c\u56fe\u5377\u79ef\u81ea\u7f16\u7801\u5668\uff08GCA\uff09\u4e24\u79cd\u65b9\u6cd5 \u57fa\u4e8e\u6700\u5c0f\u4e8c\u4e58\u7684\u6a21\u677f\u5339\u914d\u65b9\u6cd5   \u6027\u80fd\u6bd4\u8f83\uff0c\u7ed3\u679c\u8bc4\u4ef7\uff0c\u5206\u6790\u8ba8\u8bba  \u56fe\u5377\u79ef\u5b66\u4e60\u652f\u6301\u4e0b\u7684\u5efa\u7b51\u7269\u805a\u7c7b \u8fd9\u90e8\u5206\u6709\u4e9b\u6ca1\u770b\u61c2\uff0c\u8fd9\u662f\u805a\u7c7b\u4efb\u52a1\u4e48\uff0c\u4ec0\u4e48\u662f\u6709\u76d1\u7763\u7684\u805a\u7c7b\uff1f\n\u6709\u8fc1\u79fb\u5b66\u4e60\u7684\u5473\u9053\uff0c\u5148\u7528\u5206\u7c7b\u5b66\u4e60\u7279\u5f81\uff0c\u5728\u7528\u7279\u5f81\u805a\u7c7b\n\u4eba\u5de5\u6807\u8bb0\u6837\u672c\n\u9488\u5bf9\u5efa\u7b51\u7269\u7fa4\u7ec4\u7684\u6a21\u5f0f\u5206\u6790\n \u4f55\u4e3a\u201c\u7fa4\u7ec4\u201d \uff1f \u5982\u4f55\u63a2\u6d4b\u201c\u7fa4\u7ec4\u201d \uff1f  \u5f15\u8a00  \u4eba\u4eec\u7684\u793e\u4f1a\u884c\u4e3a\u51b3\u5b9a\u4e86\u5efa\u7b51\u7269\u5177\u5907\u4e00\u4e9b\u7279\u5b9a\u7279\u5f81\uff0c \u5305\u62ec\u7531\u4eba\u7c7b\u7fa4\u5c45\u884c\u4e3a\u6240\u51b3\u5b9a\u7684\u805a\u96c6\u6027\u5206\u5e03\u7279\u5f81 \u610f\u4e49 \u5e38\u89c1\u7684\u805a\u96c6\u6027\u7279\u5f81\u5206\u6790\u65b9\u6cd5-\u7a7a\u95f4\u805a\u7c7b  \u7a7a\u95f4\u805a\u7c7b\u7684\u76ee\u6807\uff1a\u540c\u4e00\u7fa4\u7ec4\u4e2d\u5bf9\u8c61\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u5c3d\u53ef\u80fd\u9ad8\uff0c\u800c\u4e0d\u540c\u7fa4\u7ec4\u4e2d\u5bf9\u8c61\u4e4b\u95f4\u7684\u5dee\u5f02\u6027\u5c3d\u53ef\u80fd\u5927 \u5efa\u7b51\u7269\u7a7a\u95f4\u805a\u7c7b\u5728\u7b97\u6cd5\u8bbe\u8ba1\u548c\u7ea6\u675f\u6761\u4ef6\u7b49\u7279\u70b9\u548c\u96be\u70b9  \u5c5e\u6027\u4fe1\u606f\u7684\u590d\u6742\u6027 \u8ba4\u77e5\u53c2\u91cf\u7684\u6a21\u7cca\u6027 \u7ea6\u675f\u6761\u4ef6\u7684\u4e0d\u786e\u5b9a\u6027 \u5efa\u7b51\u7269\u6570\u636e\u7684\u5c3a\u5ea6\u7279\u5f81     \u63d0\u51fa\u76d1\u7763\u5f0f\u7684 GCNN \u805a\u7c7b\u6a21\u578b\uff1a\u5206\u522b\u4ee5\u8282\u70b9\u548c\u8fb9\u4e3a\u5b66\u4e60\u5bf9\u8c61\uff0c \u63d0\u51fa\u4e86\u4e24\u4e2a\u805a\u7c7b\u65b9\u6cd5\uff1a\u8282\u70b9\u805a\u7c7b\u548c\u8fb9\u805a\u7c7b  \u5efa\u7b51\u7269\u805a\u7c7b\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49 \u95ee\u9898\u5b9a\u4e49\n\u5efa\u7b51\u7269\u805a\u7c7b\u7814\u7a76\u73b0\u72b6 \u4ee5\u56fe\u7ed3\u6784\u4e3a\u57fa\u7840\u7684\u805a\u7c7b\n \u91c7\u7528\u56fe\u7ed3\u6784\u5b9a\u91cf\u5316\u63cf\u8ff0\u5efa\u7b51\u7269\u5bf9\u8c61\u4e4b\u95f4\u7684\u5173\u7cfb \u8003\u8651\u4e0d\u540c\u7684\u8ba4\u77e5\u53c2\u91cf\u548c\u7ea6\u675f\u6761\u4ef6 \u5229\u7528\u76f8\u5173\u7b97\u6cd5\u5f97\u5230\u805a\u7c7b\u7ed3\u679c  \u57fa\u4e8e GCNN \u6a21\u578b\u7684\u8282\u70b9\u805a\u7c7b \u603b\u4f53\u6846\u67b6 \u6570\u636e\u5212\u5206\u3001 \u56fe\u7ed3\u6784\u6784\u5efa\u3001\u56fe\u8282\u70b9\u7279\u5f81\u6620\u5c04\u4ee5\u53ca\u7ed3\u679c\u8f93\u51fa \uff08\u597d\u597d\u7406\u89e3\uff0c\u5148\u5206\u7c7b\uff0c\u540e\u805a\u7c7b\uff09\n\u6837\u672c\u6807\u6ce8   \u56fe\u50cf\u5206\u5272\uff1a\u5e76\u4e0d\u77e5\u9053\u5206\u5272\u533a\u57df\u662f\u4ec0\u4e48\n  \u56fe\u50cf\u8bed\u4e49\u5206\u5272\uff1a\u4e0d\u4f46\u5212\u5206\u51fa\u533a\u57df\uff0c\u8fd8\u5224\u522b\u533a\u57df\u662f\u4ec0\u4e48\n  \u4ee5\u6df1\u5ea6\u5b66\u4e60\u7b49\u76d1\u7763\u5f0f\u5efa\u7b51\u7269\u805a\u7c7b\u5219\u548c\u56fe\u50cf\u8bed\u4e49\u5206\u5272\u4efb\u52a1\u76f8\u4f3c\n  \u4e24\u79cd\u6807\u6ce8\u65b9\u5f0f\n \u6309\u805a\u7c7b\u540e\u5efa\u7b51\u7269\u7fa4\u7ec4\u7684\u7ed3\u6784\u7c7b\u522b\u6216\u8bed\u4e49\u4fe1\u606f\u8fdb\u884c\u6807\u6ce8 \u6309\u805a\u7c7b\u540e\u5efa\u7b51\u7269\u7684\u4f4d\u7f6e\u8fdb\u884c\u6807\u6ce8\uff0c \u5373\u5c06\u540c\u4e00\u4e2a\u7fa4\u7ec4\u5185\u7684\u5efa\u7b51\u7269\u6807\u6ce8\u4e3a\u76f8\u540c\u4f4d\u7f6e    \u9762\u5411\u805a\u7c7b\u95ee\u9898\u7684GCNN\u6a21\u578b  \u805a\u7c7b\u95ee\u9898=&gt;\u7279\u5f81\u6620\u5c04\u95ee\u9898: \u5c06\u4e00\u7ec4\u6570\u636e\u7684\u591a\u4e2a\u7279\u5f81\u8fdb\u884c\u975e\u7ebf\u6027\u7684\u7ec4\u5408\uff0c \u5e76\u5d4c\u5165\u5230\u4e8c\u7ef4\u7279\u5f81\u7a7a\u95f4\u4e2d\uff0c\u6700\u7ec8\u6309\u65b0\u7279\u5f81\u7a7a\u95f4\u4e2d\u7684\u8ddd\u79bb\u8fdb\u884c\u805a\u7c7b  \u8f93\u5165\uff1a\u5305\u542b\ud835\udc41\u4e2a\u5efa\u7b51\u7269\u7684\u56fe\u7ed3\u6784\ud835\udca2 = (\ud835\udcb1, \u2130, \ud835\udcb2)\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5efa\u7b51\u7269\u4ee3\u8868\u4e00\u4e2a\u8282\u70b9\uff0c\u4e14\u5305\u542b\ud835\udc5a\u4e2a\u63cf\u8ff0\u7279\u5f81{\ud835\udc531, \ud835\udc532, \u2026 , \ud835\udc53\ud835\udc5a}\uff0c\u5168\u90e8\u8282\u70b9\u6784\u6210\ud835\udc41 \u00d7 \ud835\udc5a\u7279\u5f81\u5411\u91cf\uff1b\u5efa\u7b51\u7269\u4e4b\u95f4\u7684\u8ddd\u79bb\u6784\u6210\ud835\udc41 \u00d7 \ud835\udc41\u6743\u503c\u77e9\u9635\uff1b \u6807\u6ce8\uff1a \ud835\udc41 \u00d7 2\u5411\u91cf\uff0c\u5373\u6bcf\u4e2a\u8282\u70b9\u6240\u5904\u7fa4\u7ec4\u7684\u4e2d\u5fc3\u70b9\u4f4d\u7f6e\u5750\u6807(\ud835\udc65\ud835\udc56, \ud835\udc66\ud835\udc56)\uff1b \u8f93\u51fa\uff1a \ud835\udc41 \u00d7 2\u5411\u91cf\uff0c\u5373\u9884\u6d4b\u6bcf\u4e2a\u8282\u70b9\u7684\u5e73\u9762\u4f4d\u7f6e\u5750\u6807\u3002  \u6a21\u578b\u7684\u635f\u5931\u51fd\u6570\u53ef\u901a\u8fc7\u9884\u6d4b\u4f4d\u7f6e\u4e0e\u6807\u6ce8\u4f4d\u7f6e\u4e4b\u95f4\u8ddd\u79bb\u7684\u5747\u503c\u786e\u5b9a \u5728\u5efa\u7b51\u7269\u805a\u7c7b\u4efb\u52a1\u4e2d\uff0c GCNN \u6a21\u578b\u4e3b\u8981\u662f\u901a\u8fc7\u76d1\u7763\u4fe1\u606f\uff0c\u5c06\u4f4d\u7f6e\u3001 \u5c3a\u5bf8\u3001\u65b9\u5411\u3001\u5f62\u72b6\u3001\u5bc6\u5ea6\u7b49\u53d8\u91cf\u4fe1\u606f\u8fdb\u884c\u96c6\u6210\uff0c \u5e76\u5d4c\u5165\u5230\u4e8c\u7ef4\u5e73\u9762\u5750\u6807\u3002 \u57fa\u4e8e\u65b0\u7684\u5750\u6807\u53ef\u8ba1\u7b97\u5efa\u7b51\u7269\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c \u5e76\u53ef\u91c7\u7528\u7ecf\u5178\u7684 K-means \u7b97\u6cd5\u5c06\u5176\u805a\u7c7b\u6210 K \u4e2a\u7fa4\u7ec4\u3002    \u57fa\u4e8e GCNN \u6a21\u578b\u7684\u8fb9\u805a\u7c7b \u603b\u4f53\u6846\u67b6  \u8fb9\u805a\u7c7b\u662f\u9884\u6d4b\u8fb9\u7684\u72b6\u6001 \u5212\u5206\u4e3a\u540c\u4e00\u4e2a\u7fa4\u7ec4\u7684\u5efa\u7b51\u7269\u4e4b\u95f4\u4ecd\u4fdd\u7559\u8fde\u63a5\u8fb9\uff0c\u800c\u4e0d\u540c\u7fa4\u7ec4\u7684\u5efa\u7b51\u7269\u4e4b\u95f4\u5219\u5220\u9664\u8fb9\u8fde\u63a5=&gt;\u805a\u7c7b\u540e\u8fb9\u5177\u5907\u4e24\u79cd\u72b6\u6001\uff1a\u4fdd\u7559\u548c\u5220\u9664  \u8fb9\u63cf\u8ff0\u7279\u5f81\u63d0\u53d6   \u5206\u5e03\u5dee\u5f02\u6027\uff1a\u4e00\u5b9a\u90bb\u57df\u5185\u8282\u70b9\u67d0\u4e2a\u6307\u6807\ud835\udc34\u7684\u7edf\u8ba1\u5206\u5e03\u5dee\u5f02\n  \u7a7a\u95f4\u81ea\u76f8\u5173\u6027\uff1a\u63a2\u6d4b\u5bf9\u8c61\u7684\u6307\u6807\u503c\u5728\u7a7a\u95f4\u5206\u5e03\u4e0a\u662f\u5426\u5448\u73b0\u9ad8\u9ad8\u76f8\u90bb\u6216\u8005\u9ad8\u4f4e\u95f4\u9519\u7b49\u7279\u5f81\n  \u5b9e\u9a8c\u7ed3\u679c\u4e0e\u8ba8\u8bba \u6570\u636e\u51c6\u5907 \u6ce8\u610f\u5230\u8fd9\u91cc\u5e76\u6ca1\u6709\u4f7f\u7528\u5168\u90e8\u6570\u636e\u8fdb\u884c\u8bad\u7ec3\uff0c\u800c\u662f\u6709\u4e00\u4e2a\u5339\u914d\u3001\u9009\u62e9\u7684\u8fc7\u7a0b\n \u9996\u5148\u4ee5\u9053\u8def\u3001\u6c34\u7cfb\u7b49\u7269\u7406\u5206\u5272\u4f5c\u4e3a\u5168\u5c40\u7ea6\u675f\u6761\u4ef6\uff0c \u63d0\u53d6\u4e00\u5b9a\u533a\u57df\u5185\u7684\u5efa\u7b51\u7269\uff0c\u6bcf\u4e2a\u533a\u57df\u5bf9\u5e94\u4e3a\u4e00\u4e2a\u6837\u672c \u4ece\u6bd4\u4f8b\u5c3a\u4e3a 1:10k \u6570\u636e\u4e2d\u67e5\u8be2\u51fa\u6bcf\u4e2a\u6837\u672c\u6240\u5bf9\u5e94\u7684\u5efa\u7b51\u7269\uff0c\u5229\u7528\u53e0\u7f6e\u5206\u6790\u8ba1\u7b97\u51fa\u4e24\u4e2a\u5c3a\u5ea6\u95f4\u7684\u5339\u914d\u5173\u7cfb\uff1b \u518d\u8005\uff0c \u6839\u636e\u5339\u914d\u5173\u7cfb\u6311\u9009\u51fa\u6070\u5f53\u7684\u6837\u672c\u7528\u4e8e\u8bad\u7ec3\uff1b \u6700\u540e\uff0c \u6807\u6ce8\u6837\u672c \u5171\u63d0\u53d6\u51fa 4170 \u4e2a\u6709\u6548\u6837\u672c\uff0c\u6bcf\u4e2a\u6837\u672c\u5305\u542b 16~64 \u4e2a\u5efa\u7b51\u7269\uff0c\u5168\u90e8\u6837\u672c\u5305\u542b 162781 \u4e2a\u5efa\u7b51\u7269 \u63096: 2: 2\u6bd4\u4f8b\u5c06\u5168\u90e8\u6837\u672c\u968f\u673a\u5212\u5206\u4e3a\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6 \uff08ARI\u8ba1\u7b97\u7684\u662f\u6d4b\u8bd5\u96c6\u7684\u805a\u7c7b\u8bc4\u4ef7\uff09 \u6839\u636e\u8be5\u6570\u636e\u8f93\u5165\u7684\u8981\u6c42\uff0c\u9700\u8981\u4fdd\u8bc1\u5404\u4e2a\u6837\u672c\u4e4b\u95f4\u7684\u6570\u91cf\u7684\u4e00\u81f4\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u6570\u91cf\u4e0d\u8db3\u7684\u6837\u672c\u6dfb\u52a0\u4f2a\u8282\u70b9\u3002 \u8fd9\u4e9b\u4f2a\u8282\u70b9\u4e0d\u4e0e\u5176\u4ed6\u8282\u70b9\u5b58\u5728\u4efb\u4f55\u8fde\u63a5\uff0c \u4e14\u63cf\u8ff0\u6307\u6807\u5168\u90e8\u4e3a 0\u3002  \u805a\u7c7b\u8bc4\u4ef7\u6307\u6807  \u975e\u76d1\u7763\u805a\u7c7b\u8bc4\u4ef7  \u7c7b\u5185\u9ad8\u805a\u5408\u3001\u7c7b\u95f4\u4f4e\u8026\u5408 \u7d27\u5bc6\u6027\u3001\u95f4\u9694\u6027\u3001\u6234\u7ef4\u68ee\u5821\u4e01\u6307\u6570\u548c\u9093\u6069\u6307\u6570 \u9002\u5e94\u4e8e\u901a\u7528\u7684\u70b9\u6570\u636e\uff0c\u800c\u975e\u5efa\u7b51\u7269\u6570\u636e   \u76d1\u7763\u805a\u7c7b\u8bc4\u4ef7  \u901a\u8fc7\u5b9a\u4e49\u6307\u6807\u6765\u6bd4\u8f83\u6807\u6ce8\u805a\u7c7b\u7ed3\u679c\u4e0e\u7b97\u6cd5\u9884\u6d4b\u805a\u7c7b\u7ed3\u679c\u4e4b\u95f4\u7684\u5dee\u5f02\u6027 \u8c03\u6574\u5170\u5fb7\u7cfb\u6570\uff08Adjusted Rand index\uff0c ARI\uff09\uff0c ARI \u503c\u8d8a\u9ad8\uff0c\u805a\u7c7b\u6548\u679c\u8d8a\u597d    \u5efa\u7b51\u7269\u805a\u7c7b\u5b9e\u9a8c  \u8282\u70b9\u805a\u7c7b  \u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e86 11 \u7ef4\u8f93\u5165\u7279\u5f81 \u91c7\u7528 Delaunay \u4e09\u89d2\u7f51\u6784\u9020\u56fe\u7ed3\u6784   \u8fb9\u805a\u7c7b  \u6bcf\u6761\u8fb9\u5305\u542b\u4e86 28 \u7ef4\u8f93\u5165\u7279\u5f81\uff0822 \u4e2a\u6784\u9020\u7279\u5f81\ud835\udc39\ud835\udc37(\ud835\udc34)\u548c\ud835\udc39\ud835\udc40(\ud835\udc34)\uff0c\u4ee5\u53ca 6 \u4e2a\u8ddd\u79bb\u6307\u6807    \u53c2\u6570\u654f\u611f\u6027\u5206\u6790  \u5bf9\u6bd4\uff1a\u4ec5\u4f7f\u7528\u4e00\u4e2a\u63cf\u8ff0\u6307\u6807 + \u5254\u9664\u8be5\u6307\u6807  \u65b9\u6cd5\u6bd4\u8f83 \u5206\u6790\u4e0e\u8ba8\u8bba \u56fe\u5377\u79ef\u5b66\u4e60\u652f\u6301\u4e0b\u7684\u5efa\u7b51\u7269\u7fa4\u7ec4\u6a21\u5f0f\u5206\u7c7b \u5f15\u8a00  \u5efa\u7b51\u7269\u7684\u7fa4\u7ec4\u6a21\u5f0f\u5206\u6790\u672c\u8d28\u4e0a\u53ef\u4ee5\u7406\u89e3\u4e3a\u5206\u7c7b\u95ee\u9898\uff0c\u5373\u67d0\u4e00\u4e2a\u7fa4\u7ec4\u5728\u6574\u4f53\u7ed3\u6784\u4e0a\u5c5e\u4e8e\u4e00\u79cd\u6a21\u5f0f\u6216\u53e6\u4e00\u79cd\u6a21\u5f0f \u5bf9\u5efa\u7b51\u7269\u7fa4\u7ec4\u7684\u6a21\u5f0f\u5e76\u6ca1\u6709\u5f62\u6210\u660e\u786e\u7684\u3001 \u7edf\u4e00\u7684\u5b9a\u4e49\u548c\u5206\u7c7b\u6807\u51c6 \u65b9\u6cd5\u4e0a\uff0c\u73b0\u6709\u7684\u57fa\u4e8e\u89c4\u5219\u548c\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u6a21\u5f0f\u5206\u7c7b\u65b9\u6cd5\u4e5f\u9762\u4e34\u7740\u9700\u8981\u624b\u5de5\u5b9a\u4e49\u6a21\u5f0f\u89c4\u5219\u6216\u63d0\u53d6\u63cf\u8ff0\u7279\u5f81\u7b49\u95ee\u9898 \u8bba\u6587\u4ee5\u89c6\u89c9\u8ba4\u77e5\u7ed3\u679c\u4f5c\u4e3a\u76d1\u7763\u4fe1\u606f\uff0c\u63d0\u51fa\u57fa\u4e8eGCNN \u6a21\u578b\u7684\u5efa\u7b51\u7269\u7fa4\u7ec4\u6a21\u5f0f\u5206\u7c7b\u65b9\u6cd5  \u6536\u96c6\u591a\u540d\u89c2\u5bdf\u8005\u7684\u8ba4\u77e5\u7ed3\u679c\u6765\u5c3d\u53ef\u80fd\u4fdd\u8bc1\u4e00\u81f4\u6027 \u7aef\u5bf9\u7aef\uff08End-to-end\uff09\u7684\u5b66\u4e60\u65b9\u5f0f\uff0c\u4e0d\u9700\u8981\u624b\u5de5\u5b9a\u4e49\u6a21\u5f0f\u89c4\u5219\u548c\u63d0\u53d6\u7279\u5f81    \u7fa4\u7ec4\u6a21\u5f0f\u5f62\u5f0f\u5316\u8868\u8fbe \u7fa4\u7ec4\u6a21\u5f0f\u8bc6\u522b\u65b9\u6cd5  \u57fa\u4e8e\u89c4\u5219\u7684\u65b9\u6cd5\uff1a\u67e5\u8be2\u76f8\u90bb\u5efa\u7b51\u7269\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u67d0\u4e9b\u76f8\u4f3c\u7684\u7ed3\u6784\u6216\u7279\u5b9a\u7684\u6392\u5217 \u57fa\u4e8e\u673a\u5668\u5b66\u4e60\u7b97\u6cd5  \u57fa\u4e8e GCNN \u6a21\u578b\u7684\u5efa\u7b51\u7269\u7fa4\u7ec4\u6a21\u5f0f\u5206\u7c7b \u603b\u4f53\u6846\u67b6 \u5efa\u7b51\u7269\u805a\u7c7b\u3001\u56fe\u7ed3\u6784\u6784\u5efa\u3001\u56fe\u5377\u79ef\u5206\u7c7b\u548c\u7ed3\u679c\u8f93\u51fa\n\u5efa\u7b51\u7269\u7fa4\u7ec4\u6a21\u5f0f\u7684\u5c42\u6b21\u6027  \u57ce\u5e02\u90bb\u533a\u6a21\u578b\uff1a\u8857\u574a\u3001\u8857\u533a\u3001\u8d85\u7ea7\u8857\u533a\u4ee5\u53ca\u793e\u533a   \u4e0d\u540c\u5c42\u6b21\u4e0b\uff0c \u5efa\u7b51\u7269\u7fa4\u7ec4\u6a21\u5f0f\u7684\u5173\u6ce8\u91cd\u70b9\u548c\u8bc6\u522b\u65b9\u6cd5\u5747\u5b58\u5728\u5dee\u5f02\u3002  \u8857\u533a\u5c42\u6b21\u4e0b\uff0c\u5bf9\u5efa\u7b51\u7269\u7fa4\u7ec4\u7684\u5173\u6ce8\u70b9\u4fa7\u91cd\u4e8e\u5176\u6392\u5217\u65b9\u5f0f \u800c\u793e\u533a\u5c42\u6b21\u4e0b\u5185\uff0c\u5173\u6ce8\u70b9\u53ef\u80fd\u4fa7\u91cd\u4e8e\u5176\u5206\u5e03\u5bc6\u96c6\u7a0b\u5ea6\u7b49   \u5c3a\u5ea6\u5206\u6790  \u8857\u574a\u5c42\u6b21\uff1a\u6bcf\u4e2a\u7fa4\u7ec4\u5185\u5305\u542b 2~5 \u4e2a\u5efa\u7b51\u7269\uff0c\u8857\u574a\u5c42\u6b21\u4e0b\u7684\u7fa4\u7ec4\u5185\u5efa\u7b51\u7269\u6570\u91cf\u8f83\u5c11\uff0c \u6784\u5efa\u56fe\u7ed3\u6784\u540e\uff0c\u90bb\u57df\u6982\u5ff5\u4e0d\u660e\u663e\uff0c \u5927\u90e8\u5206\u5efa\u7b51\u90fd\u53ea\u6709 1~2 \u9636\u90bb\u57df \u8d85\u7ea7\u8857\u533a\u548c\u793e\u533a\u5c42\u6b21\uff1a\u5efa\u7b51\u7269\u7fa4\u7ec4\u7684\u6a21\u5f0f\u8f83\u4e3a\u590d\u6742\u3001\u591a\u6837\uff0c\u4e0d\u5229\u4e8e\u603b\u7ed3\u51fa\u7a33\u5b9a\u7684\u6a21\u5f0f\u5e76\u8bad\u7ec3\u5206\u7c7b \u8bba\u6587\u4e3b\u8981\u4ece\u8857\u533a\u5c42\u6b21\u5206\u6790\u5efa\u7b51\u7269\u7fa4\u7ec4\u7684\u6a21\u5f0f\u7279\u5f81   \u7c7b\u522b\u5212\u5206  \u4ece\u89c6\u89c9\u4e0a\u533a\u5206 \u89c4\u5219\u6a21\u5f0f  \u5efa\u7b51\u7269\u7fa4\u7ec4\u7ed3\u6784\u540c\u8d28\uff0c\u89c6\u89c9\u4e0a\u6709\u89c4\u5219\u7684\u95f4\u9694\u548c\u6392\u5217 \u5982\u65b0\u89c4\u5212\u5efa\u8bbe\u7684\u4f4f\u5b85\u533a   \u4e0d\u89c4\u5219\u6a21\u5f0f  \u5efa\u7b51\u7269\u5185\u5f62\u72b6\u591a\u6837\u3001\u5c3a\u5bf8\u4e0d\u4e00\u6216\u8005\u6392\u5217\u9519\u4e71      \u9762\u5411\u5206\u7c7b\u4efb\u52a1\u7684 GCNN \u6a21\u578b \u5b9e\u9a8c\u548c\u7ed3\u679c \u6570\u636e\u51c6\u5907   \u6a21\u5f0f\u5206\u7c7b\u524d\u9700\u8981\u5c06\u5efa\u7b51\u7269\u88ab\u5212\u5206\u4e3a\u72ec\u7acb\u7fa4\u7ec4\uff0c \u5373\u805a\u7c7b\n  \u6bcf\u4e2a\u7fa4\u7ec4\u901a\u8fc7 3 \u540d\u53c2\u4e0e\u8005\u5c06\u5176\u6807\u6ce8\u4e3a\u89c4\u5219\u6216\u4e0d\u89c4\u5219\u6a21\u5f0f\n  \u6a21\u7cca\u7fa4\u7ec4\n  \u6df7\u5408\u7fa4\u7ec4\n  \u4e00\u4e9b\u6a21\u7cca\u6216\u6df7\u5408\u7684\u7fa4\u7ec4\u4f1a\u88ab\u5254\u9664\n    2647 \u4e2a\u89c4\u5219\u6a21\u5f0f\u548c 2646 \u4e2a\u975e\u89c4\u6a21\u6a21\u5f0f\u7684\u7fa4\u7ec4\uff0c\u6bcf\u4e2a\u7fa4\u7ec4\u5305\u542b 20~128 \u4e2a\u5efa\u7b51\u7269\uff0c \u603b\u5171\u5305\u542b 318641 \u4e2a\u5efa\u7b51\u7269\n  \u6bcf\u4e00\u4e2a\u5efa\u7b51\u7269\u7fa4\u7ec4\u90fd\u53ef\u4ee5\u770b\u4f5c\u662f GCNN \u6a21\u578b\u7684\u4e00\u4e2a\u8f93\u5165\u6837\u672c\uff0c\u6240\u6709\u6837\u672c\u63096: 2: 2\u6bd4\u4f8b\u968f\u673a\u5212\u5206\u4e3a\u8bad\u7ec3\u96c6\u3001\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\n  \u6dfb\u52a0\u4f2a\u8282\u70b9\n  \u7fa4\u7ec4\u6a21\u5f0f\u5206\u7c7b\u5b9e\u9a8c   GCNN \u6a21\u578b\u5bf9\u67d0\u4e2a\u5efa\u7b51\u7269\u7fa4\u7ec4\u7684\u6fc0\u6d3b\u8fc7\u7a0b \uff08\u8fd9\u4e2a\u5206\u6790\u5f88\u6709\u610f\u601d\uff09\n\u7279\u5f81\u56fe\u7684\u5085\u91cc\u53f6\u53d8\u6362\u503c\u8d8a\u6765\u8d8a\u7a33\u5b9a\u548c\u7a00\u758f\uff1bGCNN \u6a21\u578b\u4fdd\u7559\u4e86\u4ece\u8bad\u7ec3\u96c6\u4e2d\u63d0\u53d6\u7684\u4e3b\u8981\u7279\u5f81\uff0c\u800c\u9010\u6e10\u5ffd\u7565\u4e86\u6b21\u8981\u4fe1\u606f\n  \u5206\u6790\u4e86\u4e00\u4e9b\u88ab\u9519\u8bef\u5206\u7c7b\u7684\u5efa\u7b51\u7fa4\u7ec4\n \u5f53\u5b58\u5728\u72ed\u7a84\u7684\u5efa\u7b51\u7269\u6a2a\u8de8\u5728\u7fa4\u7ec4\u7684\u8fb9\u7f18\u65f6\uff0c \u5206\u7c7b\u6027\u80fd\u6025\u5267\u4e0b\u964d    \u53c2\u6570\u654f\u611f\u6027\u5206\u6790  \u7f51\u7edc\u6df1\u5ea6  5 \u6298\u4ea4\u53c9\u9a8c\u8bc1\u5b9e\u9a8c \u5f00\u59cb\u9636\u6bb5\u6a21\u578b\u6027\u80fd\u968f\u7740\u6df1\u5ea6\u7684\u589e\u52a0\u800c\u9010\u6e10\u63d0\u5347\uff0c\u968f\u540e\u8d8b\u4e8e\u7a33\u5b9a\uff1b\u5f53\u6a21\u578b\u6df1\u5ea6\u8fbe\u5230 12 \u5c42\u65f6\uff0c\u6027\u80fd\u5f00\u59cb\u6025\u5267\u4e0b\u964d\u3002 \u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528\u6b8b\u5dee\u8fde\u63a5\uff08Residual connections\uff09     \u4e0d\u540c\u7684\u8f93\u5165\u56fe\u7ed3\u6784\uff08\u5373 Delaunay \u4e09\u89d2\u7f51\u548c MST\uff09\u548c\u4e0d\u540c\u7684\u5377\u79ef\u591a\u9879\u5f0f\u9636\u6570\ud835\udc3e\uff08\u5373 1~6\uff09    \u4e2a\u4f53\u5efa\u7b51\u7269\u7684\u8ba4\u77e5\u53c2\u91cf\u5bf9\u6574\u4f53\u7fa4\u7ec4\u6a21\u5f0f\u5206\u7c7b\u7684\u5f71\u54cd\n  \u53ea\u4f7f\u7528\u67d0\u4e00\u4e2a\u5efa\u7b51\u7269\u63cf\u8ff0\u6307\u6807\u548c\u5254\u9664\u8be5\u6307\u6807\u65f6\u6a21\u578b\u7684\u5206\u7c7b\u6027\u80fd\u8868\u73b0\n    \u65b9\u6cd5\u6bd4\u8f83 \u5206\u6790\u4e0e\u8ba8\u8bba \u603b\u7ed3\u4e0e\u5c55\u671b \u8bba\u6587\u603b\u7ed3  \u5efa\u7b51\u7269\u6a21\u5f0f\u5206\u6790  \u91cd\u8981\u610f\u4e49\uff1a\u5730\u7406\u4fe1\u606f\u79d1\u5b66\u548c\u57ce\u5e02\u7a7a\u95f4\u7814\u7a76\u7b49\u9886\u57df \u805a\u7126\u4e8e\uff1a\u5fae\u89c2\u5c3a\u5ea6\u4e0b\u5efa\u7b51\u7269\u4e2a\u4f53\u5f62\u6001\u6a21\u5f0f\u548c\u4e2d\u89c2\u5c3a\u5ea6\u4e0b\u7fa4\u7ec4\u7ed3\u6784\u6a21\u5f0f \u63d0\u51fa\u4e86\uff1a\u57fa\u4e8e\u56fe\u7ed3\u6784\u7684\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5   \u4e3b\u8981\u5185\u5bb9\uff1a  \u4ee5\u201c\u95ee\u9898\u2014\u6a21\u578b\u2014\u7406\u8bba\u201d \u4e3a\u4e3b\u7ebf\uff0c \u4ecb\u7ecd\u4e86\u5efa\u7b51\u7269\u6a21\u5f0f\u5206\u6790\u7684\u7814\u7a76\u95ee\u9898\u3001\u51e0\u4f55\u6a21\u578b\u4e0e\u7406\u8bba\u57fa\u7840\u3002 \u4ee5\u201c\u56fe\u2014\u5377\u79ef\u2014\u5b66\u4e60\u201d \u4e3a\u4e3b\u7ebf\uff0c \u4ecb\u7ecd\u5efa\u7b51\u7269\u6a21\u5f0f\u5206\u6790\u7684\u6570\u5b66\u7ed3\u6784\u548c\u5206\u6790\u65b9\u6cd5\u3002 \u4ece\u5730\u56fe\u7efc\u5408\u7684\u89d2\u5ea6\u5206\u6790\u4e2a\u4f53\u5efa\u7b51\u7269\u7684\u6a21\u5f0f\u7279\u5f81\uff0c\u5e76\u63d0\u51fa\u4e86\u57fa\u4e8e\u6a21\u677f\u5339\u914d\u7684\u5efa\u7b51\u7269\u8fb9\u754c\u5316\u7b80\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4e3b\u8981\u5305\u62ec\u6a21\u677f\u6784\u5efa\u3001\u5f62\u72b6\u5ea6\u91cf\u548c\u6a21\u677f\u5339\u914d\u7b49\u6b65\u9aa4\u3002 \u501f\u9274\u56fe\u50cf\u8bed\u4e49\u5206\u5272\u7684\u601d\u60f3\uff0c\u63d0\u51fa\u4e86\u57fa\u4e8e GCNN \u7684\u5efa\u7b51\u7269\u76d1\u7763\u5f0f\u805a\u7c7b\u65b9\u6cd5\uff0c\u5e76\u6839\u636e\u56fe\u8282\u70b9\u548c\u8fb9\u7684\u5bf9\u5076\u5173\u7cfb\uff0c \u5206\u522b\u4ee5\u8282\u70b9\u7279\u5f81\u548c\u8fb9\u72b6\u6001\u4f5c\u4e3a\u5b66\u4e60\u5bf9\u8c61\uff0c\u63d0\u51fa\u4e86\u4e24\u4e2a\u805a\u7c7b\u65b9\u6cd5\uff1a\u8282\u70b9\u805a\u7c7b\u548c\u8fb9\u805a\u7c7b\u3002 \u501f\u9274\u56fe\u50cf\u5206\u7c7b\u7684\u601d\u60f3\uff0c \u63d0\u51fa\u4e86\u57fa\u4e8e\u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u5efa\u7b51\u7269\u7fa4\u7ec4\u6a21\u5f0f\u5206\u7c7b\u65b9\u6cd5\u3002    \u7814\u7a76\u5c55\u671b \u8bba\u6587\u5c1d\u8bd5\u4ee5\u56fe\u7ed3\u6784\u4e3a\u6570\u636e\u57fa\u7840\uff0c\u5c1d\u8bd5\u6784\u5efa\u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u5e76\u4ee5\u89e3\u51b3\u5efa\u7b51\u7269\u6a21\u5f0f\u5206\u6790\u7b49\u7ecf\u5178\u95ee\u9898\u4e3a\u5207\u5165\u70b9\uff0c\u53d6\u5f97\u4e86\u4e00\u5b9a\u7684\u8fdb\u5c55\u3002 \u4f46\u76f8\u5173\u7814\u7a76\u4ecd\u5904\u4e8e\u521d\u6b65\u9636\u6bb5\uff0c\u7279\u522b\u662f\u5730\u7406\u6df1\u5ea6\u5b66\u4e60\u7684\u6982\u5ff5\u9700\u8981\u4e0d\u65ad\u5730\u5b8c\u5584\u548c\u4e30\u5bcc\n \u5efa\u7b51\u7269\u6a21\u5f0f\u7684\u7814\u7a76\u8303\u56f4\u9700\u8981\u8fdb\u4e00\u6b65\u62d3\u5bbd  \u5176\u4ed6\u5c42\u6b21\u7684\u5efa\u7b51\u7269\u7fa4\u7ec4\u6a21\u5f0f\uff0c\u751a\u81f3\u5927\u5c3a\u5ea6\u4e0b\u57ce\u5e02\u7684\u5f62\u6001\u6a21\u5f0f\uff0c\u5982\u57ce\u5e02\u8303\u56f4\u5185\u5168\u90e8\u5efa\u7b51\u7269 \u4ece\u89c6\u89c9\u4e0a\u533a\u5206\u51fa\u66f4\u8be6\u7ec6\u7684\u6a21\u5f0f\uff08\u4f8b\u5982\u5706\u5f62\u3001\u53d1\u6563\u6027\u7b49\uff09\uff0c\u6216\u8005\u9762\u5411\u5176\u4ed6\u5e94\u7528\u573a\u666f\u5212\u5206\u51fa\u65b0\u7684\u7c7b\u522b   \u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u7406\u8bba\u65b9\u6cd5\u9700\u8981\u6301\u7eed\u6027\u63a2\u7d22  \u6c60\u5316\u6280\u672f \u7f51\u7edc\u7ed3\u6784   \u6df1\u5ea6\u5b66\u4e60\u5728\u5730\u7406\u7a7a\u95f4\u77e2\u91cf\u6570\u636e\u5206\u6790\u4e2d\u7684\u5e94\u7528\u4ef7\u503c\u9700\u8981\u4e0d\u65ad\u5730\u6316\u6398 \u7814\u7a76\u63a2\u7d22\u7684\u8fc7\u7a0b\u4e2d\u5c06\u6d89\u53ca\u5230\u4e00\u4e9b\u5171\u6027\u7684\u6b65\u9aa4\uff0c \u5305\u62ec\u9886\u57df\u95ee\u9898\u5b9a\u4e49\u3001\u8bad\u7ec3\u6837\u672c\u6536\u96c6\u3001\u5b66\u4e60\u65b9\u6cd5\u6784\u5efa\u3001 \u5de5\u7a0b\u5b9e\u8df5\u5f00\u6e90\u7b49\uff0c\u6bcf\u4e2a\u6b65\u9aa4\u90fd\u9700\u8981\u6211\u8f88\u540e\u751f\u52e4\u8015\u4e0d\u8f8d\u3001\u52aa\u529b\u4e0d\u61c8\u3002  \u5730\u8d28\u5927\u6570\u636e\u8868\u793a\u4e0e\u5173\u8054\u5173\u952e\u6280\u672f\u7814\u7a76 2018-\u9a6c\u51ef-\u4e2d\u56fd\u5730\u8d28\u5927\u5b66\uff08\u6b66\u6c49\uff09\n\u7eea\u8bba \u7814\u7a76\u80cc\u666f\u53ca\u610f\u4e49  P1  \u591a\u6e90\u5f02\u6784\u7684\u5730\u8d28\u6570\u636e \u5730\u8d28\u5927\u6570\u636e\u7684\u5206\u6790\u6316\u6398 \u5bf9\u73b0\u6709\u5730\u8d28\u6570\u636e\u4e2d\u7684\u7a7a\u95f4\u5bf9\u8c61\u4e0e\u975e\u7a7a\u95f4\u3001\u975e\u7ed3\u6784\u5316\u6587\u672c\u5bf9\u8c61\u7279\u5f81\u8fdb\u884c\u5408\u7406\u7684\u8868\u793a\uff0c\u5e76\u6784\u5efa\u4e8c\u8005\u7684\u5173\u8054\u5173\u7cfb\uff0c\u662f\u5b9e\u73b0\u201c\u56fe\u6587\u878d\u5408\u201d\u3001\u201c\u6587\u56fe\u4e92\u67e5\u201d\u7b49\u5e94\u7528\u573a\u666f\u7684\u5173\u952e\u3002 \u5207\u5165\u70b9\uff1a\u5730\u8d28\u7a7a\u95f4\u5b9e\u4f53\u5bf9\u8c61\u4e0e\u975e\u7a7a\u95f4\u5730\u8d28\u6587\u672c\u5bf9\u8c61\u7684\u5339\u914d\u4e0e\u5173\u8054\u95ee\u9898 \u8bed\u4e49\u7279\u5f81\u3001\u5c5e\u6027\u7279\u5f81\u3001\u62d3\u6251\u7279\u5f81\u8868\u793a \u4e3b\u8981\u76ee\u7684  \u6316\u6398\u5bf9\u5b9e\u4f53\u76f8\u4f3c\u6027\u6709\u51b3\u5b9a\u4f5c\u7528\u7684\u9ad8\u6548\u7279\u5f81\u8868\u793a\u6a21\u578b \u5730\u8d28\u5b9e\u4f53\u7684\u5173\u8054\u4e0e\u8868\u793a\u65b9\u6cd5 \u8fdb\u800c\u5b9e\u73b0\u5730\u8d28\u667a\u80fd\u534f\u540c\u670d\u52a1\u5e94\u7528     P2  \u7814\u7a76\u9762\u5411\u5730\u8d28\u6587\u672c\u5bf9\u8c61\u4e0e\u5730\u8d28\u7a7a\u95f4\u5b9e\u4f53\u5bf9\u8c61\u5173\u8054\u4efb\u52a1\u7684\u9ad8\u6548\u8868\u793a\u5b66\u4e60\u65b9\u6cd5 \u7814\u7a76\u975e\u7ed3\u6784\u5316\u5730\u8d28\u62a5\u544a\u4e2d\u5b9e\u4f53\u4e0e\u7a7a\u95f4\u5730\u8d28\u6570\u636e\u4e2d\u5b9e\u4f53\u7684\u8bed\u4e49\u5173\u8054\u6027\u5ea6\u91cf\u65b9\u6cd5 \u57fa\u4e8e\u5730\u8d28\u672c\u4f53\u7684\u5730\u8d28\u5b9e\u4f53\u8bc6\u522b\u4e0e\u5730\u8d28\u5b9e\u4f53\u4fe1\u606f\u7f51\u7edc\u6784\u5efa\u65b9\u6cd5\uff08\u8d85\u8fb9\u6784\u5efa\u7b56\u7565\u3001\u7f51\u7edc\u8868\u793a\u5b66\u4e60\uff09=&gt; \u591a\u6807\u7b7e\u5206\u7c7b\u548c\u8282\u70b9\u7c7b\u578b\u76f8\u4f3c\u5ea6\u67e5\u8be2   P3  \u672c\u6587\u7684\u7814\u7a76\u76ee\u6807\u7531\u5730\u8d28\u884c\u4e1a\u5b9e\u9645\u5e94\u7528\u9700\u6c42\u4e0e\u5b66\u79d1\u6280\u672f\u53d1\u5c55\u8d8b\u52bf\u5171\u540c\u9a71\u52a8\uff0c\u7814\u7a76\u6210\u679c\u53ef\u4ee5\u6709\u6548\u652f\u6491\u5730\u8d28\u77e5\u8bc6\u83b7\u53d6\u3001\u878d\u5408\u548c\u63a8\u7406\uff0c \u4e3a\u5b9e\u73b0\u5730\u8d28\u7a7a\u95f4\u4e0e\u975e\u7a7a\u95f4\u6570\u636e\u7684\u6a21\u5f0f\u4e0e\u7279\u5f81\u63d0\u53d6\u3001\u5730\u8d28\u5b9e\u4f53\u666e\u904d\u5173\u7cfb\u53d1\u73b0\u53ca\u8ba4\u8bc6\u5176\u4ed6\u9690\u542b\u5728\u5730\u8d28\u6570\u636e\u4e2d\u7684\u7279\u5f81\u89c4\u5f8b\u63d0\u4f9b\u7406\u8bba\u548c\u6280\u672f\u57fa\u7840\uff0c \u5c06\u4e3a\u667a\u80fd\u5730\u8d28\u8c03\u67e5\u5e73\u53f0\u63d0\u4f9b\u591a\u6e90\u5730\u8d28\u6570\u636e\u7684\u5173\u8054\u548c\u5e94\u7528\u65b0\u65b9\u6cd5\uff0c\u63d0\u4f9b\u5730\u8d28\u6570\u636e\u201c\u56fe\u6587\u878d\u5408\u201d\u3001\u201c\u5b9e\u4f53\u5173\u8054\u201d\u3001\u201c\u7f51\u7edc\u8868\u793a\u201d\u7b49\u65b0\u7684\u5730\u8d28\u4fe1\u606f\u5e94\u7528\u8303\u5f0f\u3002 \u4e5f\u80fd\u591f\u5145\u5206\u6316\u6398\u73b0\u6709\u5730\u8d28\u6570\u636e\u4e2d\u8574\u542b\u7684\u77e5\u8bc6\uff0c\u52a0\u5feb\u5b9e\u73b0\u5404\u7c7b\u5730\u8d28\u4fe1\u606f\u7684\u793e\u4f1a\u5316\u5171\u4eab\uff0c\u5145\u5206\u63d0\u5347\u73b0\u6709\u5730\u8d28\u5927\u6570\u636e\u7684\u6f5c\u5728\u5e94\u7528\u4ef7\u503c\uff0c\u6ee1\u8db3\u653f\u5e9c\u3001\u5730\u8d28\u8c03\u67e5\u4e13\u4e1a\u4eba\u5458\u548c\u793e\u4f1a\u516c\u4f17\u7684\u9700\u8981\u3002    \u7814\u7a76\u76ee\u6807\u4e0e\u5185\u5bb9  P1\uff08\u7814\u7a76\u76ee\u7684\uff09  \u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u5730\u8d28\u6570\u636e\u5173\u8054\u65b9\u6cd5  \u5bf9\u5730\u8d28\u7a7a\u95f4\u5b9e\u4f53\u6570\u636e\u4e0e\u5916\u90e8\u5730\u8d28\u6587\u672c\u6570\u636e\u8fdb\u884c\u5411\u91cf\u5316\u5904\u7406 \u5bf9\u4e24\u7c7b\u5bf9\u8c61\u8fdb\u884c\u8bed\u4e49\u76f8\u4f3c\u6027\u5ea6\u91cf   \u6784\u5efa\u5730\u8d28\u9886\u57df\u672c\u4f53\u5e93\uff1a\u5730\u8d28\u5b9e\u4f53\u8fdb\u884c\u5206\u7c7b\u548c\u8bc6\u522b\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u6784\u5efa\u5730\u8d28\u5b9e\u4f53\u4fe1\u606f\u7f51\u7edc\uff0c\u4e30\u5bcc\u63d0\u53d6\u5b9e\u4f53\u7684\u8bed\u4e49\u8054\u7cfb \u5bf9\u5b9e\u4f53\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u8fdb\u884c\u8868\u793a\u5b66\u4e60\uff0c\u83b7\u53d6\u8282\u70b9\u7684\u4f4e\u7ef4\u5b9e\u503c\u8868\u793a\uff0c\u4ee5\u4fbf\u4e8e\u8fdb\u884c\u8282\u70b9\u5206\u7c7b\u548c\u76f8\u4f3c\u6027\u68c0\u7d22 \u5f00\u53d1\u521d\u6b65\u7684\u539f\u578b\u7cfb\u7edf\uff1a\u8bbe\u8ba1\u5730\u8d28\u5927\u6570\u636e\u7684\u5904\u7406\u3001\u8bbf\u95ee\u3001\u8ba1\u7b97\u4e0e\u7ec4\u7ec7\u7ba1\u7406\u65b9\u6cd5   P2  \u7406\u8bba\u548c\u65b9\u6cd5\uff1a\u8868\u793a\u5b66\u4e60\u6280\u672f\u3001\u5730\u7406\u4fe1\u606f\u7cfb\u7edf\u3001\u81ea\u7136\u8bed\u8a00\u5904\u7406\u3001\u7f51\u7edc\u8868\u793a\u7b49 \u95ee\u98981\uff1a\u73b0\u6709\u5730\u8d28\u6570\u636e\u7f3a\u5c11\u5408\u7406\u7684\u8bed\u4e49\u8868\u793a\u548c\u968f\u4e4b\u4ea7\u751f\u7684\u5f02\u8d28\u5f02\u6784\u6570\u636e\u5173\u8054\u56f0\u96be\u3001\u6570\u636e\u6316\u6398\u4e0d\u4fbf\u5f00\u5c55  \u901a\u8fc7\u6784\u5efa\u548c\u6807\u6ce8\u5b9e\u9a8c\u6570\u636e\u96c6\uff0c\u5f15\u5165\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5 \u5206\u6790\u5730\u8d28\u6570\u636e\u7279\u6027\uff0c\u7814\u7a76\u5730\u8d28\u7a7a\u95f4\u5b9e\u4f53\u4e0e\u6587\u672c\u5bf9\u8c61\u7684\u5408\u7406\u8868\u793a\u65b9\u6cd5 \u7a81\u51fa\u5728\u7a7a\u95f4\u5b9e\u4f53\u4e0e\u6587\u672c\u5b9e\u4f53\u4fe1\u606f\u91cf\u4e0d\u5bf9\u79f0\u3001\u8868\u8fbe\u65b9\u5f0f\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\u4e0b\uff0c\u8fdb\u884c\u76f8\u4f3c\u6027\u6bd4\u8f83\u5ea6\u91cf   \u95ee\u98982\uff1a\u5730\u8d28\u6587\u672c\u4e2d\u63d0\u53d6\u51fa\u7684\u5730\u8d28\u5b9e\u4f53\u95f4\u7f3a\u5c11\u8bed\u4e49\u5173\u8054  \u63d0\u51fa\u57fa\u4e8e\u9886\u57df\u672c\u4f53\u7684\u5730\u8d28\u5b9e\u4f53\u4fe1\u606f\u7f51\u7edc\u6784\u5efa\u65b9\u6cd5\uff0c\u9009\u62e9\u5408\u7406\u7684\u7f51\u7edc\u8868\u793a\u6a21\u578b\u5bf9\u5176\u8fdb\u884c\u8868\u793a \u5bf9\u63d0\u51fa\u7684\u6a21\u578b\u9002\u5e94\u6027\u8fdb\u884c\u4e86\u8bc4\u4f30     P3\uff08\u5173\u952e\u79d1\u5b66\u95ee\u9898\uff09  \u5730\u8d28\u7a7a\u95f4\u5b9e\u4f53\u4e0e\u5730\u8d28\u6587\u672c\u5bf9\u8c61\u7684\u8bed\u4e49\u5316\u8868\u793a\u95ee\u9898 \u5730\u8d28\u7a7a\u95f4\u5b9e\u4f53\u4e0e\u63cf\u8ff0\u6587\u672c\u7684\u5339\u914d\u95ee\u9898 \u5730\u8d28\u5b9e\u4f53\u4fe1\u606f\u7f51\u7edc\u6784\u5efa\u4e0e\u8868\u793a \u8bbe\u8ba1\u5b9e\u73b0\u4e86\u539f\u578b\u7cfb\u7edf    \u521b\u65b0\u70b9   P1\n \u7acb\u8db3\u4e8e\uff1a\u5730\u8d28\u5927\u6570\u636e\u7684\u4fe1\u606f\u670d\u52a1\u5e94\u7528\u9700\u6c42 \u95ee\u98981\uff1a  \u5730\u8d28\u7a7a\u95f4\u6570\u636e\u4e2d\u7684\u5730\u8d28\u5b9e\u4f53\u5bf9\u8c61\u4e0e\u975e\u7ed3\u6784\u5316\u5730\u8d28\u62a5\u544a\u7b49\u6587\u672c\u6570\u636e\u7684\u8868\u793a\u4e0e\u5173\u8054\u95ee\u9898 \u6784\u5efa\u4e86\u6587\u672c\u5bf9\u8c61\u4e0e\u7a7a\u95f4\u5bf9\u8c61\u7684\u6df1\u5ea6\u8868\u793a\u6a21\u578b   \u95ee\u98982\uff1a  \u5730\u8d28\u9886\u57df\u6587\u672c\u6570\u636e\u4e0e\u7a7a\u95f4\u6570\u636e\u7684\u8bed\u4e49\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u95ee\u9898 \u63d0\u51fa\u57fa\u4e8e\u9886\u57df\u672c\u4f53\u7684\u5730\u8d28\u4fe1\u606f\u5b9e\u4f53\u7f51\u7edc\u6784\u5efa\u65b9\u6cd5 \u5e76\u9009\u62e9\u5408\u9002\u7684\u7f51\u7edc\u8868\u793a\u6a21\u578b\u83b7\u53d6\u7f51\u7edc\u8282\u70b9\u7684\u6709\u6548\u8868\u793a   \u8d21\u732e\uff1a\u4e3a\u5730\u8d28\u8d44\u6599\u6574\u5408\u63d0\u4f9b\u65b0\u65b9\u6cd5\uff0c\u4e3a\u5730\u8d28\u8d44\u6599\u5e94\u7528\u63d0\u4f9b\u65b0\u8303\u5f0f    P2\uff08\u4e3b\u8981\u521b\u65b0\u70b9\uff09\n \u5730\u8d28\u7a7a\u95f4\u5b9e\u4f53\u7684\u8bed\u4e49\u5316\u8868\u793a\u95ee\u9898  \u57fa\u4e8e\u53e5\u5411\u91cf\u7ec4\u5408\u7684\u5c42\u6b21\u5316\u5730\u8d28\u7a7a\u95f4\u5b9e\u4f53\u8bed\u4e49\u5316\u8868\u793a\u65b9\u6cd5 \u5229\u7528\u4e5d\u4ea4\u6a21\u578b\u83b7\u53d6\u5730\u8d28\u5b9e\u4f53\u4e0e\u76f8\u90bb\u5b9e\u4f53\u7684\u7a7a\u95f4\u62d3\u6251\u8bed\u4e49\u8868\u793a \u628a\u5730\u8d28\u7a7a\u95f4\u5b9e\u4f53\u7684\u5c5e\u6027\u8868\u793a\u4e0e\u7a7a\u95f4\u62d3\u6251\u8868\u793a\u4e32\u8054\u8d77\u6765\u4f5c\u4e3a\u6df1\u5ea6\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165 \u5b66\u4e60\u5f97\u5230\u8574\u542b\u5730\u8d28\u5b9e\u4f53\u5c5e\u6027\u4e0e\u7a7a\u95f4\u62d3\u6251\u4fe1\u606f\u7684\u5730\u8d28\u7a7a\u95f4\u5b9e\u4f53\u8bed\u4e49\u8868\u793a\u5411\u91cf \u7528\u4ee5\u4e0e\u5916\u90e8\u5730\u8d28\u5b9e\u4f53\u63cf\u8ff0\u6587\u672c\u8fdb\u884c\u8bed\u4e49\u5339\u914d   \u5730\u8d28\u7a7a\u95f4\u5b9e\u4f53\u4e0e\u5916\u90e8\u6587\u672c\u63cf\u8ff0\u7684\u5173\u8054\u95ee\u9898  \u5e26\u6ce8\u610f\u529b\u673a\u5236\u7684\u5c42\u6b21\u5316\u5b6a\u751f\u7f51\u7edc\u6a21\u578b \u5b66\u4e60\u5230\u4e24\u7c7b\u5bf9\u8c61\u9762\u5411\u5173\u8054\u4efb\u52a1\u7684\u4f4e\u7ef4\u3001\u5b9e\u503c\u8bed\u4e49\u5411\u91cf\u8868\u793a \u6700\u5c0f\u5316\u5339\u914d\u7684\u6837\u672c\u5bf9\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u540c\u65f6\u6700\u5927\u5316\u4e0d\u5339\u914d\u7684\u6837\u672c\u5bf9\u4e4b\u95f4\u7684\u8ddd\u79bb   \u5730\u8d28\u9886\u57df\u6587\u672c\u4e2d\u5730\u8d28\u5b9e\u4f53\u4fe1\u606f\u62bd\u53d6\u540e\u5b9e\u4f53\u95f4\u7f3a\u5c11\u8bed\u4e49\u5173\u8054\u7684\u95ee\u9898  \u6784\u5efa\u4e86\u5730\u8d28\u672c\u4f53\u5e93\u8f85\u52a9\u8fdb\u884c\u5b9e\u4f53\u5173\u7cfb\u8bc6\u522b \u57fa\u4e8e\u6b64\u6784\u5efa\u4e86\u5730\u8d28\u5f02\u8d28\u5b9e\u4f53\u4fe1\u606f\u7f51\u7edc \u63d0\u51fa\u548c\u5b9a\u4e49\u4e86\u5730\u8d28\u5b9e\u4f53\u8d85\u7f51\u4fe1\u606f\u6a21\u578b\uff0c\u8bbe\u8ba1\u4e86\u7f51\u7edc\u8d85\u8fb9\u6784\u5efa\u7b56\u7565 \u5229\u7528\u5730\u8d28\u5b9e\u4f53\u95f4\u8d85\u8fb9\u7684\u4e00\u9636\u76f8\u4f3c\u6027\u6765\u786e\u5b9a\u8d85\u8fb9\u4e2d\u8282\u70b9\u7684\u4e0d\u53ef\u5206\u6027\uff0c\u5229\u7528\u4e8c\u9636\u76f8\u4f3c\u6027\u6765\u4fdd\u6301\u8d85\u8fb9\u4e2d\u7684\u8282\u70b9\u8fd1\u90bb\u5173\u7cfb \u5229\u7528\u8868\u793a\u5b66\u4e60\u6280\u672f\u5bf9\u8d85\u7f51\u7edc\u7ed3\u6784\u7684\u5730\u8d28\u5f02\u8d28\u5b9e\u4f53\u4fe1\u606f\u7f51\u7edc\u8fdb\u884c\u4e86\u7279\u5f81\u8868\u793a \u83b7\u53d6\u7684\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u4e86\u591a\u6807\u7b7e\u5206\u7c7b\u548c\u5b9e\u4f53\u76f8\u4f3c\u6027\u67e5\u8be2\u5206\u6790    \u8bba\u6587\u6280\u672f\u8def\u7ebf\u53ca\u7ec4\u7ec7\u7ed3\u6784   \u5730\u8d28\u5927\u6570\u636e\u7684\u6784\u6210\u4e0e\u76f8\u5173\u8868\u793a\u6280\u672f  P1\uff1a\u5927\u6570\u636e\u7684\u8868\u793a=&gt;\u5730\u8d28\u5927\u6570\u636e\u7684\u5408\u7406\u8868\u793a P2\uff1a\u672c\u6587\u7814\u7a76\u7684\u5730\u8d28\u5927\u6570\u636e  \u6765\u6e90\uff1a\u5730\u8d28\u8c03\u67e5\u6210\u679c\u62a5\u544a \u5177\u4f53\u5185\u5bb9\u4e3b\u8981\uff1a  \u5e73\u9762\u5730\u8d28\u77e2\u91cf\u56fe\u4e2d\u7684\u5730\u8d28\u5b9e\u4f53\u5bf9\u8c61=&gt;\u7ed3\u6784\u5316\u7684\u5f62\u5f0f \u76f8\u5173\u7684\u5404\u7c7b\u5730\u8d28\u62a5\u544a\u6216\u6587\u6863\u4e2d\u7684\u6587\u672c\u6570\u636e=&gt;\u534a\u7ed3\u6784\u5316\uff08\u8868\u683c\uff09\u6216\u975e\u7ed3\u6784\u5316\u5f62\u5f0f      \u5730\u8d28\u5927\u6570\u636e\u6784\u6210 \u5730\u8d28\u5927\u6570\u636e\u7ec4\u7ec7\u4e0e\u7ba1\u7406 \u5730\u8d28\u7a7a\u95f4\u5927\u6570\u636e\u7279\u5f81\u53ca\u8868\u793a\u6280\u672f \u5730\u8d28\u6587\u672c\u5927\u6570\u636e\u7279\u5f81\u53ca\u8868\u793a\u6280\u672f ",
        "description": "",
        "id": 59,
        "section": "posts",
        "tags": [
            "\u8bba\u6587\u9605\u8bfb",
            "\u535a\u58eb\u8bba\u6587",
            "\u81ea\u7ec4\u7ec7\u4e34\u754c\u6027",
            "\u5143\u80de\u81ea\u52a8\u673a",
            "\u56fe\u5377\u79ef\u795e\u7ecf\u7f51\u7edc",
            "\u5efa\u7b51\u7269\u6a21\u5f0f",
            "\u5efa\u7b51\u7269"
        ],
        "title": "\u535a\u58eb\u8bba\u6587\u9605\u8bfb\u672d\u8bb0(2)",
        "uri": "/posts/notes/2020-07-16-%E5%8D%9A%E5%A3%AB%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%9C%AD%E8%AE%B0-2/"
    },
    {
        "content": " \u5bb6\ud83d\udc6a\u5230\u5b66\u6821\ud83c\udfeb\uff0c\u72b6\u6001\u5207\u6362\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"Sweet\",\rartist: \"Cigarettes After Sex\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/Sweet-6d814f-Ag.mp3\",\rcover: \"https://p2.music.126.net/Q8xIcb4U2Kgam2E1utMFfA==/109951163561919730.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/Sweet-Cigarettes%20After%20Sex-9e1198-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.7.1 \u6211\u8fd8\u662f\u86ee\u559c\u6b22\u5f00\u8f66\u7684 2020.7.2 \u8fc7\u6625\u5929-\u770b\u4e0d\u61c2\u7684\u9752\u6625\u7247 2020.7.3 \u4eca\u5929\u7ec8\u4e8e\u628a\u8001\u5988\u7684\u7535\u8bdd\u5361\u7ed9\u529e\u597d\u4e86\u3002\u5df2\u7ecf\u62d6\u4e86\u5c06\u8fd1\u534a\u4e2a\u6708\u3002\u53bb\u4eac\u4e1c\u670d\u52a1\u70b96\u6b21\uff0c\u6700\u540e\u7adf\u7136\u5e26\u7740\u8001\u5988\u53bb\u670d\u52a1\u70b9\u3002\u542c\u7684\u6700\u591a\u7684\u4e00\u53e5\u8bdd\uff1a\u201c\u5fc5\u987b\u672c\u4eba\u6301\u8eab\u4efd\u8bc1\u6765\u529e\u7406\uff01\u201d\uff0c\u8bdd\u8bf4\u672c\u6765\u4f60\u4eec\u5e94\u8be5\u662f\u4e0a\u95e8\u670d\u52a1\u7684\u597d\u5417\uff1f\u5410\u69fd\u5f52\u5410\u69fd\uff0c\u201c\u6bcf\u6b21\u53bb\u90fd\u6709\u4e0d\u4e00\u6837\u7684\u6536\u83b7\u5462\u3002\u201d 2020.7.4 \u73a9\u300a\u4f7f\u547d\u53ec\u5524\uff1a\u4e8c\u6218\u300b\u771f\u7684\u592a\u523a\u6fc0\u4e86\uff0c\u8fd8\u539f\u5ea6\u3001\u6218\u4e89\u573a\u666f\u5e26\u6765\u7684\u611f\u89e6\u8fd8\u662f\u86ee\u9707\u64bc\u7684\uff0c\u9664\u4e86\u4e00\u5473\u7684\u5c04\u51fb\uff0c\u8fd8\u6709\u771f\u662f\u7684\u6697\u6740\u3001\u4f2a\u88c5\u7b49\u4efb\u52a1\uff0c\u6709\u4e9b\u5173\u5361\u8fd8\u662f\u86ee\u96be\u7684\uff0c\u624b\u6b8b\u515a\u6b7b\u4e86\u597d\u51e0\u6b21\uff08\u540c\u65f6\u67e5\u653b\u7565\u4e86\u3002\u3002\u3002\uff09\u624d\u8fc7\u5173\u3002\u8bdd\u8bf4\uff0c\u8fd9\u6bd4\u738b\u8005\u8363\u8000\u5e26\u6765\u7684\u201c\u6210\u5c31\u611f\u201d\u548c\u201c\u653e\u677e\u611f\u201d\u68d2\u591a\u4e86\uff01\u4e0d\u7528\u4e00\u76f4\u53d1\u201c\u5e72\u5f97\u6f02\u4eae\u201d\u5632\u8bbd\u961f\u53cb\u4e86\u3001 2020.7.5 1\uff09\u83dc\u9e21\u672c\u83dc\uff1b2\uff09\u7b80\u5355\u5199\u4e86\u4e00\u4e2aOneDrive\u7684\u4e0a\u4f20\u5de5\u5177\uff08\u57fa\u4e8e\rFast.io\uff0cPyQt5\u548cOneList\u7684\rOneDriveUploader\uff09\uff0c\u53ef\u4ee5\u5f53\u4f5c\u4e00\u4e2a\u56fe\u5e8a\uff08\u5176\u5b9e\u89c6\u9891\u5e8a\u3001\u6587\u4ef6\u5e8a\u90fd\u53ef\u4ee5\u3002\u3002\u3002\uff09\u4f7f\u7528\u5427\uff08\u5982\u4e0b\u56fe\u7bc7\u6d4b\u8bd5\uff09\u3001 2020.7.6 \u9ad8\u8003\u52a0\u6cb9\uff01 2020.7.7 1) \u901a\u5173\u4e86\uff1f; 2) \u5fc3\u5b58\u656c\u754f 2020.7.8 \u590d\u73b0\u4e86\u4e00\u4e0b\u89c6\u89c9\u8bcd\u888b\u6a21\u578b\uff0c\u91c7\u7528The Google image dataset of SIRI-WHU\u7684\u6570\u636e\u96c6\uff0c\u91c7\u6837\u90e8\u5206\u56fe\u7247\uff0c\u6784\u5efaSIFT\u7279\u5f81\u5c1d\u8bd5\u591a\u573a\u666f\u5206\u7c7b\uff0812\u7c7b * 20Smaple = 240\uff09\u3002\u603b\u4f53\u800c\u8a00\u5206\u7c7b\u6548\u679c\u8f83\u5dee\u3002\u5b58\u5728\u660e\u663e\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u6bd4\u5982\u8bf4\u7279\u5f81\u6784\u5efa\u65b9\u9762\uff0c\u805a\u7c7b\u6539\u8fdb\u65b9\u9762\u7b49\uff0c\u4e0d\u8fc7\u8fd9\u65b9\u9762\u4e86\u89e3\u8f83\u5c11\uff0c\u4ee5\u540e\u611f\u5174\u8da3\u518d\u8bf4\u5427\u3002 2020.7.9 \u68a6\u60f3\u8fd8\u662f\u8981\u6709\u7684 \u4e0d\u7136\u54ea\u5929\u4f60\u559d\u591a\u4e86\u8ddf\u4eba\u804a\u5565 2020.7.10 1) \u8001\u5988\u6bcf\u65e5\u4e00\u50ac\uff1a\u8fd8\u6ca1\u6709\u901a\u77e5\u4ec0\u4e48\u65f6\u5019\u8fd4\u6821\u5417\uff1f; 2) \u590d\u73b0\u4e86\u57fa\u4e8e\u795e\u7ecf\u7f51\u7edc\u7684\u9065\u611f\u5f71\u50cf\u573a\u666f\u5206\u7c7b\u6a21\u578b\uff0c\u5bf9\u539f\u59cb\u4ee3\u7801\uff08\rzdaiot\uff09\u4fee\u6539\uff0c\u6539\u7528\u7684SIRI-WHU\u6570\u636e\u96c6\uff0c\u5206\u7c7b\u6548\u679c\u5f88\u597d\u3002 2020.7.11 \u4eca\u5929\u6536\u5230\u53ef\u4ee5\u8fd4\u6821\u7684\u6d88\u606f\uff0c\u53bb\u533b\u9662\u95ee\u4e86\u4e00\u4e0b\uff0c\u7f34\u8d39\u7b49\u5f85\u660e\u5929\u6838\u9178\u68c0\u6d4b\u3002 2020.7.12 \u4eca\u5929\u505a\u5b8c\u6838\u9178\u68c0\u6d4b\uff0c\u7ed3\u679c\u9634\u6027\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u662f\u7533\u8bf7\u7684\u65f6\u5019\u884c\u7a0b\u4e0d\u597d\u5199\uff0c\u8f66\u7ad9\u5173\u95e8\u4e86\uff0c\u7b49\u660e\u5929\u4e70\u7968\u518d\u8bf4\u5427\uff0c\u5176\u5b9e\u5f88\u60f3\u548c\u8001\u7238\u5f00\u8f66\u53bb\u5cb3\u9633\u4e1c\u7ad9\uff0c\u7136\u540e\u505a\u9ad8\u94c1\u53bb\u6b66\u6c49\u3002\u6211\u77e5\u9053\u4e0d\u73b0\u5b9e\uff0c\u4ed6\u4e0d\u53ef\u80fd\u540c\u610f\uff1b\u5728\u548c\u5927\u59d0\u804a\u5929\u7684\u65f6\u5019\uff0c\u548c\u8001\u7238\u5927\u5435\u4e86\u4e00\u987f\uff0c\u89c9\u5f97\u4ed6\u7ba1\u6211\u7ba1\u591a\u4e86\uff0c\u6211\u957f\u5927\u4e86\u4e0d\u9700\u8981\u8fd9\u6837\u7684\u7ba1\u675f\u3002\u6211\u4eec\u751f\u6d3b\u89c2\u5ff5\u4e0d\u4e00\u6837\uff0c\u4e0d\u9700\u8981\u5c48\u4ece\u4e8e\u53e6\u4e00\u65b9\u3002\u6211\u7684\u6001\u5ea6\u4e0d\u597d\uff0c\u6211\u627f\u8ba4\u3002\u8bf4\u7684\u8bdd\u4e5f\u6709\u4e9b\u91cd\u4e86\u3002\u4ee5\u540e\u8981\u6ce8\u610f\u3002 2020.7.13 1\uff09\u7533\u8bf7\u5f88\u5feb\u5c31\u901a\u8fc7\u4e86\uff0c\u660e\u5929\u51fa\u53d1\uff1b2\uff09\u8ffd\u8fdc\u30023\uff09\u770b\u4e86\u4e00\u4e0bhugo,\u867d\u7136\u76f8\u6bd4hexo\u6709\u4e9b\u4f18\u52bf\uff0c\u4f46\u76ee\u524d\u4e0d\u60f3\u6298\u817e\u4e86\u3002 2020.7.14 \u4e0a\u5348\u4e5d\u70b9\u949f\u51fa\u53d1\uff0c\u4e0b\u53482\u70b9\u534a\u624d\u5230\u7ec8\u70b9\u7ad9\uff0c\u771f\u7684\u518d\u4e5f\u4e0d\u60f3\u505a\u8fd9\u4e2a\u957f\u9014\u6c7d\u8f66\uff0c\u592a\u6162\u4e86\u3002\u53f8\u673a\u4e5f\u4e0d\u9075\u5b88\u89c4\u5219\uff0c\u5728\u4e00\u4e2a\u5730\u65b9\u7b49\u4e86\u6709\u534a\u4e2a\u591a\u5c0f\u65f6\uff0c\uff08\u5f31\u5f31\u7684\uff09\u771f\u5fc3\u60f3\u6295\u8bc9\u3002\u8fd8\u597d\u6709\u5f90\u8001\u5e08\u6765\u5f00\u8f66\u63a5\u4e86\u4e00\u6bb5\u65f6\u95f4\uff0c\u975e\u5e38\u611f\u6fc0\u3002\u6765\u5b66\u6821\u540e\u4e1c\u7ffb\u897f\u627e\uff0c\u5f88\u591a\u4e1c\u897f\u90fd\u6ca1\u627e\u5230\uff0c\u611f\u89c9\u8111\u5b50\u8fd8\u6ca1\u6709\u4ece\u5bb6\u91cc\u5e26\u56de\u6765\u3002\u6298\u817e\u4e00\u4e0b\u5348\uff0c\u6536\u62fe\u5bbf\u820d\uff0c\u6700\u7ec8\u6821\u56ed\u5361\u8fd8\u662f\u6ca1\u627e\u5230\u3002\u4eca\u665a\u6d17\u6fa1\u611f\u89c9\u591f\u545b\u4e86\uff0c\u53ef\u80fd\u843d\u5728\u5bb6\u91cc\u4e86\u3002\u5148\u4e0d\u7ba1\u5566\uff0c\u665a\u4e0a\u597d\u597d\u4f11\u606f\u3002\u660e\u5929\u5728\u8bf4\u3002 2020.7.15 1\uff09\u6821\u56ed\u5361\u7ec8\u4e8e\u627e\u5230\u5566 \u539f\u6765\u5728\u5b9e\u9a8c\u5ba4\u7684\u684c\u5b50\u4e0a\uff1b2\uff09cities\u7684\u610f\u89c1\u56de\u6765\u4e86\uff0c\u4e00\u5f00\u59cb\u770b\u5230\u5c0f\u4fee\u7684\u51b3\u5b9a\u8fd8\u86ee\u5f00\u5fc3\u7684\uff0c\u4f46\u662f\u770b\u5230Reviewers\u7684\u610f\u89c1\u7acb\u523b\u5c31\u5934\u6655\u4e86\uff0c\u7279\u522b\u662fReviewer#2\uff0c\u7ed9\u4e86\u610f\u89c1\u4e00\u5927\u5806\uff0c\u771f\u771f\u7684\u75db\u5e76\u5feb\u4e50\u7740\uff1b3\uff09\u66f4\u65b0\u535a\u5ba2\u670d\u52a1\u5668\uff0c\u4f7f\u7528\rgithub+netlify\u6301\u7eed\u90e8\u7f72\uff0c\u6446\u8131\u670d\u52a1\u5668\u4f9d\u8d56\uff0csay goodbye to aliyun\u3002\u8bb0\u5f55\u4e00\u4e0b\uff0c\u76ee\u524d\u535a\u5ba2\u57fa\u4e8ehexo\u642d\u5efa\uff0c\u4e3b\u9898\u4f7f\u7528melogy\uff0c\u56fe\u5e8a\u6709\u4e09\u4e2a\uff1agitee(\u9650\u52361MB\u56fe\u7247\uff0c\u901f\u5ea6\u5feb)\uff0cgithub+jsdeilver\uff08\u65f6\u5e38\u51fa\u73b0\u4e0a\u4f20\u548c\u8bbf\u95ee\u95ee\u9898\uff0c\u539f\u56e0\u4e3a\u6b62\uff09\uff0cMS OneDriver+imfast\uff08\u901f\u5ea6\u4e2d\u7b49\uff0c\u5927\u5c0f\u3001\u6587\u4ef6\u7c7b\u578b\u65e0\u9650\u5236\uff0c\u540c\u65f6\u81ea\u5df1\u7528python\u5199\u4e86\u4e00\u4e2a\u4e0a\u4f20\u5de5\u5177\uff09\uff0c\u535a\u5ba2source\u653e\u5728github\u4e0a\uff0c\u7136\u540e\u57fa\u4e8enetlify\u6301\u7eed\u90e8\u7f72\uff0c\u65b9\u4fbf\u90e8\u7f72\u548c\u8fc1\u79fb\u30024\uff09\u770b\u81ea\u5df1\u51e0\u4e2a\u6708\u524d\u5199\u7684\u8bba\u6587\uff0c\u6700\u5927\u7684\u611f\u53d7\u662f\uff1awhat a piece of shit! 2020.7.16 1\uff09\u6811\u8393\u6d3e\u7684\rdietpi\u955c\u50cf\u5f88\u53ef\u4ee5\uff0c\u90e8\u7f72\u3001\u5b89\u88c5\u73af\u5883\u5f88\u65b9\u4fbf\uff0c\u540c\u65f6\u628a\u672c\u673a\u7684Cloudreve\u670d\u52a1\u90e8\u7f72\u5230\u6811\u8393\u6d3e\u4e0a\u4e86\uff1b2\uff09\u53cd\u6b63\u62e7\u53d1\u6761\u9e1f\u6bcf\u5929\u90fd\u98de\u4e34\u9644\u8fd1\u6811\u4e0a\uff0c\u62e7\u52a8\u6211\u4eec\u6240\u5c5e\u7684\u8fd9\u4e2a\u9759\u8c27\u5929\u5730\u7684\u53d1\u6761\u3002-\u300a\u5947\u9e1f\u884c\u72b6\u5f55\u300b \u6751\u4e0a\u6625\u6811 2020.7.17 \u4e24\u60c5\u82e5\u662f\u4e45\u957f\u65f6 \u53c8\u5c82\u5728\u671d\u671d\u66ae\u66ae 2020.7.18 EMOJI CHEAT SHEET \ud83d\ude13 2020.7.19 \u6b63\u5219\u8868\u8fbe\u5f0f\r\u901f\u67e5 + Python\u6b63\u5219\u8868\u8fbe\u5f0f\r\u63d0\u53d6\u5b57\u7b26\u4e32 2020.7.20 \u4e0d\u77e5\u6240\u63aa \u65e0\u6cd5\u9003\u8131\ud83d\ude16 2020.7.21 \u6ca1\u6709\u5e7f\u64ad\u6ca1\u6709\u7535\u89c6\u6ca1\u6709\u62a5\u7eb8\u6ca1\u6709\u6742\u5fd7\u3002\u5c31\u5728\u8fd9\u4e00\u77ac\u7684\u65f6\u95f4\u91cc\uff0c\u4e1c\u4eac\u8bf4\u4e0d\u5b9a\u7ed9\u6838\u5f39\u5937\u4e3a\u5e73\u5730\uff0c\u761f\u75ab\u8bf4\u4e0d\u5b9a\u5e2d\u5377\u5c71\u4e0b\u4eba\u4e16\uff0c\u706b\u661f\u4eba\u662f\u5426\u5360\u9886\u6fb3\u5927\u5229\u4e9a\u4ea6\u672a\u53ef\u77e5\u3002\u7eb5\u7136\u5982\u6b64\uff0c\u6211\u4e5f\u5b8c\u5168\u65e0\u4ece\u77e5\u6653\u3002-\u300a\u5bfb\u7f8a\u5192\u9669\u8bb0\u300b \u6751\u4e0a\u6625\u6811 2020.7.22 1) \u6211\u770b\u6751\u4e0a\u7684\u4f5c\u54c1\u53ef\u80fd\u66f4\u591a\u7684\u662f\u559c\u6b22\u4ed6\u7684\u504f\u6587\u827a\u7684\u6587\u7b14\uff0c\u5c0f\u8d44\u7684\u60c5\u8c03\u3002\u5177\u4f53\u5730\u5c0f\u8bf4\u672c\u8eab\u8bb2\u8ff0\u7684\u6545\u4e8b\uff0c\u7406\u89e3\u751a\u5fae\u3002\u770b\u5b8c\u300a\u5bfb\u7f8a\u5192\u9669\u8bb0\u300b\uff0c\u518d\u53bb\u770b\u4e66\u8bc4\uff0c\u4eff\u4f5b\u81ea\u5df1\u770b\u5230\u7684\u4e0d\u662f\u4e00\u672c\u4e66\u4e00\u822c\ud83d\ude22; 2) \u524d\u7aef\u4e5d\u90e8 - \u5165\u95e8\u8005\u624b\u518c2019 2020.7.23 \u5c0f\u4fee\u7ec8\u4e8e\u6539\u5b8c\u4e86\uff0c\u611f\u89c9\u8fd9\u6b21\u7684\u5c0f\u4fee\u597d\u6298\u78e8\u4eba\u3002\u53c8\u4e0d\u80fd\u505a\u522b\u7684\u4e8b\u60c5\uff0c\u56e0\u4e3a\u603b\u4f1a\u60f3\u7740\u8fd9\u4e2a\u3002\u6b63\u5982\u5f90\u8001\u5e08\u8bf4\u7684\uff0c\u81ea\u5df1\u8fd8\u662f\u4e0d\u6210\u719f\uff0c\u4ec0\u4e48\u65f6\u5019\u505a\u5230\u4e0d\u4ee5\u7269\u559c\uff0c\u4e0d\u4ee5\u5df1\u60b2\uff0c\u624d\u80fd\u591f\u771f\u6b63\u6c89\u7a33\u4e0b\u6765\u3002 2020.7.24 \u6574\u5929\u8bf4\u6a21\u5f0f\u6a21\u5f0f\uff0c\u4ec0\u4e48\u662f\u6a21\u5f0f\uff1f 2020.7.25 \u65e9\u4e0a\u88abWJ\u7684\u7535\u8bdd\u53eb\u9192\uff0c\u5979\u8981\u53bb\u533b\u9662\u770b\u75c5\u53eb\u6211\u966a\u540c\u3002\u60f3\u5230\u5728\u6b66\u6c49\u770b\u75c5\u90fd\u6ca1\u6709\u4eba\u966a\uff0c\u4fbf\u6709\u4e9b\u5931\u843d\u3002WJ\u5728\u533b\u9662\u53ef\u8c13\u662f\u8f7b\u8f66\u719f\u8def\uff0c\u5979\u5b8c\u5168\u53ef\u4ee5\u81ea\u5df1\u6765\u7684\uff0c\u95ee\u8def+\u6302\u53f7+\u62a5\u9500\uff0c\u5979\u7684\u64cd\u4f5c\u5b8c\u5168\u6bd4\u6211\u719f\u7ec3\u591a\u4e86\uff0c\u5f88\u591a\u90fd\u662f\u6211\u5728\u95ee\u5979\u201c\u53bb\u54ea\u91cc\u201d\uff0c\u201c\u600e\u4e48\u641e\u201d\u3002\u8fd9\u4e5f\u7b97\u662f\u4e00\u79cd\u793e\u4f1a\u7ecf\u9a8c\u5427\u3001\u603b\u4e4b\uff0c\u533b\u9662\u8fd8\u662f\u80fd\u5c11\u53bb\u5c31\u5c11\u53bb\u5427\ud83d\ude05 2020.7.26 \u7231\u4e00\u4e2a\u4eba\u4e0d\u53ea\u662f\u559c\u6b22\u4e00\u4e2a\u4eba\u7684\u4f53\u6e29\uff0c\u4e5f\u662f\u8d8a\u6765\u8d8a\u8d34\u8fd1\u90a3\u4e2a\u4eba\u7684\u4f53\u6e29\u3002 -\u300a\u8bf7\u56de\u7b541988\u300b 2020.7.27 \u542c\u4f55\u8001\u5e08\u7684\u8bdd\uff0c\u8fd9\u4e5f\u7b97\u5f88\u5e78\u798f\u7684\u65f6\u95f4\u5427\u3001\u786e\u5b9e\u6ca1\u6709\u5176\u4ed6\u4e8b\uff0c\u53ef\u4ee5\u5b89\u5fc3\u8bfb\u8bba\u6587\u3001\u5199\u8bba\u6587\u3002\u8fd8\u662f\u591a\u8bfb\u4e66\uff08\u8bba\u6587\uff09\u5427\u3001\u3001\u3001 2020.7.28 \u4eca\u5929\u53bb\u4e86\u516c\u53f8\u4e00\u8d9f \u4ee5\u4e3a\u80fd\u89c1\u5230\u8001\u677f \u4ea4\u6d41\u4e00\u4e0b\u6700\u8fd1\u7684\u70e6\u607c \u8001\u677f\u51fa\u5dee\u53bb\u4e86 \u95ee\u53ca\u5982\u4f55\u5230\u7684\u516c\u53f8 \u6709\u4e9b\u652f\u652f\u543e\u543e \u4e0d\u77e5\u4e3a\u4f55\u4e0d\u60f3\u8bf4\u81ea\u5df1\u5df2\u7ecf\u51fa\u6821\u3001\u5982\u4f55\u51fa\u6821 \u603b\u89c9\u5f97\u6709\u4e9b\u604d\u60da \u4e0d\u77e5\u9053\u662f\u4e0d\u662f\u771f\u6b63\u8111\u5b50\u4e0d\u592a\u597d 2020.7.29 \u600e\u6837\u7684\u6211\u80fd\u8ba9\u4f60\u66f4\u60f3\u5ff5 2020.7.30 \u4eca\u5929\u548c\u5bb6\u91cc\u89c6\u9891\u804a\u5929 \u8001\u7238\u7684\u7b2c\u4e00\u53e5\u8bdd\u7adf\u7136\u662f\u201c\u6211\u662f\u4e0d\u662f\u628a\u5979\u4fe9\u5fd8\u8bb0\u4e86\u201d\ud83d\ude11 2020.7.31 \u6211\u7adf\u7136\u6709\u518d\u91cd\u65b0\u8bfb\u4e00\u6b21\u535a\u58eb\u7684\u60f3\u6cd5\u3001  ",
        "description": "",
        "id": 60,
        "section": "posts",
        "tags": [
            "\u4eac\u4e1c\u5feb\u9012",
            "\u4f7f\u547d\u53ec\u5524",
            "OneDrive",
            "\u573a\u666f\u5206\u7c7b",
            "\u8fd4\u6821",
            "\u5435\u67b6",
            "netlify\u6301\u7eed\u90e8\u7f72",
            "\u6811\u8393\u6d3e",
            "dietpi",
            "\u5bfb\u7f8a\u5192\u9669\u8bb0",
            "\u533b\u9662",
            "\u8bf7\u56de\u7b541988",
            "\u5927\u8bba\u6587\u4e3b\u7ebf\u601d\u8003"
        ],
        "title": "2020-7",
        "uri": "/posts/journals/2020-07-01-2020-7/"
    },
    {
        "content": " \u601d\u8003\u5f00\u9898\u548c\u7814\u7a76\u5927\u8bba\u6587\u7684\u4e3b\u7ebf\u662f\u957f\u671f\u8ba9\u6211\u5934\u75bc\u7684\u95ee\u9898\u3002\u901a\u8fc7\u9605\u8bfb\u76f8\u5173\u7684\u535a\u58eb\u8bba\u6587\uff0c\u4ece\u4f5c\u8005\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u6316\u6398\u4ed6\u4eec\u7684\u8bba\u6587\u4e3b\u7ebf\u548c\u601d\u8003\u4ed6\u4eec\u7684\u884c\u6587\u601d\u8def\uff0c\u4ece\u800c\u4e3a\u5f00\u9898\u548c\u5927\u8bba\u6587\u63d0\u4f9b\u53c2\u8003\u3002\n OpenStreetMap\u57ce\u5e02\u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u65b9\u6cd5\u7814\u7a76 \u5f90\u6c38\u6d0b-2019-\u4e2d\u56fd\u5730\u8d28\u5927\u5b66\uff08\u6b66\u6c49\uff09\n\u7eea\u8bba\u90e8\u5206 \u7814\u7a76\u80cc\u666f\u4e0e\u610f\u4e49  \u7b2c\u4e00\u6bb5\uff1a\u5730\u7406\u4fe1\u606f-\u5fd7\u613f\u8005\u5730\u7406\u4fe1\u606f\uff08VGI\uff09-\u5728\u7ebf\u5f00\u653e\u8857\u533a\u5730\u56fe\uff08OSM\uff09 \u7b2c\u4e8c\u6bb5\uff1aOSM\u7684\u8d28\u91cf\u4e0e\u4ef7\u503c\u95ee\u9898-OSM\u6570\u636e\u4e2d\u5efa\u7b51\u7269\u6570\u636e\u7684\u8d28\u91cf\u95ee\u9898 \u7b2c\u4e09\u6bb5\uff1a  \u603b\u8ff0\uff1aOSM\u7814\u7a76\u4ef7\u503c\uff1b\u57ce\u5e02\u5efa\u7b51\u7269\u6570\u636e\u6709\u5f88\u5927\u5e2e\u52a9\uff1b\u6df1\u5ea6\u5b66\u4e60\u7684\u6210\u529f \u56e0\u6b64\uff0c\u672c\u6587\uff1a  \u7814\u7a76\u5bf9\u8c61\uff1aOSM\u6570\u636e\u4e2d\u57ce\u5e02\u5efa\u7b51\u7269\u6570\u636e \u7814\u7a76\u5185\u5bb9\uff1aOSM\u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7 \u5177\u4f53\u5730\uff1a\u5efa\u7b51\u7269\u5f62\u72b6\u76f8\u4f3c\u6027\u3001\u6570\u636e\u5b8c\u5907\u6027\u7b49\u8bc4\u4ef7\u6307\u6807+\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5+\u57fa\u4e8e\u77e2\u91cf\u53c2\u8003\u6570\u636e\u3001\u9065\u611f\u53c2\u8003\u6570\u636e \u672c\u6587\u5960\u57fa\u4e8e\u5177\u6709\u66f4\u52a0\u575a\u5b9e\u7684\u7406\u8bba\u548c\u66f4\u52a0\u5148\u8fdb\u7684\u4eba\u5de5\u667a\u80fd\u6280\u672f\uff0c\u5728\u6570\u636e\u89c4\u6a21\u548c\u6df1\u523b\u6027\u4e0a\u90fd\u8fbe\u5230\u4e86\u8f83\u9ad8\u7684\u6c34\u5e73\u3002\uff08\u8fd9\u53e5\u8bdd\u86ee\u6709\u6df1\u610f\uff09     \u7b2c\u56db\u6bb5\uff1a\u5e94\u7528\u4ef7\u503c+\u5b66\u672f\u4ef7\u503c  \u7814\u7a76\u73b0\u72b6\u4e0e\u5206\u6790 \u603b\u7684\u601d\u8def\u662f\u5728\u5b9a\u91cf\u548c\u5b9a\u6027\u4e24\u4e2a\u65b9\u9762\u5c55\u5f00\u8bb2\n  VGI\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u7814\u7a76\u73b0\u72b6\n \u57fa\u4e8e\u5b98\u65b9\u6570\u636e\u7684\u5b9a\u91cf\u8bc4\u4ef7\u65b9\u6cd5\uff1a\u6570\u636e\u5b8c\u5907\u6027\u3001\u903b\u8f91\u4e00\u81f4\u6027\u3001\u4f4d\u7f6e\u7cbe\u5ea6\u3001\u65f6\u95f4\u7cbe\u5ea6\u3001\u4e3b\u9898\u7cbe\u5ea6\u548c\u53ef\u9760\u6027 \u57fa\u4e8eVGI\u672c\u8eab\u7279\u5f81\u7684\u5b9a\u6027\u8bc4\u4ef7\u65b9\u6cd5\uff1a\u6570\u636e\u6307\u6807\u3001\u4eba\u53e3\u7edf\u8ba1\u6307\u6807\u3001\u793e\u4f1a\u7ecf\u6d4e\u6307\u6807\u4ee5\u53ca\u8d21\u732e\u8005\u6307\u6807    OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u7814\u7a76\u73b0\u72b6\n OSM \u5efa\u7b51\u7269\u4e0e\u53c2\u8003\u5efa\u7b51\u7269\u6570\u636e\u6bd4\u8f83 \u7814\u7a76 OSM \u5efa\u7b51\u7269\u6570\u636e\u7279\u70b9\u5bf9\u5176\u6570\u636e\u8d28\u91cf\u8fdb\u884c\u8bc4\u4ef7    \u7814\u7a76\u73b0\u72b6\u603b\u7ed3\u4e0e\u5b58\u5728\u95ee\u9898\n \u76ee\u524d\u4ecd\u65e0\u7edf\u4e00\u7684\u7a7a\u95f4\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u6a21\u578b  \u4e00\u65b9\u9762\u5b9a\u91cf\u548c\u7edd\u5bf9\u7684\u5206\u6790\u9700\u8981\u53c2\u8003\u6570\u636e     \u53e6\u4e00\u65b9\u9762\uff0c\u5b9a\u6027\u7684\u5206\u6790\u867d\u7136\u4e0d\u9700\u8981\u6743\u5a01\u53c2\u8003\u6570\u636e\uff0c\u4f46\u53c8\u4e0d\u80fd\u7ed9\u51fa\u9488\u5bf9 OSM \u5efa\u7b51\u7269\u6570\u636e\u7ed9\u51fa\u7edd\u5bf9\u7684\u8bc4\u4ef7\u7ed3\u679c\u3002   \u9065\u611f\u6280\u672f\uff08\u5982\u536b\u661f\u548c\u822a\u7a7a\u6444\u5f71\uff09\u7684\u53d1\u5c55 - \u9ad8\u8d28\u91cf\u7684\u975e\u77e2\u91cf\u53c2\u8003\u6570\u636e\u6bd4\u6743\u5a01\u77e2\u91cf\u6570\u636e\u7684\u5bb9\u6613\u83b7\u53d6\u5f97\u591a\n  \u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u901a\u8fc7\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u56fe\u50cf\u76ee\u6807\u63d0\u53d6\u5df2\u7ecf\u53d6\u5f97\u4e86\u4e0d\u9519\u7684\u6210\u679c\uff0c\u8fd9\u4e3a\u7814\u7a76 OSM \u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u95ee\u9898\u63d0\u4f9b\u4e86\u65b0\u7684\u601d\u8def\n  \u7efc\u4e0a\u5206\u6790\uff0c\u672c\u7814\u7a76\u5c06\u8bc4\u4ef7\u8fc7\u7a0b\u5206\u4e3a\u4e24\u79cd\u60c5\u51b5\uff1a\n  \u7814\u7a76\u533a\u6709\u53ef\u5229\u7528\u77e2\u91cf\u53c2\u8003\u6570\u636e\n  \u5982\u4f55\u5ba2\u89c2\u5730\u3001\u7efc\u5408\u5730\u5bf9OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8fdb\u884c\u8bc4\u4ef7\u662f\u57fa\u4e8e\u53c2\u8003\u6570\u636e\u5b9a\u91cf\u8bc4\u4ef7\u8fc7\u7a0b\u4e2d\u5b58\u5728\u7684\u4e3b\u8981\u95ee\u9898\n  \u5982\u4f55\u7cbe\u786e\u5730\u5bf9\u5176\u5f62\u72b6\u7cbe\u5ea6\u8fdb\u884c\u8ba1\u7b97\u4e5f\u662f\u76ee\u524d\u57fa\u4e8e\u53c2\u8003\u6570\u636e\u5b9a\u91cf\u8bc4\u4ef7OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8fc7\u7a0b\u4e2d\u5b58\u5728\u7684\u95ee\u9898\n    \u7814\u7a76\u533a\u4e0d\u80fd\u83b7\u5f97\u77e2\u91cf\u53c2\u8003\u6570\u636e\n \u5982\u4f55\u4ece\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u4e2d\u63d0\u53d6\u9ad8\u7cbe\u5ea6\u5efa\u7b51\u7269\u6570\u636e\u8f6e\u5ed3\u4fe1\u606f\uff0c\u5e76\u57fa\u4e8e\u63d0\u53d6\u4fe1\u606f\u5bf9 OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8fdb\u884c\u8bc4\u4ef7\u662f\u76ee\u524d\u57fa\u4e8e\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u6570\u636e\u5bf9\u5176\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u8fc7\u7a0b\u4e2d\u5b58\u5728\u7684\u4e3b\u8981\u95ee\u9898        \u7814\u7a76\u76ee\u6807\u4e0e\u5185\u5bb9  \u7814\u7a76\u7684\u76ee\u7684  \u5bf9\u7a7a\u95f4\u5b9e\u4f53\u5f62\u72b6\u63cf\u8ff0\u5408\u7406\u8868\u793a + \u9488\u5bf9\u4e0d\u540c\u63cf\u8ff0\u5f62\u5f0f\u7684\u591a\u8fb9\u5f62\u76f8\u4f3c\u6027\u5ea6\u91cf\u65b9\u6cd5 \u9488\u5bf9\u77e2\u91cf\u53c2\u8003\u6570\u636e\uff0c\u5b9a\u4e49\u5305\u62ec\u5f62\u72b6\u7cbe\u5ea6\uff08\u5f62\u72b6\u76f8\u4f3c\u5ea6\uff09\u5728\u5185\u7684\u4e00\u7cfb\u5217\u8bc4\u4ef7\u6307\u6807 + \u6df1\u5ea6\u81ea\u7f16\u7801\u7f51\u7edc\u65b9\u6cd5 =&gt; \u89e3\u51b3 OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u7efc\u5408\u3001\u5ba2\u89c2\u8bc4\u4ef7\u95ee\u9898 \u9488\u5bf9\u4e00\u4e9b\u5730\u533a\u77e2\u91cf\u53c2\u8003\u6570\u636e\u96be\u4ee5\u83b7\u5f97\uff0c\u9ad8\u5206\u8fa8\u9065\u611f\u5f71\u50cf\u7740\u624b =&gt; \u5b9e\u73b0 OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u5b9a\u91cf\u8bc4\u4ef7   \u5173\u952e\u79d1\u5b66\u95ee\u9898  \u7814\u7a76\u591a\u8fb9\u5f62\u5f62\u72b6\u76f8\u4f3c\u6027\u5ea6\u91cf\u95ee\u9898 \u7814\u7a76 OSM \u5efa\u7b51\u7269\u6570\u636e\u7efc\u5408\u8bc4\u4ef7\u95ee\u9898 \u7814\u7a76\u57fa\u4e8e\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u6570\u636e\u8fdb\u884c OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u95ee\u9898    \u8bba\u6587\u521b\u65b0\u70b9 \u672c\u6587\u5e94\u7528\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u3001\u5730\u7406\u4fe1\u606f\u79d1\u5b66\u3001\u9065\u611f\u56fe\u50cf\u5904\u7406\u7b49\u591a\u4e2a\u5b66\u79d1\u7406\u8bba\u548c\u65b9\u6cd5\uff0c\u7acb\u8db3\u4e8e\u5fd7\u613f\u8005\u5730\u7406\u4fe1\u606f\u6570\u636e\u5e94\u7528\u9700\u6c42\uff0c\u901a\u8fc7\u5bf9\u8de8\u5b66\u79d1\u7684\u7814\u7a76\u4e3a\u5fd7\u613f\u8005\u5730\u7406\u4fe1\u606f\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u63d0\u4f9b\u4e86\u65b0\u601d\u8def\u3002\n \u6784\u5efa\u987e\u53ca\u7a7a\u95f4\u5206\u5e03\u548c\u51e0\u4f55\u53d8\u6362\u7684\u591a\u8fb9\u5f62\u76f8\u4f3c\u6027\u5ea6\u91cf\u6a21\u578b\u3002 \u57fa\u4e8e\u6807\u51c6\u77e2\u91cf\u53c2\u8003\u6570\u636e\uff0c\u63d0\u51fa\u5229\u7528\u6df1\u5ea6\u81ea\u7f16\u7801\u795e\u7ecf\u7f51\u7edc OSM \u5efa\u7b51\u7269\u6570\u636e\u7efc\u5408\u8bc4\u4ef7\u65b9\u6cd5\u3002 \u57fa\u4e8e\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u6570\u636e\uff0c\u63d0\u51fa\u5229\u7528\u591a\u4efb\u52a1\u7279\u5f81\u5b66\u4e60\u63d0\u53d6\u53c2\u8003\u6570\u636e\u8fdb\u800c\u5b9e\u73b0 OSM \u5efa\u7b51\u7269\u6570\u636e\u5b8c\u6574\u6027\u4e0e\u4f4d\u7f6e\u7cbe\u5ea6\u8bc4\u4ef7\u65b9\u6cd5\u3002  OSM \u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u76f8\u5173\u7406\u8bba \u7a7a\u95f4\u6570\u636e\u8d28\u91cf\u6982\u8ff0 \u6570\u636e-\u7a7a\u95f4\u6570\u636e-\u6570\u636e\u8d28\u91cf-\u7a7a\u95f4\u6570\u636e\u8d28\u91cf-\u7a7a\u95f4\u6570\u636e\u8d28\u91cf\u95ee\u9898\nOSM \u6570\u636e\u8d28\u91cf\u95ee\u9898\u63cf\u8ff0 \u5f71\u54cd OSM \u6570\u636e\u8d28\u91cf\u7684\u539f\u56e0\u4e3b\u8981\u6709\u4e09\u4e2a\uff1a\u7a7a\u95f4\u5b9e\u4f53\u5bf9\u8c61\u5ba2\u89c2\u5b58\u5728\u95ee\u9898\u3001\u4eba\u7c7b\u8ba4\u8bc6\u4e3b\u89c2\u6027\u4ee5\u53ca\u6570\u636e\u91c7\u96c6\u4eea\u5668\u7684\u5c40\u9650\u6027\u7b49\u5f15\u8d77\u7684\u8d28\u91cf\u95ee\u9898\u3002\n\u7a7a\u95f4\u76f8\u4f3c\u6027\u4e0e OSM \u6570\u636e\u8d28\u91cf \u76f8\u4f3c\u6027\u7814\u7a76-\u7a7a\u95f4\u76f8\u4f3c\u6027=&gt;OSM \u4e0e\u53c2\u8003\u6570\u636e\u4e4b\u95f4\u7684\u7a7a\u95f4\u76f8\u4f3c\u5ea6\u8d8a\u9ad8\uff0c\u8bf4\u660e OSM \u6570\u636e\u8d28\u91cf\u8d8a\u597d\u3002=&gt; \u3002\u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a\uff1a\u88ab\u8bc4\u4ef7\u6570\u636e\u4e0e\u6807\u51c6\u6570\u636e\u7684\u63a5\u8fd1\u7a0b\u5ea6\uff0c\u53cd\u5e94\u6570\u636e\u4e0e\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u3002=&gt; \u5728\u672c\u7814\u7a76\u4e2d\u5c06 OSM \u5efa\u7b51\u7269\u4e0e\u6807\u51c6\u6570\u636e\u4e2d\u5efa\u7b51\u7269\u4e4b\u95f4\u7684\u51e0\u4f55\u5f62\u6001\u76f8\u4f3c\u6027\u4f5c\u4e3a\u8bc4\u4ef7 OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u4e2d\u7684\u51e0\u4f55\u5f62\u6001\u7cbe\u5ea6\u3002\n\u987e\u53ca\u7a7a\u95f4\u5206\u5e03\u548c\u51e0\u4f55\u53d8\u6362\u7684\u591a\u8fb9\u5f62\u76f8\u4f3c\u6027\u5ea6\u91cf\u6a21\u578b \u603b\u8ff0\uff1a\u7a7a\u95f4\u76f8\u4f3c\u6027-\u51e0\u4f55\u5f62\u6001-\u51e0\u4f55\u5f62\u6001\u7684\u76f8\u4f3c\u6027\uff1b\u5404\u79cd\u5f62\u5f0f\u5efa\u7b51\u7269\u53ef\u4ee5\u8868\u793a\u4e3a\u7b80\u5355\u591a\u8fb9\u5f62\uff0c\u5e26\u6d1e\u591a\u8fb9\u5f62\u548c\u590d\u5408\u591a\u8fb9\u5f62\u3002\n\u5f15\u8a00   \u7b2c\u4e00\u6bb5\uff1a\u5f15\u5165\u6982\u5ff5\uff1a\u76f8\u4f3c\u6027-\u51e0\u4f55\u5f62\u6001\uff1b\u7a7a\u95f4\u76f8\u4f3c\u6027\u8bc4\u4ef7\u53ef\u4ee5\u8868\u793a\u4e3a\u4e0e\u7b49\u4ef7\u6027\u504f\u79bb\u7684\u7a0b\u5ea6\uff0c\u901a\u8fc7\u5df2\u77e5\u5f62\u72b6\u548c\u672a\u77e5\u5f62\u72b6\u7684\u5f62\u6001\u5dee\u5f02\u8ba1\u7b97\u5f97\u5230\uff1b\u591a\u8fb9\u5f62\u5f62\u72b6\u76f8\u4f3c\u5ea6\u88ab\u89c6\u4e3a OSM \u5efa\u7b51\u7269\u6570\u636e\u8bc4\u4ef7\u8fc7\u7a0b\u4e2d\u91cd\u8981\u7684\u4e00\u65b9\u9762\n  \u7b2c\u4e8c\u6bb5\uff1a\u7a7a\u95f4\u5b9e\u4f53\u51e0\u4f55\u76f8\u4f3c\u6027\u7684\u76f8\u5173\u5e94\u7528/\u7814\u7a76\u3002\u51e0\u4f55\u76f8\u4f3c\u5ea6\uff0c\u5176\u76f8\u4f3c\u6027\u4e00\u822c\u901a\u8fc7\u63cf\u8ff0\u5b50\u4e4b\u95f4\u7684\u8ddd\u79bb\u6765\u53cd\u5e94\u3002\n  \u7b2c\u4e09\u6bb5\uff1a\uff081\uff09\u73b0\u6709\u7814\u7a76\u4e0d\u8db3\uff1a\u5f62\u72b6\u4e0a\u4e0b\u6587\u63cf\u8ff0\u7b26\u53ef\u4ee5\u5229\u7528\u968f\u673a\u53c2\u8003\u70b9\u5728\u5927\u5c3a\u5ea6\u4e0a\u63cf\u8ff0\u5c40\u90e8\u4fe1\u606f\uff0c\u4f46\u662f\u5b83\u7f3a\u4e4f\u63cf\u8ff0\u5168\u5c40\u4fe1\u606f\u7684\u80fd\u529b\uff1b\u76ee\u524d\u7684\u5f62\u72b6\u76f8\u4f3c\u6027\u6d4b\u91cf\u65b9\u6cd5\u548c\u6a21\u578b\u662f\u9488\u5bf9\u7b80\u5355\u7684\u51e0\u4f55\u5bf9\u8c61\uff0c\u800c\u4e0d\u80fd\u76f4\u63a5\u7528\u4e8e\u590d\u6742\u51e0\u4f55\u7ed3\u6784\uff08\u5e26\u6d1e\u591a\u8fb9\u5f62\u3001\u590d\u5408\u591a\u8fb9\u5f62\uff09\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u7f3a\u5c11\u5b50\u56fe\u4e4b\u95f4\u4f4d\u7f6e\u63cf\u8ff0\u4ee5\u53ca\u4e0d\u5bf9\u79f0\u5339\u914d\u65f6\u7ec6\u8282\u8868\u8fbe\u3002\uff082\uff09\u89e3\u51b3\u65b9\u6848\uff1a\u51f9\u51f8\u6027\uff1b\u5feb\u901f\u5085\u7acb\u53f6\u53d8\u6362\u7ed3\u5408+\u6700\u8fdc\u70b9\u8ddd\u79bb\u6784\u5efa\u5f62\u72b6\u63cf\u8ff0\u5b50\n  \u57fa\u4e8e\u6700\u8fdc\u70b9\u63cf\u8ff0\u7684\u7b80\u5355\u591a\u8fb9\u5f62\u76f8\u4f3c\u6027\u5ea6\u91cf\u6a21\u578b   \u7b80\u5355\u591a\u8fb9\u5f62\uff1a\u7ed3\u6784\u8f83\u4e3a\u7b80\u5355\uff0c\u4e0d\u5b58\u5728\u5d4c\u5957\u3001\u7ec4\u5408\u7b49\u73b0\u8c61\n  \u672c\u6587\u4e3b\u8981\u4ece\u6784\u9020\u591a\u8fb9\u5f62\u63cf\u8ff0\u5468\u671f\u51fd\u6570\uff0c\u4ee5\u53ca\u57fa\u4e8e\u5085\u91cc\u53f6\u53d8\u6362\u51fd\u6570\u8f6c\u6362\u6765\u6784\u5efa\u591a\u8fb9\u5f62\u51e0\u4f55\u4e0d\u53d8\u6027\u63cf\u8ff0\u5b50\uff0c\u5c06\u7b80\u5355\u56fe\u5f62\u7684\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u8f6c\u6362\u4e3a\u5ea6\u91cf\u4e24\u4e2a\u63cf\u8ff0\u5b50\u5411\u91cf\u8ddd\u79bb\n  \u5468\u671f\u51fd\u6570-\u5f62\u72b6\u7b7e\u540d\u51fd\u6570-\u6700\u8fdc\u8ddd\u79bb\u70b9\uff08FPD\uff09\u7684\u5f62\u72b6\u7b7e\u540d\uff1a\u6ca1\u6709\u76f8\u4f3c\u8f6e\u5ed3\u7684\u5f62\u72b6\u5177\u6709\u660e\u663e\u4e0d\u540c\u7684 FPD \u7279\u5f81\uff0cFPD \u5177\u6709\u8db3\u591f\u63cf\u8ff0\u5f62\u72b6\u7684\u80fd\u529b\n  \u76f4\u63a5\u901a\u8fc7\u7b7e\u540d\u5ea6\u91cf\u5f62\u72b6\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u901a\u5e38\u662f\u975e\u5e38\u590d\u6742\u7684-\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362-\u5f52\u4e00\u5316\u7684\u5085\u91cc\u53f6\u63cf\u8ff0\u5b50:\u7531\u4e8e\u5f52\u4e00\u5316\u7684\u5085\u7acb\u53f6\u63cf\u8ff0\u7b26\u5728\u65cb\u8f6c\u3001\u7f29\u653e\u548c\u79fb\u52a8\u7b49\u64cd\u4f5c\u4e2d\u90fd\u4fdd\u6301\u4e0d\u53d8\uff0c\u56e0\u6b64\u5728\u5ea6\u91cf\u76f8\u4f3c\u6027\u65f6\uff0cFPD \u7684\u5085\u7acb\u53f6\u63cf\u8ff0\u7b26\u53ef\u4ee5\u7528\u6765\u8868\u793a\u5f62\u72b6\u3002\n  \u51e0\u4f55\u591a\u8fb9\u5f62\u7ecf\u8fc7\u5085\u91cc\u53f6\u53d8\u6362\u4e4b\u540e\u53ef\u4ee5\u5229\u7528\u5085\u91cc\u53f6\u53d8\u6362\u7cfb\u6570\u7ec4\u6210\u5411\u91cf\u8868\u793a\u3002\u7cfb\u6570\u4ece\u4f4e\u9636\u5230\u9ad8\u9636\u5206\u522b\u7528\u4e86\u63cf\u8ff0\u591a\u8fb9\u5f62\u7684\u8f6e\u5ed3\u4fe1\u606f\u548c\u5c40\u90e8\u7ec6\u8282\u4fe1\u606f\u3002\u4e0d\u540c\u591a\u8fb9\u5f62\u7684\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u53ef\u4ee5\u901a\u8fc7\u8ddd\u79bb\u6765\u5ea6\u91cf\n  \u4f59\u5f26\u76f8\u4f3c\u5ea6\uff1a\u4f59\u5f26\u503c\u8d8a\u5927\u8bf4\u660e\u5411\u91cf\u5939\u89d2\u8d8a\u5c0f\uff0c\u591a\u8fb9\u5f62\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u4e5f\u8d8a\u9ad8\n  \u57fa\u4e8e\u65b9\u4f4d\u56fe\u7684\u5e26\u6d1e\u591a\u8fb9\u5f62\u76f8\u4f3c\u6027\u5ea6\u91cf\u6a21\u578b   \u5e26\u6d1e\u591a\u8fb9\u5f62\uff1a\u5f62\u5f0f\u590d\u6742\uff0c\u800c\u4e14\u76f8\u4e92\u5d4c\u5957\uff0c\u662f\u4e00\u4e2a\u6574\u4f53\uff0c\u5c5e\u6027\u7ed3\u6784\u5b8c\u5168\u76f8\u540c\uff0c\u5982\u201c\u56de\u201d\u5b57\u7ed3\u6784\u6216\u8005\u5176\u4ed6\u4e2d\u95f4\u9542\u7a7a\u5f62\u5f0f\n  \u5173\u952e\u95ee\u9898\uff1a\u89e3\u51b3\u5185\u6d1e\u4e0e\u5185\u6d1e\u4e4b\u95f4\u3001\u5185\u6d1e\u4e0e\u6574\u4e2a\u590d\u6742\u96c6\u5408\u5f62\u72b6\u4e4b\u95f4\u7684\u5173\u7cfb\n  \u5229\u7528\u65b9\u4f4d\u56fe\u5185\u6d1e\u7a7a\u95f4\u5206\u5e03\u63cf\u8ff0\n \u5e26\u6d1e\u591a\u8fb9\u5f62\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u5ea6\u91cf\u53ef\u4ee5\u5206\u4e3a\u4e24\u90e8\u5206\uff1a\u5185\u6d1e\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u548c\u591a\u8fb9\u5f62\u8f6e\u5ed3\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u3002\u63d0\u51fa\u65b9\u6cd5\u662f\u83b7\u5f97\u5e26\u6d1e\u591a\u8fb9\u5f62\u7684\u8d28\u5fc3\u4e0e\u5176\u5185\u6d1e\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u7528\u4e8e\u63cf\u8ff0\u5e26\u6d1e\u591a\u8fb9\u5f62\u7684\u7279\u5f81\u3002 \u63cf\u8ff0\u5e26\u6d1e\u591a\u8fb9\u5f62\u7279\u5f81\uff1a \u591a\u8fb9\u5f62\u8d28\u5fc3\u4e0e\u5185\u6d1e\u8d28\u5fc3\u3001\u5207\u70b9\u3001\u5185\u6d1e\u8fb9\u754c\u7684\u6700\u8fdc\u70b9\u4e0e\u6700\u8fd1\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb \u591a\u8fb9\u5f62\u7684\u5185\u6d1e\u5206\u5e03\uff1a\u4e2d\u5fc3\u70b9\u65b9\u4f4d\u56fe\u3001\u6700\u8fdc\u70b9\u65b9\u4f4d\u56fe\u3001\u6700\u8fd1\u70b9\u65b9\u4f4d\u56fe\u3001\u6700\u8fd1\u5207\u70b9\u65b9\u4f4d\u56fe\u3002    \u76f8\u5173\u51e0\u4f55\u53d8\u6362\u63cf\u8ff0\u5b50\u5b9a\u4e49\u4e0e\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u65b9\u6cd5\uff08\u4e13\u4e1a\u6027\u8f83\u5f3a\uff0c\u6709\u70b9\u96be\u7406\u89e3\uff0c\u5c31\u4e0d\u505a\u8be6\u7ec6\u8bb0\u5f55\u4e86\uff09\n \u65b9\u4f4d\u56fe\u63cf\u8ff0\u4e0e\u76f8\u4f3c\u6027\u5ea6\u91cf\uff1a\u5e73\u8861\u529b\uff1f \u5185\u6d1e\u51e0\u4f55\u53d8\u6362\u63cf\u8ff0\u4e0e\u5ea6\u91cf \uff1a\u81ea\u65cb\u548c\u516c\u65cb\uff1f \u5185\u6d1e\u4e0e\u8f6e\u5ed3\u5f62\u72b6\u76f8\u4f3c\u6027\u5ea6\u91cf \u5e26\u6d1e\u533a\u6574\u4f53\u76f8\u4f3c\u6027\u5ea6\u91cf \uff1a\u6240\u6709\u76f8\u4f3c\u6027\u7684\u52a0\u6743\u6c42\u548c    \u57fa\u4e8e\u5339\u914d\u63a7\u5236\u5b50\u56fe\u7684\u590d\u5408\u591a\u8fb9\u5f62\u76f8\u4f3c\u6027\u5ea6\u91cf\u6a21\u578b  \u590d\u5408\u591a\u8fb9\u5f62\uff1a\u4e00\u4e9b\u8fde\u680b\u5efa\u7b51\u7269\u5e38\u5e38\u4f1a\u88ab\u8868\u793a\u6210\u591a\u4e2a\u591a\u8fb9\u5f62\uff0c\u4f46\u8fd9\u4e9b\u591a\u8fb9\u5f62\u53c8\u662f\u4e00\u4e2a\u6574\u4f53\uff0c\u7ec4\u6210\u5b8c\u6574\u7684\u5efa\u7b51\u7269\uff0c\u8fd9\u4e9b\u591a\u8fb9\u5f62\u4e4b\u95f4\u5f7c\u76f8\u90bb\u6216\u8005\u76f8\u79bb\uff0c\u5c5e\u6027\u7ed3\u6784\u5b8c\u5168\u76f8\u540c\u3002 \u56db\u4e2a\u6b65\u9aa4\uff08\u4e13\u4e1a\u6027\u8f83\u5f3a\uff0c\u6709\u70b9\u96be\u7406\u89e3\uff0c\u5c31\u4e0d\u505a\u8be6\u7ec6\u8bb0\u5f55\u4e86\uff09  \u9996\u5148\u901a\u8fc7\u8ba1\u7b97\u5bfb\u627e\u590d\u5408\u591a\u8fb9\u5f62\u4e2d\u7684\u5339\u914d\u63a7\u5236\u5b50\u56fe \u7136\u540e\u6839\u636e\u201c\u63a7\u5236\u591a\u8fb9\u5f62\u201d\u5339\u914d\u76f8\u5e94\u7684\u5b50\u591a\u8fb9\u5f62\uff0c\u6784\u5efa\u5339\u914d\u4f4d\u7f6e\u56fe \u518d\u5e94\u7528\u5085\u7acb\u53f6\u53d8\u6362\u548c\u57fa\u4e8e\u51f8\u5305\u7684\u5c40\u90e8\u77e9\u53d8\u91cf\u8ba1\u7b97\u6bcf\u4e2a\u5339\u914d\u5bf9\u7684\u76f8\u4f3c\u6027 \u6700\u540e\uff0c\u5bf9\u4f4d\u7f6e\u56fe\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u548c\u5bf9\u5e94\u7684\u590d\u5408\u591a\u8fb9\u5f62\u5b50\u56fe\u5bf9\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u8fdb\u884c\u52a0\u6743\u6c42\u548c\uff0c\u5b9e\u73b0\u8ba1\u7b97\u590d\u5408\u591a\u8fb9\u5f62\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6    \u57fa\u4e8e\u77e2\u91cf\u53c2\u8003\u6570\u636e OSM \u5efa\u7b51\u7269\u6570\u636e\u7efc\u5408\u8bc4\u4ef7 \u5f15\u8a00  OSM-\u6570\u636e\u8d21\u732e\u8005\u53ef\u80fd\u672a\u7ecf\u57f9\u8bad\u6216\u4e0d\u5177\u5907\u76f8\u5173\u77e5\u8bc6\u5f15\u8d77\u7684\u6570\u636e\u8d28\u91cf\u95ee\u9898-\u6570\u636e\u8d28\u91cf\u8bc4\u4f30\u662f\u5fc5\u8981\u7684-\u4e00\u822c\u4f7f\u7528 OSM \u6570\u636e\u548c\u5b98\u65b9\u6570\u636e\n\u4e4b\u95f4\u7684\u7279\u5f81\u5173\u7cfb\u6765\u8fdb\u884c\u6570\u636e\u8d28\u91cf\u8bc4\u4f30-\u7f3a\u4e4f\u5bf9 OSM \u5168\u9762\u4e14\u5ba2\u89c2\u7684\u6570\u636e\u8bc4\u4f30 \u81ea\u6211\u5b66\u4e60-\u6df1\u5ea6\u81ea\u7f16\u7801\u7f51\u7edc  \u5206\u6790\u6570\u636e\u7684\u6df1\u5c42\u6b21\u89c4\u5f8b\u6765\u5b66\u4e60\u6570\u636e\u7279\u5f81 \u4e0d\u9700\u8981\u6837\u672c\u6807\u7b7e\u6570\u636e\u96c6 \u5229\u7528\u91cd\u6784\u8bef\u5dee\u6765\u8fdb\u884c\u8bc4\u4ef7 \u8bad\u7ec3\u6a21\u578b\u5728\u5c0f\u6982\u7387\u6837\u672c\u7684\u7f16\u7801\u548c\u91cd\u6784\u4e2d\u8868\u73b0\u4e0d\u4f73\uff0c\u4e14\u4f1a\u6709\u8f83\u5927\u7684\u91cd\u6784\u8bef\u5dee   \u8d28\u91cf\u8bc4\u4f30\u6307\u6807-\u5f02\u5e38 OSM \u6570\u636e\u5c06\u8868\u73b0\u51fa\u4e0e OSM \u6570\u636e\u8d28\u91cf\u76f8\u5bf9\u5e94\u7684\u8f83\u5927\u7684\u91cd\u6784\u8bef\u5dee  \u57fa\u4e8e\u6570\u636e\u5339\u914d\u7684\u8bad\u7ec3\u6837\u672c\u96c6\u6784\u5efa \u5b66\u4e60\u6837\u672c\u96c6\u6784\u5efa\uff1a \u4e00\u662f\u5c06 OSM \u4e2d\u7684\u5efa\u7b51\u7269\u548c\u53c2\u8003\u6570\u636e\u96c6\u4e2d\u7684\u5bf9\u5e94\u7684\u5efa\u7b51\u7269\u8fdb\u884c\u5339\u914d\uff1b\u4e8c\u662f\u5c06\u5339\u914d\u7684\u6570\u636e\u7528\u89c4\u5219\u683c\u7f51\u5212\u5206\uff0c\u751f\u6210\u9762\u79ef\u76f8\u540c\u7684\u5355\u5143\u7f51\u683c\uff0c\u5c06\u6bcf\u4e2a\u5355\u5143\u7f51\u683c\u4f5c\u4e3a\u4e00\u4e2a\u6df1\u5ea6\u5b66\u4e60\u6837\u672c\u53bb\u8bad\u7ec3\u7f51\u7edc\u7ed3\u6784\u6a21\u578b\u3002\n \u5efa\u7b51\u7269\u6570\u636e\u7684\u5339\u914d  \u95ee\u9898\u6240\u5728\uff1aOSM \u4e2d\u5efa\u7b51\u7269\u8868\u793a\u7684\u7cbe\u5ea6\u4e0e Bing \u5730\u56fe\u7684\u5206\u8fa8\u7387\u6709\u5173\uff0c\u51e0\u4e2a\u76f8\u90bb\u7684\u5efa\u7b51\u7269\u53ef\u80fd\u5728 OSM \u4e2d\u88ab\u6570\u5b57\u5316\u6210 1 \u4e2a\u5efa\u7b51\u7269\u30021:m\uff0cn:1\uff0c\u548c n:m\uff1b \u8f83\u9ad8\u7684\u5efa\u7b51\u7269\u5728 OSM \u548c\u53c2\u8003\u6570\u636e\u96c6\u4e4b\u95f4\u53ef\u80fd\u6709\u8f83\u5927\u7684\u504f\u79fb\uff1b\u7531\u4e8e\u5149\u7ebf\u659c\u5c04\u539f\u56e0\uff0c\u5728\u56fe\u50cf\u4e0a\u91cd\u53e0\u7684\u5730\u65b9\u53ef\u80fd\u5360\u6709\u5f88\u5927\u7684\u9762\u79ef\u6bd4\u4f8b =&gt; \u8fc7\u6ee4\u548c\u7ec6\u5316\u4e24\u4e2a\u5904\u7406\u6b65\u9aa4 \u8fc7\u6ee4\uff1a\u91cd\u53e0\u65b9\u6cd5 \u7ec6\u5316\uff1a\u76f8\u52a0\u591a\u8fb9\u5f62\u9762\u79ef   \u5212\u5206\u6210\u89c4\u5219\u7684\u7f51\u683c  \u4f18\u52bf\uff1a\u63d0\u9ad8\u4e86\u6837\u672c\u7684\u6570\u636e\u91cf\uff0c\u907f\u514d\u6df1\u5ea6\u5b66\u4e60\u7684\u8fc7\u5ea6\u62df\u5408\u95ee\u9898\uff1b\u5212\u5206\u7814\u7a76\u533a\u57df\u4f1a\u5927\u5927\u51cf\u5c11\u8ba1\u7b97\u91cf\uff1b\u4ee5\u4e00\u4e2a\u7f51\u683c\u5355\u5143\u8fdb\u884c\u8bc4\u4f30\u6bd4\u6574\u4e2a\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u66f4\u4e3a\u6709\u6548 \u5212\u5206\u5c3a\u5ea6  \u7f51\u683c\u5355\u5143\u5c3a\u5bf8\u8d8a\u5c0f\u4f1a\u4ea7\u751f\u8d8a\u7ec6\u8282\u7684\u8bc4\u4f30\u7ed3\u679c\uff0c\u540c\u65f6\u4e5f\u4f1a\u4ea7\u751f\u66f4\u5927\u7684\u6837\u672c\u91cf\uff0c\u8fd9\u6837\u53ef\u4ee5\u8bad\u7ec3\u4e00\u4e2a\u66f4\u7a33\u5b9a\u7684\u6a21\u578b \u516d\u8fb9\u5f62\u7f51\u683c\u5355\u5143\uff1a\u6bd4\u65b9\u5f62\u548c\u4e09\u89d2\u5f62\u63d0\u4f9b\u4e86\u66f4\u5b8c\u6574\u7684\u8986\u76d6\u8303\u56f4\uff1b\u4e0e\u76f8\u90bb\u7684\u7f51\u683c\u5355\u5143\u5171\u4eab\u66f4\u591a\u7684\u8fb9\u7f18\uff0c\u5c06\u4f1a\u4ea7\u751f\u66f4\u5e73\u6ed1\u7684\u8bc4\u4f30\u7ed3\u679c \u9009\u62e9\u6b63\u65b9\u5f62\u548c\u8702\u7a9d\u516d\u8fb9\u5f62\u5c06\u6570\u636e\u683c\u7f51\u5212\u5206\uff0c\u5e76\u6bd4\u8f83\u4e86\u4e0d\u540c\u5212\u5206\u65b9\u5f0f\u5bf9\u8bc4\u4ef7\u7ed3\u679c\u7684\u5f71\u54cd   \u5efa\u7b51\u7269\u88ab\u5206\u5272\u6210\u591a\u4e2a\u90e8\u5206\u5f52\u5c5e\u95ee\u9898\uff1a\u5efa\u7acb\u7f13\u51b2\u533a\u5305\u542b\u76f8\u90bb\u5355\u5143\u53bb\u8bc6\u522b\u5339\u914d\u76ee\u6807    \u57fa\u4e8e\u6df1\u5ea6\u81ea\u7f16\u7801\u7f51\u7edc\u7efc\u5408\u8bc4\u4ef7\u6a21\u578b \u6df1\u5ea6\u81ea\u7f16\u7801\u7f51\u7edc\u7684\u7efc\u5408\u8bc4\u4f30\u65b9\u6cd5\u9996\u5148\u9700\u8981\u6839\u636e\u6784\u5efa\u7684\u6bcf\u4e2a\u6837\u672c\u5206\u522b\u8ba1\u7b97\u8bc4\u4ef7\u6307\u6807\uff1b\u7136\u540e\u5229\u7528\u6bcf\u4e2a\u6837\u672c\u4e2d\u7684\u8bc4\u4ef7\u56e0\u5b50\u4f5c\u4e3a\u6a21\u578b\u8f93\u5165\u53bb\u8bad\u7ec3\u8bbe\u8ba1\u7684\u6df1\u5ea6\u81ea\u7f16\u7801\u7f51\u7edc\u7ed3\u6784\uff0c\u76f4\u5230\u7f51\u7edc\u7684\u91cd\u6784\u8bef\u5dee\u8fbe\u5230\u6700\u5c0f\u4e14\u7a33\u5b9a\uff1b\u6700\u540e\u6839\u636e\u6df1\u5ea6\u7f51\u7edc\u8f93\u5165\u4e0e\u8f93\u51fa\u6570\u636e\u7684\u5dee\u5f02\u8fdb\u884c OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8bc4\u4f30\u3002\n OSM \u5efa\u7b51\u7269\u8bc4\u4ef7\u56e0\u5b50  \u8f93\u5165\u6570\u636e\u7684\u6bcf\u4e2a\u7ef4\u5ea6\u5355\u5143\u5728\u6df1\u5ea6\u81ea\u7f16\u7801\u7f51\u7edc\u4e2d\u5fc5\u987b\u662f\u76f8\u4e92\u72ec\u7acb\u7684 OSM\u4e0e\u53c2\u8003\u6570\u636e\u5bf9\u6bd4\u8ba1\u7b97\u76f8\u4f3c\u5ea6=&gt;\u6570\u636e\u5b8c\u6574\u6027\u3001\u4f4d\u7f6e\u7cbe\u5ea6 \u3001\u5f62\u72b6\u7cbe\u5ea6 \u3001\u65b9\u5411\u4e00\u81f4\u6027 \u3001\u8bed\u4e49\u7cbe\u5ea6   \u6df1\u5ea6\u81ea\u7f16\u7801\u7f51\u7edc  \u8f93\u51fa\u6570\u636e\u662f\u5bf9\u8f93\u5165\u6570\u636e\u7684\u8bc4\u4f30\uff0c\u8fd9\u4e24\u8005\u6570\u636e\u4e4b\u95f4\u7684\u5dee\u5f02\u88ab\u5b9a\u4e49\u4e3a\u91cd\u6784\u8bef\u5dee\uff0c\u7528\u4e8e\u68c0\u6d4b\u5f02\u5e38 \u91cd\u6784\u8bef\u5dee\u8d8a\u5927\u8bf4\u660e\u5177\u6709\u8d8a\u591a\u7684\u5f02\u5e38\u8f93\u5165\u6570\u636e   OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u7efc\u5408\u8bc4\u4ef7   \u9996\u5148\uff0c\u5c06 OSM \u6570\u636e\u4e0e\u5b98\u65b9\u77e2\u91cf\u53c2\u8003\u6570\u636e\u901a\u8fc7\u7f51\u683c\u5212\u5206\u6210\u7b49\u5927\u7684\u6570\u636e\u5355\u5143\n  \u7136\u540e\u5728\u6bcf\u4e2a\u6570\u636e\u5355\u5143\u4e2d\u901a\u8fc7 OSM \u5efa\u7b51\u7269\u6570\u636e\u4e0e\u53c2\u8003\u6570\u636e\u4e2d\u5efa\u7b51\u7269\u6bd4\u8f83\uff0c\u8ba1\u7b97\u51e0\u4f55\u5f62\u6001\u7cbe\u5ea6\uff08\u76f8\u4f3c\u5ea6\uff09\u3001\u4f4d\u7f6e\u7cbe\u5ea6\u3001\u65b9\u5411\u7cbe\u5ea6\u3001\u636e\u5b8c\u6574\u6027\u4ee5\u53ca\u8bed\u4e49\u7cbe\u5ea6\n  \u6700\u540e\uff0c\u4ee5\u6bcf\u4e2a\u6570\u636e\u5355\u5143\u4f5c\u4e3a\u4e00\u4e2a\u6837\u672c\uff0c\u6bcf\u4e2a\u6837\u672c\u4e2d\u7684\u8ba1\u7b97\u5f97\u5230\u7684\u8bc4\u4ef7\u56e0\u5b50\u4f5c\u4e3a\u6837\u672c\u7279\u5f81\u53bb\u8bad\u7ec3\u6784\u5efa\u7684\u6df1\u5ea6\u81ea\u7f16\u7801\u7f51\u7edc\uff0c\u5f53\u91cd\u6784\u8bef\u5dee\u8fbe\u5230\u6700\u5c0f\u4e14\u7a33\u5b9a\u540e\u7f51\u7edc\u8bad\u7ec3\u6210\u719f\u3002\u6210\u719f\u7f51\u7edc\u9488\u5bf9\u6bcf\u4e2a\u6570\u636e\u5355\u5143\u7684\u91cd\u6784\u8bef\u5dee\u88ab\u7528\u6765\u8868\u793a\u8be5\u6570\u636e\u5355\u5143\u4e2d\u7684 OSM \u5efa\u7b51\u7269\u7efc\u5408\u8bc4\u4ef7\u3002\n    \u5b9e\u9a8c\u9a8c\u8bc1\u4e0e\u5206\u6790 \u4ecb\u7ecd\u4e86\u4e00\u4e9b\u53c2\u6570\u8bbe\u5b9a\u548c\u5b9e\u9a8c\u5206\u6790\u8fc7\u7a0b\uff0c\u6bd4\u8f83\u4e30\u5bcc\u3002\u65e9\u5c31\u77e5\u9053\u5e08\u5144\u7684\u8fd9\u7bc7\u6587\u7ae0\uff0c\u4eca\u5929\u7ec8\u4e8e\u662f\u5f04\u61c2\u4e86\u3002\n\u57fa\u4e8e\u9065\u611f\u5f71\u50cf\u6570\u636e OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7 \u5f15\u8a00  \u5b9a\u6027\u8bc4\u4ef7\u65b9\u6cd5\u7684\u6307\u6807\u4e0d\u80fd\u5bf9 OSM \u6570\u636e\u8d28\u91cf\u505a\u51fa\u7edd\u5bf9\u63cf\u8ff0\uff1b\u5b9a\u91cf\u8bc4\u4ef7\u65b9\u6cd5\u5728\u4e00\u4e9b\u7f3a\u4e4f\u9ad8\u8d28\u91cf\u6743\u5a01\u77e2\u91cf\u6570\u636e\u5730\u533a\u5177\u6709\u4e00\u5b9a\u7684\u5c40\u9650\u6027\u3002 + \u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf + \u6df1\u5ea6\u5377\u79ef\u7f51\u7edc\u5728\u5f71\u50cf\u5efa\u7b51\u7269\u63d0\u53d6\u4e2d\u7684\u826f\u597d\u6027\u80fd \u9ad8\u5206\u5f71\u50cf\u5e94\u7528 + \u8bed\u4e49\u5206\u5272\u7b80\u4ecb + \u5df2\u6709\u57fa\u4e8e\u9ad8\u5206\u5f71\u50cf\u8bed\u4e49\u5206\u5272\u7684\u7814\u7a76 \u63d0\u53ca\u65b9\u6cd5\u76f4\u63a5\u7528\u4e8e\u9065\u611f\u56fe\u50cf\u5efa\u7b51\u7269\u76ee\u6807\u63d0\u53d6\u5e76\u4e0d\u80fd\u53d6\u5f97\u5f88\u597d\u7684\u6548\u679c  \u5efa\u7b51\u7269\u3001\u8857\u9053\u3001\u9634\u5f71\u548c\u8f66\u8f86\u7b49\u76ee\u6807\u7684\u7c7b\u5185\u65b9\u5dee\u7684\u589e\u52a0\u548c\u7c7b\u95f4\u65b9\u5dee\u7684\u51cf\u5c11 \u4e0d\u540c\u5bf9\u8c61\u53ef\u80fd\u5728\u9065\u611f\u56fe\u50cf\u4e2d\u5448\u73b0\u51fa\u76f8\u540c\u7684\u5149\u8c31\u503c\uff08\u540c\u8c31\u5f02\u7269\uff09\uff0c\u5149\u8c31\u76f8\u4f3c\u7c7b\u522b\u7684\u5206\u79bb\u53d8\u5f97\u66f4\u52a0\u56f0\u96be \u5728\u9065\u611f\u5f71\u50cf\u4e2d\uff0c\u4e00\u4e9b\u7269\u4f53\u7684\u8fb9\u754c\u4ecd\u7136\u88ab\u9634\u5f71\u5f71\u54cd\u4ece\u800c\u53d8\u5f97\u6a21\u7cca   \u5168\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff08FCNs\uff09 \u4e0d\u4ec5\u53ef\u4ee5\u5b66\u4e60\u5982\u4f55\u5bf9\u50cf\u7d20\u8fdb\u884c\u5206\u7c7b\u5e76\u786e\u5b9a\u5b83\u662f\u4ec0\u4e48\uff0c\u800c\u4e14\u8fd8\u53ef\u4ee5\u9884\u6d4b\u7a7a\u95f4\u5bf9\u8c61\u7684\u7ed3\u6784\u3002\u8be5\u6a21\u578b\u80fd\u591f\u68c0\u6d4b\u51fa\u5730\u9762\u4e0a\u4e0d\u540c\u7c7b\u522b\u7684\u7269\uff0c\u5e76\u9884\u6d4b\u5176\u5f62\u72b6\uff0c\u5982\u5efa\u7b51\u7269\uff0c\u9053\u8def\uff0c\u6811\u6728\u7b49\u7b49\u3002 \u672c\u6587\u5de5\u4f5c\u603b\u8ff0\uff1a\u591a\u4efb\u52a1 Res-U-Net + \u540e\u5904\u7406 + \u5c40\u90e8\u548c\u5168\u5c40\u6570\u636e\u5b8c\u6574\u6027\u8bc4\u4ef7 + \u4e0d\u540c\u4f4d\u7f6e\u7cbe\u5ea6\u8bc4\u4ef7  \u9065\u611f\u5f71\u50cf\u5efa\u7b51\u7269\u63d0\u53d6\u8bad\u7ec3\u96c6\u6784\u5efa  \u6570\u636e\u9884\u5904\u7406  \u89e3\u51b3 OSM \u5efa\u7b51\u7269\u6570\u636e\u4e2d\u7684\u4e00\u4e9b\u62d3\u6251\u9519\u8bef\u95ee\u9898 \u539f\u59cb\u9065\u611f\u56fe\u50cf-\u6912\u76d0\u566a\u58f0-\u5e94\u7528\u9ad8\u65af\u6ee4\u6ce2\u5668\u6765\u6a21\u7cca\u56fe\u50cf   \u6784\u5efa\u5efa\u7b51\u7269\u63d0\u53d6\u8bad\u7ec3\u6570\u636e\u96c6  \u5c06\u6bcf\u4e2a\u5177\u6709 650\u00d7650\u50cf\u7d20\u7684\u5355\u5143\u4f5c\u4e3a\u4e00\u4e2a\u8bad\u7ec3\u6837\u672c \u4e0d\u540c\u56fe\u50cf\u5c3a\u5ea6\u4e0a\u8bad\u7ec3  \u4e00\u4e2a\u6570\u636e\u96c6\u662f\u901a\u8fc7\u5c06\u539f\u59cb\u56fe\u50cf\u7f29\u653e\u5230\u4e00\u534a\u7684\u5c3a\u5ea6\u83b7\u5f97 \u53e6\u4e00\u4e2a\u6570\u636e\u96c6\u662f\u901a\u8fc7\u5bf9\u539f\u59cb\u56fe\u50cf\u8fdb\u884c\u88c1\u526a\u5f97\u5230      \u57fa\u4e8e\u591a\u4efb\u52a1\u7279\u5f81\u5b66\u4e60\u53c2\u8003\u5efa\u7b51\u7269\u6570\u636e\u63d0\u53d6   \u591a\u4efb\u52a1\u7279\u5f81\u5b66\u4e60\u7684\u6df1\u5ea6\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u6784\u5efa\n \u5c06\u4e24\u4e2a\u4e0d\u540c\u5c3a\u5ea6\u7684\u6df1\u5c42\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u50cf\u7d20\u7ea7\u9884\u6d4b\u7ed3\u679c\u8fdb\u884c\u7ec4\u5408\uff0c\u5f97\u5230\u65b0\u7684\u9884\u6d4b\u7ed3\u679c\u3002 \u7136\u540e\uff0c\u9700\u8981\u5bf9\u7ed3\u679c\u8fdb\u884c\u540e\u5904\u7406\uff1a\u5c06\u9884\u6d4b\u7684\u50cf\u7d20\u7ea7\u7ed3\u679c\u8f6c\u6362\u4e3a\u5177\u6709\u5730\u7406\u5750\u6807\u7684\u591a\u8fb9\u5f62\uff0c\u5e76\u5c06\u5176\u89c6\u4e3a\u5efa\u7b51\u7269\u8f6e\u5ed3\u3002\u5c0f\u4e8e\u9608\u503c\u7684\u591a\u8fb9\u5f62\u7684\u9762\u79ef\u5c06\u88ab\u79fb\u9664   \u795e\u7ecf\u7f51\u7edc\u6a21\u578b  \u5de6\u90e8\u662f ResNet\uff0c\u7528\u4e8e\u63d0\u53d6\u8f93\u5165\u6570\u636e\u7684\u7279\u5f81 \u53f3\u8fb9\u662f\u6269\u5c55\u90e8\u5206\uff0c\u76ee\u6807\u662f\u4f7f\u7528\u7279\u5f81\u56fe\u63d0\u53d6\u5efa\u7b51\u7269      \u57fa\u4e8e\u6307\u5bfc\u6ee4\u6ce2\u4f18\u5316\u5efa\u7b51\u7269\u50cf\u7d20\u7ea7\u63d0\u53d6\u7ed3\u679c\n \u7531\u4e8e\u8f93\u5165\u56fe\u50cf\uff08\u5f15\u5bfc\u56fe\u50cf\uff09\u7684\u5f15\u5bfc\uff0c\u6ee4\u6ce2\u7ed3\u679c\u66f4\u52a0\u7ed3\u6784\u5316\u4e14\u5e73\u6ed1\u8f83\u5c11 \u5f15\u5bfc\u6ee4\u6ce2\u5668\u8ba4\u4e3a\u5f15\u5bfc\u56fe\u50cf\u548c\u6ee4\u6ce2\u7ed3\u679c\u4e4b\u95f4\u5b58\u5728\u5c40\u90e8\u7ebf\u6027\u6a21\u578b\uff0c\u4ece\u800c\u6709\u5229\u4e8e\u4f18\u5316\u5efa\u7b51\u7269\u76ee\u6807\u5206\u7c7b\u3002 \u4e3a\u4e86\u53bb\u9664\u6912\u76d0\u7c7b\u566a\u58f0\uff0c\u539f\u59cb\u56fe\u50cf\u88ab\u5f53\u4f5c\u4f18\u5316\u8fb9\u754c\u7684\u5f15\u5bfc\u5668\u3002    \u53c2\u8003\u77e2\u91cf\u5efa\u7b51\u7269\u6570\u636e\u751f\u6210\n \u5c06\u6805\u683c\u6570\u636e\u7684\u7ed3\u679c\u8f6c\u6362\u4e3a\u77e2\u91cf\u591a\u8fb9\u5f62 \u8f6c\u6362\u5750\u6807\u7cfb\uff1a \u50cf\u7d20\u5750\u6807 =&gt; \u5730\u7406\u5750\u6807    OSM \u5efa\u7b51\u7269\u6570\u636e\u5b8c\u6574\u6027\u4e0e\u4f4d\u7f6e\u7cbe\u5ea6\u8bc4\u4f30\n \u5168\u5c40\u6570\u636e\u5b8c\u6574\u6027 \u5c40\u90e8\u6570\u636e\u5b8c\u6574\u6027 \u57fa\u4e8e\u8d28\u5fc3\u8ddd\u79bb\u7684\u4f4d\u7f6e\u7cbe\u5ea6    \u5b9e\u9a8c\u9a8c\u8bc1\u4e0e\u5206\u6790 \u603b\u7ed3\u4e0e\u5c55\u671b \u7814\u7a76\u603b\u7ed3  \u7a7a\u95f4\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7=&gt; OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u8fc7\u7a0b\u4e2d\u7684\u82e5\u5e72\u5173\u952e\u6280\u672f\u95ee\u9898=&gt;\u5177\u4f53\u6210\u679c\u603b\u7ed3\u5982\u4e0b\uff1a  \u63a2\u8ba8\u4e86 OSM \u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u7684\u7814\u7a76\u80cc\u666f\u548c\u5b9e\u9645\u610f\u4e49\u3002\u603b\u7ed3\u4e86\u3001\u9610\u8ff0\u4e86\u3001\u5206\u6790\u4e86\u3001\u7531\u70b9\u53ca\u9762&hellip; \u7cfb\u7edf\u9610\u8ff0\u4e86\u5730\u7406\u7a7a\u95f4\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u6a21\u578b\u7684\u7406\u8bba\u57fa\u7840\u3002 \u591a\u8fb9\u5f62\u7684\u51e0\u4f55\u5f62\u72b6\u76f8\u4f3c\u6027 \u5ba2\u89c2\u5730\u3001\u7efc\u5408\u5730\u5bf9 OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8fdb\u884c\u8bc4\u4ef7: \u5b98\u65b9\u6807\u51c6\u77e2\u91cf\u53c2\u8003\u6570\u636e+\u6df1\u5ea6\u81ea\u7f16\u7801\u7f51\u7edc \u6d88\u9664\u77e2\u91cf\u53c2\u8003\u6570\u636e\u7684\u7ea6\u675f\uff0c\u5145\u5206\u5229\u7528\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf   \u4e3b\u8981\u521b\u65b0\u70b9\u603b\u7ed3\u5982\u4e0b  \u5efa\u7acb\u4e86\u987e\u53ca\u7a7a\u95f4\u5206\u5e03\u548c\u51e0\u4f55\u53d8\u6362\u7684\u591a\u8fb9\u5f62\u76f8\u4f3c\u6027\u5ea6\u91cf\u6a21\u578b \u63d0\u51fa\u4e86\u7efc\u5408\u3001\u5ba2\u89c2\u7684 OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u8bc4\u4ef7\u6a21\u578b \u63d0\u51fa\u4e86\u57fa\u4e8e\u9065\u611f\u5f71\u50cf\u6570\u636e\u7684 OSM \u5efa\u7b51\u7269\u6570\u636e\u8d28\u91cf\u5b9a\u91cf\u8bc4\u4ef7\u6a21\u578b    \u7814\u7a76\u5c55\u671b  \u6570\u636e\u8d28\u91cf\u6a21\u7cca\u95ee\u9898\uff0c\u96be\u70b9\uff1a\u8bc4\u4ef7\u65b9\u6cd5\u4e0d\u80fd\u591f\u4fdd\u8bc1\u5ba2\u89c2\u5168\u9762\uff1b\u53c2\u8003\u6570\u636e\u7684\u4f9d\u8d56\u6027\u3002 \u7b80\u8ff0\u672c\u6587\u8d21\u732e\uff08\u9488\u5bf9\u4e0a\u8ff0\u96be\u70b9\uff09 \u53d6\u5f97\u4e86\u4e00\u4e9b\u6210\u679c\uff0c\u4f46\u4e5f\u5b58\u5728\u4e00\u4e0b\u51e0\u4e2a\u65b9\u9762\u9700\u8981\u8fdb\u4e00\u6b65\u5c55\u5f00\uff1a  \u4e00\u4e9b\u88ab\u6811\u8986\u76d6\u7684\u5efa\u7b51\u7269\u7684\u5f62\u72b6\u4e0d\u80fd\u7cbe\u786e\u7684\u68c0\u6d4b\uff0c\u4e14\u4e00\u4e9b\u6a21\u7cca\u548c\u4e0d\u89c4\u5219\u7684\u8fa9\u89e3\u8fd8\u662f\u5f88\u96be\u88ab\u5206\u7c7b=&gt;\u8003\u8651\u573a\u666f\u8bed\u4e49 \u53d7\u9065\u611f\u56fe\u50cf\u7279\u5f81\u7684\u9650\u5236\uff0c\u56fe\u50cf\u4e2d\u6709\u4e9b\u5efa\u7b51\u7269\u4e3a\u659c\u5165\u5c04\uff0c\u6709\u4e9b\u5efa\u7b51\u7269\u8fb9\u7f18\u88ab\u6811\u6728\u8986\u76d6\u3002\u56e0\u6b64\uff0c\u6240\u63d0\u51fa\u7684\u65b9\u6cd5\u65e0\u6cd5\u63d0\u53d6\u4e00\u4e9b\u5efa\u7b51\u7269\u7684\u5b9e\u9645\u8fb9\u7f18\uff08\u5b9e\u9645\u8fb9\u754c\u4e3a\u76f4\u7ebf\uff0c\u4f46\u57fa\u4e8e\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u63d0\u53d6\u7ed3\u679c\u5f80\u5f80\u662f\u6298\u7ebf\uff09\u548c\u4e00\u4e9b\u9762\u79ef\u975e\u5e38\u5c0f\u7684\u5efa\u7b51\u7269\u3002 \u9053\u8def\u3001\u6e56\u6cca\u7b49\u5176\u4ed6\u8981\u7d20\u7c7b\u578b\u7684\u63d0\u53d6\u53ca\u8bc4\u4ef7    \u57fa\u4e8e\u624b\u673a\u4f4d\u7f6e\u5927\u6570\u636e\u7684\u57ce\u5e02\u4eba\u7fa4\u805a\u6563\u65f6\u7a7a\u7279\u6027\u7814\u7a76\uff1a\u4ee5\u6df1\u5733\u5e02\u4e3a\u4f8b \u6768\u559c\u5e73-2017-\u6b66\u6c49\u5927\u5b66\n\u9519\u522b\u5b57\u6709\u70b9\u591a\uff0c\u5185\u5bb9\u7406\u89e3\u96be\u5ea6\u4e0d\u5927\uff0c\u4f5c\u8005\u201c\u6982\u5ff5\u5316\u201d\u505a\u5f97\u5f88\u597d\n\u7eea\u8bba \u7814\u7a76\u80cc\u666f\u4e0e\u610f\u4e49   \u7814\u7a76\u80cc\u666f\n \u7b2c\u4e00\u6bb5\uff1a\u57ce\u5e02\u53d1\u5c55-\u57ce\u5e02\u95ee\u9898 \u7b2c\u4e8c\u6bb5\uff1a\u57ce\u5e02\u95ee\u9898\u7684\u4ea7\u751f\u4e0e\u4eba\u7fa4\u5728\u57ce\u5e02\u4e2d\u6d3b\u52a8\u5bc6\u5207\u76f8\u5173-\u7406\u89e3\u57ce\u5e02\u4eba\u7fa4\u7684\u79fb\u52a8\u6a21\u5f0f \u7b2c\u4e09\u6bb5\uff1a\u4fe1\u606f\u4e0e\u901a\u8baf\u6280\u672f-\u4e2a\u4f53\u79fb\u52a8\u8f68\u8ff9\u6570\u636e-\u6570\u636e\u57fa\u7840 \u7b2c\u56db\u6bb5\uff1a\u624b\u673a-\u611f\u77e5\u4eba\u7fa4\u5728\u57ce\u5e02\u4e2d\u7684\u4f4d\u7f6e\u968f\u65f6\u95f4\u7684\u53d8\u5316-\u624b\u673a\u4f4d\u7f6e\u6570\u636e-\u7814\u7a76\u57ce\u5e02\u4eba\u7fa4\u79fb\u52a8\u6a21\u5f0f\u7684\u91cd\u8981\u6570\u636e\u6e90 \u7b2c\u4e94\u6bb5\uff1a\u7814\u7a76\u73b0\u72b6\u7b80\u8ff0\uff1a\u624b\u673a\u4f4d\u7f6e\u6570\u636e\u5df2\u7ecf\u4f7f\u5f97\u6211\u4eec\u53ef\u4ece\u4e0d\u540c\u7684\u89c6\u89d2\u6765\u89c2\u5bdf\u57ce\u5e02\u4eba\u7fa4\u7684\u65f6\u7a7a\u79fb\u52a8\u6a21\u5f0f\uff0c\u4ee5\u53ca\u6316\u6398\u4eba\u7fa4\u79fb\u52a8\u4e0e\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u89c4\u5f8b\u3002 \u7b2c\u516d\u6bb5\uff1a\u7efc\u4e0a\u6240\u8ff0/\u80cc\u666f\uff1a\u8bf8\u591a\u57ce\u5e02\u95ee\u8da3\u7684\u6d8c\u73b0\u4f7f\u5f97\u6211\u4eec\u8feb\u5207\u9700\u8981\u7406\u89e3\u57ce\u5e02\u4eba\u7fa4\u79fb\u52a8\u65f6\u7a7a\u6a21\u5f0f\u53ca\u5176\u4e0e\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7684\u4e4b\u95f4\u7684\u5173\u7cfb\uff1b\u624b\u673a\u4f4d\u7f6e\u5927\u6570\u636e\u4e3a\u7814\u7a76\u57ce\u5e02\u4eba\u7fa4\u79fb\u52a8\u65f6\u7a7a\u6a21\u5f0f\u548c\u7406\u89e3\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u6570\u636e\u57fa\u7840\uff1b\u591a\u79cd\u5b66\u79d1\u4ea4\u53c9\u7406\u8bba\u7684\u53d1\u5c55\uff08\u4eba\u6587\u548c\u57ce\u5e02\u5730\u7406\u5b66\u3001\u8ba1\u7b97\u673a\u79d1\u5b66\u3001\u5730\u7406\u4fe1\u606f\u79d1\u5b66\u7b49\uff09\u4e3a\u6211\u4eec\u7814\u7a76\u57ce\u5e02\u4eba\u7fa4\u79fb\u52a8\u6a21\u5f0f\u63d0\u4f9b\u5f3a\u5927\u7684\u7406\u8bba\u57fa\u7840\u3002    \u95ee\u9898\u63d0\u51fa\u4e0e\u7814\u7a76\u610f\u4e49\n \u7b2c\u4e00\u6bb5\uff1a\u63d0\u51fa\u4eba\u7fa4\u805a\u6563\u6a21\u5f0f \u7b2c\u4e8c\u6bb5\uff1a\u672c\u8bba\u6587\u4e3b\u8981\u7684\u79d1\u5b66\u7814\u7a76\u95ee\u9898-\u5982\u4f55\u5229\u7528\u8f68\u8ff9\u5927\u6570\u636e\u6765\u6df1\u5165\u7406\u89e3\u57ce\u5e02\u4eba\u7fa4\u805a\u6563\u7684\u65f6\u7a7a\u7279\u6027\uff0c\u52a0\u6df1\u5bf9\u4eba\u7fa4\u79fb\u52a8\u4e0e\u57ce\u5e02\u7a7a\u95f4\u4ea4\u4e92\u7684\u7406\u89e3  \u4eba\u7fa4\u805a\u6563\u65f6\u7a7a\u6a21\u5f0f \u4eba\u7fa4\u805a\u6563\u7684\u7a33\u5b9a\u6027 \u4eba\u7fa4\u805a\u6563\u7a33\u5b9a\u6027\u4e0e\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7684\u5173\u7cfb   \u7b2c\u4e09\u6bb5\uff1a\u9274\u4e8e&hellip;\u7684\u91cd\u8981\u610f\u4e49\uff0c\u4ee5&hellip;\u4e3a\u7814\u7a76\u5bf9\u8c61\uff0c\u4ee5&hellip;\u4e3a\u4e3b\u9898\uff0c\u91cd\u70b9\u7814\u7a76&hellip;\uff0c\u6784\u5efa&hellip;\u7684\u5b9a\u91cf\u6a21\u578b\uff0c\u63a2\u7d22&hellip;\u7684\u5173\u7cfb\u3002\u672c\u6587\u65e8\u5728&hellip;\uff0c\u5177\u4f53\u5730\uff0c&hellip;\u5177\u6709\u4ee5\u4e0b\u65b9\u9762\u7684\u610f\u4e49\u3002    \u7814\u7a76\u5185\u5bb9\u4e0e\u6280\u672f\u8def\u7ebf  \u7814\u7a76\u5185\u5bb9  \u7814\u7a76\u76ee\u7684\uff1a\u5206\u6790\u57ce\u5e02\u4eba\u7fa4\u805a\u6563\u7684\u65f6\u7a7a\u7279\u6027\u4ee5\u53ca\u4e0e\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7684\u5173\u7cfb\uff0c\u4ece\u65f6\u7a7a\u7684\u89d2\u5ea6\u52a0\u6df1\u7406\u89e3\u4eba\u7fa4\u5728\u57ce\u5e02\u4e2d\u7684\u65f6\u7a7a\u95f4\u884c\u4e3a\u3002 \u624b\u673a\u4f4d\u7f6e\u6570\u636e-\u4eba\u7fa4\u79fb\u52a8OD\u77e9\u9635-\u4eba\u7fa4\u79fb\u52a8\u65f6\u7a7a\u6a21\u5f0f-\u4eba\u7fa4\u805a\u6563\u7a33\u5b9a\u6027\u8bc4\u4ef7\u6a21\u578b-\u5206\u6790\u4eba\u7fa4\u805a\u6563\u52a8\u6001\u7a33\u5b9a\u6027\u548c\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7684\u5173\u7cfb \u7814\u7a76\u5185\u5bb9\u5212\u5206\uff1a  \u57ce\u5e02\u4eba\u7fa4\u805a\u6563\u65f6\u7a7a\u6a21\u5f0f\u63d0\u53d6\u5206\u6790\uff1a  \u63d0\u51fa\u4e00\u79cd\u4ece\u624b\u673a\u4f4d\u7f6e\u6570\u636e\u4e2d\u8bc6\u522b\u4eba\u7fa4\u805a\u6563\u65f6\u7a7a\u6a21\u5f0f\u7684\u65b9\u6cd5 \u5177\u4f53\u6d41\u7a0b\uff1a\uff081\uff09\u57fa\u4e8e\u4eba\u7fa4\u79fb\u52a8OD\u77e9\u9635\uff0c\u5b9a\u4e49\u63cf\u8ff0\u4eba\u7fa4\u805a\u96c6\u548c\u6d88\u6563\u5f3a\u5ea6\u7684\u6307\u6807\uff1b\uff082\uff09\u6839\u636e\u4eba\u7fa4\u805a\u6563\u5f3a\u5ea6\u7edf\u8ba1\u5206\u5e03\uff0c\u5bf9\u4eba\u7fa4\u805a\u6563\u5f3a\u5ea6\u8fdb\u884c\u7b49\u7ea7\u5206\u7c7b\u5e76\u6dfb\u52a0\u6807\u7b7e\uff1b\uff083\uff09\u6784\u5efa\u57fa\u4e8e\u805a\u6563\u7b49\u7ea7\u6807\u7b7e\u7684\u4eba\u7fa4\u52a8\u6001\u53d8\u5316\u65f6\u95f4\u5e8f\u5217\u77e9\u9635\uff1b\uff084\uff09\u5229\u7528\u805a\u7c7b\u7b97\u6cd5\u5bf9\u8be5\u65f6\u95f4\u5e8f\u5217\u77e9\u9635\u8fdb\u884c\u805a\u7c7b\uff0c\u627e\u51fa\u5177\u4f53\u76f8\u4f3c\u4eba\u7fa4\u805a\u6563\u53d8\u5316\u7684\u65f6\u7a7a\u6a21\u5f0f\uff1b\uff085\uff09\u5c06\u805a\u6563\u65f6\u7a7a\u6a21\u5f0f\u4e0e\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u529f\u80fd\u533a\u8fdb\u884c\u5173\u8054\uff0c\u5206\u6790\u6bcf\u79cd\u529f\u80fd\u533a\u4e0a\u4e3b\u8981\u7684\u4eba\u7fa4\u805a\u6563\u6a21\u5f0f\u3002   \u6784\u5efa\u4eba\u7fa4\u805a\u6563\u7a33\u5b9a\u6027\u7684\u5b9a\u91cf\u6a21\u578b  \u53cd\u6620\u4e00\u4e2a\u5730\u65b9\u4eba\u7fa4\u52a8\u6001\u53d8\u5316\u7684\u7a0b\u5ea6\uff0c\u4ece\u800c\u6f5c\u5728\u7684\u53cd\u6620\u8be5\u5730\u65b9\u5bf9\u4ea4\u901a\u9700\u6c42\u7684\u53d8\u5316\u7a0b\u5ea6 \u8bc4\u4ef7\u57ce\u5e02\u516c\u4ea4\u7cfb\u7edf\u8986\u76d6\u4eba\u7fa4\u7684\u52a8\u6001\u7a33\u5b9a\u6027   \u5b9a\u91cf\u5206\u6790\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u8981\u7d20\u4e0e\u4eba\u7fa4\u805a\u6563\u7a33\u5b9a\u6027\u7684\u5173\u7cfb  \u793e\u4f1a\u7ecf\u6d4e\u5c5e\u6027\u3001\u571f\u5730\u5229\u7528\u548c\u8def\u7f51\u4e09\u4e2a\u7ef4\u5ea6\u89e3\u91ca\u53d8\u91cf \u76f8\u5bf9\u91cd\u8981\u6027       \u7814\u7a76\u65b9\u6cd5\u4e0e\u6280\u672f\u8def\u7ebf  \u6570\u636e\u9884\u5904\u7406 \u805a\u6563\u65f6\u7a7a\u6a21\u5f0f\u8bc6\u522b \u7ed3\u5408\u57ce\u5e02\u529f\u80fd\u533a\u5206\u6790\u4e24\u8005\u4e4b\u95f4\u7684\u5173\u7cfb    \u4eba\u7fa4\u79fb\u52a8\u6a21\u5f0f\u7814\u7a76\u7efc\u8ff0 \u5f15\u8a00  \u57ce\u5e02\u95ee\u9898\uff1a\u7a7a\u95f4\u6c61\u67d3\u3001\u4ea4\u901a\u62e5\u5835\u3001\u89c4\u5212\u843d\u540e=&gt;\u57ce\u5e02\u8ba1\u7b97\uff08\u90d1\u5b87\uff09\u3001\u57ce\u5e02\u4fe1\u606f\u5b66\uff08\u674e\u6e05\u6cc9\uff09 \u7814\u7a76\u57ce\u5e02\u4eba\u7fa4\u7684\u65f6\u7a7a\u79fb\u52a8\u6a21\u5f0f\u5bf9\u4e8e\u89e3\u51b3\u57ce\u5e02\u95ee\u9898\u5177\u6709\u91cd\u8981\u7684\u610f\u4e49-\u4eba\u7fa4\u611f\u77e5\uff08\u4f4d\u7f6e\uff09\u6570\u636e-\u793e\u4f1a\u611f\u77e5\uff08\u5218\u55bb\uff09-\u591a\u5b66\u79d1\u4ea4\u53c9\u7684\u8bfe\u9898=&gt;\u56db\u4e2a\u65b9\u9762\u8bba\u8ff0\uff1a\u57ce\u5e02\u65f6\u7a7a\u52a8\u6001\u5206\u6790\u3001\u4eba\u7fa4\u79fb\u52a8\u65f6\u7a7a\u6a21\u5f0f\u3001\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7814\u7a76\u3001\u57ce\u5e02\u4ea4\u901a\u5730\u7406\u7814\u7a76  \u57ce\u5e02\u65f6\u7a7a\u52a8\u6001\u5206\u6790 \u4eba\u7fa4\u5728\u57ce\u5e02\u4e2d\u7684\u5206\u5e03\u662f\u968f\u65f6\u95f4\u4e0d\u65ad\u53d8\u5316=&gt;\u57ce\u5e02\u65f6\u7a7a\u52a8\u6001\n\u4f20\u611f\u5668\u666e\u53ca=&gt;\u5b9e\u65f6\u76d1\u6d4b\u3001\u5206\u6790\u57ce\u5e02\u4eba\u7fa4\u97f5\u5f8b\u3001\u7cbe\u7ec6\u4f30\u8ba1\u4eba\u53e3\u5206\u5e03\n \u57ce\u5e02\u65f6\u7a7a\u52a8\u6001\u76d1\u6d4b  \r\u9ebb\u7701\u7406\u5de5\u5927\u5b66\u57ce\u5e02\u611f\u77e5\u5b9e\u9a8c\u5ba4 \u5b9e\u65f6\u5206\u6790\u57ce\u5e02\u4eba\u7fa4\u7684\u79fb\u52a8\u52a8\u6001\uff0c\u4ece\u7a7a\u95f4\u548c\u65f6\u95f4\u4e0a\u5b9a\u91cf\u53ef\u89c6\u5316\u4eba\u7fa4\u79fb\u52a8\u6a21\u5f0f\uff08Urban mobility landscape: Real time monitoring of urban mobility patterns\uff09 Flickr\u6570\u636e-\u5206\u6790\u65c5\u6e38\u8005\u5728\u57ce\u5e02\u7684\u70ed\u70b9\u5206\u5e03\u533a\u57df\uff0c\u76d1\u6d4b\u65c5\u6e38\u6d3b\u52a8\u968f\u5b63\u8282\u7684\u53d8\u5316\uff08From social sensor data to collective human behaviour patterns: Analysing and visualising spatio-temporal dynamics in urban environments\uff09   \u4eba\u7fa4\u79fb\u52a8\u52a8\u6001\u97f5\u5f8b\u5206\u6790  \u5468\u671f\u6027\u3001\u7a7a\u95f4\u5dee\u5f02\u6027 \u65f6\u95f4\u8282\u594f \u5730\u57df\u6587\u5316\u5dee\u5f02-\u65f6\u7a7a\u5730\u7406\u5dee\u5f02 \u4e0d\u540c\u65f6\u95f4\u5c3a\u5ea6\u65f6\u95f4\u89c4\u5f8b\u6027\u7684\u7a33\u5b9a\u6027   \u4eba\u53e3\u5206\u5e03\u4f30\u8ba1  \u7f8e\u56fd\u6a61\u6811\u5cad\u56fd\u5bb6\u5b9e\u9a8c\u5ba4 \u624b\u673a\u901a\u8bdd\u6570\u636e\u53ef\u4ee5\u76d1\u6d4b\u57ce\u5e02\u7684\u65f6\u7a7a\u52a8\u6001\uff0c\u4e3a\u4f30\u8ba1\u4eba\u53e3\u5bc6\u5ea6\u5206\u5e03\u63d0\u4f9b\u4e00\u79cd\u65b0\u7684\u601d\u8def\u3002    \u4eba\u7fa4\u79fb\u52a8\u65f6\u7a7a\u6a21\u5f0f\u7814\u7a76 \u4eba\u7fa4\u79fb\u52a8\u8bed\u4e49\u4fe1\u606f\n\u63d0\u53d6\u4eba\u7fa4\u79fb\u52a8\u7684\u5178\u578b\u6a21\u5f0f\u548c\u7edf\u8ba1\u89c4\u5f8b=&gt;\u65f6\u7a7a\u95f4\u884c\u4e3a\u89c4\u5f8b\n \u4eba\u7fa4\u79fb\u52a8\u65f6\u7a7a\u7edf\u8ba1\u89c4\u5f8b  \u4eba\u7fa4\u79fb\u52a8\u7684\u7edf\u8ba1\u7279\u6027-\u4e09\u4e2a\u65b9\u9762\uff1a\u4eba\u7fa4\u79fb\u52a8\u53ef\u9884\u6d4b\u6027\u3001\u57ce\u5e02\u5c45\u6c11\u4ea4\u901a\u51fa\u884c\u8ddd\u79bb\u5206\u5e03\u3001\u4eba\u7fa4\u79fb\u52a8\u4ea4\u4e92\u9884\u6d4b\u6a21\u578b \u4eba\u7fa4\u79fb\u52a8\u53ef\u9884\u6d4b\u6027  \u975e\u968f\u673a \u4eba\u66f4\u613f\u610f\u5728\u4e00\u4e2a\u6709\u9650\u7684\u8303\u56f4\u5185\u6d3b\u52a8\uff0c\u5177\u6709\u9ad8\u5ea6\u65f6\u95f4\u548c\u7a7a\u95f4\u89c4\u5f8b\u6027\uff0c\u5e76\u4e14\u5177\u6709\u5f88\u9ad8\u7684\u6982\u7387\u56de\u5230\u4e4b\u524d\u9891\u7e41\u6d3b\u52a8\u7684\u4f4d\u7f6e \u7528\u6237\u8bbf\u95ee\u5730\u70b9\u5e8f\u5217\u7684\u4fe1\u606f\u71b5=&gt;\u9ad8\u5ea6\u53ef\u9884\u6d4b\u6027   \u4ea4\u901a\u51fa\u884c\u8ddd\u79bb\u5206\u5e03  \u57ce\u5e02\u5c45\u6c11\u51fa\u884c\u7684\u5206\u5e03\u662f\u968f\u7740\u8ddd\u79bb\u8870\u51cf\uff0c\u4f46\u8870\u51cf\u7684\u5177\u4f53\u8fc7\u7a0b\u4ecd\u4e0d\u786e\u5b9a \u5c45\u6c11\u4e58\u5750\u51fa\u79df\u8f66\u548c\u79c1\u5bb6\u8f66\u51fa\u884c\u8ddd\u79bb\u670d\u4ece\u6307\u6570\u5206\u5e03\uff0c\u4f46\u6307\u6570\u7cfb\u6570\u662f\u5b58\u5728\u5dee\u5f02\u7684\uff0c\u53d7\u7279\u5b9a\u57ce\u5e02\u7ed3\u6784\u73af\u5883\u5f71\u54cd\u3002   \u4eba\u7fa4\u79fb\u52a8\u4ea4\u4e92\u9884\u6d4b\u6a21\u578b  \u9884\u6d4b\u4e24\u4e2a\u4e0d\u540c\u5730\u65b9\u4e4b\u95f4\u4eba\u7fa4\u7684\u6d41\u91cf\uff0c\u5373\u4e24\u4e2a\u5730\u65b9\u7684\u7a7a\u95f4\u4ea4\u4e92\u5f3a\u5ea6 \u7ecf\u5178\u6a21\u578b\uff1a\u91cd\u529b\u6a21\u578b\u3001\u4ecb\u5165\u673a\u4f1a\u6a21\u578b\u3001\u8f90\u5c04\u6a21\u578b     \u7fa4\u4f53\u65f6\u7a7a\u79fb\u52a8\u6a21\u5f0f  \u52a8\u6001\u8282\u594f\u6027\uff08Spatio-temporal analytics for exploring human mobility patterns and urban dynamics in the mobile age\uff09 \u6784\u5efa\u63cf\u8ff0\u4eba\u7fa4\u52a8\u6001\u53d8\u5316\u6307\u6807\u7684\u65f6\u95f4\u5e8f\u5217   \u951a\u70b9\u63d0\u53d6\u4e0e\u6d3b\u52a8\u8bc6\u522b  \u951a\u70b9\uff1a\u4eba\u5728\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u91cd\u8981\u7684\u505c\u7559\u9a7b\u70b9\uff0c\u8868\u793a\u4eba\u4e3a\u4e86\u4ece\u4e8b\u67d0\u79cd\u6d3b\u52a8\u5728\u8fd9\u4e9b\u5730\u65b9\u505c\u7559 \u57ce\u5e02\u4eba\u7fa4\u7684\u505c\u7559\u6a21\u5f0f \u5927\u591a\u6570\u7814\u7a76\u5de5\u4f5c\u4e3b\u8981\u5173\u6ce8\u7684\u662f\u4eba\u7fa4\u79fb\u52a8\u7684\u90e8\u5206\uff0c\u5ffd\u7565\u4e86\u4eba\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u505c\u7559\u884c\u4e3a\u7684\u5206\u6790\uff08\uff1f\uff1f\uff1f\uff09 \u4e24\u65b9\u9762\u7814\u7a76\uff1a\u951a\u70b9\u7684\u63d0\u53d6\u65b9\u6cd5+\u951a\u70b9\u7684\u6d3b\u52a8\u7c7b\u578b\u8bc6\u522b \u951a\u70b9\u7684\u63d0\u53d6\u65b9\u6cd5  \u4ece\u8f68\u8ff9\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u8bb2\u4eba\u7684\u79fb\u52a8\u8f68\u8ff9\u5206\u4e3a\u79fb\u52a8\u548c\u505c\u7559\u4e24\u4e2a\u4ea4\u66ff\u7684\u90e8\u5206=&gt;\u8bc6\u522b\u505c\u7559\u548c\u79fb\u52a8\u7684SMoT\uff08Stop and Move of Trajectory\uff09\u6a21\u578b \u4e24\u4e2a\u91cd\u8981\u7684\u9608\u503c\u53c2\u6570\uff1a\u7a7a\u95f4\u8303\u56f4+\u505c\u7559\u65f6\u95f4\u957f\u5ea6 \u951a\u70b9\u65e2\u53ef\u4ee5\u662f\u8f68\u8ff9\u4e2d\u5b9e\u9645\u7684\u8bb0\u5f55\u7684\u4f4d\u7f6e\u70b9\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7531\u7a7a\u95f4\u8303\u56f4\u5185\u7684\u8f68\u8ff9\u70b9\u8ba1\u7b97\u51fa\u6765\u7684\u865a\u62df\u4f4d\u7f6e   \u951a\u70b9\u7684\u6d3b\u52a8\u7c7b\u578b\u8bc6\u522b  \u4e30\u5bcc\u8f68\u8ff9\u7684\u8bed\u4e49\u4fe1\u606f\uff08\rPredicting human mobility with activity changes\uff09 POI\u65f6\u7a7a\u5438\u5f15\u529b POI\u6392\u5e8f+\u8ddd\u79bb\u8870\u51cf \u4ecd\u5341\u5206\u56f0\u96be\uff0c\u53ea\u80fd\u4ece\u6982\u7387\u4e0a\u63a8\u6d4b\u4eba\u7fa4\u7684\u6d3b\u52a8\u7c7b\u578b     \u4eba\u7fa4\u6d3b\u52a8\u7a7a\u95f4\u5206\u6790  \u4eba\u4e00\u5929\u4e2d\u6240\u8bbf\u95ee\u7684\u4f4d\u7f6e\u6240\u6784\u6210\u7684\u7a7a\u95f4\u6d3b\u52a8\u8303\u56f4=&gt;\u8861\u91cf\u5c45\u6c11\u5bf9\u57ce\u5e02\u7a7a\u95f4\u7684\u5229\u7528\u72b6\u51b5 \u6807\u51c6\u8bef\u5dee\u692d\u5706\u3001\u7f6e\u4fe1\u692d\u5706\u3001\u6700\u5c0f\u51f8\u591a\u8fb9\u5f62\u3001\u6f5c\u5728\u6d3b\u52a8\u533a\u57df\u3001\u56de\u65cb\u534a\u5f84 \u4eba\u7fa4\u7684\u6d3b\u52a8\u7a7a\u95f4\u5dee\u5f02\uff08\rAnother tale of two cities: Understanding human activity space using actively tracked cellphone location data\uff09\uff1a\u4e09\u4e2a\u6307\u6807\uff08\u6bcf\u5929\u7684\u6d3b\u52a8\u8303\u56f4\u3001\u6d3b\u52a8\u951a\u70b9\u7684\u6570\u91cf\u548c\u79fb\u52a8\u9891\u7387\uff09    \u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7814\u7a76  \u70ed\u70b9\u533a\u57df\u63a2\u6d4b\u548c\u8bed\u4e49\u8bc6\u522b  \u4eba\u7fa4\u79fb\u52a8\u70ed\u70b9\u533a\uff1a\u4eba\u7fa4\u7684\u6d3b\u52a8\u663e\u8457\u9ad8\u4e8e\u5176\u4e34\u8fd1\u533a\u57df\u7684\u5730\u65b9=&gt;\u57ce\u5e02\u4e2d\u5438\u5f15\u529b\u8f83\u9ad8\u3001\u4eba\u7fa4\u51fa\u884c\u9700\u6c42\u8f83\u9ad8\u3001\u4ea4\u901a\u8bbe\u65bd\u4e2d\u8f83\u4e3a\u5173\u952e\u7684\u533a\u57df \u70ed\u70b9\u533a\u57df\u5bf9\u65f6\u95f4\u5177\u6709\u4f9d\u8d56\u6027\uff08\u5438\u5f15\u529b\u968f\u65f6\u95f4\u4e0d\u65ad\u53d8\u5316\uff09 \u6838\u5bc6\u5ea6\u8868\u9762\uff08KDE\uff09\u7b49\u65b9\u6cd5\uff08\rDetecting and analyzing mobility hotspots using surface networks\uff09 \u4ece\u7f51\u7edc\u6587\u672c\u4e2d\u53d1\u73b0\u6709\u610f\u4e49\u7684\u5730\u7406\u77e5\u8bc6   \u571f\u5730\u5229\u7528\u63a2\u6d4b\u5206\u6790  \u5229\u7528\u4eba\u7fa4\u52a8\u6001\u79fb\u52a8\u6a21\u5f0f\u63a8\u6d4b\u57ce\u5e02\u571f\u5730\u5229\u7528\u5206\u5e03 \u603b\u4f53\u601d\u8def\uff1a\uff081\uff09\u8bb2\u57ce\u5e02\u5206\u5272\u6210\u4e0d\u540c\u7684\u7a7a\u95f4\u5206\u6790\u5355\u5143\uff1b\uff082\uff09\u6784\u5efa\u6bcf\u4e2a\u5355\u5143\u5185\u7684\u4eba\u7fa4\u6d3b\u52a8\u7684\u65f6\u95f4\u5e8f\u5217\uff1b\uff083\uff09\u91c7\u7528\u673a\u5668\u5b66\u4e60\u4e2d\u5206\u7c7b\u65b9\u6cd5\u548c\u805a\u7c7b\u65b9\u6cd5\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u5206\u7c7b\uff1b\uff084\uff09\u6839\u636e\u6bcf\u4e00\u7c7b\u4eba\u7fa4\u7684\u53d8\u5316\u6a21\u5f0f\u5206\u6790\u571f\u5730\u5229\u7528\u7c7b\u578b\u3002 EM\u7b97\u6cd5\uff08\r\u57fa\u4e8e\u5317\u4eac\u516c\u4ea4\u5237\u5361\u6570\u636e\u548c\u5174\u8da3\u70b9\u7684\u529f\u80fd\u533a\u8bc6\u522b\uff09   \u7a7a\u95f4\u4ea4\u4e92\u7ed3\u6784\u5206\u6790  \u4eba\u7fa4\u5728\u57ce\u5e02\u4e2d\u4e0d\u540c\u533a\u57df\u95f4\u79fb\u52a8\u53ef\u4ee5\u53cd\u6620\u533a\u57df\u4e4b\u95f4\u7684\u4ea4\u4e92\u5173\u7cfb\uff0c\u6f5c\u5728\u7684\u53cd\u6620\u57ce\u5e02\u4e0d\u540c\u533a\u57df\u7684\u8054\u7cfb\u7d27\u5bc6\u7a0b\u5ea6\u4ee5\u53ca\u57ce\u5e02\u591a\u4e2d\u5fc3\u7ed3\u6784 \u8bc6\u522b\u57ce\u5e02\u4e2d\u5fc3\u53ca\u591a\u4e2d\u5fc3\u7ed3\u6784\uff08\r\u57fa\u4e8e\u624b\u673a\u6570\u636e\u8bc6\u522b\u4e0a\u6d77\u4e2d\u5fc3\u57ce\u7684\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\uff0c\rIdentifying the city center using human travel flows generated from location-based social networking data\uff09 OD\u6d41+\u793e\u533a\u53d1\u73b0\uff1a\uff081\uff09\u4ece\u8f68\u8ff9\u6570\u636e\u4e2d\u63d0\u53d6\u4eba\u7fa4\u79fb\u52a8OD\u4f4d\u7f6e\uff0c\u6784\u5efa\u57fa\u4e8e\u4eba\u7fa4\u79fb\u52a8\u6d41\u91cf\u7684\u7f51\u7edc\uff1b\uff082\uff09\u5229\u7528\u590d\u6742\u7f51\u7edc\u4e2d\u7684\u793e\u533a\u63a2\u7d22\u7b97\u6cd5\u8fdb\u884c\u793e\u533a\u53d1\u73b0\uff0c\u53d1\u73b0\u7f51\u7edc\u4e2d\u4ea4\u4e92\u5f3a\u5ea6\u8f83\u5927\u7684\u4eba\u7fa4\u79fb\u52a8\u5c40\u90e8\u7d27\u5bc6\u793e\u533a\uff0c\u53d1\u73b0\u57ce\u5e02\u4e2d\u6f5c\u5728\u7684\u4eba\u7fa4\u79fb\u52a8\u793e\u533a\u7ed3\u6784\uff08\rDetecting urban road network accessibility problems using taxi GPS data\uff09    \u804c\u4f4f\u5206\u5e03\u4e0e\u53ef\u8fbe\u6027\u7814\u7a76 \u4ea4\u901a\u5730\u7406-\u63ed\u793a\u4eba\u7fa4\u79fb\u52a8\u3001\u4ea4\u901a\u8bbe\u65bd\u3001\u57ce\u5e02\u7a7a\u95f4\u4e09\u8005\u4e4b\u95f4\u7684\u5173\u7cfb\n \u804c\u4f4f\u5206\u5e03\u4e0eOD\u4f30\u8ba1  \u804c\u4f4f\u5206\u5e03\u4e3b\u8981\u7814\u7a76\u5185\u5bb9\uff1a\u804c\u4f4f\u5730\u8bc6\u522b\u65b9\u6cd5\u7814\u7a76\u3001\u804c\u4f4f\u5173\u7cfb\u7684\u5e73\u8861\u3001\u5c31\u4e1a\u4e2d\u5fc3\u4f53\u7cfb\u6d4b\u5ea6\u3001\u804c\u4f4f\u901a\u9053\u5e73\u8861\u6027\u4e0e\u8f68\u9053\u4ea4\u901a\u62e5\u6324\u7a0b\u5ea6\u7684\u5173\u7cfb \uff08\u52a8\u6001\uff09OD\u77e9\u9635   \u901a\u52e4\u884c\u4e3a  \u5728\u901a\u52e4\u65f6\u95f4\u6bb5\uff0c\u57ce\u5e02\u4e2d\u4f1a\u51fa\u73b0\u5927\u89c4\u6a21\u7684\u4eba\u7fa4\u540c\u65f6\u79fb\u52a8\u884c\u4e3a\uff0c\u5bfc\u81f4\u57ce\u5e02\u4ea4\u901a\u62e5\u5835\u762b\u75ea\u3002 \u6211\u89c9\u5f97\u4ed6\u8fd9\u91cc\u6ca1\u6709\u8bf4\u660e\u3001\u5f15\u7528\u5f88\u597d\u7684\u6587\u732e   \u57ce\u5e02\u7a7a\u95f4\u53ef\u8fbe\u6027  \u8861\u91cf\u57ce\u5e02\u7a7a\u95f4\u4e2d\u67d0\u4e00\u5730\u65b9\u5230\u5176\u4ed6\u5730\u65b9\u4fbf\u6377\u6027\u7684\u4e00\u79cd\u6307\u6807\uff0c\u7528\u6765\u53cd\u6620\u57ce\u5e02\u7a7a\u95f4\u533a\u4f4d\u7684\u516c\u5e73\u6027\u548c\u4f18\u5148\u7ea7 \u51fa\u79df\u8f66\u8f68\u8ff9\u6570\u636e  \u80fd\u53cd\u6620\u57ce\u5e02\u4e0d\u540c\u533a\u57df\u4eba\u7fa4\u7684\u51fa\u884c\u8d77\u70b9\u548c\u7ec8\u70b9 \u53cd\u6620\u57ce\u5e02\u9053\u8def\u738b\u7684\u52a8\u6001\u8def\u51b5\u7b49\u4fe1\u606f \u5e7f\u6cdb\u5e94\u7528\u4e0e\u53ef\u8fbe\u6027\u7814\u7a76   POI\u53ef\u8fbe\u6027\u3001\u57ce\u5e02\u7279\u5b9a\u4f4d\u7f6e\u53ef\u8fbe\u6027\u3001\u63a2\u6d4b\u57ce\u5e02\u4e2d\u53ef\u8fbe\u6027\u8f83\u4f4e\u7684\u5c45\u4f4f\u533a\u57df\u3001\u516c\u5171\u5065\u5eb7\u8bbe\u65bd\u53ef\u8fbe\u6027\u7b49 \u53ef\u8fbe\u6027\u7684\u7814\u7a76\u5f88\u5e7f\u6cdb\uff0c\u4e2a\u4eba\u8ba4\u4e3a\u4f5c\u8005\u53ef\u8fbe\u6027\u90e8\u5206\u6982\u8ff0\u6bd4\u8f83\u7b80\u5355\uff0c\u6709\u5f88\u5927\u6269\u5c55    \u4eba\u7fa4\u805a\u6563\u65f6\u7a7a\u6a21\u5f0f \u4e2a\u4eba\u7406\u89e3\uff1a\u5b9e\u9a8c\u6574\u4f53\u4e0d\u96be\uff0c\u65b9\u6cd5\u90e8\u5206\u7406\u89e3\u4e0d\u96be\uff0c\u7406\u8bba\u3001\u5206\u6790\u90e8\u5206\u6bd4\u8f83\u5145\u8db3\n\u5f15\u8a00  \u4eba\u7fa4\u79fb\u52a8\u3001\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u3001\u57ce\u5e02\u4ea4\u901a-\u4e09\u8005\u76f8\u4e92\u4f5c\u7528\u3001\u5bc6\u5207\u76f8\u5173-\u7814\u7a76\u57ce\u5e02\u4eba\u7fa4\u79fb\u52a8\u65f6\u7a7a\u6a21\u5f0f\u5bf9\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7684\u89c4\u5212\u3001\u57ce\u5e02\u4ea4\u901a\u7684\u7ba1\u7406\u5177\u6709\u91cd\u8981\u610f\u4e49 \u76ee\u524d\u7814\u7a76\uff1a\u6784\u5efa\u4eba\u7fa4\u53d8\u5316\u63cf\u8ff0\u6307\u6807-\u57fa\u4e8e\u6307\u6807\u7684\u65f6\u95f4\u53d8\u5316\u5e8f\u5217\u5206\u6790-\u663e\u8457\u5dee\u5f02\u7684\u4eba\u7fa4\u79fb\u52a8\u65f6\u7a7a\u6a21\u5f0f \u4eba\u7fa4\u805a\u6563\u662f\u57ce\u5e02\u4eba\u7fa4\u79fb\u52a8\u65f6\u7a7a\u6a21\u5f0f\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u5f81 \u4f20\u7edf\u7814\u7a76=&gt;\u5927\u89c4\u6a21\u4eba\u7fa4\u79fb\u52a8\u8f68\u8ff9\u6570\u636e=&gt;\u63d0\u53d6\u57ce\u5e02\u4eba\u7fa4\u805a\u6563\u6a21\u5f0f \u7075\u9b42\u53d1\u95ee\uff1a\u57ce\u5e02\u4e2d\u5b58\u5728\u4ec0\u4e48\u6837\u7684\u4eba\u7fa4\u805a\u6563\u65f6\u7a7a\u6a21\u5f0f\uff1f\u6bcf\u79cd\u6a21\u5f0f\u4eba\u7fa4\u805a\u6563\u7684\u5f3a\u5ea6\u4ee5\u53ca\u6301\u7eed\u65f6\u95f4\u5982\u4f55\u5dee\u5f02\uff1f\u5982\u4f55\u63d0\u53d6\u57ce\u5e02\u4eba\u7fa4\u805a\u6563\u65f6\u7a7a\u6a21\u5f0f\uff1f\u4e0d\u540c\u529f\u80fd\u533a\u4eba\u7fa4\u805a\u6563\u6a21\u5f0f\u662f\u5426\u5dee\u5f02\uff1f=&gt;\u63a2\u7d22\u8fd9\u4e9b\u95ee\u9898\u7684\u610f\u4e49\uff1a\u52a0\u6df1\u7406\u89e3 \u672c\u7ae0\u4e3b\u8981\u76ee\u7684\uff1a\u4ece\u6d77\u91cf\u7684\u624b\u673a\u4f4d\u7f6e\u6570\u636e\u4e2d\u63d0\u53d6\u51fa\u57ce\u5e02\u4eba\u7fa4\u805a\u6563\u7684\u65f6\u7a7a\u6a21\u5f0f+\u672c\u7ae0\u5185\u5bb9  \u4eba\u7fa4\u805a\u6563\u65f6\u7a7a\u6a21\u5f0f\u63d0\u53d6\u65b9\u6cd5   \u4eba\u7fa4\u805a\u6563\u6307\u6807\n \u4eba\u7fa4\u805a\u96c6\u8868\u793a\u5927\u91cf\u7684\u4eba\u7fa4\u5728\u4e00\u5b9a\u7684\u65f6\u95f4\u5185\u4ece\u5176\u4ed6\u5730\u65b9\u6c47\u805a\u5230\u6b64\u5730\uff1b\u4eba\u7fa4\u6d88\u6563\u8868\u793a\u5728\u4e00\u5b9a\u7684\u65f6\u95f4\u5185\u6709\u5927\u91cf\u7684\u4eba\u7fa4\u4ece\u8be5\u5730\u65b9\u53bb\u5f80\u57ce\u5e02\u4e2d\u5176\u4ed6\u5730\u65b9\uff0c\u4eba\u7fa4\u7684\u8fd9\u79cd\u805a\u6563\u662f\u968f\u7740\u7a7a\u95f4\u548c\u65f6\u95f4\u4e0d\u65ad\u53d8\u5316\u7684 \u51c0\u6d41\u91cf\uff08netflow\uff09\u4f5c\u4e3a\u8861\u91cf\u6307\u6807  \u6d41\u5165\u91cf\u548c\u6d41\u51fa\u91cf\u7684\u5dee\u503c\u8868\u793a\u4eba\u7fa4\u53d8\u5316\u91cf \u51c0\u6d41\u91cf\u7edd\u5bf9\u503c\u53cd\u6620\u4eba\u7fa4\u805a\u6563\u7684\u5f3a\u5ea6      \u5f3a\u5ea6\u7b49\u7ea7\u5206\u7c7b\n \u5341\u5206\u4f4d\u6570\u6cd5\u5212\u5206=&gt;\u5341\u4e2a\u5f3a\u5ea6\u7b49\u7ea7    \u65f6\u7a7a\u805a\u7c7b\n \u6784\u5efa\u77e9\u9635+X-means\u805a\u7c7b\uff08WEKA\u4e2d\u5b9e\u73b0\uff09+\u6b27\u6c0f\u8ddd\u79bb\u51fd\u6570\uff08\u901a\u8fc7\u7b49\u7ea7\u5206\u7c7b\u540e\u6784\u5efa\u7684\u662f\u79bb\u6563\u503c\u7684\u77e9\u9635\uff0cKmean\u4e5f\u80fd\u5bf9\u79bb\u6563\u503c\u8fdb\u884c\u805a\u7c7b\u4e48\uff1f\u90a3\u5b83\u8fd9\u4e2a\u8ddd\u79bb\u51fd\u6570\u5c31\u9519\u4e86\u554a\uff09 \u4e2a\u4eba\u8ba4\u4e3a\u5f88\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u4f46\u662f\u4f5c\u8005\u6982\u5ff5\u6027\u7684\u4e1c\u897f\u8bb2\u8ff0\u5730\u5f88\u4e30\u5bcc\uff0c\u503c\u5f97\u53c2\u8003    \u5b9e\u9a8c\u7ed3\u679c\u4e0e\u5206\u6790 \u6574\u4f53\u96be\u5ea6\u4e0d\u5927\u3002\u524d\u6587\u63d0\u53ca\u5728WEKA\u4e2d\u8fd0\u884c\u805a\u7c7b\uff0c\u4f46\u7f3a\u5c11\u5bf9\u805a\u7c7b\u53c2\u6570\u8bc4\u4ef7\u90e8\u5206\uff0c\u4ec5\u5206\u6790\u805a\u7c7b\u7ed3\u679c\u3002\u5206\u6790\u90e8\u5206\u5185\u5bb9\u6bd4\u8f83\u591a\uff0c\u201c\u80fd\u8bf4\u4f1a\u9053\u201d\uff0c\u770b\u56fe\u8bf4\u8bdd\u7684\u672c\u4e8b\u81ea\u5df1\u8fd8\u662f\u6bd4\u8f83\u6b20\u7f3a\u554a\uff08\u4f46\u662f\u770b\u6587\u7ae0\u7684\u65f6\u5019\u81ea\u5df1\u53c8\u603b\u662f\u8df3\u8fc7\u3002\u3002\u6076\u6027\u5faa\u73af\uff09\n\u4eba\u7fa4\u805a\u6563\u7a33\u5b9a\u6027\u5b9a\u91cf\u6a21\u578b\u4e0e\u8bc4\u4ef7 \u5f15\u8a00  \u7fa4\u79fb\u52a8\u7684\u7a33\u5b9a\u6027\uff1a\u8be5\u5730\u65b9\u4eba\u7fa4\u7a81\u53d8\u7684\u7a0b\u5ea6\uff0c\u6f5c\u5728\u5730\u53cd\u6620\u4e86\u8be5\u5730\u65b9\u4ea4\u901a\u9700\u6c42\u7684\u7a33\u5b9a\u6027 \u5206\u6790\u4eba\u7fa4\u805a\u6563\u7684\u65f6\u95f4\u5e8f\u5217\u53d8\u5316=&gt;\u4eba\u7fa4\u805a\u6563\u7a33\u5b9a\u6027\u8bc4\u4ef7\u6a21\u578b \u771f\u5fc3\u89c9\u5f97\u4ed6\u5199\u7684\u5f88\u591a\u5185\u5bb9\u90fd\u6bd4\u8f83\u8d58\u8ff0\uff08\u91cd\u590d\uff09  \u4eba\u7fa4\u805a\u6563\u7a33\u5b9a\u6027\u8bc4\u4ef7\u6a21\u578b  \u4eba\u7fa4\u805a\u6563\u8fc7\u7a0b\u53ca\u5e8f\u5217\u5b9a\u4e49  \u5177\u6709\u751f\u547d\u5468\u671f\u7684\u8fc7\u7a0b\uff1a \u65f6\u95f4\u5e8f\u5217\u3001\u805a\u96c6\u8fc7\u7a0b\u3001\u6d88\u6563\u8fc7\u7a0b\u3001\u805a\u6563\u8fc7\u7a0b\uff08\u4ea4\u66ff\u8fc7\u7a0b\uff09   \u4eba\u7fa4\u805a\u6563\u8fc7\u7a0b\u7a33\u5b9a\u6027  \u5f71\u54cd\u56e0\u7d20\uff1a  \u6301\u7eed\u65f6\u95f4 \u51c0\u6d41\u91cf\u7d2f\u8ba1\u503c\u53d8\u5316\u91cf\uff1a\u8d8b\u52bf\u7ebf\u7684\u659c\u7387\u6765\u8868\u793a \u6ce2\u52a8\u5e45\u5ea6\uff1a\u771f\u503c\u548c\u8d8b\u52bf\u503c\u7684\u5dee\u6765\u5b9a\u91cf\u805a\u96c6\u8fc7\u7a0b\uff1b\u6ce2\u52a8\u5e45\u5ea6\u7684\u6807\u51c6\u5dee\u6765\u8861\u91cf\u6574\u4e2a\u805a\u96c6\u8fc7\u7a0b\u7684\u6ce2\u52a8\u60c5\u51b5   \u6574\u4e2a\u805a\u96c6\u8fc7\u7a0b\u7684\u7a33\u5b9a\u6027  \u51c0\u6d41\u91cf\u7d2f\u8ba1\u503c\u53d8\u5316\u91cf\u7684\u7a33\u5b9a\u6027f \u6ce2\u52a8\u5e45\u5ea6\u7684\u7a33\u5b9a\u6027g \u6574\u4e2a\u805a\u96c6\u8fc7\u7a0b\u7684\u7a33\u5b9a\u6027s=f*g     \u4eba\u7fa4\u805a\u6563\u5e8f\u5217\u7a33\u5b9a\u6027  \u805a\u6563\u5e8f\u5217\u591a\u8fb9\u5f62\u7684\u9762\u79efA\u6765\u8868\u793a\u805a\u6563\u5e8f\u5217\u7684\u7a33\u5b9a\u6027\u7a0b\u5ea6 \u805a\u96c6\u8fc7\u7a0b\u548c\u6d88\u6563\u8fc7\u7a0b\u4ea4\u66ff\u7684\u6ce2\u52a8\u5e45\u5ea6\uff1a\u4e0a\u8fb9\u754c\u7684\u957f\u5ea6P\u6765\u8861\u91cf\u5176\u6ce2\u52a8\u5e45\u5ea6 \u9762\u79ef\u8d8a\u5927\u8d8a\u7a33\u5b9a\uff0c\u800c\u4e0a\u8fb9\u754c\u8d8a\u957f\u8d8a\u4e0d\u7a33\u5b9a\u3002\u91c7\u7528\u4e24\u8005\u7684\u6bd4\u7387\u6765\u5b9a\u4e49\u6574\u4e2a\u805a\u6563\u5e8f\u5217\u7684\u7a33\u5b9a\u6027Q=A/P    \u5b9e\u9a8c\u7ed3\u679c\u4e0e\u5206\u6790  \u9488\u5bf9\u6bcf\u4e00\u4e2a\u57fa\u7ad9\u5206\u6790 \u5212\u5206\u4e09\u4e2a\u65f6\u95f4\u6bb5\u5206\u6790 \u57fa\u4e8e\u4ea4\u901a\u5206\u6790\u533a\uff08TAZ\uff09\u5206\u6790 \u57fa\u4e8e\u516c\u4ea4\u7cfb\u7edf\u5206\u6790 \u4e0e\u4fe1\u606f\u71b5\u6307\u6807\u5bf9\u6bd4  \u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u8981\u7d20\u4e0e\u4eba\u7fa4\u805a\u6563\u7a33\u5b9a\u6027\u7684\u5173\u8054\u6027\u5206\u6790 \u5f15\u8a00  \u57ce\u5e02\u4eba\u7fa4\u79fb\u52a8\u6a21\u5f0f\u4e0e\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u5bc6\u5207\u76f8\u5173\uff0c\u7814\u7a76\u4eba\u7fa4\u79fb\u52a8\u6a21\u5f0f\u548c\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7684\u5173\u7cfb \u63a2\u7d22\u57ce\u5e02\u57fa\u7840\u8bbe\u65bd\u3001\u571f\u5730\u5229\u7528\u3001\u8def\u7f51\u7279\u6027\u3001\u793e\u4f1a\u7ecf\u6d4e\u7279\u6027\u7b49\u5bf9\u4eba\u7fa4\u79fb\u52a8\u8ddd\u79bb\u3001\u901a\u52e4\u6a21\u5f0f\u3001\u6d3b\u52a8\u7a7a\u95f4\u8303\u56f4\u3001\u65f6\u7a7a\u52a8\u6001\u7b49\u5f71\u54cd \u5728\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u4e2d\u54ea\u4e9b\u56e0\u7d20\u5bf9\u4eba\u7fa4\u805a\u6563\u7a33\u5b9a\u6027\u5177\u6709\u663e\u8457\u7684\u5f71\u54cd\uff1f \u5c06\u5176\u4eba\u7fa4\u79fb\u52a8\u7a33\u5b9a\u6027\u4f5c\u4e3a\u56e0\u53d8\u91cf\uff0c\u4ece\u793e\u4f1a\u7ecf\u6d4e\u5c5e\u6027\u3001\u571f\u5730\u5229\u7528\u7ed3\u6784\u548c\u8def\u7f51\u4e2d\u5fc3\u6027\u7ed3\u6784\u4e09\u4e2a\u65b9\u9762\u6765\u6784\u5efa\u89e3\u91ca\u53d8\u91cf\uff0c\u7136\u540e\u6784\u5efa\u56e0\u53d8\u91cf\uff08\u7a33\u5b9a\u6027\uff09\u548c\u89e3\u91ca\u53d8\u91cf\uff08\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\uff09\u4e4b\u95f4\u7684\u591a\u5143\u7ebf\u6027\u56de\u5f52\u6a21\u578b\u6765\u5b9a\u91cf\u5206\u6790\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u4e2d\u8fd9\u4e9b\u56e0\u7d20\u5bf9\u4eba\u7fa4\u805a\u6563\u7a33\u5b9a\u6027\u7684\u5f71\u54cd  \u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u6307\u6807  \u793e\u4f1a\u7ecf\u6d4e\u5c5e\u6027  \u6307\u57ce\u5e02\u4eba\u7fa4\u7684\u793e\u4f1a\u7ecf\u6d4e\u6d3b\u52a8\u6240\u8d4b\u4e88\u7684\u7279\u6027\u3002 \u6bcf\u4e2aTAZ\u7684\u4eba\u53e3\u3001\u9762\u79ef\u3001\u4eba\u53e3\u5bc6\u5ea6\u3001\u623f\u4ef7 \u4eba\u53e3\uff1a\u4ece\u624b\u673a\u5b9a\u4f4d\u6570\u636e\u4e2d\u8bc6\u522b\u6bcf\u4e2a\u4ea4\u901a\u5c0f\u533a\u7684\u5c45\u4f4f\u4eba\u53e3\u6570\u636e\uff1a\u5982\u679c\u7528\u6237\u5728\u51cc\u666800\u70b9-06\u70b9\u65f6\u95f4\u6bb5\u5728\u67d0\u4e00\u57fa\u7ad9\u505c\u7559\u65f6\u957f\u5927\u4e8e4\u5c0f\u65f6\uff0c\u5c06\u8be5\u57fa\u7ad9\u4f5c\u4e3a\u8be5\u7528\u6237\u7684\u5c45\u4f4f\u5730\uff0c\u6839\u636e\u8be5\u65b9\u6cd5\u53ef\u4ee5\u8bc6\u522b\u51fa\u6bcf\u4e2a\u57fa\u7ad9\u4f4d\u7f6e\u7684\u5c45\u4f4f\u4eba\u6570\u3002\u8be5\u5c45\u4f4f\u4eba\u6570\u5e76\u975e\u7edd\u5bf9\u7684\u5c45\u4f4f\u4eba\u6570\uff0c\u800c\u53ea\u662f\u4ece\u6570\u636e\u5b9a\u4f4d\u6570\u636e\u8bc6\u522b\u51fa\u7684\u5c45\u4f4f\u4eba\u6570\u3002 \u4eba\u53e3\u5bc6\u5ea6\u5206\u5e03\u4e0e\u4eba\u53e3\u5206\u5e03\u5b58\u5728\u663e\u8457\u5dee\u5f02 \u91c7\u7528\u623f\u4ef7\u6765\u53cd\u6620\u4ea4\u901a\u5c0f\u533a\u7684\u7ecf\u6d4e\u53d1\u5c55\u548c\u4e2a\u4eba\u6536\u5165\u6c34\u5e73   \u571f\u5730\u5229\u7528\u7ed3\u6784  \u6307\u4e00\u4e2a\u533a\u57df\u5185\u5404\u79cd\u529f\u80fd\u7528\u5730\u7c7b\u578b\u7684\u6bd4\u4f8b\u53ca\u5176\u76f8\u4e92\u5f71\u54cd\u3001\u4f5c\u7528\u6240\u5f62\u6210\u7684\u7a7a\u95f4\u7ed3\u6784\u5173\u7cfb \u571f\u5730\u529f\u80fd\u7ed3\u6784\u7684\u5185\u6db5  \u8be5\u533a\u57df\u7531\u54ea\u4e9b\u571f\u5730\u5229\u7528\u7c7b\u578b\u7ec4\u6210\u53ca\u5176\u6bd4\u4f8b\u5173\u7cfb \u8be5\u533a\u57df\u5185\u5404\u79cd\u571f\u5730\u5229\u7528\u7c7b\u578b\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u5173\u7cfb\u53ca\u5176\u968f\u65f6\u95f4\u7684\u6f14\u53d8   \u571f\u5730\u5229\u7528\u7c7b\u578b\uff1a\u5546\u4e1a\u7528\u5730\uff08C\uff09\u3001\u5de5\u4e1a\u7528\u5730\uff08I\uff09\u3001\u5c45\u4f4f\u7528\u5730\uff08R\uff09\u3001\u516c\u5171\u7528\u5730\uff08P\uff09\u3001\u4ea4\u901a\u7528\u5730\uff08T\uff09\u548c\u5176\u4ed6\u7528\u5730\uff08O\uff09 \u571f\u5730\u5229\u7528\u6bd4\u4f8b \u533a\u4f4d\u71b5  \u6307\u67d0\u533a\u57df\u67d0\u79cd\u571f\u5730\u5229\u7528\u7c7b\u578b\u9762\u79ef\u5360\u6574\u4e2a\u7814\u7a76\u533a\u57df\u8be5\u571f\u5730\u5229\u7528\u7c7b\u578b\u7684\u6bd4\u91cd\u4e0e\u8be5\u533a\u57df\u571f\u5730\u603b\u9762\u79ef\u5360\u6574\u4e2a\u7814\u7a76\u533a\u57df\u571f\u5730\u9762\u79ef\u6bd4\u91cd\u4e4b\u6bd4 \u8868\u793a\u7684\u662f\u4ea4\u901a\u5c0f\u533a\u5185\u67d0\u79cd\u7c7b\u578b\u7684\u571f\u5730\u5229\u7528\u6240\u5360\u7684\u6bd4\u4f8b\u4e0e\u5168\u5c40\u76f8\u6bd4\u662f\u5426\u5b58\u5728\u533a\u4f4d\u4f18\u52bf\u3002\u533a\u4f4d\u71b5\u8d8a\u5927\u8868\u793a\u8be5\u571f\u5730\u7c7b\u578b\u7684\u4f18\u52bf\u8d8a\u5927   \u4fe1\u606f\u71b5  \u53cd\u6620\u4e00\u4e2a\u533a\u57df\u7684\u571f\u5730\u5229\u7528\u7ed3\u6784\u7684\u6df7\u5408\u5ea6\u548c\u591a\u6837\u6027 \u4fe1\u606f\u71b5\u662f\u6307\u4e00\u4e2a\u533a\u57df\u5185\u5404\u79cd\u7c7b\u578b\u7684\u571f\u5730\u7ec4\u7ec7\u5b89\u6392\u7684\u6709\u5e8f\u5ea6\uff0c\u4fe1\u606f\u71b5\u8d8a\u5927\uff0c\u8be5\u533a\u57df\u571f\u5730\u5229\u7528\u7684\u6709\u5e8f\u5ea6\u8d8a\u4f4e\uff0c\u8868\u793a\u8be5\u533a\u57df\u571f\u5730\u5229\u7528\u6df7\u5408\u5ea6\u8d8a\u9ad8 \u7528\u6765\u8861\u91cf\u533a\u57df\u5185\u4e0d\u540c\u571f\u5730\u5229\u7528\u7c7b\u578b\u6bd4\u4f8b\u4e4b\u95f4\u7684\u5173\u7cfb   \u5747\u8861\u5ea6  \u4fe1\u606f\u71b5\u4e0e\u6700\u5927\u71b5\u7684\u6bd4\u503c \u4fe1\u606f\u71b5\u4ec5\u4ec5\u53cd\u6620\u7684\u662f\u5355\u4e2a\u5c0f\u533a\u5185\u4e0d\u540c\u7c7b\u578b\u571f\u5730\u7684\u6df7\u5408\u5ea6\uff0c\u65e0\u6cd5\u53cd\u6620\u5c0f\u533a\u5185\u5404\u571f\u5730\u5229\u7528\u7c7b\u578b\u7684\u5747\u8861\u7a0b\u5ea6\uff0c\u8fd9\u4f7f\u5f97\u5c0f\u533a\u4e4b\u95f4\u7f3a\u4e4f\u53ef\u6bd4\u6027     \u9053\u8def\u7f51\u7ed3\u6784  \u5206\u7c7b \u8def\u7f51\u5bc6\u5ea6  \u8be5\u533a\u57df\u8def\u7f51\u7684\u5bc6\u96c6\u7a0b\u5ea6 \u4e00\u4e2a\u533a\u57df\u5185\u6240\u6709\u9053\u8def\u7684\u603b\u957f\u5ea6\u4e0e\u533a\u57df\u7684\u603b\u9762\u79ef\u4e4b\u6bd4   \u8def\u7f51\u4e2d\u5fc3\u6027  \u65e0\u5411\u7f51\u7edc \u5c06\u4f4d\u4e8eTAZ\u5185\u90e8\u8def\u6bb5\u8282\u70b9\u4e2d\u5fc3\u6027\u7684\u5e73\u5747\u503c\u4f5c\u4e3a\u8be5TAZ\u7684\u4e2d\u5fc3\u6027 \u63a5\u8fd1\u4e2d\u5fc3\u6027  \u8861\u91cf\u4e00\u4e2a\u8282\u70b9\u4e0e\u8def\u7f51\u4e2d\u5176\u4ed6\u6240\u6709\u8282\u70b9\u7684\u4e34\u8fd1\u7a0b\u5ea6 \u57ce\u5e02\u7a7a\u95f4\u4e2d\u5fc3\u4f4d\u7f6e\uff0c\u63a5\u8fd1\u4e2d\u5fc3\u6027\u6700\u9ad8\uff1b\u5904\u4e8e\u57ce\u5e02\u8fb9\u7f18\uff0c\u63a5\u8fd1\u4e2d\u5fc3\u6027\u8d8a\u4f4e   \u4ecb\u6570\u4e2d\u5fc3\u6027  \u8861\u91cf\u67d0\u4e00\u8282\u70b9\u5728\u8def\u7f51\u4e2d\u8d77\u4e2d\u4ecb\u4f5c\u7528\u7684\u7a0b\u5ea6 \u4ecb\u6570\u4e2d\u5fc3\u6027\u5e38\u7528\u6765\u8861\u91cf\u57ce\u5e02\u9053\u8def\u4e2d\u8282\u70b9\u548c\u8def\u6bb5\u7684\u4ea4\u901a\u6d41\u91cf \u9ad8\u7b49\u7ea7\u9053\u8def\u7684\u4ecb\u6570\u4e2d\u5fc3\u6027\u8f83\u9ad8\uff0c\u5982\u5feb\u901f\u8def\u548c\u4e3b\u5e72\u8def\uff0c\u8fd9\u4e9b\u8def\u6bb5\u5728\u57ce\u5e02\u4e2d\u8d77\u5230\u91cd\u8981\u7684\u8fde\u901a\u4f5c\u7528   \u76f4\u8fbe\u4e2d\u5fc3\u6027  \u8861\u91cf\u7f51\u7edc\u4e2d\u8282\u70b9\u7684\u76f4\u8fbe\u6548\u7387   \u5168\u5c40\u4e2d\u5fc3\u6027\uff1a\u901a\u8fc7\u8ba1\u7b97\u8be5\u8282\u70b9\u5230\u8def\u7f51\u4e2d\u5176\u4ed6\u6240\u6709\u7684\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u8ddd\u79bb\uff0c\u662f\u4ece\u5168\u5c40\u7684\u89d2\u5ea6\u6765\u641c\u7d22\u8def\u7f51\u4e2d\u5176\u4ed6\u6240\u6709\u7684\u8282\u70b9 \u5c40\u90e8\u4e2d\u5fc3\u6027\uff1a\u5728\u8ba1\u7b97\u4e2d\u5fc3\u6027\u65f6\uff0c\u53ea\u641c\u7d22\u8be5\u8282\u70b9\u4e00\u5b9a\u8303\u56f4\u5185\u7684\u8282\u70b9\uff0c\u8d85\u51fa\u8be5\u8ddd\u79bb\u8303\u56f4\u65e0\u9700\u8ba1\u7b97\uff085km. 10km, 15km, 20km, 25km, 30km\uff09      \u591a\u5143\u7ebf\u6027\u56de\u5f52\u6a21\u578b \u5b9e\u9a8c\u7ed3\u679c\u4e0e\u5206\u6790 \u62df\u5408\u4f18\u5ea6\u592a\u592a\u592a\u5c0f\u4e86\u3002\u4f5c\u8005\u7adf\u7136\u5b8c\u5168\u4e0d\u63d0\u62df\u5408\u4f18\u5ea6\u4f18\u52a3\u7684\u95ee\u9898\u3002\u8fd9\u4e48\u4f4e\u7684\u62df\u5408\u4f18\u5ea6\uff0c\u540e\u7eed\u7684\u5206\u6790\u771f\u7684\u6709\u7528\u4e48\uff1f\n\u603b\u7ed3\u4e0e\u5c55\u671b \u8bba\u6587\u603b\u7ed3 \u57ce\u5e02\u77db\u76fe/\u57ce\u5e02\u95ee\u9898\u3001\u4eba\u7fa4\u79fb\u52a8\u6a21\u5f0f\u7814\u7a76\u3001\u7fa4\u4f53\u79fb\u52a8\u8f68\u8ff9\u5927\u6570\u636e\n\u7814\u7a76\u5185\u5bb9\uff1a\n \u4eba\u7fa4\u805a\u6563\u65f6\u7a7a\u6a21\u5f0f\u8bc6\u522b\u65b9\u6cd5\u7814\u7a76 \u4eba\u7fa4\u805a\u6563\u52a8\u6001\u7a33\u5b9a\u6027\u8bc4\u4ef7\u6a21\u578b\u7814\u7a76 \u4eba\u7fa4\u805a\u6563\u52a8\u6001\u7a33\u5b9a\u6027\u4e0e\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u5173\u8054\u6027\u7814\u7a76  \u4e3b\u8981\u521b\u65b0\u70b9 \u66f4\u591a\u7684\u662f\u8bf4\u660e\u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\n\u672c\u6587\u57fa\u4e8e\u6d77\u91cf\u7684\u624b\u673a\u4f4d\u7f6e\u6570\u636e\uff0c\u4ee5\u4eba\u7fa4\u805a\u6563\u4e3a\u4e3b\u9898\uff0c\u4ee5\u65f6\u95f4\u5730\u7406\u5b66\u4e3a\u7406\u8bba\u6307\u5bfc\uff0c\u4ece\u5c45\u6c11\u65f6\u7a7a\u95f4\u79fb\u52a8\u884c\u4e3a\u89d2\u5ea6\u5165\u624b\u7814\u7a76\u57ce\u5e02\u4eba\u7fa4\u805a\u6563\u7684\u65f6\u7a7a\u7279\u6027\uff0c\u5305\u62ec\u4eba\u7fa4\u805a\u6563\u7684\u65f6\u7a7a\u6a21\u5f0f\u3001\u805a\u6563\u65f6\u7a7a\u52a8\u6001\u7a33\u5b9a\u6027\u4ee5\u53ca\u4e0e\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7684\u5173\u7cfb\u3002\u521b\u65b0\u70b9\u5982\u4e0b\uff1a\n \u63d0\u51fa\u4e00\u79cd\u4ece\u6d77\u91cf\u624b\u673a\u4f4d\u7f6e\u6570\u636e\u4e2d\u8bc6\u522b\u4eba\u7fa4\u805a\u6563\u65f6\u7a7a\u6a21\u5f0f\u7684\u65b9\u6cd5 \u63d0\u51fa\u4e86\u4e00\u79cd\u8bc4\u4ef7\u4eba\u7fa4\u805a\u6563\u52a8\u6001\u7a33\u5b9a\u6027\u7684\u5b9a\u91cf\u6a21\u578b \u63a2\u7d22\u4e86\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u8981\u7d20\u4e0e\u4eba\u7fa4\u805a\u6563\u7a33\u5b9a\u6027\u7684\u5173\u7cfb  \u7814\u7a76\u5c55\u671b \u8bf4\u7684\u6709\u70b9\u865a\u3002\u56f4\u7ed5\u4e0a\u8ff0\u51e0\u70b9\u201c\u8fdb\u4e00\u6b65\u201d\u3002\u3002\u3002\n\u9762\u5411\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u573a\u666f\u8bed\u4e49\u7406\u89e3\u7684\u6982\u7387\u4e3b\u9898\u6a21\u578b\u7814\u7a76 \r\u6731\u797a\u742a-2018-\u6b66\u6c49\u5927\u5b66\n  \u5bf9\u573a\u666f\u5206\u7c7b\u7814\u7a76\u4e0d\u719f\u6089\uff0c\u6709\u4e9b\u6b65\u9aa4\u6bd4\u8f83\u8df3\u8dc3\uff0c\u90e8\u5206\u53e5\u5b50\u8f83\u96be\u7406\u89e3\uff0c\u611f\u89c9\u91cd\u590d\u7684\u8bdd\u597d\u591a\uff1b\u4e0d\u8fc7\u5979\u7684\u56fe\u90fd\u86ee\u597d\u770b\u7684\n  \u5185\u5bb9\u771f\u7684\u5f88\u4e30\u5bcc\uff01\u522b\u4eba\u6bcf\u4e00\u7ae0\u90fd\u5bf9\u5e94\u4e86\u4e00\u7bc7\u8bba\u6587\uff0c\u5979\u4e00\u7ae0\u5bf9\u5e94\u4e86\u4e24\u7bc7\u8bba\u6587\u5427~\u800c\u4e14\u903b\u8f91\u601d\u8def\u5f88\u901a\u987a\uff0c\u867d\u7136\u90e8\u5206\u7ae0\u8282\u770b\u4e0d\u61c2\uff0c\u4f46\u662f\u5185\u5bb9\u8fd9\u4e48\u591a\u6574\u7406\u6210\u8fd9\u79cd\u7a0b\u5ea6\u5f88\u5389\u5bb3\u4e86\u3002\u6700\u540e\u603b\u7ed3\u6210\u679c\uff0c\u63d0\u51fa\u4e00\u4e2a\u539f\u578b\u7cfb\u7edf\uff0c\u4e5f\u662f\u86ee\u6709\u521b\u610f\u7684\u3002\n  \u5e0c\u671b\u4f60\u7684\u79fb\u52a8\u786c\u76d8\u6ca1\u4e8b\u3002\u4e0d\u8981\u518d\u4e94\u96f7\u8f70\u9876\u4e86\u3001\n  \u7eea\u8bba \u7814\u7a76\u80cc\u666f\u4e0e\u610f\u4e49   \u7b2c\u4e00\u6bb5\uff1a\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u6570\u636e-\u5f71\u50cf\u4fe1\u606f\u63d0\u53d6\u4e0e\u5206\u7c7b-\u53ef\u6301\u7eed\u53d1\u5c55\u91cd\u5927\u6218\u7565\u610f\u4e49-\u5c24\u5176\u4e2d\u56fd\n  \u7b2c\u4e8c\u6bb5\uff1a\u7c7b\u5185\u65b9\u5dee\u589e\u5927\u4ee5\u53ca\u7c7b\u95f4\u65b9\u5dee\u51cf\u5c0f\u73b0\u8c61-\u9762\u5411\u5bf9\u8c61\u7684\u5730\u7269\u5206\u7c7b\u65b9\u6cd5-\u591a\u76ee\u6807\u3001\u4e0d\u540c\u7a7a\u95f4\u5206\u5e03\u65b9\u5f0f\u3001\u573a\u666f\u591a\u53d8-\u5e95\u5c42\u7279\u5f81\u4e0e\u9ad8\u5c42\u8bed\u4e49\u4fe1\u606f\u4e4b\u95f4\u7684\u8bed\u4e49\u9e3f\u6c9f-\u9ad8\u5c42\u573a\u666f\u8bed\u4e49\u7406\u89e3\u65b0\u9636\u6bb5\n  \u7b2c\u4e09\u6bb5\uff1a\n \u5bf9\u9ad8\u5206\u5f71\u50cf\u8fdb\u884c\u81ea\u52a8\u6807\u6ce8\u3001\u83b7\u53d6\u4e0d\u540c\u533a\u57df\u8bed\u4e49\u4fe1\u606f=&gt;\u573a\u666f\u5206\u7c7b=&gt;\u5efa\u7acb\u5f71\u50cf\u5e95\u5c42\u7279\u5f81\u5230\u9ad8\u5c42\u573a\u666f\u8bed\u4e49\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb \u57fa\u4e8e\u76ee\u6807\u8bc6\u522b\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff08\u4f20\u7edf\u7814\u7a76\uff09  \u6839\u636e\u5730\u7269\u89e3\u8bd1\u7ed3\u679c\u5f97\u5230\u4e0d\u540c\u76ee\u6807\u7684\u7c7b\u522b\u4fe1\u606f \u6784\u5efa\u4e0d\u540c\u5730\u7269\u76ee\u6807\u4e4b\u95f4\u7684\u7a7a\u95f4\u5173\u7cfb \u9650\u5236\uff1a\u9700\u8981\u76ee\u6807\u7684\u5148\u9a8c\u4fe1\u606f\uff1b\u53d7\u5730\u7269\u5206\u7c7b\u7cbe\u5ea6\u5f71\u54cd   \u65e0\u9700\u76ee\u6807\u5148\u9a8c\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5  \u57fa\u4e8e\u5e95\u5c42\u7279\u5f81\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff1a\u57fa\u4e8e\u989c\u8272\u3001\u7eb9\u7406\u3001\u7ed3\u6784\u7b49\u5e95\u5c42\u7279\u5f81\u76f4\u63a5\u63cf\u8ff0\u573a\u666f\uff0c\u5229\u7528\u5206\u7c7b\u5668\u8fdb\u884c\u5206\u7c7b=&gt;\u5f88\u96be\u63cf\u8ff0\u573a\u666f\u4e2d\u5730\u7269\u76ee\u6807\u7a7a\u95f4\u5206\u5e03\u590d\u6742\u7684\u7279\u6027 \u57fa\u4e8e\u4e2d\u5c42\u7279\u5f81\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff1a\u6316\u6398\u5c40\u90e8\u7279\u5f81\uff0c\u5c06\u5e95\u5c42\u7279\u5f81\u6620\u5c04\u5230\u5b57\u5178\u7a7a\u95f4\u6216\u53c2\u6570\u7a7a\u95f4\uff0c\u57fa\u4e8e\u5f71\u50cf\u7684\u8bcd\u888b\u6a21\u578b\u8868\u8fbe\u83b7\u5f97\u63cf\u8ff0\u80fd\u529b\u66f4\u9ad8\u7684\u4e2d\u5c42\u8bed\u4e49\u7279\u5f81 \u57fa\u4e8e\u9ad8\u5c42\u7279\u5f81\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff1a\u57fa\u4e8e\u4fe1\u606f\u7684\u5c42\u6b21\u5316\u62bd\u53d6\uff0c\u81ea\u52a8\u5b66\u4e60\u9ad8\u5206\u5f71\u50cf\u7684\u672c\u8d28\u7279\u5f81\uff0c\u907f\u514d\u624b\u5de5\u9009\u53d6\u7279\u5f81\u7684\u5f71\u50cf\u3002\uff08\u5e94\u7528\u6df1\u5ea6\u5b66\u4e60\u6784\u5efa\u7aef\u5bf9\u7aef\u6a21\u578b\uff0c\u81ea\u52a8\u5b66\u4e60\u7279\u5f81\u65f6\u7684\u5957\u8bdd\uff0c\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0b\uff09      \u6982\u7387\u4e3b\u9898\u6a21\u578b  \u5c06\u5f71\u50cf\u964d\u7ef4\u5730\u8868\u8fbe\u4e3a\u82e5\u5e72\u6f5c\u5728\u4e3b\u9898\u7684\u6df7\u5408\u5206\u5e03\uff0c\u800c\u6bcf\u4e2a\u4e3b\u9898\u53c8\u662f\u5173\u4e8e\u4e00\u7ec4\u5f71\u50cf\u5757\u7684\u6982\u7387\u5206\u5e03\u3002 \u5e38\u7528\u6982\u7387\u4e3b\u9898\u6a21\u578b\uff0c\u4ee5\u53ca\u6a21\u578b\u7684\u5b66\u4e60\u4e0e\u63a8\u7406\u4f18\u5316\u65b9\u6cd5 \u57fa\u4e8e\u6982\u7387\u4e3b\u9898\u6a21\u578b\u7684\u573a\u666f\u7406\u89e3\u6d41\u7a0b\uff0cincluding\u9ad8\u5206\u9065\u611f\u5f71\u50cf\u5e38\u7528\u7684\u533a\u57df\u91c7\u6837\u65b9\u6cd5\u4ee5\u53ca\u5e95\u5c42\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5  \u7ecf\u5178\u6982\u7387\u4e3b\u9898\u6a21\u578b \u89c6\u89c9\u8bcd\u888b\u6a21\u578b\uff08Bag-of-visual-word, BoVW\uff09\uff0c\u5229\u7528\u6982\u7387\u7406\u8bba\u5c06\u8bcd\u888b\u6a21\u578b\u7684\u7edf\u8ba1\u53d8\u91cf\u8f6c\u5316\u4e3a\u6982\u7387\u5206\u5e03\u53d8\u91cf\uff0c\u4ee3\u8868\u4e3a\u6982\u7387\u6f5c\u5728\u8bed\u4e49\u5206\u6790\u6a21\u578b\u548c\u6f5c\u5728\u72c4\u5229\u514b\u96f7\u5206\u5e03\u6a21\u578b\n \u89c6\u89c9\u5355\u8bcd\u888b\u6a21\u578b\uff08BoVW\uff09  \u4e00\u9053\u9e3f\u6c9f\uff1a\u5728NLP\u9886\u57df\uff0c\u6587\u6863\u96c6\u3001\u6587\u6863\u3001\u8bcd\u8bed\u4e09\u4e2a\u57fa\u672c\u5143\u7d20\u90fd\u662f\u771f\u5b9e\u5b58\u5728\u5e76\u4e14\u5177\u6709\u5b9e\u9645\u610f\u4e49\uff0c\u800c\u5728\u5f71\u50cf\u5904\u7406\u9886\u57df\u5e76\u6ca1\u6709\u5bf9\u5e94\u7684\u663e\u5f0f\u5143\u7d20 \u89c6\u89c9\u5355\u8bcd\u888b\u6a21\u578b\uff1a\u63d0\u53d6\u5f71\u50cf\u5757\u4e2d\u7684\u5c40\u90e8\u7279\u5f81\uff08\u989c\u8272\u3001\u7eb9\u7406\u3001\u5149\u8c31\u7b49\uff09\uff0c\u5c06\u5176\u7c7b\u6bd4\u4e3a\u6587\u672c\u4e2d\u7684\u5355\u8bcd\uff08\u5373\u89c6\u89c9\u5355\u8bcd\uff09\uff0c\u7136\u540e\u5bf9\u5f71\u50cf\u5757\u8fdb\u884c\u5411\u91cf\u91cf\u5316\uff0c\u4f9d\u636e\u4e00\u5b9a\u7684\u51c6\u5219\u628a\u5f71\u50cf\u8868\u793a\u4e3a\u7531\u591a\u4e2a\u89c6\u89c9\u5355\u8bcd\u7ec4\u6210\u7684\u6587\u6863 \u57fa\u4e8e\u89c6\u89c9\u5355\u8bcd\u888b\u6a21\u578b\u7684\u573a\u666f\u7406\u89e3\u65b9\u6cd5\uff1a\u5206\u5757\u91c7\u6837\u3001\u7279\u5f81\u63d0\u53d6\u3001\u89c6\u89c9\u5355\u8bcd\u6784\u9020\u3001\u89c6\u89c9\u5355\u8bcd\u76f4\u65b9\u56fe\u751f\u6210\u53ca\u5206\u7c7b\u53c2\u8003\uff1a\r\u89c6\u89c9\u5355\u8bcd\u6a21\u578b\u3001\u8bcd\u888b\u6a21\u578bBoW\u3001\r\u89c6\u89c9\u8bcd\u888b\u6a21\u578b+\u6781\u7aef\u968f\u673a\u68ee\u6797\u5efa\u7acb\u56fe\u50cf\u5206\u7c7b\u5668\uff08Python\u5b9e\u8df5\uff09\u3001\rBag of Features(BoF)\u56fe\u50cf\u5206\u7c7b\u5b9e\u8df5\uff08\u7406\u8bba\u90e8\u5206\u548c\u56fe\u89e3\u4e0d\u9519\uff09   \u6982\u7387\u6f5c\u5728\u8bed\u4e49\u5206\u6790\uff08PLSA\uff09  \u4f7f\u7528\u6982\u7387\u56fe\u6a21\u578b\u6765\u8868\u793a\u5f71\u50cf\u3001\u4e3b\u9898\u548c\u89c6\u89c9\u5355\u8bcd\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u5c06\u5f71\u50cf\u548c\u89c6\u89c9\u5355\u8bcd\u6620\u5c04\u5230\u540c\u4e00\u4e3b\u9898\u7a7a\u95f4 \u53c2\u8003\uff1a\r\u6982\u7387\u6f5c\u5728\u8bed\u4e49\u5206\u6790 \u7f3a\u9677  \u6bcf\u5e45\u5f71\u50cf\u4ec5\u4ec5\u662f\u4e3b\u9898\u79bb\u6563\u6982\u7387\u7684\u6df7\u5408\u6570\u5b57\u8868\u8fbe\u5f0f\uff0c\u5bb9\u6613\u5bfc\u81f4\u8fc7\u62df\u5408 \u4e0d\u80fd\u5c06\u6982\u7387\u5206\u914d\u7ed9\u8bad\u7ec3\u6837\u672c\u4e4b\u5916\u7684\u5f71\u50cf     \u6f5c\u5728\u72c4\u5229\u514b\u96f7\u5206\u5e03\uff08LDA\uff09  \u5c42\u6b21\u5316\u8d1d\u53f6\u65af\u6a21\u578b\uff0c\u6bcf\u5e45\u5f71\u50cf\u7684\u6982\u7387\u89c6\u4e3a\u6f5c\u5728\u4e3b\u9898\u4e2d\u968f\u673a\u51fa\u73b0\u8bcd\u8bed\u6982\u7387\u7684\u6df7\u5408\u6bd4\u4f8b\uff0c\u514b\u670dPLSA\u7684\u7f3a\u9677 \u53c2\u8003\uff1a\r\u6587\u672c\u4e3b\u9898\u6a21\u578b\u4e4bLDA    \u57fa\u4e8e\u6982\u7387\u4e3b\u9898\u6a21\u578b\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5  \u533a\u57df\u91c7\u6837  \u5747\u5300\u7f51\u683c\u91c7\u6837\u6cd5\u5bf9\u4e8e\u9ad8\u5206\u9065\u611f\u5f71\u50cf\u5206\u7c7b\u6548\u679c\u6700\u4f73   \u5e95\u5c42\u7279\u5f81\u63d0\u53d6  \u5149\u8c31\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5  \u5149\u8c31\u7279\u5f81\uff1a\u5730\u7269\u7ec4\u6210\u6210\u5206\u5c5e\u6027\u7684\u53cd\u6620 \u7070\u5ea6\u503c\u5411\u91cf\u6cd5\u3001\u76f4\u65b9\u56fe\u7edf\u8ba1\u6cd5\u3001\u5747\u503c\u6807\u51c6\u5dee\u7edf\u8ba1\u6cd5   \u7eb9\u7406\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5  \u7eb9\u7406\uff1a\u67d0\u79cd\u5c40\u90e8\u7684\u201c\u6837\u5f0f\u201d\u518d\u4e00\u4e2a\u5e8f\u5217\u66f4\u5927\u533a\u57df\u5185\u7684\u4e0d\u65ad\u91cd\u590d \u7edf\u8ba1\u6cd5\u3001\u6a21\u578b\u6cd5\u3001\u9891\u8c31\u6cd5 \u5e38\u7528\u7070\u5ea6\u5171\u751f\u77e9\u9635\uff08GLCM\uff09\u7eb9\u7406\u63d0\u53d6\u65b9\u6cd5 \u5e38\u7528\u7eb9\u7406\u7279\u5f81\u6d4b\u5ea6\uff1a\u540c\u8d28\u6027\u3001\u80fd\u91cf\u3001\u5bf9\u6bd4\u5ea6\u3001\u76f8\u5173\u6027\u548c\u71b5   \u7ed3\u6784\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5  \u5149\u8c31\u548c\u7eb9\u7406\u7279\u5f81\u4ec5\u80fd\u53cd\u6620\u9ad8\u5206\u5f71\u50cf\u4e0a\u5730\u7269\u7684\u7269\u8d28\u5c5e\u6027\u4ee5\u53ca\u5b8f\u89c2\u7ed3\u6784\u7279\u6027\uff0c\u4f46\u4e0d\u80fd\u5b8c\u5168\u63cf\u8ff0\u5730\u7269\u8bed\u4e49\u7684\u6240\u6709\u7279\u6027\uff0c\u5982\u5f62\u72b6\u7ed3\u6784\u7b49\u5c40\u90e8\u7279\u6027\u3002 \u5c3a\u5ea6\u4e0d\u53d8\u7279\u5f81\u53d8\u6362\u7b97\u6cd5\uff08SIFT\uff09\u3001HOG\u7b97\u5b50     \u89c6\u89c9\u8bcd\u888b\u6784\u9020  \u76f8\u540c\u7684\u89c6\u89c9\u5355\u8bcd\u5728\u4e0d\u540c\u7684\u5f71\u50cf\u4e2d\u53ef\u80fd\u4f1a\u5448\u73b0\u4e0d\u540c\u7684\u7279\u5f81\u503c kmeans\u805a\u7c7b   \u4e3b\u9898\u7279\u5f81\u6316\u6398\u4e0e\u5206\u7c7b  \u591a\u5143\u7279\u5f81\u8bed\u4e49\u878d\u5408\u7684\u4e3b\u9898\u6a21\u578b\u573a\u666f\u5206\u7c7b\u65b9\u6cd5 \u4f20\u7edf\u57fa\u4e8e\u4e3b\u9898\u6a21\u578b\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\u901a\u5e38\u63d0\u53d6\u5355\u4e2a\u7279\u5f81\uff0c\u65e0\u6cd5\u5bf9\u5305\u542b\u591a\u79cd\u5730\u7269\u548c\u590d\u6742\u7a7a\u95f4\u5206\u5e03\u7684\u9ad8\u5206\u9065\u611f\u5f71\u50cf\u573a\u666f\u8fdb\u884c\u51c6\u786e\u63cf\u8ff0\n\u6982\u8ff0  \u57fa\u4e8e\u8bcd\u888b\u6a21\u578b\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5=&gt;\u6982\u7387\u4e3b\u9898\u6a21\u578b=&gt;\u591a\u79cd\u7279\u5f81\uff08\u5982\u57fa\u4e8e\u7eb9\u7406\uff0c\u989c\u8272\u548c\u7ed3\u6784\u4fe1\u606f\u7684\u7279\u5f81\uff09\u6709\u6548\u878d\u5408 \u76ee\u524d\u7f3a\u9677\uff1a  \u4e0d\u540c\u7279\u5f81\u7684\u7279\u5f81\u5411\u91cf\u503c\u901a\u5e38\u5dee\u522b\u5f88\u5927\uff1b\u4e0d\u540c\u7279\u5f81\u76f8\u4e92\u5e72\u6270\uff1b\u6df7\u5408\u50cf\u5143\u5f71\u50cf\uff1b\u5f52\u4e00\u5316\u64cd\u4f5c\u5bf9\u4fdd\u7559\u548c\u5229\u7528\u6709\u7528\u4fe1\u606f\u7684\u8d21\u732e\u5f88\u5c0f \u5149\u8c31\u6216SIFT\u7279\u5f81\u53ea\u80fd\u63cf\u8ff0\u9ad8\u5206\u5f71\u50cf\u4e2d\u8fde\u7eed\u7684\u5c40\u90e8\u5149\u8c31\u6216\u7ed3\u6784\u4fe1\u606f\uff0c\u4e0d\u5305\u542b\u4ece\u5168\u5c40\u89d2\u5ea6\u63d0\u53d6\u7684\u7279\u5f81   \u672c\u7ae0\u7814\u7a76\u70b9\uff1a  \u878d\u5408\u5c40\u90e8\u5168\u5c40\u7279\u5f81\u7684\u8bcd\u888b\u6a21\u578b\u9ad8\u5206\u9065\u611f\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff08LGFBOVW\uff09 \u591a\u5143\u7279\u5f81\u8bed\u4e49\u878d\u5408\u7684\u6982\u7387\u4e3b\u9898\u6a21\u578b\u9ad8\u5206\u9065\u611f\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff08SAL-PTM\uff1aSAL-PLSA + SAL-LDA\uff09    \u878d\u5408\u5c40\u90e8\u5168\u5c40\u7279\u5f81\u7684\u8bcd\u888b\u6a21\u578b\u9ad8\u5206\u9065\u611f\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff08LGFBOVW\uff09 \u603b\u8ff0\uff1a\uff081\uff09\u8bbe\u8ba1\u5168\u5c40\u7eb9\u7406\u7279\u5f81\uff1a\u5f62\u72b6\u4e0d\u53d8\u7eb9\u7406\u6307\u6570\uff08SITI\uff09\uff1b\uff082\uff09\u591a\u7279\u5f81\u878d\u5408\u7b56\u7565\uff1a\u5728\u76f4\u65b9\u56fe\u5c42\u6b21\u4e0a\u8fdb\u884c\u878d\u5408\uff0c\u76f4\u65b9\u56fe\u4ea4\u53c9\u6838\u7684SVM\n \u5c40\u90e8\u5149\u8c31\u7ed3\u6784\u7279\u5f81\u63d0\u53d6  \u5149\u8c31\u7279\u5f81\u548cSIFT\u7279\u5f81\u662f\u5c40\u90e8\u8fde\u7eed\u7279\u5f81 \u5168\u5c40\u7279\u5f81\u57fa\u4e8e\u6574\u4e2a\u5f71\u50cf\u63d0\u53d6\uff0c\u63cf\u8ff0\u9ad8\u5206\u9065\u611f\u5f71\u50cf\u7684\u7d27\u51d1\u6027\u548c\u533a\u5206\u6027\uff0c\u662f\u5168\u5c40\u79bb\u6563\u7279\u5f81   \u5168\u5c40\u7eb9\u7406\u7279\u5f81\u63d0\u53d6  SITI\u66f4\u591a\u5173\u6ce8\u573a\u666f\u7684\u5168\u5c40\u5f62\u72b6\u7279\u5f81\uff0c\u5982\u5f62\u72b6\u7684\u4f38\u957f\u548c\u7d27\u51d1\u6027 SITI\u662f\u5149\u8c31\u548cSIFT\u7279\u5f81\u7684\u8865\u5145\u7279\u5f81\uff0c\u5305\u542b\u4f38\u957f\u76f4\u65b9\u56fe\u3001\u7d27\u81f4\u76f4\u65b9\u56fe\u3001\u5c3a\u5ea6\u6bd4\u76f4\u65b9\u56fe\u548c\u5bf9\u6bd4\u76f4\u65b9\u56fe\u7b49\u7279\u5f81\u63cf\u8ff0   \u573a\u666f\u7684\u7279\u5f81\u878d\u5408\u4e0e\u5206\u7c7b  \u5168\u5c40\u8fde\u7eed\u7279\u5f81\u901a\u8fc7\u62c9\u4f38\u5f62\u6210\u4e00\u5b9a\u5c3a\u5ea6\u7684\u4e00\u7ef4\u76f4\u65b9\u56fe \u6240\u8c13\u591a\u7279\u5f81\u878d\u5408\u662f\u76f4\u63a5\u62fc\u63a5\u7684\u4e00\u7ef4\u76f4\u65b9\u56fe\u4e48\uff1f \u6846\u67b6\u56fe\u4f5c\u56fe\u86ee\u597d\u770b\u7684    \u591a\u5143\u7279\u5f81\u8bed\u4e49\u878d\u5408\u7684\u6982\u7387\u4e3b\u9898\u6a21\u578b\u9ad8\u5206\u9065\u611f\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff08SAL-PTM\uff09 \u603b\u8ff0\uff1a\uff081\uff09\u573a\u666f\u5206\u7c7b\u8fc7\u7a0b\u4e2dk\u5747\u503c\u805a\u7c7b\u53ca\u878d\u5408\u80fd\u529b\u4e0d\u8db3\uff0c\u4ee5\u53ca\u4e0d\u540c\u7279\u5f81\u4e4b\u95f4\u7684\u76f8\u4e92\u5e72\u6270\u95ee\u9898\uff1b\uff082\uff09\u7279\u5f81\u8868\u8fbe\u7b56\u7565\uff08\u4f20\u7edf\u7684\u591a\u7279\u5f81\u878d\u5408\u65b9\u6cd5\uff0c\u5728k\u5747\u503c\u805a\u7c7b\u4e4b\u524d\u8fde\u63a5\u5149\u8c31\u3001\u7eb9\u7406\u548cSIFT\u7279\u5f81\uff1bSAL\u7b56\u7565\uff1a\u5728\u8bed\u4e49\u5c42\u4e0a\u878d\u5408\u4e09\u4e2a\u7279\u5f81\uff09\uff1b\uff083\uff09\u6f5c\u5728\u8bed\u4e49\u5206\u914d\u6316\u6398\n \u573a\u666f\u591a\u7279\u5f81\u7684\u591a\u4e2a1\u7ef4\u76f4\u65b9\u56fe\u8868\u8fbe PLSA\u53caLDA\u6a21\u578b\u7684\u591a\u7279\u5f81\u8bed\u4e49\u5c42\u878d\u5408 \u591a\u7279\u5f81\u5206\u7c7b  \u540c\u5f02\u8d28\u4e3b\u9898\u8054\u5408\u7684\u7a00\u758f\u4e3b\u9898\u6a21\u578b\u573a\u666f\u5206\u7c7b\u65b9\u6cd5 \u672c\u6765\u4e0a\u4e00\u7ae0\u6709\u4e9b\u5730\u65b9\u770b\u7684\u6a21\u7cca\u4e0d\u61c2\uff0c\u8fd9\u4e00\u7ae0\u5c31\u66f4\u4e0d\u61c2\u4e86Orz&hellip;\n\u4f20\u7edf\uff1a\u4e3b\u9898\u7279\u5f81\u7a20\u5bc6\u4e14\u91cd\u53e0\u5ea6\u9ad8 + \u5305\u542b\u5173\u952e\u6027\u5730\u7269\u76ee\u6807\u8bed\u4e49\u7684\u573a\u666f\u63cf\u8ff0\u80fd\u529b\u4e0d\u8db3 =&gt; \u5229\u7528\u7a00\u758f\u63a8\u7406\u65b9\u6cd5\u4ee3\u66ff\u72c4\u5229\u514b\u96f7\u5206\u5e03 + \u8d85\u50cf\u7d20\u5206\u5272\u5b9e\u73b0\u540c\u5f02\u8d28\u7279\u5f81\u8054\u5408\u8868\u8fbe\n\u6982\u8ff0  \u4f20\u7edf\u6a21\u578b\u7f3a\u9677\uff1a\u9488\u5bf9\u4e0d\u540c\u573a\u666f\u7c7b\u522b\u5efa\u7acb\u591a\u4e2a\u6a21\u578b\uff0c\u672a\u8003\u8651\u4e0d\u540c\u573a\u666f\u7c7b\u522b\u7684\u6f5c\u5728\u4e3b\u9898\u7a7a\u95f4\u4e4b\u95f4\u7684\u76f8\u5173\u6027 + \u5bc6\u96c6\u7684\u8bed\u4e49\u8868\u793a\u901a\u5e38\u5305\u542b\u5927\u91cf\u4e0d\u5177\u4ee3\u8868\u6027\u7684\u573a\u666f\u4fe1\u606f \u8bad\u7ec3\u6837\u672c\u6807\u6ce8\u56f0\u96be\uff0c\u5229\u7528\u597d\u6709\u9650\u7684\u8bad\u7ec3\u6837\u672c\u83b7\u53d6\u597d\u7684\u5206\u7c7b\u8868\u73b0 \u5168\u7a00\u758f\u4e3b\u9898\u6a21\u578b\uff08FSTM\uff09\uff1aFSTM\u6316\u6398\u7684\u7a00\u758f\u4e3b\u9898\u53ef\u80fd\u4f1a\u4e22\u5931\u5177\u6709\u4ee3\u8868\u6027\u7684\u8bed\u4e49\u4fe1\u606f\uff0c\u76f4\u63a5\u5e94\u7528\u4e8e\u9ad8\u5206\u9065\u611f\u5f71\u50cf\u573a\u666f\u5206\u7c7b\u60f3\u8fc7\u4e0d\u4f73 \u5747\u5300\u7f51\u683c\u91c7\u6837\uff1a\u5f71\u50cf\u5757\u901a\u5e38\u662f\u5f02\u6784\u7684\uff08\u6ca1\u8bfb\u61c2\uff09\uff0c\u4ee3\u8868\u6027\u89c6\u89c9\u5355\u8bcd\u7684\u6bd4\u4f8b\u975e\u5e38\u5c0f\uff0c\u964d\u4f4e\u4e86\u573a\u666f\u8bc6\u522b\u7cbe\u5ea6 \u5355\u7eaf\u57fa\u4e8e\u9065\u611f\u6570\u636e\u7684\u573a\u666f\u6807\u6ce8\u7ed3\u679c\u53ea\u80fd\u53cd\u6620\u571f\u5730\u8986\u76d6\u5730\u7269\u7684\u81ea\u7136\u5c5e\u6027\uff1b\u53e0\u52a0\u9053\u8def\u7f51\u6570\u636e\u5206\u5272\u5f97\u5230\u7684\u67d0\u4e9b\u5f71\u50cf\u5757\u9762\u79ef\u901a\u5e38\u8f83\u5927\uff0c\u5b58\u5728\u8bed\u4e49\u6df7\u6dc6 \u672c\u7ae0\u7814\u7a76\u5185\u5bb9\uff1a  \u63d0\u51fa\u5f02\u8d28\u7279\u5f81\u8868\u8fbe\u7684\u7a00\u758f\u4e3b\u9898\u6a21\u578b\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff08FSSTM\uff09 \u63d0\u51fa\u540c\u5f02\u8d28\u4e3b\u9898\u8054\u5408\u7a00\u758f\u5efa\u6a21\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff08SHHTFM\uff09    \u5f02\u8d28\u7279\u5f81\u8868\u8fbe\u7684\u7a00\u758f\u4e3b\u9898\u6a21\u578b\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff08FSSTM\uff09 \u738b\u5a46\u5356\u74dc\uff0c\u5148\u8bf4\u8d21\u732e\uff1a\uff081\uff09\u80fd\u591f\u6316\u6398\u51fa\u5f71\u50cf\u672c\u8d28\u7684\u5e95\u5c42\u4fe1\u606f\uff0c\u5e76\u7528\u7a00\u758f\u4e3b\u9898\u6765\u8868\u793a\u590d\u6742\u7684\u9ad8\u5206\u9065\u611f\u5f71\u50cf\uff1b\uff082\uff09\u9002\u5408\u4e3b\u9898\u6a21\u578b\u7684\u573a\u666f\u5206\u7c7b\u6d41\u7a0b\uff1b\uff083\uff09\u7a33\u5065\u6027\uff0c\u9002\u5e94\u8bad\u7ec3\u6837\u672c\u6570\u91cf\u7684\u53d8\u5316\n \u5f02\u8d28\u7279\u5f81\u63cf\u8ff0\uff1a\u8fd9\u4e2a\u201c\u5f02\u8d28\u201d\u7684\u8868\u8ff0\u662f\u4ec0\u4e48\u610f\u601d\uff1f\uff1f\uff1f \u7a00\u758f\u8bed\u4e49\u7279\u5f81\u6316\u6398\uff1a\u5c06\u7a00\u758f\u4e3b\u9898\u6a21\u578b\uff0c\u770b\u4e0d\u61c2 \u7a00\u758f\u8bed\u4e49\u878d\u5408\u53ca\u5206\u7c7b\uff1a  \u540c\u5f02\u8d28\u4e3b\u9898\u8054\u5408\u7a00\u758f\u5efa\u6a21\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff08SHHTFM\uff09 \u5177\u6709\u4ee3\u8868\u6027\u5730\u7269\u76ee\u6807\u6216\u540c\u8d28\u6027\u533a\u57df\u7684\u573a\u666f\u7c7b\u522b\u4e2d\u4ee3\u8868\u6027\u89c6\u89c9\u5355\u8bcd\u8bed\u7684\u6bd4\u4f8b\u53d8\u5f97\u975e\u5e38\u5c0f\uff0c\u964d\u4f4e\u573a\u666f\u8bc6\u522b\u7cbe\u5ea6=&gt;\u7b80\u5355\u7ebf\u6027\u8fed\u4ee3\u805a\u7c7b\uff08SLIC\uff09\u8d85\u50cf\u7d20\u5206\u5272\u65b9\u6cd5=&gt;\u751f\u6210\u540c\u8d28\u6027\u533a\u57df\uff1b \u6c34\u3001\u690d\u88ab\u8fb9\u754c\u3001\u9053\u8def\u7f51\u7edc\u96c6\u6210=&gt;\u571f\u5730\u5229\u7528/\u571f\u5730\u8986\u76d6\u573a\u666f\u6807\u6ce8\n \u540c\u5f02\u8d28\u5e95\u5c42\u7279\u5f81\u63d0\u53d6\uff08\u641e\u4e0d\u61c2\u540c\u5f02\u8d28\u7684\u610f\u601d\uff09  \u5747\u5300\u7f51\u683c\u533a\u57df\u91c7\u6837=&gt;\u5f02\u8d28\u6027\u4fe1\u606f SLIC\u91c7\u6837\u7b56\u7565=&gt;\u540c\u8d28\u6027\u4fe1\u606f   \u7a00\u758f\u4e3b\u9898\u8868\u8fbe \u7ed3\u5408\u591a\u6e90\u5730\u7406\u6570\u636e\u7684\u573a\u666f\u7406\u89e3  \u57fa\u4e8e\u591a\u5c42\u6b21\u8bed\u4e49\u8868\u8fbe\u7684\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u573a\u666f\u5206\u7c7b\u65b9\u6cd5 \u57fa\u4e8e\u4e3b\u9898\u6a21\u578b\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5=&gt;\u63d0\u53d6\u5c40\u90e8\u7279\u5f81\uff0c\u96be\u4ee5\u63d0\u53d6\u5168\u5c40\u8bed\u4e49\u4fe1\u606f\uff0c\u5ffd\u7565\u5f71\u50cf\u5757\u7684\u7a7a\u95f4\u4f4d\u7f6e\u4fe1\u606f\n\u57fa\u4e8e\u6df1\u5ea6\u7279\u5f81\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5=&gt;\u63d0\u53d6\u5168\u5c40\u7279\u5f81\uff0c\u5bf9\u4e8e\u663e\u8457\u6027\u5c40\u90e8\u7279\u5f81\u4e0d\u80fd\u5f88\u597d\u7684\u628a\u63e1\n\u81ea\u9002\u5e94\u6df1\u5ea6\u7a00\u758f\u8bed\u4e49\u5efa\u6a21\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff1a\u5c06\u4e3b\u9898\u7279\u5f81\u4e0e\u6df1\u5ea6\u7279\u5f81\u8fdb\u884c\u81ea\u9002\u5e94\u878d\u5408\n\u6982\u8ff0  \uff081\uff09\u4f20\u7edf\u65b9\u6cd5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u53d6\u51b3\u4e8e\u624b\u52a8\u5e95\u5c42\u7279\u5f81\u7684\u9009\u62e9\u548c\u4e2d\u5c42\u7279\u5f81\u7684\u8bbe\u8ba1=&gt;\u5148\u9a8c\u4fe1\u606f\uff1b\uff082\uff09\u8fc1\u79fb\u6027\u6709\u9650\uff1b\uff083\uff09\u4ec5\u8ba1\u7b97\u5c40\u90e8\u7279\u5f81\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u4e0d\u80fd\u5bf9\u5f71\u50cf\u4e2d\u7684\u7a7a\u95f4\u5173\u7cfb\u5efa\u6a21.=&gt;\u5f71\u50cf\u88ab\u8868\u793a\u4e3a\u65e0\u5e8f\u7684\u5c40\u90e8\u7279\u5f81\u96c6\u5408\uff0c\u89c6\u89c9\u5355\u8bcd\u7684\u7a7a\u95f4\u5e03\u5c40\u4fe1\u606f\u88ab\u5ffd\u7565 \u6982\u7387\u4e3b\u9898\u6a21\u578b\u83b7\u53d6\u7684\u4e3b\u9898\u7279\u5f81\u662f\u5bc6\u96c6\u7684=&gt;\u7279\u5f81\u5197\u4f59\uff0c\u9ad8\u65f6\u95f4\u6d88\u8017\uff1b\u5168\u7a00\u758f\u4e3b\u9898\u6a21\u578b=&gt;\u53ef\u80fd\u4e22\u5931\u5f71\u50cf\u7684\u7ec6\u8282\u4fe1\u606f\uff0c\u96be\u4ee5\u4ece\u5168\u5c40\u89d2\u5ea6\u83b7\u53d6\u7279\u5f81 \u6df1\u5ea6\u5b66\u4e60\u7684\u6210\u529f=&gt;CNN\u591a\u5c42\u6b21\u8868\u8fbe\u4e2d\u6316\u6398\u7279\u5f81\uff1bCNN\u53ef\u8fc1\u79fb\u6027=&gt;\u57fa\u4e8e\u8fc1\u79fb\u5b66\u4e60\u7684\u9ad8\u5206\u9065\u611f\u573a\u666f\u5206\u7c7b\u65b9\u6cd5=&gt;\u4e0e\u57fa\u4e8e\u4e3b\u9898\u6a21\u578b\u7684\u65b9\u6cd5\u76f8\u6bd4\uff0c\u4eceCNN\u4e2d\u63d0\u53d6\u7684\u9ad8\u5c42\u7279\u5f81\u901a\u5e38\u66f4\u591a\u5305\u542b\u9ad8\u5206\u9065\u611f\u5f71\u50cf\u7684\u5168\u5c40\u4fe1\u606f\uff0c\u5e76\u53ef\u4ee5\u53d1\u73b0\u76ee\u6807\u7684\u7ec6\u8282\u4fe1\u606f \u672c\u7ae0\u7814\u7a76\uff1a  \u878d\u5408\u591a\u5c42\u6b21\u8bed\u4e49\u6a21\u578b\u4fe1\u606f\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff08DLGFF\uff09 \u81ea\u9002\u5e94\u6df1\u5ea6\u7a00\u758f\u8bed\u4e49\u5efa\u6a21\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\uff08ADSSM\uff09    \u878d\u5408\u591a\u5c42\u6b21\u8bed\u4e49\u6a21\u578b\u4fe1\u606f\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5 \u63d0\u51fa\u57fa\u4e8e\u6df1\u5ea6\u5c40\u90e8\u5168\u5c40\u7279\u5f81\u878d\u5408\u7684\u573a\u666f\u7406\u89e3\u6846\u67b6\uff08DLGFF\uff09\uff0c\u4e3b\u8981\u8d21\u732e\uff1a\uff081\uff09\u4ece\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u4e2d\u6355\u6349\u573a\u666f\u7684\u4ee3\u8868\u6027\u8bed\u4e49\u548c\u7a7a\u95f4\u7ed3\u6784\uff1b\uff082\uff09\u5728DLGFF\u6846\u67b6\u4e2d\u63d0\u51fa\u4e86\u4e24\u79cd\u65b9\u6cd5\uff0c\u5373\u878d\u5408\u4e86\u5168\u8fde\u63a5\u7279\u5f81\uff08LGFF\uff09\u548c\u878d\u5408\u62c9\u4f38\u5377\u79ef\u7279\u5f81\uff08LGCF\uff09\u7684\u5c40\u90e8\u548c\u5168\u5c40\u7279\u5f81\u3002\n \u5c40\u90e8\u53ca\u5168\u5c40\u5e95\u5c42\u7279\u5f81\u63d0\u53d6  \u4ee3\u8868\u6027\u624b\u5de5\u89c6\u89c9\u63cf\u8ff0\u5b50\uff1a\u5168\u5c40\u7eb9\u7406\u7279\u5f81\uff0c\u5c40\u90e8\u5149\u8c31\u7279\u5f81\u548c\u5c40\u90e8\u7ed3\u6784\u7279\u5f81\uff08\u540c\u7b2c\u4e09\u7ae0\u7684\u7279\u5f81\u6784\u5efa\u65b9\u6cd5\uff09   \u5377\u79ef\u53ca\u5168\u8fde\u63a5\u5c42\u7279\u5f81\u751f\u6210  \u91c7\u7528\u9884\u8bad\u7ec3\u7684CNN-CaffeNet \u5141\u8bb8\u5bf9\u7f51\u7edc\u7684\u4efb\u4f55\u5c42\u8fdb\u884c\u7279\u5f81\u63d0\u53d6 \u6700\u540e\u4e00\u4e2aConv\u5c42\u7684\u56db\u7ef4Conv5\u7279\u5f81\u88ab\u9009\u53d6\u4ee5\u5145\u5206\u5229\u7528Conv\u5c42\u4e2d\u7684\u5bc6\u96c6\u4fe1\u606f \u7b2c\u4e00\u5c42FC\u5c42\uff08FC6\uff09\u88ab\u63d0\u53d6\u4f5c\u4e3aFC\u7279\u5f81\u63cf\u8ff0\u7a7a\u95f4\u5206\u5e03\u4fe1\u606f \u6bcf\u4e2a\u9065\u611f\u5f71\u50cf\u5177\u6709D5\u7ef4\u5ea6\u7684\u7279\u5f81   \u57fa\u4e8eLGCG\u548cLGFF\u7684\u7279\u5f81\u878d\u5408\u53ca\u5206\u7c7b  \u81ea\u9002\u5e94\u6df1\u5ea6\u7a00\u758f\u8bed\u4e49\u5efa\u6a21\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5 \u63d0\u51fa\u5c06\u7a00\u758f\u4e3b\u9898\u548c\u6df1\u5c42\u7279\u5f81\u76f8\u7ed3\u5408\u7684\u81ea\u9002\u5e94\u6df1\u5ea6\u7a00\u758f\u8bed\u4e49\u5efa\u6a21\uff08ADSSM\uff09\u6846\u67b6\uff0c\u4e3b\u8981\u521b\u65b0\uff1a\uff081\uff09\u57fa\u4e8eFSTM\u548cCNN\u7279\u5f81\u7684ADSSM\u6846\u67b6\uff1b\uff082\uff09\u4e0d\u540c\u7279\u5f81\u7684\u81ea\u9002\u5e94\u6807\u51c6\u5316\u7b56\u7565\n \u9ad8\u5c42\u6df1\u5ea6\u7279\u5f81\u5b66\u4e60  \u9884\u5904\u7406\uff1a\u8f93\u5165\u5f71\u50cf\u9664\u4ee5\u6700\u5927\u50cf\u7d20\u503c\uff0c\u83b7\u5f97\u5f52\u4e00\u5316\u5f71\u50cf \u7279\u5f81\u63d0\u53d6  \u5377\u79ef\u5c42\u4e0a\u6ed1\u52a8\u5377\u79ef\u6ee4\u6ce2\u5668\u8fdb\u884c\u5377\u79ef\u8ba1\u7b97\uff0c\u83b7\u5f97\u7279\u5f81\u6620\u5c04 \u5bf9\u4e8e\u6bcf\u4e2a\u901a\u9053\uff0c\u5e94\u7528pooling\u64cd\u4f5c\u83b7\u53d6\u533a\u57df\u50cf\u7d20\u7684ju&rsquo;bu\u6700\u5927\u503c\u6216\u5e73\u5747\u503c\uff0c\u83b7\u5f97\u5bf9\u566a\u58f0\u548c\u6742\u6ce2\u66f4\u52a0\u9c81\u68d2\u4e14\u5bf9\u5f71\u50cf\u53d8\u6362\u4fdd\u6301\u4e0d\u53d8\u7684\u7279\u5f81 \u7279\u5f81\u5206\u7c7b\uff1aFC+softmax     \u4e2d\u5c42\u7a00\u758f\u4e3b\u9898\u5efa\u6a21\uff08\u540c\u7b2c\u56db\u7ae0\uff09 \u81ea\u9002\u5e94\u7279\u5f81\u6807\u51c6\u5316\u53ca\u878d\u5408\u5206\u7c7b  \u6240\u8c13\u81ea\u9002\u5e94\u7684\u6982\u5ff5\uff1a\u4e24\u7c7b\u7279\u5f81\uff0c\u9488\u5bf9\u4e0d\u540c\u7684\u7279\u5f81\uff0c\u5f52\u4e00\u5316\u5904\u7406\u65b9\u5f0f\u4e0d\u540c  \u4e3b\u9898\u7279\u5f81\u975e\u5e38\u7a00\u758f\u4e14\u5177\u6709\u4ee3\u8868\u6027\uff0c\u7279\u5f81\u503c\u8303\u56f4\u4ece0-1 \u6df1\u5c42\u7279\u5f81\u66f4\u5bc6\u96c6\u4e14\u66f4\u5168\u9762\uff0c\u7279\u5f81\u503c\u5927\u5f97\u591a \u76f4\u63a5\u94fe\u63a5\u6df1\u5c42\u7279\u5f81\u548c\u4e3b\u9898\u7279\u5f81\u4e0d\u80fd\u5145\u5206\u5229\u7528\u4ee3\u8868\u6027\u4e3b\u9898\u7279\u5f81 \u6df1\u5c42\u7279\u5f81\uff1a0-1\u5f52\u4e00\u5316\uff1b\u4e3b\u9898\u7279\u5f81\uff1a\u9002\u5e94\u6027\u62c9\u4f38       \u57fa\u4e8e\u4e3b\u9898\u6a21\u578b\u7684\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u573a\u666f\u7406\u89e3\u539f\u578b\u7cfb\u7edf \u7cfb\u7edf\u8bbe\u8ba1 \u7cfb\u7edf\u7684\u4f7f\u7528 \u53ef\u72ec\u81ea\u4f7f\u7528\uff0c\u4e5f\u53ef\u6839\u636e\u9700\u6c42\u8fdb\u884c\u65b9\u6cd5\u7ec4\u5408\n \u5728\u4e0d\u9650\u5236\u63cf\u8ff0\u573a\u666f\u7279\u5f81\u6240\u5360\u7528\u7684\u5b58\u50a8\u8d44\u6e90\u7684\u60c5\u51b5\u4e0b \u5728\u9650\u5236\u63cf\u8ff0\u573a\u666f\u7279\u5f81\u7ef4\u5ea6\uff0c\u4e14\u9650\u5236GPU\u5e76\u884c\u8ba1\u7b97\u8d44\u6e90\u7684\u60c5\u51b5\u4e0b \u5728\u9650\u5236\u63cf\u8ff0\u573a\u666f\u7279\u5f81\u7684\u5b58\u50a8\u8d44\u6e90\uff0c\u4e0d\u9650\u5236GPU\u5e76\u884c\u8ba1\u7b97\u8d44\u6e90\u7684\u60c5\u51b5\u4e0b \u5f15\u5165\u591a\u6e90\u5730\u7406\u6570\u636e\u4e3a\u573a\u666f\u5757\u8fb9\u754c\u63d0\u4f9b\u5730\u5b66\u4fe1\u606f\u7ea6\u675f  \u6982\u7387\u4e3b\u9898\u6a21\u578b\u573a\u666f\u7406\u89e3\u65b9\u6cd5\u7efc\u5408\u5bf9\u6bd4\u4e0e\u5e94\u7528\u573a\u5408  \u9002\u7528\u4e8e\u5bf9\u5206\u7c7b\u7cbe\u5ea6\u6709\u8f83\u9ad9\u8981\u6c42\u7684\u5e94\u7528\u573a\u5408-\u81ea\u9002\u5e94\u6df1\u5ea6\u7a00\u758f\u5efa\u6a21\u573a\u666f\u7406\u89e3\u65b9\u6cd5 \u9002\u7528\u4e8e\u8981\u6c42\u8ba1\u7b97\u6548\u7387\u7684\u5e94\u7528\u573a\u5408-\u540c\u5f02\u8d28\u4e3b\u9898\u8054\u5408\u7a00\u758f\u5efa\u6a21\u7684\u573a\u666f\u7406\u89e3\u65b9\u6cd5 \u53ef\u4ee5\u63a5\u53d7\u7684\u8ba1\u7b97\u6548\u7387\u83b7\u5f97\u7a33\u5b9a\u6ee1\u610f\u7684\u5206\u7c7b\u7cbe\u5ea6-\u57fa\u4e8e\u5bc6\u96c6\u591a\u7279\u5f81\u8bed\u4e49\u878d\u5408\u7684\u573a\u666f\u7406\u89e3\u65b9\u6cd5  \u603b\u7ed3\u4e0e\u5c55\u671b   \u80cc\u666f\uff1a\u9065\u611f\u5f71\u50cf\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\u63d0\u5347=&gt;\u540c\u7269\u5f02\u8c31\u7b49\u73b0\u8c61\u5f71\u50cf\u89e3\u8bd1\u65b0\u6311\u6218=&gt;\u9762\u5411\u50cf\u7d20\u5206\u7c7b\u5230\u9762\u5411\u5bf9\u8c61\u5206\u7c7b\u7684\u8f6c\u53d8=&gt;\u65e0\u6cd5\u63d0\u53d6\u573a\u666f\u9ad8\u5c42\u8bed\u4e49\u4fe1\u606f=&gt;\u57fa\u4e8e\u8bed\u4e49\u76ee\u6807\u7684\u573a\u666f\u5206\u7c7b=&gt;\u9700\u8981\u76ee\u6807\u7684\u5148\u9a8c\u4fe1\u606f\u5e76\u4e14\u4f1a\u53d7\u5230\u5730\u7269\u5206\u7c7b\u7cbe\u5ea6\u7684\u5f71\u54cd\n  \u672c\u6587\uff1a\u5730\u7269\u76ee\u6807\u7684\u591a\u6837\u6027\u3001\u53ef\u53d8\u6027\u3001\u5206\u5e03\u590d\u6742\u7b49\u7279\u70b9\uff1b\u4e09\u65b9\u9762\u7814\u7a76\uff1a\u5e95\u5c42\u7279\u5f81\u63cf\u8ff0\u3001\u4e2d\u5c42\u4e3b\u9898\u5efa\u6a21\u548c\u9ad8\u5c42\u8bed\u4e49\u7406\u89e3\n  \u603b\u7ed3 \u4e3b\u8981\u5de5\u4f5c\u4ee5\u53ca\u521b\u65b0\u6982\u62ec\uff1a\n \u5f52\u7eb3\u603b\u7ed3\u7814\u7a76\u73b0\u72b6\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u9ad8\u5206\u9065\u611f\u5f71\u50cf\u573a\u666f\u7406\u89e3\u65b9\u6cd5 \u9488\u5bf9\u5e95\u5c42\u7279\u5f81\u5b66\u4e60\u80fd\u529b\u4e0d\u8db3\u7684\u95ee\u9898\uff0c\u5728\u672a\u8003\u8651\u4e3b\u9898\u7a00\u758f\u6027\u7684\u6761\u4ef6\u4e0b\uff0c\u63d0\u51fa\uff081\uff09\u878d\u5408\u5c40\u90e8\u5168\u5c40\u7279\u5f81\u7684\u8bcd\u888b\u6a21\u578b\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\u548c\uff082\uff09\u591a\u5143\u7279\u5f81\u8bed\u4e49\u878d\u5408\u6982\u7387\u4e3b\u9898\u6a21\u578b\uff08PTM\uff09\u7684\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u573a\u666f\u5206\u7c7b\u65b9\u6cd5 \u9488\u5bf9\u4e2d\u5c42\u4e3b\u9898\u5efa\u6a21\u672a\u8003\u8651\u4e3b\u9898\u7a00\u758f\u6027\u53ca\u540c\u8d28\u6027\u7684\u95ee\u9898\uff0c\u5728\u57fa\u4e8e\u7a00\u758f\u4e3b\u9898\u5efa\u6a21\u7684\u6761\u4ef6\u4e0b\uff0c\u63d0\u51fa\uff081\uff09\u5f02\u8d28\u7279\u5f81\u8868\u8fbe\u7684\u7a00\u758f\u4e3b\u9898\u6a21\u578b\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\u548c\uff082\uff09\u540c\u5f02\u8d28\u4e3b\u9898\u8054\u5408\u7a00\u758f\u5efa\u6a21\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5 \u9488\u5bf9\u9ad8\u5c42\u8bed\u4e49\u7406\u89e3\u5c42\u9762\u5ffd\u7565\u7a7a\u95f4\u4f4d\u7f6e\u4fe1\u606f\u53ca\u5168\u5c40\u6027\u7684\u95ee\u9898\uff0c\u5728\u57fa\u4e8e\u7a00\u758f\u4e3b\u9898\u5efa\u6a21\u7684\u6761\u4ef6\u4e0b\uff0c\u63d0\u51fa\uff081\uff09\u878d\u5408\u591a\u5c42\u6b21\u8bed\u4e49\u6a21\u578b\u4fe1\u606f\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5\u548c\uff082\uff09\u81ea\u9002\u5e94\u6df1\u5ea6\u7a00\u758f\u8bed\u4e49\u5efa\u6a21\u7684\u573a\u666f\u5206\u7c7b\u65b9\u6cd5 \u5728\u4e0a\u8ff0\u7814\u5b84\u57fa\u7840\u4e0a\uff0c\u5f00\u53d1\u4e86\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u573a\u666f\u7406\u89e3\u7684\u539f\u578b\u7cfb\u7edf\uff0c\u5e76\u9488\u5bf9\u4e0d\u540c\u7684\u5e94\u7528\u60c5\u51b5\uff0c\u5bf9\u7cfb\u7edf\u7684\u4f7f\u7528\u8fdb\u884c\u4e86\u8bf4\u660e\u3002  \u5c55\u671b \u96c6\u4e2d\u5728\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a\n \u591a\u4f20\u611f\u5668\u591a\u5206\u8fa8\u7387\u8fc1\u79fb\u7684\u573a\u666f\u7406\u89e3 \u7ed3\u5408\u591a\u6e90\u793e\u4ea4\u5a92\u4f53\u6570\u636e\u7684\u573a\u666f\u7c7b\u522b\u5b9a\u4e49\u4e0e\u573a\u666f\u7406\u89e3\uff1a\u73b0\u6709\u57fa\u4e8e\u9065\u611f\u5f71\u50cf\u7684\u89e3\u8bd1\u65b9\u6cd5\u5f80\u5f80\u53ea\u80fd\u4ece\u5149\u8c31\u548c\u7a7a\u95f4\u89d2\u5ea6\u63cf\u8ff0\u57ce\u5e02\u7279\u6027\uff0c\u7f3a\u5c11\u884c\u653f\u89c4\u5212\u8fb9\u754c\u7b49\u5730\u5b66\u6570\u636e\u7ea6\u675f\u4e0e\u793e\u4f1a\u7ecf\u6d4e\u8bed\u4e49\u4fe1\u606f\u7684\u5206\u6790\uff0c\u96be\u4ee5\u5168\u9762\u7406\u89e3\u57ce\u5e02\u5f62\u6001 \u591a\u5c3a\u5ea6\u591a\u65f6\u76f8\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u573a\u666f\u53d8\u5316\u5206\u6790  ",
        "description": "",
        "id": 61,
        "section": "posts",
        "tags": [
            "\u8bba\u6587\u9605\u8bfb",
            "\u535a\u58eb\u8bba\u6587"
        ],
        "title": "\u535a\u58eb\u8bba\u6587\u9605\u8bfb\u672d\u8bb0-1",
        "uri": "/posts/notes/2020-06-21-%E5%8D%9A%E5%A3%AB%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E6%9C%AD%E8%AE%B0-1/"
    },
    {
        "content": " \u6700\u8fd1\u4e24\u5929\u8d81\u7740\u5199\u5b8c\u5c0f\u8bba\u6587\u4e0d\u60f3\u505a\u4e8b\u60c5\u3002\u5c1d\u8bd5\u73a9\u4e86\u4e00\u4e0b2019\u5e74\u767e\u5ea6AI\u641e\u5f97\u57ce\u5e02\u529f\u80fd\u533a\u5212\u5206\u7684\u6bd4\u8d5b\u3002\u6bd4\u8d5b\u63d0\u4f9b\u4e86\u9065\u611f\u5f71\u50cf\u6570\u636e\u548c\u533a\u57df\u5c45\u6c11\u6d3b\u52a8\u6570\u636e(\u53ef\u60dc\u6ca1\u6709\u5177\u4f53\u7684\u4f4d\u7f6e\u4fe1\u606f)\uff0c\u521d\u8d5b\u6837\u672c\u91cf4W\uff0c\u590d\u8d5b\u6837\u672c\u91cf40W\uff0c\u62ff\u521d\u8d5b\u7684\u6837\u672c\u73a9\u4e86\u73a9\uff0c\u5b9e\u73b0\u4e86Baseline\uff080.67\uff09\u3002\u5176\u5b9e\u4e5f\u662f\u7167\u6284\u522b\u4eba\u4ee3\u7801\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u719f\u6089pytorch\u73af\u5883\u548c\u591a\u6a21\u5b66\u4e60\u3002\u5bf9\u4e86\uff0c\u8fd9\u4e2a\u7ec3\u4e60\u8d5b\u6700\u5f00\u59cb\u662f\u5728\u672c\u673a\u4e0a\u5b9e\u73b0\uff0c\u4f46\u540e\u6765\u6a21\u578b\u589e\u5927\uff0c\u663e\u5b58\u65e0\u6cd5\u627f\u8f7d\uff0c\u663e\u5b58\u4e0d\u8db3\uff0c\u8f6c\u5230Google \u7684Colab\u5b9e\u73b0\u3002\u522b\u8bf4\uff0c\u914d\u5408\u8c37\u6b4c\u81ea\u5e26\u7684\u7f51\u76d8\uff0c\u8fd9\u4e2aColab\u771f\u7684\u633a\u597d\u7528(\u4e3b\u8981\u662f\u514d\u8d39GPU\uff0c\u524d\u63d0\u4f60\u7684VPN\u8981\u7a33\u5b9a)\u3002\n \u51c6\u5907   \u6bd4\u8d5b\u94fe\u63a5: https://aistudio.baidu.com/aistudio/competition/detail/13\n  \u6570\u636e\n \u98de\u6868\u57fa\u7ebf\u6311\u6218\u8d5b\uff08\u8bad\u7ec3\u96c6\uff09:https://aistudio.baidu.com/aistudio/datasetdetail/12529 \u98de\u6868\u57fa\u7ebf\u6311\u6218\u8d5b\uff08\u6d4b\u8bd5\u96c6\uff09:https://aistudio.baidu.com/aistudio/datasetdetail/12530 \u9884\u5904\u7406\u6570\u636e: https://github.com/ABadCandy/BaiDuBigData19-URFC    \u5206\u6570:\n \u5b98\u65b9\u57fa\u7ebfPytorch\u5b9e\u73b0(\u672c\u6587\u4e3b\u8981\u53c2\u8003): https://github.com/ABadCandy/BaiDuBigData19-URFC \u56e2\u961fExpelliarmus(0.88767): https://aistudio.baidu.com/aistudio/projectdetail/195440 URFC-top4(\u672c\u6587\u4e3b\u8981\u53c2\u8003): https://github.com/destiny19960207/URFC-top4    import\n  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  !pip install pretrainedmodels import numpy as np from functools import partial import pandas as pd import os import time import json import torch import random import warnings import torchvision import numpy as np import pandas as pd from skimage import io from tqdm import tqdm from datetime import datetime from torch import nn,optim from collections import OrderedDict from torch.autograd import Variable from torch.utils.data import DataLoader from torch.optim import lr_scheduler from sklearn.model_selection import train_test_split from timeit import default_timer as timer from sklearn.metrics import f1_score,accuracy_score from pathlib import Path from torch import nn, optim import torch.nn.functional as F from torchvision import transforms as T from torch.utils.data import Dataset, DataLoader import torchvision from imgaug import augmenters as iaa import pretrainedmodels from pretrainedmodels.models import * import ssl ssl._create_default_https_context = ssl._create_unverified_context # \u9632\u6b62ssl\u62a5\u9519    Vars init  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  torch.backends.cudnn.benchmark = True warnings.filterwarnings(&#39;ignore&#39;) # 1. set random seed random.seed(2050) np.random.seed(2050) torch.manual_seed(2050) torch.cuda.manual_seed_all(2050) #os.environ[&#34;CUDA_VISIBLE_DEVICES&#34;] = &#34;0,1&#34; torch.backends.cudnn.benchmark = True warnings.filterwarnings(&#39;ignore&#39;) # dir &amp; fp root_dir = Path(&#39;./data&#39;) images_dir = Path(root_dir, &#39;images&#39;) visits_dir = Path(root_dir, &#39;visits&#39;) train_df_fp = Path(root_dir, &#39;train.csv&#39;) log_dir = Path(&#39;./logs&#39;) checkpoints_dir = Path(&#39;./checkpoints&#39;) if not Path.exists(log_dir): Path.mkdir(log_dir) if not Path.exists(checkpoints_dir): Path.mkdir(checkpoints_dir) # config  loss_name =&#39;focal_loss&#39; pre_train_name = &#39;densenet121&#39; # se_resnext101_32x4d env=&#39;default&#39; model_name = &#34;multimodal_%s_%s&#34; % (pre_train_name, loss_name) num_classes = 9 img_weight = 100 img_height = 100 fold = 1 lr = 0.004 lr_decay = 0.5 weight_decay =1e-5 batch_size = 256 epochs = 30    \u5de5\u5177\u51fd\u6570  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93  # utils # save best model def save_checkpoint(state, is_best_acc,is_best_loss,is_best_f1,fold): checkpoints_dir = Path(&#34;./checkpoints&#34;) best_models_dir = Path(checkpoints_dir, &#34;best_models&#34;) model_fp = Path(checkpoints_dir, &#34;{}_{}_checkpoint.pth.tar&#34;.format(model_name, str(fold))) torch.save(state, model_fp) if is_best_acc: shutil.copyfile(model_fp,&#34;%s/%s_fold_%s_model_best_acc.pth.tar&#34;%(best_models_dir,model_name,str(fold))) if is_best_loss: shutil.copyfile(model_fp,&#34;%s/%s_fold_%s_model_best_loss.pth.tar&#34;%(best_models_dir,model_name,str(fold))) if is_best_f1: shutil.copyfile(model_fp,&#34;%s/%s_fold_%s_model_best_f1.pth.tar&#34;%(best_models_dir,model_name,str(fold))) # evaluate meters class AverageMeter(object): &#34;&#34;&#34;Computes and stores the average and current value&#34;&#34;&#34; def __init__(self): self.reset() def reset(self): self.val = 0 self.avg = 0 self.sum = 0 self.count = 0 def update(self, val, n=1): self.val = val self.sum += val * n self.count += n self.avg = self.sum / self.count # print logger class Logger(object): def __init__(self): self.terminal = sys.stdout #stdout self.file = None def open(self, file, mode=None): if mode is None: mode =&#39;w&#39; self.file = open(file, mode) def write(self, message, is_terminal=1, is_file=1 ): if &#39;\\r&#39; in message: is_file=0 if is_terminal == 1: self.terminal.write(message) self.terminal.flush() #time.sleep(1) if is_file == 1: self.file.write(message) self.file.flush() def flush(self): # this flush method is needed for python 3 compatibility. # this handles the flush command by doing nothing. # you might want to specify some extra behavior here. pass def get_learning_rate(optimizer): lr=[] for param_group in optimizer.param_groups: lr +=[ param_group[&#39;lr&#39;] ] #assert(len(lr)==1) #we support only one param_group lr = lr[0] return lr def time_to_str(t, mode=&#39;min&#39;): if mode==&#39;min&#39;: t = int(t)/60 hr = t//60 min = t%60 return &#39;%2dhr %02dmin&#39;%(hr,min) elif mode==&#39;sec&#39;: t = int(t) min = t//60 sec = t%60 return &#39;%2dmin %02dsec&#39;%(min,sec) else: raise NotImplementedError class FCViewer(nn.Module): # \u8f6c\u5316\u4e3a\u4e8c\u7ef4tensor((x.size(0), -1)) def forward(self, x): return x.view(x.size(0), -1) # resize/reshape tensor   \u6570\u636e\u5904\u7406 \u6587\u4ef6\u5939\u4fe1\u606f \u9884\u5904\u7406\u6570\u636e\u4e0b\u8f7d\u89e3\u538b\u540e\u53bb\u9664test(\u65e0\u6807\u7b7e)\u6570\u636e\u540e\uff0c\u6574\u7406\u4e3a\u4e24\u4e2a\u6587\u4ef6\u5939(images\u548cvisits)\u3002\u6839\u636e\u6587\u4ef6\u5939\u8def\u5f84\uff0c\u8bb0\u5f55\u6587\u4ef6id(\u533a\u57dfid)\u3001\u529f\u80fd\u533aid(0-8)\u3001\u5f71\u50cf(Image, *.jpg)\u8def\u5f84\u3001\u7528\u6237\u8bbf\u95ee(Visit, *.npy)\u8def\u5f84\u5c5e\u6027\n1 2 3 4 5 6 7 8 9  train_df = pd.read_csv(train_df_fp, header=0) image_fp_list = list(images_dir.iterdir()) stem2fp_dict = {x.stem: x for x in image_fp_list} train_df[&#39;image_fp&#39;] = train_df.Id.map(stem2fp_dict) visit_fp_list = list(visits_dir.iterdir()) stem2fp_dict = {x.stem: x for x in visit_fp_list} train_df[&#39;visit_fp&#39;] = train_df.Id.map(stem2fp_dict) train_df.to_csv(train_df_fp, header=True, index=False) train_df.head()   torchvision.Dataset &amp; Dataloader \u4f7f\u7528torchvision\u63d0\u4f9b\u7684API\u8f7d\u5165\u4e24\u7c7b\u6570\u636e\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67  # create dataset class class MultiModalDataset(Dataset): def __init__(self,file_df,augument=True): self.file_df = file_df.copy() #csv self.augument = augument def __len__(self): return len(self.file_df) def __getitem__(self,index): X = self.read_images(index) visit=self.read_npy(index).transpose(1,2,0) y = self.file_df.iloc[index].Target if self.augument: X = self.augumentor(X) # \u56fe\u50cf\u589e\u5f3a X = T.Compose([T.ToPILImage(),T.ToTensor()])(X) visit=T.Compose([T.ToTensor()])(visit) return X.float(),visit.float(),y def read_images(self,index): row = self.file_df.iloc[index] images = io.imread(row.image_fp) return images def read_npy(self,index): row = self.file_df.iloc[index] visit=np.load(row.visit_fp) return visit def augumentor(self,image):# \u56fe\u50cf\u968f\u673a\u589e\u5f3a augment_img = iaa.Sequential([ iaa.Fliplr(0.5), iaa.Flipud(0.5), iaa.SomeOf((0,4),[ iaa.Affine(rotate=90), iaa.Affine(rotate=180), iaa.Affine(rotate=270), iaa.Affine(shear=(-16, 16)), ]), iaa.OneOf([ iaa.GaussianBlur((0, 3.0)), # blur images with a sigma between 0 and 3.0 iaa.AverageBlur(k=(2, 7)), # blur image using local means with kernel sizes between 2 and 7 iaa.MedianBlur(k=(3, 11)), # blur image using local medians with kernel sizes between 2 and 7 ]), #iaa.Sharpen(alpha=(0, 1.0), lightness=(0.75, 1.5)), # sharpen images ], random_order=True) image_aug = augment_img.augment_image(image) return image_aug # split data all_files_df = pd.read_csv(train_df_fp) train_df,val_df = train_test_split(all_files_df, test_size=0.1, random_state = 2050) # load dataset train_gen = MultiModalDataset(train_df) train_loader = DataLoader(train_gen,batch_size=batch_size,shuffle=True,pin_memory=True,num_workers=0) #num_worker is limited by shared memory in Docker! val_gen = MultiModalDataset(val_df, augument=False) val_loader = DataLoader(val_gen,batch_size=batch_size,shuffle=False,pin_memory=True,num_workers=0)   Note:\n  torch.transpose: \u9ad8\u7ef4\u5411\u91cf\u8f6c\u7f6e.\u5982\u539f\u59cb\u5411\u91cf\u7ef4\u5ea6(7,26,24), torch.transpose(1,2,0)\u8f6c\u6362\u540e\uff0c\u5411\u91cf\u7ef4\u5ea6\u6839\u636e\u7d22\u5f15\u4f4d\u7f6e\u6539\u53d8\u800c\u53d8\u5316\u4e3a(26,24,7)\u3002 (\u7d22\u5f15\u4f4d\u7f6e: 0-&gt;7, 1-&gt;26, 2-&gt;24)\n  image_aug: \u56fe\u50cf\u589e\u5f3a\uff0c\u522b\u4eba\u90fd\u8bf4\u5f3a\uff1b\u8bad\u7ec3\u96c6\u56fe\u50cf\u589e\u5f3a\u540e\u6709\u5229\u4e8e\u7f13\u89e3\u6a21\u578b\u8fc7\u62df\u5408\uff0c\u589e\u5f3a\u6a21\u578b\u6cdb\u5316\u80fd\u529b\u3002\n  num_workers: window10\u4e0b\u53ea\u80fd\u8bbe\u7f6e\u4e3a0\uff0c\u4e0d\u7136\u62a5\u9519\n  \u6a21\u578b\u8bbe\u8ba1 \u4ece\u5355\u4e00\u6a21\u578b(ImageNet, VisitNet)\u5230\u590d\u5408\u6a21\u578b(MulitNet)\u7684\u601d\u8def\u5f00\u59cb\u5c1d\u8bd5\uff0c\u5148\u8f7d\u5165\u9884\u8bad\u7ec3\u6a21\u578b\u8fdb\u884c\u7b80\u5355\u4fee\u6539\uff0c\u540e\u5c1d\u8bd5\u57fa\u4e8e\u9884\u8bad\u7ec3\u6a21\u578b\u8fdb\u884c\u81ea\u5b9a\u4e49\uff0c\u6700\u540e\u5c1d\u8bd5\u7ed3\u5408\u4e24\u79cd\u6a21\u578b\u3002\n\u8f7d\u5165\u9884\u8bad\u7ec3\u6a21\u578b\u8fdb\u884c\u7b80\u5355\u4fee\u6539  ImageNet  1 2 3 4  model = torchvision.models.resnet18(pretrained=True) model = torchvision.models.resnet34(pretrained=True) # \u66f4\u6539\u6700\u540e\u8f93\u51fa\u4e3a9\u7c7b model.fc = nn.Linear(model.fc.in_features, num_classes)    VisitNet  1 2 3 4 5  model = torchvision.models.resnet152(pretrained=True) # \u6539\u4e3a7\u901a\u9053,\u539f\u59cb\u56fe\u7247\u8f93\u5165\u4e3a3\u901a\u9053\uff0cvisit\u8f93\u5165\u4e3a7\u901a\u9053 model.conv1 = nn.Conv2d(7, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False) model.fc = nn.Linear(model.fc.in_features, num_classes) model.to(device)   \u57fa\u4e8e\u9884\u8bad\u7ec3\u6a21\u578b\u8fdb\u884c\u81ea\u5b9a\u4e49  ImageNet  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  class ImageModalNet(nn.Module): def __init__(self, backbone=&#39;densenet121&#39;, drop=0.25, pretrained=True): super().__init__() if pretrained: img_model = pretrainedmodels.__dict__[backbone](num_classes=1000, pretrained=&#39;imagenet&#39;) else: img_model = pretrainedmodels.__dict__[backbone](num_classes=1000, pretrained=None) self.img_encoder = list(img_model.children())[:-2] self.img_encoder.append(nn.AdaptiveAvgPool2d(1)) self.img_encoder = nn.Sequential(*self.img_encoder) if drop &gt; 0: self.img_fc = nn.Sequential(FCViewer(), nn.BatchNorm1d(img_model.last_linear.in_features), nn.Dropout(drop), nn.Linear(img_model.last_linear.in_features, 256)) else: self.img_fc = nn.Sequential( FCViewer(), nn.BatchNorm1d(img_model.last_linear.in_features), nn.Linear(img_model.last_linear.in_features, 256) ) self.relu = nn.ReLU(inplace=True) self.bn = nn.BatchNorm1d(256) self.dropout = nn.Dropout(0.5) self.cls = nn.Linear(256, num_classes) def forward(self, x_img): x = self.img_encoder(x_img) x = self.img_fc(x) x = self.relu(x) x = self.bn(x) x = self.dropout(x) x = self.cls(x) return x    VisitNet (DPN\u7f51\u7edc)  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119  class VisitNet(nn.Module): #\u968f\u673a\u521d\u59cb\u5316\u7684DPN26: https://github.com/destiny19960207/URFC-top4 def __init__(self): super(VisitNet, self).__init__() k = 1 in_channel = 7 layer1_1 = [] layer1_1.append(nn.Conv2d(in_channel, 64 * k, kernel_size=(6, 1), stride=(6, 1))) layer1_1.append(nn.BatchNorm2d(64 * k)) layer1_1.append(nn.ReLU()) layer1_1.append(nn.Conv2d(64 * k, 64 * k, kernel_size=(1, 7), stride=(1, 7))) layer1_1.append(nn.BatchNorm2d(64 * k)) layer1_1.append(nn.ReLU()) self.cell_1_1 = nn.Sequential(*layer1_1) layer1_2 = [] layer1_2.append(nn.Conv2d(in_channel, 64 * k, kernel_size=(1, 7), stride=(1, 7), padding=(0, 0))) layer1_2.append(nn.BatchNorm2d(64 * k)) layer1_2.append(nn.ReLU()) layer1_2.append(nn.Conv2d(64 * k, 64 * k, kernel_size=(6, 1), stride=(6, 1), padding=(0, 0))) layer1_2.append(nn.BatchNorm2d(64 * k)) layer1_2.append(nn.ReLU()) self.cell_1_2 = nn.Sequential(*layer1_2) layer1_3 = [] layer1_3.append(nn.Conv2d(in_channel, 64 * k, kernel_size=(6, 5), stride=(6, 1), padding=(0, 2))) layer1_3.append(nn.BatchNorm2d(64 * k)) layer1_3.append(nn.ReLU()) layer1_3.append(nn.Conv2d(64 * k, 64 * k, kernel_size=(5, 7), stride=(1, 7), padding=(2, 0))) layer1_3.append(nn.BatchNorm2d(64 * k)) layer1_3.append(nn.ReLU()) self.cell_1_3 = nn.Sequential(*layer1_3) layer1_4 = [] layer1_4.append(nn.Conv2d(in_channel, 64 * k, kernel_size=(5, 7), stride=(1, 7), padding=(2, 0))) layer1_4.append(nn.BatchNorm2d(64 * k)) layer1_4.append(nn.ReLU()) layer1_4.append(nn.Conv2d(64 * k, 64 * k, kernel_size=(6, 5), stride=(6, 1), padding=(0, 2))) layer1_4.append(nn.BatchNorm2d(64 * k)) layer1_4.append(nn.ReLU()) self.cell_1_4 = nn.Sequential(*layer1_4) layer2_1 = [] layer2_1.append(nn.Conv2d(256 * k, 256 * k, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))) layer2_1.append(nn.BatchNorm2d(256 * k)) layer2_1.append(nn.ReLU()) layer2_1.append(nn.Dropout(0.1)) layer2_1.append(nn.Conv2d(256 * k, 256 * k, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))) layer2_1.append(nn.BatchNorm2d(256 * k)) layer2_1.append(nn.ReLU()) layer2_1.append(nn.Dropout(0.1)) self.cell_2_1 = nn.Sequential(*layer2_1) layer2_2 = [] layer2_2.append(nn.Conv2d(256 * k, 256 * k, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0))) layer2_2.append(nn.BatchNorm2d(256 * k)) layer2_2.append(nn.ReLU()) layer2_2.append(nn.Dropout(0.1)) layer2_2.append(nn.Conv2d(256 * k, 256 * k, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))) layer2_2.append(nn.BatchNorm2d(256 * k)) layer2_2.append(nn.ReLU()) layer2_2.append(nn.Dropout(0.1)) self.cell_2_2 = nn.Sequential(*layer2_2) layer3_1 = [] layer3_1.append(nn.Conv2d(512 * k, 512 * k, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))) layer3_1.append(nn.BatchNorm2d(512 * k)) layer3_1.append(nn.ReLU()) layer3_1.append(nn.Dropout(0.2)) layer3_1.append(nn.Conv2d(512 * k, 512 * k, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))) layer3_1.append(nn.BatchNorm2d(512 * k)) layer3_1.append(nn.ReLU()) layer3_1.append(nn.Dropout(0.2)) self.cell_3_1 = nn.Sequential(*layer3_1) layer4_1 = [] layer4_1.append(nn.Conv2d(512 * k, 512 * k, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))) layer4_1.append(nn.BatchNorm2d(512 * k)) layer4_1.append(nn.ReLU()) layer4_1.append(nn.Dropout(0.2)) layer4_1.append(nn.Conv2d(512 * k, 512 * k, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))) layer4_1.append(nn.BatchNorm2d(512 * k)) layer4_1.append(nn.ReLU()) layer4_1.append(nn.Dropout(0.2)) self.cell_4_1 = nn.Sequential(*layer4_1) for m in self.modules(): if isinstance(m, nn.Conv2d): nn.init.kaiming_normal_(m.weight, mode=&#39;fan_out&#39;, nonlinearity=&#39;relu&#39;) elif isinstance(m, nn.BatchNorm2d): nn.init.constant_(m.weight, 1) nn.init.constant_(m.bias, 0) fc_dim = 4 * 3 * 512 * k self.fc = nn.Sequential(FCViewer(), nn.Dropout(0.5), nn.Linear(fc_dim, 512), nn.ReLU(), nn.Dropout(0.5), nn.Linear(512, 256) ) def forward(self, x): x1_1 = self.cell_1_1(x) x1_2 = self.cell_1_2(x) x1_3 = self.cell_1_3(x) x1_4 = self.cell_1_4(x) x_in = torch.cat([x1_1, x1_2, x1_3, x1_4], 1) x_out_1 = self.cell_2_1(x_in) x_out_2 = self.cell_2_2(x_in) x_in = torch.cat([x_out_1, x_out_2], 1) x_out = self.cell_3_1(x_in) x_in = x_in + x_out x_out = self.cell_4_1(x_in) x_in = x_in + x_out out = self.fc(x_in) return out   \u6a21\u578b\u7ed3\u5408 &amp; \u591a\u6a21\u5b66\u4e60  \u81ea\u5df1\u5199\u7684  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  class MultiModalNet(nn.Module): def __init__(self, backbone, drop, pretrained=True): super().__init__() if pretrained: img_model = pretrainedmodels.__dict__[backbone](num_classes=1000, pretrained=&#39;imagenet&#39;) else: img_model = pretrainedmodels.__dict__[backbone](num_classes=1000, pretrained=None) self.img_encoder = list(img_model.children())[:-2] self.img_encoder.append(nn.AdaptiveAvgPool2d(1)) self.img_encoder = nn.Sequential(*self.img_encoder) visit_model = torchvision.models.resnet152(pretrained=True) visit_model.conv1 = nn.Conv2d(7, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False) # \u6539\u4e3a7\u901a\u9053 visit_model.fc = nn.Linear(visit_model.fc.in_features, 256) self.visit_encoder = list(visit_model.children())[:-2] self.visit_encoder.append(nn.AdaptiveAvgPool2d(1)) self.visit_encoder = nn.Sequential(*self.visit_encoder) self.fc_viewer = nn.Sequential(FCViewer()) self.relu = nn.ReLU(inplace=True) self.bn = nn.BatchNorm1d(3072) self.dropout = nn.Dropout(0.5) self.cls1 = nn.Linear(3072, 1024) self.cls2 = nn.Linear(1024, num_classes) def forward(self, x_img, x_visit): x_img = self.img_encoder(x_img) x_img = self.fc_viewer(x_img) x_visit = self.visit_encoder(x_visit) x_visit = self.fc_viewer(x_visit) x_cat = torch.cat((x_img, x_visit), 1) x = self.relu(x_cat) x = self.bn(x) x = self.dropout(x) x = self.cls1(x) x = self.cls2(x) return x    \u6709\u4e9b\u4fee\u6539  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  class MultiNet(nn.Module): def __init__(self, drop): super().__init__() img_model = pretrainedmodels.__dict__[&#39;resnet50&#39;](num_classes=1000, pretrained=&#39;imagenet&#39;) # seresnext101 self.img_encoder = list(img_model.children())[:-2] self.img_encoder.append(nn.AdaptiveAvgPool2d(1)) self.img_encoder = nn.Sequential(*self.img_encoder, FCViewer(), nn.Dropout(drop), nn.Linear(2048, 256), ) self.visit_conv = VisitNet() #### cat 512-&gt;9 cat_dim = 256 + 256 self.fc = nn.Sequential(FCViewer(), nn.ReLU(), nn.Dropout(drop), nn.Linear(cat_dim, cat_dim), nn.ReLU(), nn.Dropout(drop), nn.Linear(cat_dim, num_classes) ) def forward(self, x_img, x_vis): x1 = self.img_encoder(x_img) x2 = self.visit_conv(x_vis) x3 = torch.cat([x1, x2], 1) out = self.fc(x3) return out   \u5176\u5b9e\u8c03\u8bd5\u8fc7\u7a0b\u4e2d\u5f88\u591a\u62a5\u9519\u662f\u5f88\u70e6\u8e81\u7684\uff0c\u53c8\u4e0d\u61c2\u6a21\u578b\u539f\u7406\uff0c\u53ea\u80fd\u68c0\u7d22\u540e\u6162\u6162\u8c03\u8bd5\u3002\u8fd9\u91cc\u58f0\u660e\u4e00\u4e0b&quot;Google\u5927\u6cd5\u597d&quot;,\u89e3\u51b390%\u95ee\u9898\u3002\u62a5\u9519\u5185\u5bb9\u5927\u4f53\u5fd8\u8bb0\u4e86\uff0c\u901a\u5e38\u5305\u542b\u7ef4\u5ea6\u4e0d\u4e00\u81f4\u7b49\u3002\n\u4e3b\u51fd\u6570 \u8bad\u7ec3&amp;\u9a8c\u8bc1\u51fd\u6570 \u8fd9\u91cc\u6bd4\u8f83\u901a\u7528\uff0c\u4e3b\u8981\u662f\u6a21\u578b\u548c\u53c2\u6570\u4fee\u6539\u6bd4\u8f83\u5927\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73  def train(train_loader,model,criterion,optimizer,epoch,valid_metrics,best_results,start): losses = AverageMeter() f1 = AverageMeter() acc = AverageMeter() model.train() for i,(images,visit,target) in enumerate(train_loader): visit=visit.to(device) images = images.to(device) indx_target=target.clone() target = torch.from_numpy(np.array(target)).long().to(device) # compute output output = model(images,visit) loss = criterion(output,target) losses.update(loss.item(),images.size(0)) f1_batch = f1_score(target.cpu().data.numpy(),np.argmax(F.softmax(output).cpu().data.numpy(),axis=1),average=&#39;macro&#39;) acc_score=accuracy_score(target.cpu().data.numpy(),np.argmax(F.softmax(output).cpu().data.numpy(),axis=1)) f1.update(f1_batch,images.size(0)) acc.update(acc_score,images.size(0)) optimizer.zero_grad() loss.backward() optimizer.step() print(&#39;\\r&#39;,end=&#39;&#39;,flush=True) message = &#39;%s%5.1f%6.1f| %0.3f%0.3f%0.3f| %0.3f%0.3f%0.4f| %s%s%s| %s&#39; % (\\ &#34;train&#34;, i/len(train_loader) + epoch, epoch, acc.avg, losses.avg, f1.avg, valid_metrics[0], valid_metrics[1],valid_metrics[2], str(best_results[0])[:8],str(best_results[1])[:8],str(best_results[2])[:8], time_to_str((timer() - start),&#39;min&#39;)) print(message , end=&#39;&#39;,flush=True) log.write(&#34;\\n&#34;) #log.write(message) #log.write(&#34;\\n&#34;) return [acc.avg,losses.avg,f1.avg] # 2. evaluate function def evaluate(val_loader,model,criterion,epoch,train_metrics,best_results,start): # only meter loss and f1 score losses = AverageMeter() f1 = AverageMeter() acc= AverageMeter() # switch mode for evaluation model.to(device) model.eval() with torch.no_grad(): for i, (images,visit,target) in enumerate(val_loader): images_var = images.to(device) visit=visit.to(device) indx_target=target.clone() target = torch.from_numpy(np.array(target)).long().to(device) output = model(images_var,visit) loss = criterion(output,target) losses.update(loss.item(),images_var.size(0)) f1_batch = f1_score(target.cpu().data.numpy(),np.argmax(F.softmax(output).cpu().data.numpy(),axis=1),average=&#39;macro&#39;) acc_score=accuracy_score(target.cpu().data.numpy(),np.argmax(F.softmax(output).cpu().data.numpy(),axis=1)) f1.update(f1_batch,images.size(0)) acc.update(acc_score,images.size(0)) print(&#39;\\r&#39;,end=&#39;&#39;,flush=True) message = &#39;%s%5.1f%6.1f| %0.3f%0.3f%0.3f| %0.3f%0.3f%0.4f| %s%s%s| %s&#39; % (\\ &#34;val&#34;, i/len(val_loader) + epoch, epoch, acc.avg,losses.avg,f1.avg, train_metrics[0], train_metrics[1],train_metrics[2], str(best_results[0])[:8],str(best_results[1])[:8],str(best_results[2])[:8], time_to_str((timer() - start),&#39;min&#39;)) print(message, end=&#39;&#39;,flush=True) log.write(&#34;\\n&#34;) #log.write(message) #log.write(&#34;\\n&#34;) return [acc.avg,losses.avg,f1.avg]   main 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90  start_epoch = 0 best_acc=0 best_loss = np.inf best_f1 = 0 best_results = [0,np.inf,0] val_metrics = [0,np.inf,0] device = torch.device(&#34;cuda&#34; if torch.cuda.is_available() else &#34;cpu&#34;) model = MultiNet(0.25) model.to(device) optimizer = torch.optim.Adam([{&#39;params&#39;: model.parameters()}], lr=lr, weight_decay=1e-4) criterion = nn.CrossEntropyLoss().to(device) all_files_df = pd.read_csv(train_df_fp) train_df,val_df = train_test_split(all_files_df, test_size=0.1, random_state = 2050) # load dataset train_gen = MultiModalDataset(train_df) train_loader = DataLoader(train_gen,batch_size=batch_size,shuffle=True,pin_memory=True,num_workers=0) #num_worker is limited by shared memory in Docker! val_gen = MultiModalDataset(val_df, augument=False) val_loader = DataLoader(val_gen,batch_size=batch_size,shuffle=False,pin_memory=True,num_workers=0) scheduler = lr_scheduler.ReduceLROnPlateau(optimizer) start = timer() log = Logger() log.open(&#34;logs/%s_log_train.txt&#34;%model_name,mode=&#34;a&#34;) log.write(&#34;\\n----------------------------------------------- [START %s] %s\\n\\n&#34; % (datetime.now().strftime(&#39;%Y-%m-%d%H:%M:%S&#39;), &#39;-&#39; * 51)) log.write(&#39; |------------ Train -------|----------- Valid ---------|----------Best Results---|------------|\\n&#39;) log.write(&#39;mode iter epoch | acc loss f1_macro | acc loss f1_macro | loss f1_macro | time |\\n&#39;) log.write(&#39;-------------------------------------------------------------------------------------------------------------------------|\\n&#39;) fold = 1 for epoch in range(0, epochs): print(&#39;lr:&#39;, lr / (2 ** np.sqrt(epoch + 0.1))) optimizer = torch.optim.Adam([{&#39;params&#39;: model.parameters()}], lr=lr / (2 ** np.sqrt(epoch + 0.1)), weight_decay=1e-4) scheduler.step(epoch) # train train_metrics = train(train_loader, model, criterion, optimizer, epoch, val_metrics, best_results, start) # val val_metrics = evaluate(val_loader, model, criterion, epoch, train_metrics, best_results, start) # check results is_best_acc = val_metrics[0] &gt; best_results[0] best_results[0] = max(val_metrics[0], best_results[0]) is_best_loss = val_metrics[1] &lt; best_results[1] best_results[1] = min(val_metrics[1], best_results[1]) is_best_f1 = val_metrics[2] &gt; best_results[2] best_results[2] = max(val_metrics[2], best_results[2]) # save model save_checkpoint({ &#34;epoch&#34;: epoch + 1, &#34;model_name&#34;: model_name, &#34;state_dict&#34;: model.state_dict(), &#34;best_acc&#34;: best_results[0], &#34;best_loss&#34;: best_results[1], &#34;optimizer&#34;: optimizer.state_dict(), &#34;fold&#34;: fold, &#34;best_f1&#34;: best_results[2], }, is_best_acc, is_best_loss, is_best_f1, fold) # print logs print(&#39;\\r&#39;, end=&#39;&#39;, flush=True) log.write( &#39;%s%5.1f%6.1f| %0.3f%0.3f%0.3f| %0.3f%0.3f%0.3f| %s%s%s| %s&#39; % ( \\ &#34;best&#34;, epoch, epoch, train_metrics[0], train_metrics[1], train_metrics[2], val_metrics[0], val_metrics[1], val_metrics[2], str(best_results[0])[:8], str(best_results[1])[:8], str(best_results[2])[:8], time_to_str((timer() - start), &#39;min&#39;)) ) log.write(&#34;\\n&#34;) time.sleep(0.01)   \u6587\u4ef6\u6253\u5305 \u4e0b\u8f7d\u5730\u5740:\rRSURFC.rar\n",
        "description": "",
        "id": 62,
        "section": "posts",
        "tags": [
            "\u7ec3\u4e60\u8d5b",
            "Baseline",
            "\u57ce\u5e02\u529f\u80fd\u533a\u5212\u5206",
            "Pytorch",
            "\u6df1\u5ea6\u5b66\u4e60"
        ],
        "title": "RSURFC-\u7ec3\u4e60\u8d5bBaseline\u5b9e\u73b0",
        "uri": "/posts/notes/2020-06-07-rsurfc-%E7%BB%83%E4%B9%A0%E8%B5%9Bbaseline%E5%AE%9E%E7%8E%B0/"
    },
    {
        "content": " \u5c0f\u732b\u54aa\u9020\u8bbf\u9057\u5931\u8bb0\u3002\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u7231\u6b87\",\rartist: \"\u5c0f\u65f6\u59d1\u5a18\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%88%B1%E6%AE%87-f8c650-Ag.mp3\",\rcover: \"https://p1.music.126.net/U8gz-goWF6O0KNWxAQN01Q==/109951163870763627.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%88%B1%E6%AE%87-%E5%B0%8F%E6%97%B6%E5%A7%91%E5%A8%98-542ec3-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.6.1 \u597d\u50cf\u6f02\u6d6e\u4e86\u5f88\u4e45 2020.6.2 \u8c46\u74e32019\u5e74\u5ea6\u7535\u5f71\u699c\u5355 \u770b\u4e86\u597d\u591a\u904d\u770b\u4e0d\u61c2\u3002\u6765\u81ea\r\u65b0\u7248\u767d\u8bdd\u7a7a\u95f4\u7edf\u8ba1\uff0813\uff09\uff1a\u968f\u673a\u7684\u529b\u91cf; \u767e\u5ea6\u767e\u79d1  \u5929\u4e4b\u9053\uff0c\u5176\u72b9\u5f20\u5f13\u4e0e\uff1f\u9ad8\u8005\u6291\u4e0b\uff0c\u4e0b\u8005\u4e3e\u4e4b\uff0c\u6709\u4f59\u8005\u635f\u4e4b\uff0c\u4e0d\u8db3\u8005\u8865\u4e4b\u3002\n\u5929\u4e4b\u9053\uff0c\u635f\u6709\u4f59\u800c\u8865\u4e0d\u8db3\u3002\u4eba\u4e4b\u9053\uff0c\u5219\u4e0d\u7136\uff0c\u635f\u4e0d\u8db3\u4ee5\u5949\u6709\u4f59\u3002\n\u5b70\u80fd\u6709\u4f59\u4ee5\u5949\u5929\u4e0b\uff0c\u552f\u6709\u9053\u8005\u3002\u662f\u4ee5\u5723\u4eba\u4e3a\u800c\u4e0d\u6043\uff0c\u529f\u6210\u800c\u4e0d\u5904\uff0c\u5176\u4e0d\u6b32\u89c1\u8d24\u3002\n\u91ca\u4e49: \u81ea\u7136\u7684\u89c4\u5f8b\uff0c\u4e0d\u662f\u5f88\u50cf\u5f20\u5f13\u5c04\u7bad\u5417\uff1f\u5f26\u62c9\u9ad8\u4e86\u5c31\u628a\u5b83\u538b\u4f4e\u4e00\u4e9b\uff0c\u4f4e\u4e86\u5c31\u628a\u5b83\u4e3e\u9ad8\u4e00\u4e9b\uff0c\u62c9\u5f97\u8fc7\u6ee1\u4e86\u5c31\u628a\u5b83\u653e\u677e\u4e00\u4e9b\uff0c\u62c9\u5f97\u4e0d\u8db3\u4e86\u5c31\u628a\u5b83\u8865\u5145\u4e00\u4e9b\u3002\n\u81ea\u7136\u7684\u89c4\u5f8b\uff0c\u662f\u51cf\u5c11\u6709\u4f59\u7684\u8865\u7ed9\u4e0d\u8db3\u7684\u3002\u53ef\u662f\u793e\u4f1a\u7684\u6cd5\u5219\u5374\u4e0d\u662f\u8fd9\u6837\uff0c\u8981\u51cf\u5c11\u4e0d\u8db3\u7684\uff0c\u6765\u5949\u732e\u7ed9\u6709\u4f59\u7684\u4eba\u3002\n\u90a3\u4e48\uff0c\u8c01\u80fd\u591f\u51cf\u5c11\u6709\u4f59\u7684\u4ee5\u8865\u7ed9\u5929\u4e0b\u4eba\u7684\u4e0d\u8db3\u5462\uff1f\u53ea\u6709\u6709\u9053\u7684\u4eba\u624d\u53ef\u4ee5\u505a\u5230\u3002\u56e0\u6b64\uff0c\u6709\u9053\u7684\u5723\u4eba\u8fd9\u624d\u6709\u6240\u4f5c\u4e3a\u800c\u4e0d\u5360\u6709\uff0c\u6709\u6240\u6210\u5c31\u800c\u4e0d\u5c45\u529f\u3002\u4ed6\u662f\u4e0d\u613f\u610f\u663e\u793a\u81ea\u5df1\u7684\u8d24\u80fd\u3002\n  2020.6.3 RSURFC\u8fd9\u4e2a\u6bd4\u8d5b\uff0c\u5206\u522b\u5355\u72ec\u8dd1\u4e86\u4e00\u4e0bRS\u548cvisit\u7684baseline,\u4e00\u4e2a0.33\uff0c\u4e00\u4e2a0.58.\u6709\u70b9\u610f\u601d\u3002 2020.6.4 \u8fd9\u4e00\u5929\u88ab\u7c97\u5fc3\u7684\u4f5c\u8005\u9057\u6f0f\u4e86\u3002 2020.6.5 \u6211\u662f\u4e0d\u662f\u8fd8\u6d3b\u5728\u6628\u5929\uff1f\uff1f\uff1f;\u4eca\u5929\u6362\u4e86\u4e00\u4e2a\u535a\u5ba2\u4e3b\u9898\u3002 2020.6.6 \u4ec0\u4e48\u662f\u57ce\u5e02\u5185\u90e8\u5c45\u6c11\u79fb\u52a8\u6a21\u5f0f\uff1f\u5982\u4f55\u4ece\u51fa\u79df\u8f66\u8f68\u8ff9\u4e2d\u6316\u6398\uff1f;Image+Visit\u7ed3\u5408\u7684\u591a\u6a21\u5b66\u4e60\u7ec8\u4e8e\u8dd1\u901a\u4e86\u3002\u4e24\u7c7b\u7279\u5f81\u7ed3\u5408\u679c\u7136\u7cbe\u5ea6\u4e00\u4e0b\u5b50\u5c31\u5347\u4e0a\u6765\u4e86\uff0c\u4e5f\u521a\u521a\u8dd1\u5230Baseline(0.67)\u3002\u60f3\u60f3\u90a3\u4e9b\u80fd\u628a\u7cbe\u5ea6\u4ece0.67\u5347\u52300.88\u7684\u4eba\uff0c\u786e\u5b9e\u662f\u4e0b\u4e86\u4e0d\u5c11\u529f\u592b\u3002 2020.6.7 \u8eab\u65e0\u5f69\u51e4\u53cc\u98de\u7ffc\uff0c\u5fc3\u6709\u7075\u7280\u4e00\u70b9\u901a\u3002 2020.6.8 \u65e0\u53ef\u5948\u4f55\u82b1\u843d\u53bb\uff0c\u4f3c\u66fe\u76f8\u8bc6\u71d5\u5f52\u6765\u3002\u5c0f\u56ed\u9999\u5f84\u72ec\u5f98\u5f8a\u3002 2020.6.9 \u660e\u6708\u522b\u679d\u60ca\u9e4a\uff0c\u6e05\u98ce\u534a\u591c\u9e23\u8749\u3002\u6211\u68a6\u89c1\u81ea\u5df1\u8e72\u76d1\u72f1\u4e86\u3002\u5177\u4f53\u4ec0\u4e48\u539f\u56e0\u5fd8\u8bb0\u4e86\u3002\u5c31\u662f\u8fdb\u53bb\u4e86\u3002 2020.6.10 \u5373\u662f\u5e73\u5eb8\u4e4b\u4eba\uff0c\u53c8\u6709\u4ec0\u4e48\u53ef\u5931\u53bb\u7684\u5462\uff1f 2020.6.11 \u4f18\u535a\u57fa\u91d1\u83b7\u6279\u4e86\uff0c\u6709\u70b9\u610f\u5916\u3002\u4f46\u9ad8\u5174\u4e0d\u8d77\u6765\uff1f 2020.6.12 \u76f8\u601d\u5c71\u3002 2020.6.13 \u8c03\u97f3\u628a1\u5f26\u5f04\u65ad\u4e86\uff0c\u76f2\u76ee\u81ea\u4fe1\u3002 2020.6.14 \u65ad\u5f26\u4fee\u590d\u3002 2020.6.15 \u5c0f\u732b\u54aa\u9020\u8bbf\u3002 2020.6.16 \u4f60\u7684\u80cc\u5f71\u65e0\u6cd5\u4ece\u90a3\u665a\u7684\u5915\u9633\u4e2d\u62bd\u79bb \u6240\u4ee5\u6211\u51b3\u5b9a\u7231\u4e0a\u6bcf\u4e2a\u9ec4\u660f 2020.6.17 \u62ff\u51fa\u5409\u4ed6\u7ec3\u4e60 \u56de\u60f3\u8d77\u535a\u4e00\u535a\u4e8c\u90a3\u6bb5\u65f6\u95f4 \u5728314\u5427 \u4f1a\u542c\u5230\u9694\u58c1\u540c\u5b66\u665a\u4e0a\u7ec3\u7434 \u8fc7\u53bb\u7684\u65f6\u95f4\u603b\u4f1a\u8ba9\u4eba\u6000\u5ff5' 2020.6.18 \u5176\u5b9e\u5206\u522b\u4e5f\u6ca1\u6709\u8fd9\u4e48\u53ef\u6015\u300265\u4e07\u4e2a\u5c0f\u65f6\u540e\uff0c\u5f53\u6211\u4eec\u6c27\u5316\u6210\u98ce\uff0c\u5c31\u80fd\u53d8\u6210\u540c\u4e00\u676f\u5564\u9152\u4e0a\u4e24\u6735\u76f8\u90bb\u7684\u6ce1\u6cab\uff0c\u5c31\u80fd\u53d8\u6210\u540c\u4e00\u76cf\u8def\u706f\u4e0b\u4e24\u7c92\u4f9d\u504e\u7684\u5c18\u57c3\u3002\u5b87\u5b99\u4e2d\u7684\u539f\u5b50\u5e76\u4e0d\u4f1a\u6e6e\u706d\uff0c\u800c\u6211\u4eec\uff0c\u4e5f\u7ec8\u7a76\u4f1a\u5728\u4e00\u8d77\u3002-\u300aApocalypse\u300b\u7f51\u6613\u4e91 2020.6.19 \u4f1a\u601d\u8003\u7684\u91d1\u6bdb\u6069\u4f50 2020.6.20 \u8bfb\u535a\u538b\u529b\u5927 \u71ac\u591c\u53c8\u8131\u53d1 \u8bfb\u535a\u751f\u6d3b\u82e6 \u79d1\u7814\u5fc3\u91cc\u5835 2020.6.21 \u7a81\u7136\u53d1\u73b0\u5934\u53d1\u957f\u6709\u53e6\u5916\u4e00\u4e2a\u597d\u5904 \u53ef\u4ee5\u4e0d\u663e\u80d6 :( 2020.6.22 \u6df1\u5733\u5e02\u624b\u673a\u4fe1\u4ee4\u6570\u636e\u4e0b\u8f7d\u4e0e\u5904\u7406(\u5305\u62ecETC/\u516c\u4ea4\u5361/\u51fa\u79df\u8f66\u8f68\u8ff9\u7b49);\r\u73de\u73c8\u4e00\u53f7\u536b\u661f\u5f71\u50cf\u4e0b\u8f7d\u4ee5\u53ca\u9884\u5904\u7406 2020.6.23 \u5f00\u8f66\u8fd8\u662f\u4e0d\u7a33\u554a\uff0c\u5012\u8f66\u7684\u65f6\u5019\u53ea\u770b\u5012\u8f66\u5f71\u50cf\uff0c\u4e0d\u770b\u540e\u89c6\u955c\uff0c\u628a\u8f66\u522e\u4e86\u4e00\u4e2a\u5370\u3002\u8001\u7236\u4eb2\u8bf4\u4f60\u4f60\u8fd8\u4e0d\u670d\u6c14\uff0c\u6362\u4e86\u522b\u4eba\u65e9\u88ab\u9a82\u81ed\u4e86\u8fd8\u5f97\u8d54\u94b1\u3002\u957f\u8bb0\u6027\u554a\uff0c\u7279\u522b\u662f\u5012\u8f66\u3001\u4e0a\u5761\u8d77\u6b65\u7684\u65f6\u5019\u3002\u5f00\u8f66\u8981\u7a33\u5f53\uff0c\u4e00\u5931\u8db3\u5343\u53e4\u6068\u3002 2020.6.24 \u65e0\u6240\u8c13\u6ca1\u6709\u9633\u5149\uff0c\u524d\u884c\u7684\u4f60\u5c31\u662f\u7126\u70b9\u3002-\u67d0\u535a\u58eb\u8bba\u6587 2020.6.25 \u827e\u8349 2020.6.26 \u83ab\u8fc7\u4e8e\u7231\u60c5\u662f\u767e\u822c\u4e0d\u5982\u610f\u3002 2020.6.27 \u4f60\u4eec\u6709\u6ca1\u6709\u7279\u522b\u5bb3\u6015\u5931\u53bb\u7684\u4e1c\u897f \u6709\u65f6\u5019\u4e3a\u4e86\u8fd9\u4e9b\u4e1c\u897f \u4f60\u4f1a\u53bb\u505a\u4f60\u4eec\u4e0d\u613f\u610f\u505a\u7684\u4e8b\u60c5 2020.6.28 \u79cb\u8475 2020.6.29 \u8be5\u6b7b\u7684\u8001\u5bb6\u4f19\uff0c\u4e3a\u4ec0\u4e48\u8981\u62b1\u8d70\u6211\u517b\u7684\u732b 2020.6.30 \u7b2c\u4e8c\u8f6e\u590d\u7814\u8fd4\u6821\u7533\u8bf7\u5f00\u59cb\u4e86  ",
        "description": "",
        "id": 63,
        "section": "posts",
        "tags": [
            "\u56de\u5bb6",
            "\u5f00\u8f66",
            "\u571f\u5730\u5229\u7528\u5206\u7c7b",
            "\u4f18\u535a\u57fa\u91d1",
            "\u5409\u4ed6",
            "\u732b"
        ],
        "title": "2020-6",
        "uri": "/posts/journals/2020-06-01-2020-6/"
    },
    {
        "content": " osmnx\u662f\u4e0b\u8f7d\u3001\u5904\u7406\u7b49osm\u8def\u7f51\u5f88\u597d\u7528\u7684\u4e00\u4e2a\u5305\u3002networkx\u662f\u56fe\u8bba\u5b66\u4e60\u4e2d\u5f88\u597d\u7528\u7684\u5305\uff0c\u4e24\u8005\u7ed3\u5408\u4e3a\u57fa\u4e8e\u56fe\u8bba\u7684\u65b9\u6cd5\u7814\u7a76osm road network\u63d0\u4f9b\u4fbf\u5229\u3002\u4ee5\u4e0b\u5185\u5bb9\u4e3a\u6574\u7406\u4e24\u4e2a\u5305\u5e38\u7528\u7684\u529f\u80fd\u51fd\u6570\u65b9\u6cd5\u3002\n osmnx\u57fa\u7840 Init 1 2 3 4 5 6 7  import osmnx as ox import networkx as nx %matplotlib inline ox.config(log_console=True, use_cache=True) ox.__version__ from pathlib import Path   Query place 1 2  place =&#34;Shenzhen&#34; G = ox.graph_from_place(place, network_type=&#39;drive&#39;,which_result=2)     Note parameter network_type means specify several different network types(Refer from overview-osmnx):\n &lsquo;drive&rsquo; - get drivable public streets (but not service roads) &lsquo;drive_service&rsquo; - get drivable streets, including service roads &lsquo;walk&rsquo; - get all streets and paths that pedestrians can use (this network type ignores one-way directionality) &lsquo;bike&rsquo; - get all streets and paths that cyclists can use &lsquo;all&rsquo; - download all non-private OSM streets and paths (this is the default network type unless you specify a different one) &lsquo;all_private&rsquo; - download all OSM streets and paths, including private-access ones    private-access road means roads with tag-access=private. (Refer from wiki-osm)\n  Plot graph 1  fig, ax = ox.plot_graph(G, node_size=0, edge_color=&#39;w&#39;, edge_linewidth=0.2, bgcolor=&#39;k&#39;)   Save/load shapefile &amp; graphml Refer: osmnx-examples/05-save-load-networks.ipynb\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  # get a network # save graph as a shapefile # save/load graph as a graphml file: this is the best way to save your model # for subsequent work later shenzhen_dir = Path(&#39;./shenzhen&#39;) shp_dir = Path(shenzhen_dir, &#39;shp&#39;) graph_fp = Path(shenzhen_dir, &#39;shenzhen.graphml&#39;) if not shp_dir.exists(): shp_dir.mkdir() # shapefile &amp; graphml ox.save_graph_shapefile(G, filepath=str(shp_dir)) ox.save_graphml(G, filepath=str(graph_fp), gephi=False) # load graphml G = ox.load_graphml(graph_fp)   Calculate basic network indicators 1 2  stats = ox.basic_stats(G) stats   out:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  {&#39;n&#39;: 33121, &#39;m&#39;: 73564, &#39;k_avg&#39;: 4.442136408924851, &#39;intersection_count&#39;: 29210, &#39;streets_per_node_avg&#39;: 3.0009963467286616, &#39;streets_per_node_counts&#39;: {0: 0, 1: 3911, 2: 126, 3: 21360, 4: 7485, 5: 221, 6: 18}, &#39;streets_per_node_proportion&#39;: {0: 0.0, 1: 0.11808218350895203, 2: 0.0038042329639805562, 3: 0.6449080643700371, 4: 0.2259895534555116, 5: 0.006672503849521451, 6: 0.0005434618519972223}, &#39;edge_length_total&#39;: 14743317.355999907, &#39;edge_length_avg&#39;: 200.41484090043917, &#39;street_length_total&#39;: 10292802.579999937, &#39;street_length_avg&#39;: 207.1486592336165, &#39;street_segments_count&#39;: 49688, &#39;node_density_km&#39;: None, &#39;intersection_density_km&#39;: None, &#39;edge_density_km&#39;: None, &#39;street_density_km&#39;: None, &#39;circuity_avg&#39;: 1.0846412027749917, &#39;self_loop_proportion&#39;: 0.0014001413734979066, &#39;clean_intersection_count&#39;: None, &#39;clean_intersection_density_km&#39;: None}   Fast nearest node/edge search with OSMnx 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  center_point = lat, lng # \u6ce8\u610f\u5750\u6807\u683c\u5f0f\uff0c\u7eac\u5ea6\u5728\u524d\uff0c\u7ecf\u5ea6\u5728\u540e # find the nearest node to some point center_node = ox.get_nearest_node(G, center_point) # find the nearest nodes to a set of points # optionally specify `method` use use a kdtree or balltree index nearest_nodes = ox.get_nearest_nodes(G, lngs, lats, method=&#39;balltree&#39;) # find the nearest edge to some point nearest_edge = ox.get_nearest_edge(G, center_point) # find the nearest edges to some set of points # optionally specify `method` use use a kdtree or balltree index nearest_edges = ox.get_nearest_edges(G, lngs, lats)   OSMnx functions graph &lt;-&gt; GeoDataFrames Refer to : osmnx.utils_graph\nConvert a graph into node and/or edge GeoDataFrames 1 2 3  edges_gdf = ox.graph_to_gdfs(G, nodes=False) nodes_gdf = ox.graph_to_gdfs(G, edges=False) edges_gdf.head();nodes_gdf.head()   out:\nedges_gdf     u v key osmid name highway oneway length geometry lanes maxspeed ref bridge tunnel access width landuse junction     0 3377201155 3377199760 0 330725486 \u5357\u540c\u5927\u9053 secondary False 87.53 LINESTRING (114.2827267 22.6972648, 114.2818811 22.6971596) nan nan nan nan nan nan nan nan nan   1 3377201155 3145194682 0 330725486 \u5357\u540c\u5927\u9053 secondary False 284.987 LINESTRING (114.2827267 22.6972648, 114.2841709 22.6974048, 114.2854842 22.6975733) nan nan nan nan nan nan nan nan nan   2 3377201155 3377201142 0 330727857 nan unclassified False 332.196 LINESTRING (114.2827267 22.6972648, 114.2825873 22.6983075, 114.2826002 22.6984817, 114.2829494 22.7002143) nan nan nan nan nan nan nan nan nan   3 5296488468 2720855960 0 266553759 nan secondary_link False 9.983 LINESTRING (114.103413 22.7115999, 114.1033684 22.7116797) nan nan nan nan nan nan nan nan nan   4 5296488468 5296488469 0 548236871 \u4e2d\u73af\u5927\u9053 tertiary True 1143.42 LINESTRING (114.103413 22.7115999, 114.1037991 22.7116604, 114.1041064 22.711632, 114.1044133 22.7114466, 114.1047399 22.7111653, 114.104999 22.7108329, 114.1053723 22.7105961, 114.1062619 22.7103602, 114.1066166 22.7100907, 114.1067313 22.7096768, 114.1066358 22.7091382, 114.106247 22.7087397, 114.1057681 22.7082979, 114.1053296 22.7078727, 114.1050831 22.7075478, 114.1050484 22.7069286, 114.1051519 22.7064617, 114.105374 22.7060621, 114.1054614 22.7054678, 114.1054724 22.7048434, 114.1054836 22.7042894, 114.1054666 22.7039499) nan nan nan nan nan nan nan nan nan   nodes_gdf                      y x osmid highway ref geometry               &mdash;&mdash;&mdash;&ndash;: &mdash;&mdash;&ndash;: &mdash;&mdash;&ndash;: &mdash;&mdash;&mdash;&ndash;: &mdash;&mdash;&mdash;-: &mdash;&mdash;: :&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;-               3377201155 22.6973 114.283 3377201155 nan nan POINT (114.2827267 22.6972648)               5296488468 22.7116 114.103 5296488468 nan nan POINT (114.103413 22.7115999)               5296488469 22.7039 114.105 5296488469 nan nan POINT (114.1054666 22.7039499)               5296488477 22.704 114.103 5296488477 nan nan POINT (114.1033273 22.7039622)               2728263712 22.6701 114.138 2728263712 nan nan POINT (114.1384942 22.6700615)                 osmnx.utils_graph.graph_to_gdfs(G, nodes=True, edges=True, node_geometry=True, fill_edge_geometry=True)  G (networkx.MultiDiGraph) \u2013 input graph nodes (bool) \u2013 if True, convert graph nodes to a GeoDataFrame and return it edges (bool) \u2013 if True, convert graph edges to a GeoDataFrame and return it node_geometry (bool) \u2013 if True, create a geometry column from node x and y data fill_edge_geometry (bool) \u2013 if True, fill in missing edge geometry fields using origin and destination nodes    Convert node and edge GeoDataFrames into a MultiDiGraph 1  G = ox.graph_from_gdfs(gdf_edges=edges_gdf, gdf_nodes=nodes_gdf)    &lsquo;osmnx.utils_graph.graph_from_gdfs(gdf_nodes, gdf_edges)&rsquo;  gdf_nodes (geopandas.GeoDataFrame) \u2013 GeoDataFrame of graph nodes gdf_edges (geopandas.GeoDataFrame) \u2013 GeoDataFrame of graph edges    \u8def\u5f84\u89c4\u5212 Basic routing by distance Pick two nodes. Then find the shortest path between origin and destination, using weight=&lsquo;length&rsquo; to find the shortest path by minimizing distance traveled (otherwise it treats each edge as weight=1).\n1 2 3 4 5  # find the shortest path (by distance) between these nodes then plot it orig = list(G)[0] # node id 3377201155 dest = list(G)[-1] # node id 3377201149 route = nx.shortest_path(G, orig, dest) # [3377201155, 3145194682, ...] fig, ax = ox.plot_graph_route(G, route, route_linewidth=6, node_size=0, bgcolor=&#39;k&#39;)   The routing correctly handles one-way streets:\n1 2 3 4 5 6  orig_pnt = (22.67304, 114.0133) # \u6ce8\u610f\u5750\u6807\u683c\u5f0f\uff0c\u7eac\u5ea6\u5728\u524d\uff0c\u7ecf\u5ea6\u5728\u540e dest_pnt = (22.589, 114.0973) origin_node = ox.get_nearest_node(G, orig_pnt) destination_node = ox.get_nearest_node(G, dest_pnt) route = nx.shortest_path(G, origin_node, destination_node) fig, ax = ox.plot_graph_route(G, route, route_linewidth=6, node_size=0, bgcolor=&#39;k&#39;)    Note shortest_path(G, source=None, target=None, weight=None, method='dijkstra')  G (NetworkX graph) source (node, optional) \u2013 Starting node for path. If not specified, compute shortest paths for each possible starting node. target (node, optional) \u2013 Ending node for path. If not specified, compute shortest paths to all possible nodes. weight (None or string, optional (default = None)) \u2013 If None, every edge has weight/distance/cost 1. If a string, use this edge attribute as the edge weight. Any edge attribute not present defaults to 1. method (string, optional (default = \u2018dijkstra\u2019)) \u2013 The algorithm to use to compute the path. Supported options: \u2018dijkstra\u2019, \u2018bellman-ford\u2019. Other inputs produce a ValueError. If weight is None, unweighted graph methods are used, and this suggestion is ignored. Return: path \u2013 All returned paths include both the source and target in the path.If the source and target are both specified, return a single list of nodes in a shortest path from the source to the target.If only the source is specified, return a dictionary keyed by targets with a list of nodes in a shortest path from the source to one of the targets.If only the target is specified, return a dictionary keyed by sources with a list of nodes in a shortest path from one of the sources to the target.If neither the source nor target are specified return a dictionary of dictionaries with path[source][target]=[list of nodes in path].    Routing by travel speeds and times add_edge_speeds: The add_edge_speeds function add edge speeds (km per hour) to graph as new speed_kph edge attributes. Imputes free-flow travel speeds for all edges based on mean maxspeed value of edges, per highway type. This mean-imputation can obviously be imprecise, and the caller can override it by passing in hwy_speeds and/or fallback arguments that correspond to local speed limit standards.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  # impute speed on all edges missing data G = ox.add_edge_speeds(G) # calculate travel time (seconds) for all edges G = ox.add_edge_travel_times(G) # see mean speed/time values by road type edges = ox.graph_to_gdfs(G, nodes=False) edges[&#39;highway&#39;] = edges[&#39;highway&#39;].astype(str) edges.groupby(&#39;highway&#39;)[[&#39;length&#39;, &#39;speed_kph&#39;, &#39;travel_time&#39;]].mean().round(1) # round(1)\u53d6\u5c0f\u6570\u70b9\u540e\u4e00\u4f4d\u6570 # same thing again, but this time pass in a few default speed values (km/hour) # to fill in edges with missing `maxspeed` from OSM hwy_speeds = {&#39;residential&#39;: 35, &#39;secondary&#39;: 50, &#39;tertiary&#39;: 60} G = ox.add_edge_speeds(G, hwy_speeds) G = ox.add_edge_travel_times(G)   out:\n   highway length speed_kph travel_time     [&lsquo;living_street&rsquo;, &lsquo;residential&rsquo;] 534.4 20 96.2   [&lsquo;motorway&rsquo;, &lsquo;motorway_link&rsquo;] 2978.7 94.1 113.9   [&lsquo;motorway&rsquo;, &lsquo;secondary&rsquo;] 3239.3 94.1 123.9   [&lsquo;motorway&rsquo;, &lsquo;trunk_link&rsquo;] 631.4 30 75.8   [&lsquo;motorway_link&rsquo;, &lsquo;secondary&rsquo;] 856.6 46.7 66.1    Routing by travel speeds and times\n1 2 3 4 5 6 7 8 9 10 11 12 13  # calculate two routes by minimizing travel distance vs travel time orig = list(G)[1] dest = list(G)[-1] route1 = nx.shortest_path(G, orig, dest, weight=&#39;length&#39;) route2 = nx.shortest_path(G, orig, dest, weight=&#39;travel_time&#39;) # compare the two routes route1_length = int(sum(ox.utils_graph.get_route_edge_attributes(G, route1, &#39;length&#39;))) route2_length = int(sum(ox.utils_graph.get_route_edge_attributes(G, route2, &#39;length&#39;))) route1_time = int(sum(ox.utils_graph.get_route_edge_attributes(G, route1, &#39;travel_time&#39;))) route2_time = int(sum(ox.utils_graph.get_route_edge_attributes(G, route2, &#39;travel_time&#39;))) print(&#39;Route 1 is&#39;, route1_length, &#39;meters and takes&#39;, route1_time, &#39;seconds.&#39;) print(&#39;Route 2 is&#39;, route2_length, &#39;meters and takes&#39;, route2_time, &#39;seconds.&#39;)   out:\nRoute 1 is 28753 meters and takes 1787 seconds.\nRoute 2 is 36221 meters and takes 1647 seconds.\n1 2 3 4 5 6 7 8 9 10 11  # pick route colors c1 = &#39;r&#39; #length c2 = &#39;b&#39; #travel_time rc1 = [c1] * (len(route1) - 1) rc2 = [c2] * (len(route2) - 1) rc = rc1 + rc2 nc = [c1, c1, c2, c2] # plot the routes fig, ax = ox.plot_graph_routes(G, [route1, route2], route_color=rc, route_linewidth=6, orig_dest_node_color=nc, node_size=0, bgcolor=&#39;k&#39;)   The blue route minimizes travel time, and is thus longer but faster than the red route.\n",
        "description": "",
        "id": 64,
        "section": "posts",
        "tags": [
            "Python\u5e93",
            "osm",
            "osmnx",
            "graph",
            "networkx",
            "road network"
        ],
        "title": "Python\u5e93-osmnx&networkx",
        "uri": "/posts/notes/2020-05-27-python%E5%BA%93-osmnxnetworkx/"
    },
    {
        "content": "  Journal Article: 2017-Hierarchical semantic cognition for urban functional zones with VHR satellite images and POI data  Refer: ISPRS Journal of Photogrammetry and Remote Sensing A Abstract  [\u529f\u80fd\u533a\u5212\u56fe\u4e0d\u597d\u62ff]functional-zone maps are hardly available in most cities [\u6025\u9700(\u534a)\u81ea\u52a8\u5316\u7684\u65b9\u6cd5]an automatic/semi-automatic method for mapping urban functional zones is highly required [\u7ee7\u627f\u6027\u8bed\u4e49\u8bc6\u522b]Hierarchical semantic cognition (HSC) relies on geographic cognition and considers four semantic layers with a very-highresolution (VHR) satellite image and point-of-interest (POI) data result: overall accuracy of 90.8%; the contributions of diverse semantic layers are quantified    Journal Article: 2018-Understanding Urban Functionality from POI Space  Refer: 2018 26th International Conference on Geoinformatics A Abstract:  understanding of the urban built environment revealing the co-occurrences of POIs POI Space the network of relatedness between POIs findings:  [\u6838\u5fc3-\u8fb9\u7f18\u5206\u5e03]more common POIs are located in a densely connected core whereas rarer and more unique POIs occupy a less-connected periphery [\u6269\u6563\u901f\u5ea6?]common POIs act more on the speed of diffusion, unique POIs act more on the scope of diffusion.      Journal Article: 2019-Beyond Word2vec: An approach for urban functional region extraction and identification by combining Place2vec and POIs Journal Article: 2019-DFCNN-Based Semantic Recognition of Urban Functional Zones by Integrating Remote Sensing Data and POI Data  Refer: Remote Sensing A recognition of physical and social semantics of buildings object-wise recognition strategy building semantic recognition  Journal Article: 2020-Understanding Place Characteristics in Geographic Contexts through Graph Convolutional Neural Networks   Refer: Annals of the American Association of Geographers\n  AAAAA\n  Place Characteristics; Geographic Contexts; Graph convolutional neural networks (GCNNs)\n  Abstract:\n both its observed attributes and the characteristics of the places to which it is connected spatial prediction task: predict the unobserved place characteristics based on the observed properties and specific place connections GCNNs capture the knowledge of the relevant geographic context A series of comparative experiments formalizing places for geographic knowledge representation and reasoning    Introduction\n place characteristics places are not isolated but are connecthsed ti each other the contextual information for a place (i.e., its connection to other places) is crucial to understand its characteristics place conncetions =&gt; the measures between places (distance, adjacency and spatial interactions) [\u4e3a\u4ec0\u4e48\u4f1a\u63d0\u5230\u5730\u7406\u7a7a\u95f4\u5c42\u6b21\u7684\u4e0a\u4e0b\u6587\u5462\uff1f\u6211\u7406\u89e3\uff0c\u6b63\u5982\u4f5c\u8005\u6240\u8a00\uff0c\u5bf9\u4f4d\u7f6e\u5730\u70b9\u5c5e\u6027\u7684\u9884\u6d4b\uff0c\u4e0d\u4ec5\u4ec5\u4f9d\u8d56\u4e8e\u8be5\u5730\u70b9\u7684\u89c2\u6d4b\u53d8\u91cf\uff0c\u540c\u65f6\u8fd8\u7531\u8be5\u5730\u70b9\u5468\u8fb9/\u76f8\u8fde\u63a5\u7684\u5730\u70b9\u7684\u89c2\u6d4b\u5c5e\u6027\u51b3\u5b9a\u3002\u8fd9\u91cc\u7684\u5468\u8fb9/\u76f8\u8fde\u63a5\uff0c\u5bf9\u5e94\u7740\u4f5c\u8005\u8bba\u8ff0\u7684\u5730\u7406\u7a7a\u95f4\u4e0a\u4e0b\u6587]geographic contexts =&gt; The prediction of a place\u2019s unknown characteristic relies on both the place\u2019s observed characteristics and the characteristics of the places to which it is connected. [\u8fd9\u91cc\u5f15\u5165\u4e86GCNN,\u63d0\u5230\u51e0\u4e2a\u5173\u952e\u8bcd:aggregation,neighbors,contextual infformation]process the connection information: GCNNs generally follow an aggregation scheme where each node aggregates characteristics of its neighbors to learn a deep representation of the contextual information each place is represented as a node, place characteristics are the node features to be computed, and place connections are represented as the graph edges Introduction\u90e8\u5206\u53ef\u4ee5\u8bf4\u77ed\u5c0f\u7cbe\u608d\u4e86,\u5185\u5bb9\u4e0d\u591a\u4f46\u662f\u8bba\u70b9\u9610\u8ff0\u7684\u5f88\u6e05\u695a\u3002  \u7b2c\u4e00\u6bb5\u901a\u8fc7place\u5f15\u5165place characteristic\u7684\u6982\u5ff5\uff0c\u4e3a\u540e\u9762\u505a\u94fa\u57ab\uff1b \u7b2c\u4e8c\u6bb5\u8bf4place\u4e0d\u662f\u5b64\u7acb\u7684\u800c\u662f\u76f8\u8fde\u7684\uff0c\u5f15\u5165\u4e86place connection\u7684\u6982\u5ff5\uff1b \u7b2c\u4e09\u6bb5\u5c31\u7528\u5230\u4e86\u4e0a\u9762\u4e24\u4e2a\u6982\u5ff5\u7684\u94fa\u57ab\u4e86\uff0c\u4ed6\u8bf4place characteristic\u7684\u9884\u6d4b\u4e0d\u4ec5\u548c\u81ea\u8eab\u7684\u89c2\u6d4b\u53d8\u91cf\u6709\u5173\uff0c\u8fd8\u548c\u76f8\u90bb\u7684(connected)\u7684\u5730\u70b9\u7684\u7279\u5f81\u76f8\u5173\uff0c\u7136\u540e\u4ecb\u7ecd\u4e86\u4e24\u4e2ameasure connection\u7684\u7814\u7a76\u3002\u7136\u540e\u5c31\u662f\u8bf4\u9053\u7814\u7a76\u7684\u5c40\u9650\u6027\uff0c\u5c40\u9650\u6027\u5176\u5b9e\u4ed6\u8868\u8ff0\u4e86\u6bd4\u8f83\u591a\u7684\u65b9\u9762\uff0c\u4e5f\u53ef\u80fd\u662f\u6211\u7406\u89e3\u7684\u6bd4\u8f83\u62bd\u8c61\uff0c\u8fd9\u4e00\u6bb5\u7684\u5185\u5bb9\u53ef\u80fd\u6bd4\u8f83\u5173\u952e,\u56e0\u4e3a\u4ed6\u628a\u4e24\u4e2a\u6982\u5ff5\u7a7f\u4e86\u8d77\u6765\uff0c\u5e76\u4e14\u5f15\u51fa\u4e86\u672c\u6587\u7684\u7814\u7a76\u70b9\uff1b \u7b2c\u56db\u6bb5\u7406\u89e3\u4e0a\u5c31\u6bd4\u8f83\u7b80\u5355\u5199\u4e86\uff0c\u5f15\u5165GCNN\u5bf9\u4e8e\u89e3\u51b3model connection\u7684\u95ee\u9898\u5f88\u6709\u6548\uff1b \u7b2c\u4e94\u6bb5\u7b80\u4ecb\u81ea\u5df1\u7684\u7814\u7a76\u5185\u5bb9\u3002      Methodology\n Building the Place-Based Graph Predicting Place Characteristics Using GCNNs    Case Study\n Study Area Data Preparation  Delineating Place Boundaries. Quantifying Place Characteristics. Quantifying Place Characteristics.   A GCNN Model to Predict Places\u2019 Functional Features    \u6211\u628a\u4ed6\u65b9\u6cd5\u8bba\u548cCase Study\u7684\u90e8\u5206\u5217\u51fa\u6765\u662f\u60f3\u8bf4\u4ed6\u8fd9\u4e24\u90e8\u5206\u7684\u5212\u5206\u6211\u6709\u70b9\u770b\u4e0d\u61c2\u3002\u65b9\u6cd5\u8bba\u90e8\u5206\u63d0\u53d6\u51fa\u6765\uff0c\u7136\u540eCase Study\u53bb\u8bb2\u5177\u4f53\u7684\u6b65\u9aa4\u3002\u901a\u5e38\u7684\u6587\u7ae0\u91cc\u9762\u90fd\u4e0d\u5206\u5f00\u5427\uff1f\u6216\u8005\u5177\u4f53\u7684\u6b65\u9aa4\u653e\u5728implementation\u91cc\u9762\uff1f\n  Journal Article: 2020-Urban Function as a New Perspective for Adaptive Street Quality Assessment  Refer: Sustainability A Abstract  Street Quality Assessment =&gt; managing natural and public resources, organizing urban morphologies and improving city vitality from the perspective of the variation in urban functions urban function detection + urban function-driven multilevel street quality assessment   Introduction  assess street networks =&gt; enriches the current description of street networks and enhances the evaluation of street network performance these studies have discussed greenery, mobility patterns, and land-use connectivity but ignored the different urban functions that each type of street serves [\u9759\u6001\u7684\uff1f]the detection of urban functions in most research is static commercial, residential and traffic functions    ",
        "description": "",
        "id": 65,
        "section": "posts",
        "tags": [
            "Points of Interest",
            "Urban functional zones"
        ],
        "title": "Papers_Reading-Urban Functional Regions",
        "uri": "/posts/notes/2020-05-05-papers-reading-urban-functional-regions/"
    },
    {
        "content": " \u4e00\u8f6c\u773c\u535a\u58eb\u4e09\u5e74\u7ea7\u5df2\u7136\u8fd8\u6709\u51e0\u4e2a\u6708\u5c31\u7ed3\u675f\u4e86\uff0c\u4ece\u4e00\u6708\u4efd\u5230\u4e94\u6708\u521d\u5728\u5bb6\u5ea6\u8fc7\u7684\u8fd9\u6bb5\u65f6\u95f4\uff0c\u867d\u7136\u53d7\u75ab\u60c5\u7684\u5f71\u54cd\u65e0\u6cd5\u56de\u5b66\u6821\u5b66\u4e60\uff0c\u4f46\u6362\u79cd\u89d2\u5ea6\u800c\u8a00\uff0c\u4e5f\u6210\u4e3a\u4e86\u8fd9\u8bfb\u535a\u671f\u95f4\u5ea6\u8fc7\u7684\u4e00\u4e2a\u201d\u7279\u522b\u201c\u7684\u65f6\u671f\u3002\u6240\u8c13\u7279\u522b\uff0c\u4e3b\u8981\u5728\u4e8e\u4e24\u65b9\u9762\u3002\n qwer\n  --- DON'T MODIFY THIS LINE --- \u5434\u8001\u5e08\u60a8\u597d\uff0c\n\u4e00\u8f6c\u773c\u535a\u58eb\u4e09\u5e74\u7ea7\u5df2\u7136\u8fd8\u6709\u51e0\u4e2a\u6708\u5c31\u7ed3\u675f\u4e86\uff0c\u4ece\u4e00\u6708\u4efd\u5230\u4e94\u6708\u521d\u5728\u5bb6\u5ea6\u8fc7\u7684\u8fd9\u6bb5\u65f6\u95f4\uff0c\u867d\u7136\u53d7\u75ab\u60c5\u7684\u5f71\u54cd\u65e0\u6cd5\u56de\u5b66\u6821\u5b66\u4e60\uff0c\u4f46\u6362\u79cd\u89d2\u5ea6\u800c\u8a00\uff0c\u4e5f\u6210\u4e3a\u4e86\u8fd9\u8bfb\u535a\u671f\u95f4\u5ea6\u8fc7\u7684\u4e00\u4e2a\u201d\u7279\u522b\u201c\u7684\u65f6\u671f\u3002\u6240\u8c13\u7279\u522b\uff0c\u4e3b\u8981\u5728\u4e8e\u4e24\u65b9\u9762\uff1a\n\u4e0e\u81ea\u5df1\u76f8\u5904\u3002\u603b\u7684\u6765\u8bf4\u5c31\u662f\u9002\u5e94\u5728\u5bb6\u4e13\u5fc3\u7684\u5b66\u4e60\u3002\u8bfb\u4e66\u8fd9\u4e48\u591a\u5e74\uff0c\u4e5f\u662f\u4ece\u521d\u4e2d\u9ad8\u4e2d\u5f00\u59cb\uff0c\u6bcf\u6b21\u653e\u5047\u56de\u5bb6\uff0c\u5927\u90e8\u5206\u65f6\u95f4\u90fd\u662f\u653e\u677e\u81ea\u5df1\uff0c\u5373\u4f7f\u5e26\u4f5c\u4e1a\u3001\u51e0\u672c\u4e66\u56de\u5bb6\uff0c\u4e5f\u90fd\u662f\u62d6\u5230\u6700\u540e\u51e0\u5929\uff0c\u6216\u8005\u56de\u5230\u5b66\u6821\u6076\u8865\u3002\u81ea\u7136\u800c\u7136\u7684\u517b\u6210\u7684\u4e60\u60ef\uff0c\u4ea6\u6216\u662f\u8bf4\u5b9a\u6027\u601d\u7ef4\uff0c\u5728\u5bb6\u7684\u4e3b\u8981\u76ee\u7684\u662f\u653e\u677e\u81ea\u5df1\u3002\u4e5f\u5c31\u9020\u6210\u4e86\u8bfb\u4e66\u4ee5\u6765\uff0c\u5728\u5bb6\u548c\u5728\u5b66\u6821\u5f62\u6210\u7684\u4e24\u79cd\u4e0d\u540c\u7684\u201c\u73af\u5883\u201d\u30021\u6708\u4efd\u521a\u653e\u5047\u7684\u90a3\u6bb5\u65f6\u95f4\uff0c\u75ab\u60c5\u8fd8\u6ca1\u6709\u53d7\u5230\u5173\u6ce8\u7684\u65f6\u5019\uff0c\u60f3\u7740\u597d\u597d\u5728\u5bb6\u653e\u677e\u653e\u677e\uff0c\u5728\u5bb6\u91cc\u4f11\u606f\u534a\u4e2a\u6708\u540e\u56de\u5b66\u6821\u597d\u597d\u5e72\u6d3b\u3002\u8c01\u77e5\u5728\u5bb6\u4e00\u5f85\u5c31\u662f\u51e0\u4e2a\u6708\uff0c\u76f4\u5230\u73b0\u5728\u63d0\u7b14\uff0c\u4e5f\u4e0d\u77e5\u6653\u4f55\u65f6\u624d\u80fd\u56de\u5b66\u6821\u3002\u4e5f\u662f\u8bfb\u4e66\u4ee5\u6765\uff0c\u7b2c\u4e00\u6b21\u8fd9\u4e48\u60f3\u56de\u5230\u5b66\u6821\u3002\u6240\u8c13\u4e0e\u81ea\u5df1\u76f8\u5904\uff0c\u4e0d\u5982\u8bf4\u662f\u4e00\u4e2a\u514b\u670d\u61d2\u60f0\u3001\u62d6\u5ef6\u3001\u677e\u6563\u7b49\u574f\u4e60\u60ef\u7684\u4e00\u4e2a\u8fc7\u7a0b\u3002\u6bd4\u5982\u8bf4\uff0c\u5728\u5b66\u6821\u7684\u72b6\u6001\u662f\u4e00\u4e2a\u8bad\u7ec3\u4e86\u591a\u5e74\u7684\u6a21\u578b\uff0c\u5b83\u53ef\u4ee5\u5f88\u597d\u7684\u62df\u5408\u5728\u5b66\u6821\u5de5\u4f5c\u3001\u5b66\u4e60\u7b49\u4efb\u52a1\uff1b\u4f46\u662f\uff0c\u628a\u8fd9\u4e2a\u6a21\u578b\u8fc1\u79fb\u5230\u5bb6\u4e2d\uff0c\u5c31\u4f1a\u51fa\u73b0\u201c\u95ee\u9898\u201d\uff0c\u6bd4\u5982\u8bf4\u8bad\u7ec3\u6837\u672c\u4e0d\u8db3\uff0c\u8c03\u53c2\u7b49\u3002\u4e0e\u81ea\u5df1\u76f8\u5904\uff0c\u662f\u4e00\u4e2a\u8fc1\u79fb\u5b66\u4e60\u7684\u8fc7\u7a0b\uff0c\u9700\u8981\u505a\u8c03\u53c2\uff0c\u4ee5\u66f4\u597d\u7684\u62df\u5408\u5728\u5bb6\u4e2d\u5b66\u4e60\u8fd9\u4e2a\u4efb\u52a1\u3002\u8bf4\u7684\u4e0d\u597d\u542c\u4e00\u70b9\uff0c\u89c9\u5f97\u81ea\u5df1\u6709\u70b9\u201d\u5957\u6982\u5ff5\u201c\u4e86\u3002\u4ee5\u540e\u591a\u7684\u662f\u73af\u5883\u7684\u5207\u6362\uff0c\u591a\u7684\u662f\u65f6\u5883\u53d8\u8fc1\uff0c\u5982\u4f55\u5b66\u4f1a\u9002\u5e94\u73af\u5883\uff0c\u8c03\u6574\u81ea\u5df1\u7684\u5fc3\u6027\uff0c\u505a\u81ea\u5df1\u201d\u8be5\u505a\u201c\u7684\u4e8b\u60c5\uff0c\u8fd8\u9700\u8981\u5f88\u957f\u7684\u8fc7\u7a0b\u3002\u8fd8\u662f\u5fc3\u6027\u4e0d\u591f\u6210\u719f\u3002 \u4e0e\u7236\u6bcd\u76f8\u5904\u3002\u4e24\u4ee3\u4eba\u4e4b\u95f4\u601d\u60f3\u89c2\u5ff5\u771f\u7684\u6709\u5f88\u5927\u5dee\u5f02\uff0c\u7279\u522b\u662f\u751f\u6d3b\u5728\u4e00\u4e2a\u201d\u72ed\u5c0f\u7684\u7a7a\u95f4\u201c\uff0c\u9047\u5230\u4e0d\u540c\u7684\u89c2\u70b9\uff0c\u5c31\u4f1a\u7206\u53d1\u77db\u76fe\u3002\u5728\u5bb6\u4e2d\uff0c\u4e0e\u7236\u6bcd\u76f8\u5904\u7684\u8fd9\u51e0\u4e2a\u6708\uff0c\u7ecf\u5386\u4e86\u201d\u4e89\u5435-\u78e8\u5408-\u518d\u4e89\u5435-\u7ee7\u7eed\u78e8\u5408\u201c\u7684\u8fc7\u7a0b\u3002\u7279\u522b\u662f\u5728\u524d\u4e00\u4e2a\u534a\u6708\uff0c\u51e0\u4e4e\u6bcf\u5929\u90fd\u4f1a\u4e0e\u7236\u4eb2\u4e89\u5435\uff0c\u4e00\u4e9b\u601d\u7ef4\u89c2\u5ff5\u4e0a\u7684\u77db\u76fe\uff0c\u4e00\u4e9b\u751f\u6d3b\u4e0a\u7684\u7410\u4e8b\uff0c\u6709\u65f6\u5019\u751a\u81f3\u662f\u523b\u610f\u7684\u4e0d\u670d\u548c\u4e89\u8fa9\u3002\u660e\u77e5\u9053\u662f\u5c0f\u5b69\u5b50\u6c14\uff0c\u5374\u5c31\u662f\u4e0d\u613f\u610f\u201d\u670d\u8f6f\u201c\u3002\u65f6\u95f4\u53ef\u4ee5\u6539\u53d8\u4e00\u5207\uff0c\u4e8b\u5b9e\u8bc1\u660e\u4e5f\u786e\u5b9e\u5982\u6b64\u3002\u4e0d\u77e5\u4ece\u4f55\u5f00\u59cb\uff0c\u4e0d\u77e5\u662f\u4e24\u65b9\u90fd\u4e3a\u4e86\u523b\u610f\u907f\u514d\u77db\u76fe\u800c\u4e0d\u613f\u610f\u53bb\u629b\u51fa\u95ee\u9898\uff0c\u4ece\u800c\u907f\u514d\u4e86\u51b2\u7a81\u3002\u5927\u5bb6\u90fd\u505a\u81ea\u5df1\u7684\u4e8b\u60c5\uff0c\u653e\u5f03\u4e86\u201d\u5546\u91cf\u201c\uff0c\u653e\u5f03\u4e86\u8be2\u95ee\u5bf9\u65b9\u3002\u77e5\u9053\u53d1\u73b0\u81ea\u5df1\u60f3\u660e\u767d\u4e00\u4e9b\u4e8b\u60c5\uff0c\u5546\u91cf\u548c\u54a8\u8be2\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u53c2\u8003\u7236\u6bcd\u3001\u957f\u8f88\u7684\u610f\u89c1\uff0c\u662f\u5e0c\u671b\u53ef\u4ee5\u7ad9\u5728\u4ed6\u4eec\u7684\u89d2\u5ea6\u8003\u8651\u95ee\u9898\u672c\u8eab\uff0c\u800c\u975e\u4e00\u5b9a\u51b3\u5b9a\u51fa\u4e2a\u662f\u975e\u5bf9\u9519\u3002\u6240\u4ee5\u4e3a\u4ec0\u4e48\u8981\u53bb\u4e89\u5435\u5462\uff1f\u4e8e\u662f\u60f3\u660e\u767d\u4e4b\u540e\uff0c\u78e8\u5408\u4e4b\u540e\u7684\u4e89\u5435\u53d8\u4e0d\u518d\u6709\u706b\u836f\u5473\u9053\uff0c\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\u5c0a\u656c\u548c\u6743\u8861\u3002\u662f\u7684\uff0c\u7236\u6bcd\u4e5f\u90fd\u8001\u4e86\uff0c\u4e8c\u8001\u7684\u5e74\u9f84\u52a0\u5728\u4e00\u8d77\u4e5f\u90fd\u5feb120\u5c81\u4e86\u3002\u96be\u5f97\u7684\u8fd9\u4e48\u957f\u7684\u65f6\u95f4\uff0c\u80fd\u5728\u5bb6\u966a\u7740\u7236\u6bcd\u3002\u4ee5\u540e\u8fd9\u79cd\u673a\u4f1a\u4e5f\u5f88\u5c11\u5427\u3002 \u5434\u8001\u5e08\uff0c\u53ef\u80fd\u5728\u5bb6\u7684\u65f6\u95f4\uff0c\u8eab\u8fb9\u5c11\u4e86\u8bb8\u591a\u540c\u9f84\u4eba\u4e00\u8d77\u4ea4\u6d41\uff0c\u56e0\u6b64\u6bd4\u8f83\u591a\u7684\u662f\u4e2a\u4eba\u7684\u53cd\u601d\u3002\u6709\u4e9b\u662f\u65e0\u8da3\u7684\uff0c\u6709\u4e9b\u751a\u81f3\u662f\u591a\u4f59\u7684\u3002\u4f46\u662f\u6709\u65f6\u5019\u7ecf\u5386\u8fd9\u4e9b\u601d\u8003\u4e4b\u540e\uff0c\u81ea\u5df1\u786e\u5b9e\u80fd\u591f\u5728\u4e00\u6bb5\u65f6\u95f4\u5185\u5f97\u5230\u77ed\u6682\u7684\u63d0\u5347\u3002\u6bd4\u5982\u8bf4\u5728\u7ecf\u5386\u4e86\u6f2b\u957f\u7684\u62d6\u5ef6\u4e4b\u540e\uff0c\u628a\u8bba\u6587\u5b8c\u6210\uff0c\u5e76\u5c1d\u8bd5\u6295\u7a3f\uff1b\u6bd4\u5982\u8bf4\u770b\u5230\u4e00\u5ba1\u62d2\u7a3f\u610f\u89c1\u4e4b\u540e\u767e\u822c\u4e0d\u77e5\u6240\u63aa\uff0c\u4f46\u770b\u5230\u91cd\u6295\u673a\u4f1a\u4e4b\u540e\u8fd8\u662f\u4f1a\u575a\u6301\u3002\u5728\u5bb6\u4e2d\u7ed9\u81ea\u5df1\u7684\u95f2\u6687\u65f6\u95f4\u4e5f\u591a\u4e86\u3002\u628a\u4ee5\u524d\u6ca1\u6709\u597d\u597d\u505a\u7684\u4e8b\u60c5\u597d\u597d\u641e\u4e86\u4e00\u4e0b\uff0c\u4e70\u8f7b\u670d\u52a1\u5668\uff0c\u8d2d\u4e70\u57df\u540d\uff0c\u642d\u5efa\u4e86\u4e00\u4e2a\u4e00\u76f4\u4ee5\u6765\u5411\u5f80\u7684\u5c5e\u4e8e\u81ea\u5df1\u7684\u7a7a\u95f4\u3002\u4e0a\u9762\u8bb0\u5f55\u4e86\u4e00\u4e9b\u81ea\u5df1\u7684\u60f3\u6cd5\u3001\u95f2\u8a00\u788e\u8bed\u3001coding tips\u7b49\u3002\u6ca1\u6709\u60f3\u8ba9\u5f88\u591a\u4eba\u77e5\u9053\u3002 \u63a5\u4e0b\u6765\u7684\u4e94\u6708\u6ce8\u5b9a\u8fce\u6765\u4e86\u5f88\u591a\u4e8b\u60c5\u3002CSC\u8054\u57f9\u7684\u7533\u8bf7\u548c\u9009\u62d4\uff0c\u603b\u7ed3\u81ea\u5df1\u8fd9\u4e09\u56db\u5e74\u7684\u7814\u7a76\u6210\u679c\u548c\u601d\u8def\uff0c\u89c4\u5212\u540e\u7eed\u7684\u7814\u7a76\u5e76\u6253\u7b97\u51c6\u5907\u5f00\u9898\u7684\u4e8b\u60c5\u3002\u540c\u65f6\uff0c\u56db\u6708\u4efd\u8fdb\u884c\u7684\u5b9e\u9a8c-\u57fa\u4e8e\u51fa\u79df\u8f66\u8f68\u8ff9\u6570\u636e\u7684\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u6316\u6398\uff0c\u603b\u89c9\u5f97\u8fd8\u9700\u8981\u8865\u5145\u5b9e\u9a8c\uff0c\u4e5f\u6253\u7b97\u80fd\u591f\u5c3d\u5feb\u5b8c\u6210\u8bba\u6587\u5e76\u6295\u7a3f\u3002\u540c\u65f6\u4e5f\u671f\u671b\u56fd\u5185\u5916\u7684\u75ab\u60c5\u80fd\u591f\u5c3d\u5feb\u7684\u7ed3\u675f\uff0c\u80fd\u591f\u5c3d\u5feb\u7684\u56de\u5230\u5b66\u6821\uff0c\u4e13\u5fc3\u4f53\u4f1a\u201c\u8fd1\u9ec4\u660f\u201d\u7684\u8bfb\u535a\u65f6\u5149\u3002 \u5434\u8001\u5e08\uff0c\u4ee5\u4e0a\u662f\u6211\u8fd9\u6bb5\u65f6\u95f4\u7684\u4e00\u4e2a\u603b\u7ed3\u4ee5\u53ca\u540e\u7eed\u5de5\u4f5c\u7684\u6574\u7406\u3002\u53ef\u80fd\u66f4\u591a\u7684\u662f\u5fc3\u6027\u65b9\u9762\u7684\u601d\u8003\u548c\u6574\u7406\u3002\u6253\u6270\u60a8\u4e86\uff0c\u5434\u8001\u5e08~~\n\u6b64\u81f4\u590f\u5b81\uff01 \u5b66\u751f\u80e1\u80dc\n  ",
        "description": "",
        "id": 66,
        "section": "posts",
        "tags": [
            "\u5fc3\u6027",
            "\u90ae\u4ef6",
            "\u4e94\u6708",
            "\u603b\u7ed3"
        ],
        "title": "2020-5-\u4e2d\u671f\u603b\u7ed3\u90ae\u4ef6",
        "uri": "/posts/journals/2020-05-04-2020-5-%E4%B8%AD%E6%9C%9F%E6%80%BB%E7%BB%93%E9%82%AE%E4%BB%B6/"
    },
    {
        "content": " \u5bfb\u7f8a\u5192\u9669\u8bb0\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"Late night melancholy \u6e29\u67d4\u5409\u4ed6\u6307\u5f39\u7248\",\rartist: \"\u96e8\u51c9\u590f\u672b\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/Late%20night%20melancholy%20%E6%B8%A9%E6%9F%94%E5%90%89%E4%BB%96%E6%8C%87%E5%BC%B9%E7%89%88-76df33-Ag.mp3\",\rcover: \"https://p2.music.126.net/TxrTVZ0lIT_s7_MCzo6KnA==/109951165765872985.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%BA%AF%E9%9F%B3%E4%B9%90-%E6%97%A0%E6%AD%8C%E8%AF%8D-3ca159-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.5.1 \u6c34\u91cc\u7684\u7a7a\u6c14 \u662f\u4f60\u5c0f\u5fc3\u773c\u548c\u574f\u813e\u6c14 2020.5.2 \u7487\u7487\u5c0f\u670b\u53cb\u5f88\u559c\u6b22\u8205\u8205\uff0c\u4e00\u76f4\u7c98\u7740\u6211\u73a9\u3002 2020.5.3 \u6210\u957f\u7684\u4e00\u65b9\u9762\u610f\u4e49\u662f\u5b66\u4f1a\u63a7\u5236\u60c5\u7eea\uff0c\u7406\u6027\u5bf9\u5f85\u95ee\u9898\u3002\u559c\u6b22\u7684\u4e8b\u559c\u6b22\u7740\u53bb\u505a\u3002\u4e0d\u559c\u6b22\u7684\u4e8b\u60c5\u6162\u6162\u63a5\u53d7\u540e\u53bb\u505a\u3002 2020.5.4 \u4ee5\u524d\u6709\u4e00\u4ef6\u559c\u6b22\u7684T-shirt, \u4e0a\u9762\u5199\u7740: You are the CSS of my HTML. \u90a3\u6bb5\u65f6\u95f4\u5f88\u559c\u6b22\uff0c\u5c31\u50cf\u559c\u6b22\u4e00\u4e2a\u4eba\u4e00\u6837\u559c\u6b22\u3002 2020.5.5 \u7acb\u590f\u3002 2020.5.6 \u6c89\u9ed8\u662f\u6700\u5927\u7684\u8c0e\u8a00\u3002 2020.5.7 \u4e00\u53ea\u8774\u8776\u98de\u8fdb\u6211\u4eec\u5bb6\u91cc\u6765\uff0c\u5988\u5988\u95ee\u201c\u4f60\u662f\u6881\u5c71\u4f2f\u5440\u8fd8\u662f\u795d\u82f1\u53f0\uff1f\u201d \u54c8\u54c8~ 2020.5.8 \u54fc\uff1f 2020.5.9 \u6211\u4e0d\u77e5\u9053\uff0c\u4f46\u662f\u6211\u76f8\u4fe1\u3002 2020.5.10 1) \u7ea2\u9165\u624b\uff0c\u9ec4\u85e4\u9152\uff0c\u4e24\u4e2a\u9ec4\u9e42\u9e23\u7fe0\u67f3\u30022) \u548c\u81ea\u5df1\u505a\u4e00\u4e2a\u5c0f\u534f\u8bae\u5427\u3002\u5728\u56de\u5b66\u6821\u524d\u5446\u5728\u5bb6\u91cc\u7684\u8fd9\u6bb5\u65f6\u95f4\uff0c\u767d\u5929\u7528\u6765\u5de5\u4f5c\u5b66\u4e60\uff0c\u665a\u4e0a\u53ef\u4ee5\u4f11\u606f\u3001\u653e\u677e\u3002\u4e0d\u53ef\u4ee5\u65e0\u6240\u8c13\u7684\u653e\u8086\u4e86\u3002 2020.5.11 1) \u7ed9\u4f60\u4e00\u4e2a\u611f\u5b98\u7684\u4e16\u754c; 2) \u672c\u6765\u65e0\u4e00\u7269\uff0c\u4f55\u5904\u60f9\u5c18\u57c3\u3002 2020.5.12 \u65f6\u5e38\u7126\u8651\u672a\u6765\u3002\u601d\u8003\u751f\u6d3b\u7740\u7684\u610f\u4e49\u3002\u4ecd\u7136\u4e0d\u61c2\u5f97\u751f\u6d3b\uff0c\u4e0d\u61c2\u5f97\u6743\u8861\u300220\u591a\u5c81\u7684\u5e74\u7eaa\u603b\u60f3\u7740\u600e\u4e48\u8fc7\u7740\u8212\u5766\u3002\u5728\u771f\u6b63\u5de5\u4f5c\u4e0d\u80af\u7684\u8010\u4e0b\u6027\u5b50\u6765\u3002\u60f3\u4e9b\u8d1f\u9762\u7684\u6ca1\u7528\u7684\u4e1c\u897f\u3002\u5373\u4f7f\u4ee5\u540e\u9047\u5230\u4e86\uff0c\u518d\u53bb\u601d\u8003\u4e5f\u4e0d\u8fdf\u3002 2020.5.13 \u8fd9\u68a6\u628a\u6211\u7d2f\u7684\uff0c\u5404\u79cd\u8dd1\u3002 2020.5.14 \u9646\u6e38\u6c14\u574f\u4e86\uff0c\u627e\u6b27\u9633\u4fee\u3002 2020.5.15 \u201c\u5728\u4e0d\u503c\u4e00\u63d0\u7684\u57ce\u5e02\u957f\u5927\uff0c\u4ece\u4e0d\u503c\u4e00\u63d0\u7684\u4e2d\u5c0f\u5b66\u6bd5\u4e1a\u3002\u5c0f\u65f6\u5019\u6c89\u9ed8\u5be1\u8a00\uff0c\u957f\u5927\u767e\u65e0\u804a\u8d56\u3002\u548c\u4e00\u4e2a\u4e0d\u503c\u4e00\u63d0\u7684\u5973\u5b69\u76f8\u8bc6\uff0c\u6709\u4e86\u4e0d\u503c\u4e00\u63d0\u7684\u521d\u604b\u3002\u5341\u516b\u5c81\u90a3\u5e74\u4e0a\u5927\u5b66\u6765\u5230\u4e1c\u4eac\u3002\u5927\u5b66\u51fa\u6765\u540e\u548c\u670b\u53cb\u4e24\u4eba\u5f00\u4e86\u4e00\u95f4\u5c0f\u5c0f\u7684\u7ffb\u8bd1\u4e8b\u52a1\u6240\uff0c\u597d\u6b79\u6df7\u53e3\u996d\u5403\u3002\u5927\u7ea6\u4e09\u5e74\u524d\u67d3\u6307PR\u520a\u7269\u548c\u5e7f\u544a\u65b9\u9762\u7684\u5de5\u4f5c\uff0c\u8fd9\u65b9\u9762\u4e5f\u7b97\u8fdb\u5c55\u987a\u5229\u3002\u540c\u4e00\u4e2a\u5728\u516c\u53f8\u5de5\u4f5c\u7684\u5973\u5b69\u76f8\u8bc6\uff0c\u56db\u5e74\u524d\u7ed3\u4e86\u5a5a\uff0c\u4e24\u4e2a\u6708\u524d\u79bb\u4e86\u3002\u539f\u56e0\u4e00\u8a00\u96be\u5c3d\u3002\u517b\u4e00\u53ea\u8001\u516c\u732b\u3002\u6bcf\u5929\u5438\u70df\u56db\u5341\u652f\uff0c\u6b7b\u6d3b\u6212\u4e0d\u6389\u3002\u6709\u4e09\u5957\u897f\u670d\u516d\u6761\u9886\u5e26\uff0c\u8fd8\u6709\u8fc7\u65f6\u5531\u7247\u4e94\u767e\u5f20\u3002\u57c3\u52d2\u91cc\u00b7\u594e\u56e0\u5c0f\u8bf4\u91cc\u7684\u72af\u4eba\u540d\u5b57\u5168\u4e0d\u8bb0\u5f97\uff0c\u666e\u9c81\u65af\u7279\u7684\u300a\u8ffd\u5fc6\u901d\u6c34\u6d41\u5e74\u300b\u4e5f\u4e00\u672c\u4e0d\u7f3a\uff0c\u4f46\u53ea\u8bfb\u4e86\u4e00\u534a\u3002\u590f\u5929\u548c\u5564\u9152\uff0c\u51ac\u5929\u5a01\u58eb\u5fcc\u3002\u201d-\u300a\u5bfb\u7f8a\u5192\u9669\u8bb0\u300b\u5173\u4e8e\u201c\u6211\u201d\u7684\u4ecb\u7ecd 2020.5.16 \u5176\u5b9e\u5f88\u591a\u65f6\u5019\uff0c\u6211\u90fd\u5f88\u60f3\u4f60\uff0c\u6211\u4e5f\u77e5\u9053\u8981\u89c1\u4f60\u4e0d\u96be\uff0c\u4f46\u6211\u603b\u89c9\u5f97\u6211\u8981\u89c1\u7684\u4f60\uff0c\u548c\u6211\u60f3\u8d77\u7684\u4f60\uff0c\u5e76\u4e0d\u662f\u4e00\u4e2a\u4f60 2020.5.17 \u597d\u4e45\u4e0d\u89c1 2020.5.18 \u8b1d\u8b1d\u4f60\u7684\u51fa\u73fe\uff0c\u66fe\u7d93\u614c\u4e82\u7684\u90a3\u6bb5\u6642\u9593\u3002 2020.5.19 \u591c\u957f\u68a6\u591a\u3002 2020.5.20 \u6ca1\u4eba\u9001\u5c31\u7528\u6765\u88c5\u70b9 2020.5.21 This used to be our playground. 2020.5.22 \u4e3a\u4e86\u4f60\u800c\u7948\u7977 \u800c\u795d\u798f \u800c\u611f\u52a8 2020.5.23 \u65e9\u4e0a\u8d77\u6765\u53bb\u516c\u53f8\u753b\u56fe\uff0c\u56de\u6765\u8def\u4e0a\u53bb\u81ea\u9009\u5546\u573a\u91c7\u8d2d\uff0c\u4e00\u4e2a\u4eba\u5728\u5bb6\u5403\u996d\u3002\u8c03\u9891\u5e7f\u64ad\u4e00\u76f4\u5f00\u7740\u4e0d\u5173\uff0c\u770b\u4e66\uff0c\u5199\u65e5\u8bb0\uff0c\u5728\u6d74\u5ba4\u6d17\u957f\u7b52\u889c\u3002\u516c\u5bd3\u697c\u5728\u6d77\u8fb9\u4e0a\uff0c\u7ec8\u65e5\u6709\u6d77\u6d9b\u58f0\u4f20\u6765\u3002\u51b7\u98d5\u98d5\u7684\u65e5\u5b50\u3002-\u300a\u5bfb\u7f8a\u5192\u9669\u8bb0\u300b\u5173\u4e8e\u201c\u5979\u201d\u7684\u4ecb\u7ecd\uff1b\u4e0d\u77e5\u4e3a\u4f55\u6211\u5f88\u559c\u6b22\u8fd9\u6837\u7684\u53d9\u8ff0\u65b9\u5f0f\u3002\u867d\u7136\u5e73\u6de1\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u7684\u5f88\u6709\u5473\u9053\u3002\u8ba9\u4eba\u6362\u4f4d\u601d\u8003\uff0c\u8eab\u4e34\u5176\u5883\u3002 2020.5.24 \u6253\u4e86\u4e00\u5929\u7684\u6e38\u620f\uff0c\u4e5f\u5feb\u8981\u6c14\u6b7b\u4e86 2020.5.25 \u5f88\u591a\u4eba\u90fd\u5728\u5e2e\u4f60\uff0c\u611f\u6fc0 2020.5.26 \u6bd4\u8d5b\u7ec4\u4f1a\u8ba8\u8bba\uff0c\u96c6\u601d\u5e7f\u76ca\u7684\u529b\u91cf\uff0c\u786e\u5b9e\u6bd4\u4e00\u4e2a\u4eba\u505a\u6709\u610f\u601d\u4e9b 2020.5.27 \u7ec8\u4e8e\u628a\u6e38\u620f\u5378\u8f7d\u4e86 2020.5.28 \u4e0e\u4f60\u4e00\u540c\u5ea6\u8fc7\u7684\u65f6\u95f4\u90fd\u5f88\u8000\u773c \u56e0\u4e3a\u5929\u6c14\u597d \u56e0\u4e3a\u5929\u6c14\u4e0d\u597d \u56e0\u4e3a\u5929\u6c14\u9002\u5f53 \u6240\u6709\u65e5\u5b50\u90fd\u5f88\u68d2 2020.5.29 \u51b7\u70ed\u65e0\u5e38\uff0c\u5404\u751f\u6b22\u559c 2020.5.30 \u6240\u6709\u4eba\u90fd\u795d\u4f60\u5feb\u4e50 \u6211\u53ea\u613f\u4f60\u904d\u5386\u5c71\u6cb3 \u89c9\u5f97\u4eba\u95f4\u503c\u5f97 2020.5.31 \u5b8c\u6210\u4e00\u7bc7\u8bba\u6587\u540e\u7684\u7b2c\u4e00\u611f\u53d7\u5c31\u662f: What a piece of shit!  ",
        "description": "",
        "id": 67,
        "section": "posts",
        "tags": [
            "\u7487\u7487\u5c0f\u670b\u53cb\u548c\u8205\u8205",
            "\u7acb\u590f",
            "\u8774\u8776",
            "\u5c0f\u534f\u8bae",
            "\u8857\u666f",
            "\u7126\u8651",
            "\u7d2f\u4eba\u7684\u68a6",
            "\u5bfb\u7f8a\u5192\u9669\u8bb0",
            "\u60f3\u5ff5",
            "\u7ec4\u4f1a\u8ba8\u8bba",
            "\u6e38\u620f",
            "\u61d2\u6563",
            "\u8bba\u6587"
        ],
        "title": "2020-5",
        "uri": "/posts/journals/2020-05-01-2020-5/"
    },
    {
        "content": " git \u5e38\u7528\u547d\u4ee4\u4ee5\u53ca\u514d\u5bc6push\u8bbe\u7f6e\u3002 \u53c2\u8003: oschina, todebug\n gitee \u751f\u6210\u5bc6\u94a5\u5bf9 ssh-keygen -t rsa -C &quot;youremail&quot;\n\u5b9a\u4e49\u540d\u5b57: id_rsa.gitee\nssh key \u5c06\u751f\u6210\u7684\u4f4d\u4e8e~/.ssh/id_rsa.gitee.pub\u7684\u5185\u5bb9\u590d\u5236\u5230\u4f60github setting\u91cc\u7684ssh key\u4e2d\ngit init mkdir gitalk cd gitalk echo &quot;# gitalk&quot; &gt;&gt; README.md git add README.md git commit -m &quot;first commit&quot; remote \u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u514b\u9686\u4f60\u7684\u4ed3\u5e93\uff0c\u90a3\u4f60\u76f4\u63a5\u4f7f\u7528ssh\u534f\u8bae\u7528\u6cd5:\ngit remote add origin git@github.com:xunhs/gitalk.git\n\u5982\u679c\u5df2\u7ecf\u4f7f\u7528https\u534f\u8bae\u514b\u9686\u4e86\uff0c\u90a3\u4e48\u6309\u7167\u5982\u4e0b\u65b9\u6cd5\u66f4\u6539\u534f\u8bae\uff1a\ngit remote set-url origin git@github.com:xunhs/gitalk.git\npull git pull https://github.com/xunhs/xunhs.github.io master\npush git push -u origin master\ngithub \u540c\u4e0a\n\u521b\u5efa\u914d\u7f6e\u89e3\u51b3ssh\u51b2\u7a81 \u5728.ssh\u6587\u4ef6\u5939\u4e2d\u521b\u5efaconfig\u6587\u4ef6,\u6dfb\u52a0\u4e0b\u9762\u5185\u5bb9 1 2 3 4 5 6 7 8 9 10 11  # giteeHost gitee.comHostName gitee.comPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsa.gitee# githubHost github.comHostName github.comPreferredAuthentications publickeyIdentityFile ~/.ssh/id_rsa.github  \u6d4b\u8bd5\u8fde\u63a5  ssh -T git@gitee.com ssh -T git@github.com  gitignore \u9879\u76ee\u4e0b\u65b0\u5efa.gitignore\u6587\u4ef6, \u5ffd\u7565\u8be5\u6587\u4ef6\u4e2d\u8bb0\u5f55\u7684\u7279\u5b9a\u6587\u4ef6\u6216\u6587\u4ef6\u5939\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  #\u4ee5#\u5f00\u5934\u4ee3\u8868\u6ce8\u91ca\u884c #\u5ffd\u7565node_modules\u6587\u4ef6\u5939 node_modules/ .deploy*/ #\u5ffd\u7565cache.php\u6587\u4ef6 cache.php db.json *.log #\u5ffd\u7565.o,.c\u6587\u4ef6 *.[oc] #\u5ffd\u7565\u9664\u4e86index.php\u5916\u7684\u6240\u4ee5\u6587\u4ef6 !index.php / \u8868\u793a\u76ee\u5f55 *\u8868\u793a\u5339\u914d\u591a\u4e2a\u5b57\u7b26 ?\u8868\u793a\u5339\u914d\u5355\u4e2a\u5b57\u7b26 []\u5339\u914d\u5b57\u7b26\u5217 \uff01\u5ffd\u7565\u6587\u4ef6\u6216\u76ee\u5f55   ",
        "description": "",
        "id": 68,
        "section": "posts",
        "tags": [
            "git",
            "github",
            "gitee",
            "ssh",
            "jsdelivr",
            "\u56fe\u5e8a"
        ],
        "title": "git \u521d\u59cb\u5316\u53ca\u5e38\u7528\u64cd\u4f5c",
        "uri": "/posts/notes/2020-04-29-git-%E5%88%9D%E5%A7%8B%E5%8C%96%E5%8F%8A%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"
    },
    {
        "content": " Refer: deep_learning_60min_blitz\n Getting Started 1  import torch    \rPYTORCH CHEAT SHEET \rPYTORCH TUTORIALS \rPyTorch 1.4 \u4e2d\u6587\u6587\u6863  Tensors  Construct a randomly initialized matrix: x = torch.rand(5, 3) Construct a matrix filled zeros and of dtype long: x = torch.zeros(5, 3, dtype=torch.long) Construct a tensor directly from data: x = torch.tensor([5.5, 3]) or create a tensor based on an existing tensor. These methods will reuse properties of the input tensor, e.g. dtype, unless new values are provided by user:  x = x.new_ones(5, 3, dtype=torch.double) x = torch.randn_like(x, dtype=torch.float)   Get its size (shape in numpy/pandas): x.size() [Note: torch.Size is in fact a tuple]  Operations  use standard NumPy-like indexing: x[:, 1] resize/reshape tensor, you can use torch.view:  1 2 3 4  x = torch.randn(4, 4) y = x.view(16) z = x.view(-1, 8) # the size -1 is inferred from other dimensions print(x.size(), y.size(), z.size())   NumPy Bridge Torch Tensor &lt;=&gt; a NumPy\n Converting a Torch Tensor to a NumPy Array: tensor.numpy()  1 2  a = torch.ones(5) b = a.numpy()    Converting NumPy Array to Torch Tensor: torch.from_numpy(array)  1 2 3  import numpy as np a = np.ones(5) b = torch.from_numpy(a)   CUDA Tensors 1 2 3 4 5 6 7 8 9  # let us run this cell only if CUDA is available # We will use ``torch.device`` objects to move tensors in and out of GPU if torch.cuda.is_available(): device = torch.device(&#34;cuda&#34;) # a CUDA device object y = torch.ones_like(x, device=device) # directly create a tensor on GPU x = x.to(device) # or just use strings ``.to(&#34;cuda&#34;)`` z = x + y print(z) print(z.to(&#34;cpu&#34;, torch.double)) # ``.to`` can also change dtype together!   AUTOGRAD: AUTOMATIC DIFFERENTIATION To prevent tracking history (and using memory), you can also wrap the code block in with torch.no_grad(). This can be particularly helpful when evaluating a model because the model may have trainable parameters with requires_grad=True, but for which we don\u2019t need the gradients.\nNEURAL NETWORKS Neural networks can be constructed using the torch.nn package.\nNow that you had a glimpse of autograd, nn depends on autograd to define models and differentiate them. An nn.Module contains layers, and a method forward(input)that returns the output.\nA typical training procedure for a neural network is as follows:\n Define the neural network that has some learnable parameters (or weights) Iterate over a dataset of inputs Process input through the network Compute the loss (how far is the output from being correct) Propagate gradients back into the network\u2019s parameters Update the weights of the network, typically using a simple update rule: weight = weight - learning_rate * gradient  Define the network 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  import torch import torch.nn as nn import torch.nn.functional as F class Net(nn.Module): def __init__(self): super(Net, self).__init__() # 1 input image channel, 6 output channels, 3x3 square convolution # kernel self.conv1 = nn.Conv2d(1, 6, 3) self.conv2 = nn.Conv2d(6, 16, 3) # an affine operation: y = Wx + b self.fc1 = nn.Linear(16 * 6 * 6, 120) # 6*6 from image dimension self.fc2 = nn.Linear(120, 84) self.fc3 = nn.Linear(84, 10) def forward(self, x): # Max pooling over a (2, 2) window x = F.max_pool2d(F.relu(self.conv1(x)), (2, 2)) # If the size is a square you can only specify a single number x = F.max_pool2d(F.relu(self.conv2(x)), 2) x = x.view(-1, self.num_flat_features(x)) x = F.relu(self.fc1(x)) x = F.relu(self.fc2(x)) x = self.fc3(x) return x def num_flat_features(self, x): size = x.size()[1:] # all dimensions except the batch dimension num_features = 1 for s in size: num_features *= s return num_features net = Net() print(net) &#39;&#39;&#39; Out: Net( (conv1): Conv2d(1, 6, kernel_size=(3, 3), stride=(1, 1)) (conv2): Conv2d(6, 16, kernel_size=(3, 3), stride=(1, 1)) (fc1): Linear(in_features=576, out_features=120, bias=True) (fc2): Linear(in_features=120, out_features=84, bias=True) (fc3): Linear(in_features=84, out_features=10, bias=True) ) &#39;&#39;&#39;    You just have to define the forward function, and the backward function (where gradients are computed) is automatically defined for you using autograd. You can use any of the Tensor operations in the forward function. The learnable parameters of a model are returned by net.parameters():  1 2 3 4 5 6 7  params = list(net.parameters()) print(len(params)) # \u54ea\u5341\u5c42\u7684\u53c2\u6570\u5462\uff1f print(params[0].size()) # conv1&#39;s .weight &#39;&#39;&#39; 10: torch.Size([6]) &#39;&#39;&#39;   Note: \u5341\u5c42\u53c2\u6570(-&gt;): input -&gt; conv2d -&gt; relu -&gt; conv2d -&gt; relu -&gt; view -&gt; linear -&gt; relu -&gt; linear -&gt; relu -&gt; linear\n try a random 32x32 input. Note: expected input size of this net (LeNet) is 32x32. To use this net on the MNIST dataset, please resize the images from the dataset to 32x32.  1 2 3  input = torch.randn(1, 1, 32, 32) out = net(input) print(out)    Zero the gradient buffers of all parameters and backprops with random gradients:  1 2  net.zero_grad() out.backward(torch.randn(1, 10))   Loss Function A loss function takes the (output, target) pair of inputs, and computes a value that estimates how far away the output is from the target.\nThere are several different loss functions under the nn package. A simple loss is: nn.MSELoss which computes the mean-squared error between the input and the target.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  input = torch.randn(1, 1, 32, 32) output = net(input) target = torch.randn(10) # a dummy target, for example target = target.view(1, -1) # make it the same shape as output criterion = nn.MSELoss() loss = criterion(output, target) print(loss) &#39;&#39;&#39; out: tensor(0.9145, grad_fn=&lt;MseLossBackward&gt;) &#39;&#39;&#39;   Backprop 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  net.zero_grad() # zeroes the gradient buffers of all parameters print(&#39;conv1.bias.grad before backward&#39;) print(net.conv1.bias.grad) loss.backward() print(&#39;conv1.bias.grad after backward&#39;) print(net.conv1.bias.grad) &#39;&#39;&#39; out: conv1.bias.grad before backward tensor([0., 0., 0., 0., 0., 0.]) conv1.bias.grad after backward tensor([ 1.2122e-03, -9.3038e-04, -3.8394e-04, 2.5266e-03, -1.4529e-03, 9.5785e-05]) &#39;&#39;&#39;   Update the weights The simplest update rule used in practice is the Stochastic Gradient Descent (SGD): weight = weight - learning_rate * gradient\nAs you use neural networks, you want to use various different update rules such as SGD, Nesterov-SGD, Adam, RMSProp, etc. To enable this, we built a small package: torch.optim that implements all these methods. Using it is very simple:\n1 2 3 4 5 6 7 8 9  import torch.optim as optim # create your optimizer optimizer = optim.SGD(net.parameters(), lr=0.01) # in your training loop: optimizer.zero_grad() # zero the gradient buffers output = net(input) loss = criterion(output, target) loss.backward() optimizer.step() # Does the update   TRAINING A CLASSIFIER What about data? Generally, when you have to deal with image, text, audio or video data, you can use standard python packages that load data into a numpy array. Then you can convert this array into a torch.*Tensor.\n For images, packages such as Pillow, OpenCV are useful For audio, packages such as scipy and librosa For text, either raw Python or Cython based loading, or NLTK and SpaCy are useful  For this tutorial, we will use the CIFAR10 dataset. It has the classes: \u2018airplane\u2019, \u2018automobile\u2019, \u2018bird\u2019, \u2018cat\u2019, \u2018deer\u2019, \u2018dog\u2019, \u2018frog\u2019, \u2018horse\u2019, \u2018ship\u2019, \u2018truck\u2019. The images in CIFAR-10 are of size 3x32x32, i.e. 3-channel color images of 32x32 pixels in size.\nTraining an image classifier We will do the following steps in order:\n Load and normalizing the CIFAR10 training and test datasets using torchvision Define a Convolutional Neural Network  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  import torch.nn as nn import torch.nn.functional as F class Net(nn.Module): def __init__(self): super(Net, self).__init__() self.conv1 = nn.Conv2d(3, 6, 5) self.pool = nn.MaxPool2d(2, 2) self.conv2 = nn.Conv2d(6, 16, 5) self.fc1 = nn.Linear(16 * 5 * 5, 120) self.fc2 = nn.Linear(120, 84) self.fc3 = nn.Linear(84, 10) def forward(self, x): x = self.pool(F.relu(self.conv1(x))) x = self.pool(F.relu(self.conv2(x))) x = x.view(-1, 16 * 5 * 5) x = F.relu(self.fc1(x)) x = F.relu(self.fc2(x)) x = self.fc3(x) return x net = Net()   Define a loss function  1 2 3  import torch.optim as optim criterion = nn.CrossEntropyLoss() optimizer = optim.SGD(net.parameters(), lr=0.001, momentum=0.9)   Train the network on the training data  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38  for epoch in range(10): # loop over the dataset multiple times running_loss = 0.0 for i, data in enumerate(trainloader, 0): # get the inputs inputs, labels = data # zero the parameter gradients optimizer.zero_grad() # forward + backward + optimize outputs = net(inputs) loss = criterion(outputs, labels) loss.backward() optimizer.step() # print statistics running_loss += loss.item() if i % 2000 == 1999: # print every 2000 mini-batches print(&#39;[%d, %5d] loss: %.3f&#39; % (epoch + 1, i + 1, running_loss / 2000)) running_loss = 0.0 print(&#39;Finished Training&#39;) &#39;&#39;&#39; out: [1, 2000] loss: 2.151 [1, 4000] loss: 1.804 [1, 6000] loss: 1.634 [1, 8000] loss: 1.591 [1, 10000] loss: 1.499 [1, 12000] loss: 1.469 [2, 2000] loss: 1.389 [2, 4000] loss: 1.378 [2, 6000] loss: 1.362 [2, 8000] loss: 1.307 [2, 10000] loss: 1.302 [2, 12000] loss: 1.272 Finished Training &#39;&#39;&#39;    \rsave model:  1 2  PATH = &#39;./cifar_net.pth&#39; torch.save(net.state_dict(), PATH)    load model:  1 2  the_model = TheModelClass(*args, **kwargs) the_model.load_state_dict(torch.load(PATH))   Test the network on the test data   simple test:  1 2 3 4 5 6 7 8 9  dataiter = iter(testloader) images, labels = dataiter.next() # 4 images, (4,3,32,32) outputs = net(images) # outputs: (4, 10) _, predicted = torch.max(outputs, 1) print(&#39;Predicted: &#39;, &#39; &#39;.join(&#39;%5s&#39; % classes[predicted[j]] for j in range(4))) &#39;&#39;&#39; Predicted: cat ship ship plane &#39;&#39;&#39;   Note:\ntorch.max(input, dim, keepdim=False, out=None) -&gt; (Tensor, LongTensor)\n\u6309\u7ef4\u5ea6dim \u8fd4\u56de\u6700\u5927\u503c, \u4e14\u8fd4\u56de\u7d22\u5f15. dim:(0: \u5217\uff0c1: \u884c)\n performs on the whole dataset:  1 2 3 4 5 6 7 8 9 10 11 12 13 14  correct = 0 total = 0 with torch.no_grad(): for data in testloader: images, labels = data outputs = net(images) _, predicted = torch.max(outputs.data, 1) total += labels.size(0) correct += (predicted == labels).sum().item() print(&#39;Accuracy of the network on the 10000 test images: %d%%&#39; % ( 100 * correct / total)) &#39;&#39;&#39; Accuracy of the network on the 10000 test images: 55 % &#39;&#39;&#39;    Hmmm, what are the classes that performed well, and the classes that did not perform well  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  class_correct = list(0. for i in range(10)) class_total = list(0. for i in range(10)) with torch.no_grad(): for data in testloader: images, labels = data outputs = net(images) _, predicted = torch.max(outputs, 1) c = (predicted == labels).squeeze() for i in range(4): label = labels[i] class_correct[label] += c[i].item() class_total[label] += 1 for i in range(10): print(&#39;Accuracy of %5s: %2d%%&#39; % ( classes[i], 100 * class_correct[i] / class_total[i])) &#39;&#39;&#39; Accuracy of plane : 55 % Accuracy of car : 63 % Accuracy of bird : 25 % Accuracy of cat : 45 % Accuracy of deer : 41 % Accuracy of dog : 52 % Accuracy of frog : 66 % Accuracy of horse : 63 % Accuracy of ship : 72 % Accuracy of truck : 70 % &#39;&#39;&#39;   Training on GPU 1 2 3 4 5 6 7 8 9 10  device = torch.device(&#34;cuda:0&#34; if torch.cuda.is_available() else &#34;cpu&#34;) # Assuming that we are on a CUDA machine, this should print a CUDA device: print(device) &#39;&#39;&#39; cuda:0 &#39;&#39;&#39; # convert their parameters and buffers to CUDA tensors net.to(device) # send the inputs and targets at every step to the GPU too: inputs, labels = data[0].to(device), data[1].to(device)   Learning PyTorch with Examples two-layer network(torch.nn.Sequential) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48  # -*- coding: utf-8 -*- import torch # N is batch size; D_in is input dimension; # H is hidden dimension; D_out is output dimension. N, D_in, H, D_out = 64, 1000, 100, 10 # Create random Tensors to hold inputs and outputs x = torch.randn(N, D_in) y = torch.randn(N, D_out) # Use the nn package to define our model and loss function. model = torch.nn.Sequential( torch.nn.Linear(D_in, H), torch.nn.ReLU(), torch.nn.Linear(H, D_out), ) loss_fn = torch.nn.MSELoss(reduction=&#39;sum&#39;) # Use the optim package to define an Optimizer that will update the weights of # the model for us. Here we will use Adam; the optim package contains many other # optimization algoriths. The first argument to the Adam constructor tells the # optimizer which Tensors it should update. learning_rate = 1e-4 optimizer = torch.optim.Adam(model.parameters(), lr=learning_rate) for t in range(500): # Forward pass: compute predicted y by passing x to the model. y_pred = model(x) # Compute and print loss. loss = loss_fn(y_pred, y) if t % 100 == 99: print(t, loss.item()) # Before the backward pass, use the optimizer object to zero all of the # gradients for the variables it will update (which are the learnable # weights of the model). This is because by default, gradients are # accumulated in buffers( i.e, not overwritten) whenever .backward() # is called. Checkout docs of torch.autograd.backward for more details. optimizer.zero_grad() # Backward pass: compute gradient of the loss with respect to model # parameters loss.backward() # Calling the step function on an Optimizer makes an update to its # parameters optimizer.step()   Custom nn Modules Sometimes you will want to specify models that are more complex than a sequence of existing Modules; for these cases you can define your own Modules by subclassing nn.Module and defining a forward which receives input Tensors and produces output Tensors using other modules or other autograd operations on Tensors.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51  # -*- coding: utf-8 -*- import torch class TwoLayerNet(torch.nn.Module): def __init__(self, D_in, H, D_out): &#34;&#34;&#34; In the constructor we instantiate two nn.Linear modules and assign them as member variables. &#34;&#34;&#34; super(TwoLayerNet, self).__init__() self.linear1 = torch.nn.Linear(D_in, H) self.linear2 = torch.nn.Linear(H, D_out) def forward(self, x): &#34;&#34;&#34; In the forward function we accept a Tensor of input data and we must return a Tensor of output data. We can use Modules defined in the constructor as well as arbitrary operators on Tensors. &#34;&#34;&#34; h_relu = self.linear1(x).clamp(min=0) y_pred = self.linear2(h_relu) return y_pred # N is batch size; D_in is input dimension; # H is hidden dimension; D_out is output dimension. N, D_in, H, D_out = 64, 1000, 100, 10 # Create random Tensors to hold inputs and outputs x = torch.randn(N, D_in) y = torch.randn(N, D_out) # Construct our model by instantiating the class defined above model = TwoLayerNet(D_in, H, D_out) # Construct our loss function and an Optimizer. The call to model.parameters() # in the SGD constructor will contain the learnable parameters of the two # nn.Linear modules which are members of the model. criterion = torch.nn.MSELoss(reduction=&#39;sum&#39;) optimizer = torch.optim.SGD(model.parameters(), lr=1e-4) for t in range(500): # Forward pass: Compute predicted y by passing x to the model y_pred = model(x) # Compute and print loss loss = criterion(y_pred, y) if t % 100 == 99: print(t, loss.item()) # Zero gradients, perform a backward pass, and update the weights. optimizer.zero_grad() loss.backward() optimizer.step()   Visualizing Models, Data, and Training with TensorBoard https://pytorch.org/tutorials/intermediate/tensorboard_tutorial.html#tracking-model-training-with-tensorboard\nPretained models torchvision.models \u53c2\u8003:\n \rtorchvision.models \rpytorch\u4e2d\u7684pre-train\u51fd\u6570\u6a21\u578b\u5f15\u7528\u53ca\u4fee\u6539 \rPytorch\uff1a\u5229\u7528\u9884\u8bad\u7ec3\u597d\u7684VGG16\u7f51\u7edc\u63d0\u53d6\u56fe\u7247\u7279\u5f81  pretrainedmodels \u53c2\u8003:\n \rpretrained-models.pytorch  Other tricks \u6e05\u9664GPU\u5b58\u50a8 \u53c2\u8003:\r\u77e5\u4e4e\n\u6709\u65f6Control-C\u4e2d\u6b62\u8fd0\u884c\u540eGPU\u5b58\u50a8\u6ca1\u6709\u53ca\u65f6\u91ca\u653e\uff0c\u9700\u8981\u624b\u52a8\u6e05\u7a7a\u3002\u5728PyTorch\u5185\u90e8\u53ef\u4ee5torch.cuda.empty_cache(), \u6216\u5728\u547d\u4ee4\u884c\u53ef\u4ee5\u5148\u4f7f\u7528ps\u627e\u5230\u7a0b\u5e8f\u7684PID\uff0c\u518d\u4f7f\u7528kill\u7ed3\u675f\u8be5\u8fdb\u7a0b:\n1 2  ps aux | grep python kill -9 [pid]   \u6216\u8005\u76f4\u63a5\u91cd\u7f6e\u6ca1\u6709\u88ab\u6e05\u7a7a\u7684GPUnvidia-smi --gpu-reset -i [gpu_id]\n\u5e38\u7528\u8bad\u7ec3\u548c\u9a8c\u8bc1\u6570\u636e\u9884\u5904\u7406 \u5176\u4e2dToTensor\u64cd\u4f5c\u4f1a\u5c06PIL.Image\u6216\u5f62\u72b6\u4e3aH\u00d7W\u00d7D\uff0c\u6570\u503c\u8303\u56f4\u4e3a[0, 255]\u7684np.ndarray\u8f6c\u6362\u4e3a\u5f62\u72b6\u4e3aD\u00d7H\u00d7W\uff0c\u6570\u503c\u8303\u56f4\u4e3a[0.0, 1.0]\u7684torch.Tensor\u3002\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  train_transform = torchvision.transforms.Compose([ torchvision.transforms.RandomResizedCrop(size=224, scale=(0.08, 1.0)), torchvision.transforms.RandomHorizontalFlip(), torchvision.transforms.ToTensor(), torchvision.transforms.Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225)), ]) val_transform = torchvision.transforms.Compose([ torchvision.transforms.Resize(256), torchvision.transforms.CenterCrop(224), torchvision.transforms.ToTensor(), torchvision.transforms.Normalize(mean=(0.485, 0.456, 0.406), std=(0.229, 0.224, 0.225)), ])   pytorch-lighting hello world-mnist A more complete MNIST Lightning Module Example\n \rprepare_data() \ud83d\udcbe  \u200b - This is where we can download the dataset. We point to our desired dataset and ask torchvision&rsquo;s MNIST dataset class to download if the dataset isn&rsquo;t found there.\n\rsetup(stage) \u2699\ufe0f  \u200b - Loads in data from file and prepares PyTorch tensor datasets for each split (train, val, test).\n\u200b - Setup expects a &lsquo;stage&rsquo; arg which is used to separate logic for &lsquo;fit&rsquo; and &lsquo;test&rsquo;.\n\u200b - If you don&rsquo;t mind loading all your datasets at once, you can set up a condition to allow for both &lsquo;fit&rsquo; related setup and &lsquo;test&rsquo; related setup to run whenever None is passed to stage (or ignore it altogether and exclude any conditionals).\n\rx_dataloader() \u267b\ufe0f  \u200b - train_dataloader(), val_dataloader(), and test_dataloader() all return PyTorch DataLoader instances that are created by wrapping their respective datasets that we prepared in setup()\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99  import os import torch from torch import nn from torch.nn import functional as F from torch.utils.data import DataLoader, random_split from torchvision.datasets import MNIST from torchvision import transforms import pytorch_lightning as pl from pytorch_lightning.metrics.functional import accuracy class LitMNIST(pl.LightningModule): def __init__(self, data_dir=&#39;./&#39;, hidden_size=64, learning_rate=2e-4): super().__init__() # Set our init args as class attributes self.data_dir = data_dir self.hidden_size = hidden_size self.learning_rate = learning_rate # Hardcode some dataset specific attributes self.num_classes = 10 self.dims = (1, 28, 28) channels, width, height = self.dims self.transform = transforms.Compose([ transforms.ToTensor(), transforms.Normalize((0.1307,), (0.3081,)) ]) # Define PyTorch model self.model = nn.Sequential( nn.Flatten(), nn.Linear(channels * width * height, hidden_size), nn.ReLU(), nn.Dropout(0.1), nn.Linear(hidden_size, hidden_size), nn.ReLU(), nn.Dropout(0.1), nn.Linear(hidden_size, self.num_classes) ) def forward(self, x): x = self.model(x) return F.log_softmax(x, dim=1) def training_step(self, batch, batch_idx): x, y = batch logits = self(x) loss = F.nll_loss(logits, y) return loss def validation_step(self, batch, batch_idx): x, y = batch logits = self(x) loss = F.nll_loss(logits, y) preds = torch.argmax(logits, dim=1) acc = accuracy(preds, y) # Calling self.log will surface up scalars for you in TensorBoard self.log(&#39;val_loss&#39;, loss, prog_bar=True) self.log(&#39;val_acc&#39;, acc, prog_bar=True) return loss def test_step(self, batch, batch_idx): # Here we just reuse the validation_step for testing return self.validation_step(batch, batch_idx) def configure_optimizers(self): optimizer = torch.optim.Adam(self.parameters(), lr=self.learning_rate) return optimizer #################### # DATA RELATED HOOKS #################### def prepare_data(self): # download MNIST(self.data_dir, train=True, download=True) MNIST(self.data_dir, train=False, download=True) def setup(self, stage=None): # Assign train/val datasets for use in dataloaders if stage == &#39;fit&#39; or stage is None: mnist_full = MNIST(self.data_dir, train=True, transform=self.transform) self.mnist_train, self.mnist_val = random_split(mnist_full, [55000, 5000]) # Assign test dataset for use in dataloader(s) if stage == &#39;test&#39; or stage is None: self.mnist_test = MNIST(self.data_dir, train=False, transform=self.transform) def train_dataloader(self): return DataLoader(self.mnist_train, batch_size=32) def val_dataloader(self): return DataLoader(self.mnist_val, batch_size=32) def test_dataloader(self): return DataLoader(self.mnist_test, batch_size=32)   ",
        "description": "",
        "id": 69,
        "section": "posts",
        "tags": [
            "\u6df1\u5ea6\u5b66\u4e60",
            "PyTorch",
            "Python",
            "\u795e\u7ecf\u7f51\u7edc",
            "\u9884\u8bad\u7ec3\u6a21\u578b"
        ],
        "title": "PyTroch\u5b66\u4e60\u7b14\u8bb0",
        "uri": "/posts/notes/328/"
    },
    {
        "content": " Collecting some interesting and frequently used containers on Docker\n UnblockNeteaseMusic  \u901a\u8fc7\u4ee3\u7406\u7684\u65b9\u5f0f\u6536\u542c\u7f51\u6613\u4e91\u97f3\u4e50\u7070\u8272\u65e0\u7248\u6743\u6b4c\u66f2\u3002 Refer: sources; \u535a\u5ba2\u3002 \u6211\u7528\u7684docker\u7684\u65b9\u5f0f\u90e8\u7f72\u7684\uff0c\u7aef\u53e3\u53ef\u4ee5\u66f4\u6539\u3002  docker run -d --name unblockneteasemusic -p 12315:8080 nondanee/unblockneteasemusic Kepler.gl docker docker run \u2013name kepler.gl -p 10087:80 -e MapboxAccessToken=&ldquo;pk.eyJ1IjoidHJvcGljYWxocyIsImEiOiJjazZrZDJlMHgwMnZhM21wYW9oNWl4eGxoIn0.w_nfPS4RC5ERPpMMutwgLg&rdquo; \u2013restart always -d crazycapivara/kepler.gl\n2021.2.19\n\u4e3a\u4e86\u4fdd\u6301kepler.gl\u4fdd\u6301\u6700\u65b0\u7248\u672c\uff0c\u53ef\u4f7f\u7528docker build\u6784\u5efa\u5bb9\u5668\uff0c\u7136\u540e\u62c9\u53d6\u3002\u53c2\u8003\uff1ahttps://github.com/xunhs/docker-kepler.gl\u3002\n\u53e6\u5916\uff0c\u5728\u8fd9\u4e2a\u4ed3\u5e93\u91cc\u9762\uff1a1\uff09\u6dfb\u52a0apk\u548cnpm\u6e90\uff0c\u52a0\u901f\u6784\u5efa\uff1b2\uff09\u9ed8\u8ba4\u5c06Mapbox\u7684token\u52a0\u5165build\u7684\u73af\u5883\u53d8\u91cf\u4e2d\n\u5728\u7ebf\u97f3\u4e50\u641c\u7d22/\u64ad\u653e\u5668 Refer: https://github.com/oldiy/music-player\ndocker run -d --name online-music-player -p 264:264 -v &lt;\u672c\u673a\u7f13\u5b58\u76ee\u5f55&gt;:/var/www/html/cache oldiy/music-player-docker CCAA\uff08Aria2\u4e00\u952e\u90e8\u7f72\uff09  Linux\u4e00\u952e\u5b89\u88c5Aria2 + AriaNg + FileBrowse\u5b9e\u73b0\u79bb\u7ebf\u4e0b\u8f7d\u3001\u6587\u4ef6\u7ba1\u7406\u3002 Refer: sources; \u535a\u5ba2  OneindexMoe(docker\u4e00\u4ef6\u5b89\u88c5) Refer: sources\n\u6298\u817e\u4e86\u597d\u4e45olaindex\u7ec8\u4e8e\u5b89\u88c5\u4e0a\u4e86\uff0c\u665a\u4e0a\u5237\u5206\u4eab\u9047\u5230\u8fd9\u4e2adocker\u4e00\u4ef6\u5b89\u88c5\u6210\u529f\u4e86\u3002\ndocker run -d --name oneindex -p 12316:80 --restart=always baiyuetribe/oneindex  2020.10.18 fast.io\u514d\u8d39\u670d\u52a1\u5df2\u7ec8\u6b62 \u5982\u679c\u6ca1\u6709\u670d\u52a1\u5668\u90e8\u7f72\uff0c\u53e6\u5916\u63a8\u8350\u4e00\u4e2a\u5728\u7ebf\u7f51\u76d8index\u5de5\u5177-Fast.io\uff0c\u514d\u8d39\u9759\u6001\u7a7a\u95f4/\u76ee\u5f55\u6d4f\u89c8\uff0c\u652f\u6301OneDrive/Google Drive/Github\uff0c\u53ef\u4ee5\u505a\u6587\u4ef6\u5916\u94fe\uff0c\u8fd8\u4e0d\u9519  Elasticsearch  init\n\u521b\u5efa\u4e09\u4e2a\u6587\u4ef6\u5939config, data, plugins; \u5728\u6587\u4ef6\u5939config\u4e0b\u521b\u5efaelasticsearch.yml\u6587\u4ef6\uff0c\u5e76\u5199\u5165http.host: &amp;#039;0.0.0.0&amp;#039; \u90e8\u7f72elasticsearch\n\u53c2\u8003\r\u8fd9\u4e2a\u67e5\u770b\u65b0\u7248\u672c\ndocker run -p 9200:9200 -p 9300:9300 --name elasticsearch \\   -e &ldquo;discovery.type=single-node&rdquo;\n-v /mnt/d/Docker/poi-elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml\n-v /mnt/d/Docker/poi-elasticsearch/data:/usr/share/elasticsearch/data\n-v /mnt/d/Docker/poi-elasticsearch/plugins:/usr/share/elasticsearch/plugins\n-d elasticsearch:7.8.0\n kibana\n\u53c2\u8003\r\u8fd9\u4e2a\u67e5\u770b\u65b0\u7248\u672c\ndocker run --name kibana -d \\   &ndash;link e5ecbda26718:elasticsearch\n-p 5601:5601 kibana:7.8.0\ne5ecbda26718\u662felasticsearch\u7684docker id  Docker Ubuntu Python\u57fa\u7840\u73af\u5883\u914d\u7f6e   ubuntu18\ndocker run -it --name ubuntu_base ubuntu:18.04 /bin/bash\n(option)\ndocker exec -it ubuntu_base bash\n  \u6362\u6e90:\rhuawei mirror\nsed -i &ldquo;s@http://.*archive.ubuntu.com@http://repo.huaweicloud.com@g&rdquo; /etc/apt/sources.list &amp;&amp; sed -i &ldquo;s@http://.*security.ubuntu.com@http://repo.huaweicloud.com@g&rdquo; /etc/apt/sources.list &amp;&amp; apt-get update\n  \u5f00\u542fssh\n \u5b89\u88c5ssh-server\u670d\u52a1\uff1a sudo apt-get install openssh-server \u786e\u8ba4ssh-server\u662f\u5426\u542f\u52a8: ps -e | grep ssh =&gt; sshd \u4fee\u6539\u914d\u7f6e\u6587\u4ef6: ssh-server\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e/etc/ssh/sshd_config\uff0c\u5728\u8fd9\u91cc\u53ef\u4ee5\u5b9a\u4e49SSH\u7684\u670d\u52a1\u7aef\u53e3\uff0c\u9ed8\u8ba4\u7aef\u53e3\u662f22\uff0c\u4f60\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u6210\u5176\u4ed6\u7aef\u53e3\u53f7\uff0c\u5982222\u3002\uff08\u6216\u628a\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u201dPermitRootLogin without-password\u201d\u52a0\u4e00\u4e2a\u201d#\u201d\u53f7,\u628a\u5b83\u6ce8\u91ca\u6389\uff0c\u518d\u589e\u52a0\u4e00\u53e5\u201dPermitRootLogin yes\u201d\uff09\u7136\u540e\u91cd\u542fSSH\u670d\u52a1\uff1asudo /etc/init.d/ssh restart    \u57fa\u7840\u5305,\u53c2\u8003: github\napt-get install -y software-properties-common\napt-get install -y build-essential python3.6 python3-pip\napt-get install -y git nano\n  python2.7(option): apt-get install -y python2.7 python-pip   pip\u6362\u6e90\nPip\u7684\u914d\u7f6e\u6587\u4ef6\u4e3a\u7528\u6237\u6839\u76ee\u5f55\u4e0b\u7684\uff1a~/.pip/pip.conf\uff08Windows\u8def\u5f84\u4e3a\uff1aC:\\Users&lt;UserName&gt;\\pip\\pip.ini\uff09, \u60a8\u53ef\u4ee5\u914d\u7f6e\u5982\u4e0b\u5185\u5bb9\uff1a\n[global]\nindex-url = https://repo.huaweicloud.com/repository/pypi/simple\ntrusted-host = repo.huaweicloud.com\ntimeout = 120\n  update pip\npython3.6 -m pip install pip &ndash;upgrade\npython3.6 -m pip install wheel\n  commit=&gt; images: docker commit CONTAINER_ID ubuntu_py:tag\n  docker \u5e38\u7528\u547d\u4ee4  \u8fd0\u884c\u5bb9\u5668: docker run -itd --name ubuntu_base ubuntu:18.04 /bin/bash \u4ea4\u4e92\u7ec8\u7aef: docker exec -it ubuntu_base bash container\u91cd\u547d\u540d: docker rename CONTAINER_ID new_name \u5bb9\u5668\u8f7d\u5165\u6216\u5bfc\u51fa:  \u67e5\u770b\u5bb9\u5668: docker ps -a commit\u5bb9\u5668\u63d0\u4ea4\u4fee\u6539=&gt;images\uff1adocker commit fbe3 xunhs/ml-workspace-gpu:0.12.1(docker commit container_id tag) \u5bfc\u51fa\uff1adocker save de9821e5a5a1 -o ./ml-workspace-gpu.tar \u67e5\u770b\u955c\u50cf\uff1adocker images \u5220\u9664\u955c\u50cf\uff1adocker rmi de9821e5a5a1 \u8f7d\u5165\uff1adocker load -i ml-workspace-gpu.tar   \u5f00\u542f\u81ea\u542f\u52a8: --restart always  ",
        "description": "",
        "id": 70,
        "section": "posts",
        "tags": [
            "Docker"
        ],
        "title": "\u5173\u4e8eDocker\u7684\u4e00\u4e9b\u6536\u85cf",
        "uri": "/2020/04/17/78/"
    },
    {
        "content": " Refer to scikit-learn-tips, Scikit-learn 0.22\u65b0\u7248\u672c\u53d1\u5e03\u3002\n\u6574\u7406\u4e00\u4e9b\u81ea\u5df1\u611f\u5174\u8da3\uff0c\u7ecf\u5e38\u7528\u5230\u7684\n \u7279\u5f81\u5de5\u7a0b \u5f52\u4e00\u5316/\u6807\u51c6\u5316/\u6b63\u5219\u5316 \u53c2\u8003: cnblogs\nStandardScaler Z-Score\uff0c\u6216\u8005\u53bb\u9664\u5747\u503c\u548c\u65b9\u5dee\u7f29\u653e\n1 2 3 4 5 6 7 8 9 10 11 12 13  from sklearn import preprocessing import numpy as np x = np.array([[1.,-1.,2.], [2.,0.,0.], [0.,1.,-1.]]) # \u4f7f\u7528sklearn.preprocessing.StandardScaler\u7c7b\uff0c # \u4f7f\u7528\u8be5\u7c7b\u7684\u597d\u5904\u5728\u4e8e\u53ef\u4ee5\u4fdd\u5b58\u8bad\u7ec3\u96c6\u4e2d\u7684\u53c2\u6570\uff08\u5747\u503c\u3001\u65b9\u5dee\uff09 # \u76f4\u63a5\u4f7f\u7528\u5176\u5bf9\u8c61\u8f6c\u6362\u6d4b\u8bd5\u96c6\u6570\u636e\u3002 scaler = preprocessing.StandardScaler().fit(x) scaler.mean_ scaler.std_ scaler.transform(x) #\u8ddf\u4e0a\u9762\u7684\u7ed3\u679c\u662f\u4e00\u6837\u7684   MinMaxScaler \u5c06\u5c5e\u6027\u7f29\u653e\u5230\u4e00\u4e2a\u6307\u5b9a\u8303\u56f4,\u4e5f\u662f\u5c31\u662f(x-min)/(max-min)\n1 2 3 4 5 6 7 8 9 10 11  x_train = np.array([[1.,-1.,2.], [2.,0.,0.], [0.,1.,-1.]]) min_max_scaler = preprocessing.MinMaxScaler() x_train_minmax = min_max_scaler.fit_transform(x_train) print(x_train_minmax) # \u5f53\u7136\uff0c\u5728\u6784\u9020\u7c7b\u5bf9\u8c61\u7684\u65f6\u5019\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u6700\u5927\u6700\u5c0f\u503c\u7684\u8303\u56f4\uff1a # feature_range = (min, max)\uff0c\u6b64\u65f6\u5e94\u7528\u7684\u516c\u5f0f\u53d8\u4e3a\uff1a # x_std = (X-X.min(axis=0))/(X.max(axis=0)-X.min(axis=0)) # x_scaled = X_std/(max-min)+min   Normalization 1 2 3 4  # \u53ef\u4ee5\u4f7f\u7528processing.Normalizer()\u7c7b\u5b9e\u73b0\u5bf9\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u7684\u62df\u5408\u548c\u8f6c\u6362 normalizer = preprocessing.Normalizer().fit(x) print(normalizer) normalizer.transform(x)   ColumnTransformer-make_column_transformer/\u884c\u5904\u7406 Use ColumnTransformer to apply different preprocessing to different columns:\n select from DataFrame columns by name passthrough(\u4fdd\u7559) or drop(\u4e22\u6389) unspecified columns \u5f15\u7533\uff1asklearn.preprocessing(TODO): \u5b98\u7f51\uff0c\rcnblogs sklearn.impute.SimpleImputer: \u586b\u8865\u7f3a\u5931\u503c, \u53c2\u8003\r\u5b98\u7f51, zhihu  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  import pandas as pd df = pd.read_csv(&#39;http://bit.ly/kaggletrain&#39;, nrows=6) cols = [&#39;Fare&#39;, &#39;Embarked&#39;, &#39;Sex&#39;, &#39;Age&#39;] X = df[cols] from sklearn.preprocessing import OneHotEncoder from sklearn.impute import SimpleImputer from sklearn.compose import make_column_transformer ohe = OneHotEncoder() imp = SimpleImputer() ct = make_column_transformer( (ohe, [&#39;Embarked&#39;, &#39;Sex&#39;]), # apply OneHotEncoder to Embarked and Sex (imp, [&#39;Age&#39;]), # apply SimpleImputer to Age remainder=&#39;passthrough&#39;) # include remaining column (Fare) in the output # column order: Embarked (3 columns), Sex (2 columns), Age (1 column), Fare (1 column) ct.fit_transform(X) &#39;&#39;&#39; output: array([[ 0. , 0. , 1. , 0. , 1. , 22. , 7.25 ], [ 1. , 0. , 0. , 1. , 0. , 38. , 71.2833], [ 0. , 0. , 1. , 1. , 0. , 26. , 7.925 ], [ 0. , 0. , 1. , 1. , 0. , 35. , 53.1 ], [ 0. , 0. , 1. , 0. , 1. , 35. , 8.05 ], [ 0. , 1. , 0. , 0. , 1. , 31.2 , 8.4583]]) &#39;&#39;&#39;   ColumnTransformer-\u884c\u9009\u62e9 There are SEVEN ways to select columns using ColumnTransformer:\n column name integer position slice boolean mask regex pattern dtypes to include dtypes to exclude  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  import pandas as pd df = pd.read_csv(&#39;http://bit.ly/kaggletrain&#39;, nrows=6) cols = [&#39;Fare&#39;, &#39;Embarked&#39;, &#39;Sex&#39;, &#39;Age&#39;] X = df[cols] from sklearn.preprocessing import OneHotEncoder from sklearn.compose import make_column_transformer # new in 0.20 from sklearn.compose import make_column_selector # new in 0.22 # all SEVEN of these produce the same results ct = make_column_transformer((ohe, [&#39;Embarked&#39;, &#39;Sex&#39;])) ct = make_column_transformer((ohe, [1, 2])) ct = make_column_transformer((ohe, slice(1, 3))) ct = make_column_transformer((ohe, [False, True, True, False])) ct = make_column_transformer((ohe, make_column_selector(pattern=&#39;E|S&#39;))) ct = make_column_transformer((ohe, make_column_selector(dtype_include=object))) ct = make_column_transformer((ohe, make_column_selector(dtype_exclude=&#39;number&#39;))) ct.fit_transform(X)   pipeline Chains together multiple steps: output of each step is used as input to the next step. Makes it easy to apply the same preprocessing to train and test!\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  import pandas as pd import numpy as np train = pd.DataFrame({&#39;feat1&#39;:[10, 20, np.nan, 2], &#39;feat2&#39;:[25., 20, 5, 3], &#39;label&#39;:[&#39;A&#39;, &#39;A&#39;, &#39;B&#39;, &#39;B&#39;]}) test = pd.DataFrame({&#39;feat1&#39;:[30., 5, 15], &#39;feat2&#39;:[12, 10, np.nan]}) from sklearn.impute import SimpleImputer from sklearn.linear_model import LogisticRegression from sklearn.pipeline import make_pipeline imputer = SimpleImputer() clf = LogisticRegression() # 2-step pipeline: impute missing values, then pass the results to the classifier pipe = make_pipeline(imputer, clf) features = [&#39;feat1&#39;, &#39;feat2&#39;] X, y = train[features], train[&#39;label&#39;] X_new = test[features] # pipeline applies the imputer to X before fitting the classifier pipe.fit(X, y) # pipeline applies the imputer to X_new before making predictions # note: pipeline uses imputation values learned during the &#34;fit&#34; step pipe.predict(X_new)   \u7f3a\u5931\u503c\u5904\u7406 \u6807\u8bb0\u7f3a\u5931\u6570\u503c\u5e76\u5c06\u6b64\u6807\u8bb0\u4f5c\u4e3a\u65b0\u7684\u7279\u5f81 Add a missing indicator to encode &ldquo;missingness&rdquo; as a feature(\u5728\u5904\u7406\u7f3a\u5931\u6570\u636e\u7684\u65f6\u5019\uff0c\u6807\u8bb0\u7f3a\u5931\u6570\u503c\u5e76\u5c06\u6b64\u6807\u8bb0\u4f5c\u4e3a\u65b0\u7684\u7279\u5f81)\nWhen imputing missing values, you can preserve info about which values were missing and use THAT as a feature!Why? Sometimes there&rsquo;s a relationship between &ldquo;missingness&rdquo; and the target/label you are trying to predict.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  import pandas as pd import numpy as np from sklearn.impute import SimpleImputer X = pd.DataFrame({&#39;Age&#39;:[20, 30, 10, np.nan, 10]}) # impute the mean imputer = SimpleImputer() imputer.fit_transform(X) &#39;&#39;&#39; output: array([[20. , 0. ], [30. , 0. ], [10. , 0. ], [17.5, 1. ], [10. , 0. ]]) &#39;&#39;&#39;   KNNImputer / IterativeImpute: Need something better than SimpleImputer for missing value imputation?\nTry KNNImputer or IterativeImputer (inspired by R&rsquo;s MICE package). Both are multivariate approaches (they take other features into account!)\n\u53e6\u53c2\u8003\uff1a\rcsdn\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  import pandas as pd df = pd.read_csv(&#39;http://bit.ly/kaggletrain&#39;, nrows=6) cols = [&#39;SibSp&#39;, &#39;Fare&#39;, &#39;Age&#39;] X = df[cols] # new in 0.21, and still &#34;experimental&#34; so it must be enabled explicitly from sklearn.experimental import enable_iterative_imputer from sklearn.impute import IterativeImputer impute_it = IterativeImputer() impute_it.fit_transform(X) &#39;&#39;&#39; output: array([[ 1. , 7.25 , 22. ], [ 1. , 71.2833 , 38. ], [ 0. , 7.925 , 26. ], [ 1. , 53.1 , 35. ], [ 0. , 8.05 , 35. ], [ 0. , 8.4583 , 28.50639495]]) &#39;&#39;&#39; # new in 0.22 from sklearn.impute import KNNImputer impute_knn = KNNImputer(n_neighbors=2) impute_knn.fit_transform(X) &#39;&#39;&#39; output: array([[ 1. , 7.25 , 22. ], [ 1. , 71.2833, 38. ], [ 0. , 7.925 , 26. ], [ 1. , 53.1 , 35. ], [ 0. , 8.05 , 35. ], [ 0. , 8.4583, 30.5 ]]) &#39;&#39;&#39;   \u8bad\u7ec3 random_state: Set a &ldquo;random_state&rdquo; to make your code reproducible\nEnsures that a &ldquo;random&rdquo; process will output the same results every time, which makes your code reproducible (by you and others!)\n1 2 3 4  from sklearn.model_selection import train_test_split # any positive integer can be used for the random_state value X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.5, random_state=1)   \u5212\u5206\u4e09\u7c7b\uff1atrain, test, val 1 2 3 4 5 6 7 8 9 10 11 12 13 14  train_ratio = 0.75 validation_ratio = 0.15 test_ratio = 0.10 # train is now 75% of the entire data set # the _junk suffix means that we drop that variable completely x_train, x_test, y_train, y_test = train_test_split(dataX, dataY, test_size=1 - train_ratio) # test is now 10% of the initial data set # validation is now 15% of the initial data set x_val, x_test, y_val, y_test = train_test_split(x_test, y_test, test_size=test_ratio/(test_ratio + validation_ratio)) print(x_train, x_val, x_test)   cross-validate and grid search (\u4ea4\u53c9\u9a8c\u8bc1\uff0c\u7f51\u683c\u641c\u7d22): You can cross-validate and grid search an entire pipeline!\nPreprocessing steps will automatically occur AFTER each cross-validation split, which is critical if you want meaningful scores.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44  import pandas as pd df = pd.read_csv(&#39;http://bit.ly/kaggletrain&#39;) cols = [&#39;Sex&#39;, &#39;Name&#39;] X = df[cols] y = df[&#39;Survived&#39;] from sklearn.preprocessing import OneHotEncoder from sklearn.feature_extraction.text import CountVectorizer from sklearn.compose import make_column_transformer ohe = OneHotEncoder() vect = CountVectorizer() ct = make_column_transformer((ohe, [&#39;Sex&#39;]), (vect, &#39;Name&#39;)) from sklearn.linear_model import LogisticRegression clf = LogisticRegression(solver=&#39;liblinear&#39;, random_state=1) from sklearn.pipeline import make_pipeline pipe = make_pipeline(ct, clf) # Cross-validate the entire pipeline (not just the model) from sklearn.model_selection import cross_val_score cross_val_score(pipe, X, y, cv=5, scoring=&#39;accuracy&#39;).mean() &#39;&#39;&#39; output: 0.8024543343167408 &#39;&#39;&#39; # Find optimal tuning parameters for the entire pipeline # specify parameter values to search params = {} params[&#39;columntransformer__countvectorizer__min_df&#39;] = [1, 2] params[&#39;logisticregression__C&#39;] = [0.1, 1, 10] params[&#39;logisticregression__penalty&#39;] = [&#39;l1&#39;, &#39;l2&#39;] # try all possible combinations of those parameter values from sklearn.model_selection import GridSearchCV grid = GridSearchCV(pipe, params, cv=5, scoring=&#39;accuracy&#39;) grid.fit(X, y) # what was the best score found during the search? grid.best_score_ # which combination of parameters produced the best score? grid.best_params_   RandomizedSearchCV (\u968f\u673a\u5316\u7f51\u683c\u641c\u7d22) GridSearchCV taking too long? Try RandomizedSearchCV with a small number of iterations.\nMake sure to specify a distribution (instead of a list of values) for continuous parameters!\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  import pandas as pd df = pd.read_csv(&#39;http://bit.ly/kaggletrain&#39;) X = df[&#39;Name&#39;] y = df[&#39;Survived&#39;] from sklearn.feature_extraction.text import CountVectorizer from sklearn.naive_bayes import MultinomialNB from sklearn.pipeline import make_pipeline pipe = make_pipeline(CountVectorizer(), MultinomialNB()) # cross-validate the pipeline using default parameters from sklearn.model_selection import cross_val_score cross_val_score(pipe, X, y, cv=5, scoring=&#39;accuracy&#39;).mean() # specify parameter values to search (use a distribution for any continuous parameters) import scipy as sp params = {} params[&#39;countvectorizer__min_df&#39;] = [1, 2, 3, 4] params[&#39;countvectorizer__lowercase&#39;] = [True, False] params[&#39;multinomialnb__alpha&#39;] = sp.stats.uniform(scale=1) # try &#34;n_iter&#34; random combinations of those parameter values from sklearn.model_selection import RandomizedSearchCV rand = RandomizedSearchCV(pipe, params, n_iter=10, cv=5, scoring=&#39;accuracy&#39;, random_state=1) rand.fit(X, y); # what was the best score found during the search? rand.best_score_ # which combination of parameters produced the best score? rand.best_params_   \u7f51\u683c\u5316\u641c\u7d22\u7ed3\u679c\u8f93\u51fa Hyperparameter search results (from GridSearchCV or RandomizedSearchCV) can be converted into a pandas DataFrame.\nMakes it far easier to explore the results!\n1 2 3 4 5 6 7 8  from sklearn.model_selection import GridSearchCV grid = GridSearchCV(pipe, params, cv=5, scoring=&#39;accuracy&#39;) grid.fit(X, y) # convert results into a DataFrame results = pd.DataFrame(grid.cv_results_)[[&#39;params&#39;, &#39;mean_test_score&#39;, &#39;rank_test_score&#39;]] # sort by test score results.sort_values(&#39;rank_test_score&#39;)   fit &amp; transform the difference between &ldquo;fit&rdquo; and &ldquo;transform&rdquo;\n &ldquo;fit&rdquo;: transformer learns something about the data &ldquo;transform&rdquo;: it uses what it learned to do the data transformation  \u6a21\u578b: \u5957\u7528\u7b80\u5355\u6a21\u578b\u3002\u5c24\u5176\u5bf9\u4e8e\u9ad8\u7ef4\u7a00\u758f\u6570\u636e\u7684regression\u95ee\u9898 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  from sklearn.model_selection import StratifiedKFold from sklearn.model_selection import cross_val_score from sklearn.linear_model import Ridge from sklearn.linear_model import LogisticRegression from sklearn.tree import DecisionTreeClassifier from sklearn.neighbors import KNeighborsClassifier from sklearn.discriminant_analysis import LinearDiscriminantAnalysis from sklearn.naive_bayes import GaussianNB from sklearn.svm import SVC from sklearn.ensemble import AdaBoostClassifier from sklearn.ensemble import GradientBoostingClassifier from sklearn.ensemble import RandomForestClassifier from sklearn.ensemble import ExtraTreesClassifier models = [ (&#39;LR&#39; , LogisticRegression()), (&#39;LDA&#39; , LinearDiscriminantAnalysis()), (&#39;KNN&#39; , KNeighborsClassifier()), (&#39;CART&#39; , DecisionTreeClassifier()), (&#39;NB&#39; , GaussianNB()), (&#39;SVM&#39; , SVC(probability=True)), (&#39;AB&#39; , AdaBoostClassifier()), (&#39;GBM&#39; , GradientBoostingClassifier()), (&#39;RF&#39; , RandomForestClassifier()), (&#39;ET&#39; , ExtraTreesClassifier()) ] def run_models(x, y, models): num_folds = 10 scoring = &#39;accuracy&#39; results = [] names = [] for name, model in models: kfold = StratifiedKFold(n_splits=num_folds, random_state=123) cv_results = cross_val_score(model, x, y, cv=kfold, scoring=scoring) results.append(cv_results) names.append(name) msg = &#34;%s: %f(%f)&#34; % (name, cv_results.mean(), cv_results.std()) print(msg) return names, results names, results = run_models(X, Y, models) &#34;&#34;&#34; \u5f97\u5230\u7684\u7ed3\u679c: LR: 0.803470 (0.009425) LDA: 0.797354 (0.011074) KNN: 0.772755 (0.013865) CART: 0.719289 (0.018143) NB: 0.694681 (0.019061) SVM: 0.798207 (0.010633) AB: 0.805602 (0.010468) GBM: 0.804893 (0.013025) RF: 0.781855 (0.010472) ET: 0.769192 (0.016778) &#34;&#34;&#34;   \u6a21\u578b\u878d\u5408(ensemble) \u53c2\u8003\uff1a\rA Complete ML Pipeline Tutorial (ACU ~ 86%) | Kaggle\nvoting 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  from sklearn.ensemble import VotingClassifier &#34;&#34;&#34; Ensemble from the best models. Basic Voting. &#34;&#34;&#34; param = {&#39;C&#39;: 0.01, &#39;penalty&#39;: &#39;l2&#39;} model1 = LogisticRegression(**param) param = {&#39;learning_rate&#39;: 0.1, &#39;n_estimators&#39;: 170} model2 = AdaBoostClassifier(**param) param = {&#39;learning_rate&#39;: 0.1, &#39;n_estimators&#39;: 70} model3 = GradientBoostingClassifier(**param) estimators = [(&#39;LR&#39;, model1), (&#39;AB&#39;, model2), (&#39;GB&#39;, model3)] kfold = StratifiedKFold(n_splits=10, random_state=123) ensemble = VotingClassifier(estimators) results = cross_val_score(ensemble, X, Y, cv=kfold, scoring=&#39;accuracy&#39;) results.mean()   stacking StackingClassifier \u548c StackingRegressor 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  from sklearn.datasets import load_iris from sklearn.svm import LinearSVC from sklearn.linear_model import LogisticRegression from sklearn.preprocessing import StandardScaler from sklearn.pipeline import make_pipeline from sklearn.ensemble import StackingClassifier from sklearn.model_selection import train_test_split X, y = load_iris(return_X_y=True) estimators = [ (&#39;rf&#39;, RandomForestClassifier(n_estimators=10, random_state=42)), (&#39;svr&#39;, make_pipeline(StandardScaler(), LinearSVC(random_state=42))) ] clf = StackingClassifier( estimators=estimators, final_estimator=LogisticRegression() ) X_train, X_test, y_train, y_test = train_test_split( X, y, stratify=y, random_state=42 ) clf.fit(X_train, y_train).score(X_test, y_test)   mlens 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80  &#34;&#34;&#34; Stacking Model using lib: mlens. &#34;&#34;&#34; def get_models(): &#34;&#34;&#34;Generate a library of base learners.&#34;&#34;&#34; param = {&#39;C&#39;: 0.01, &#39;penalty&#39;: &#39;l2&#39;} model1 = LogisticRegression(**param) param = {&#39;learning_rate&#39;: 0.1, &#39;n_estimators&#39;: 170} model2 = AdaBoostClassifier(**param) param = {&#39;learning_rate&#39;: 0.1, &#39;n_estimators&#39;: 70} model3 = GradientBoostingClassifier(**param) param = {&#39;n_neighbors&#39;: 23} model4 = KNeighborsClassifier(**param) param = {&#39;C&#39;: 1.7, &#39;kernel&#39;: &#39;rbf&#39;, &#39;probability&#39;:True} model5 = SVC(**param) param = {&#39;criterion&#39;: &#39;gini&#39;, &#39;max_depth&#39;: 3, &#39;max_features&#39;: 2, &#39;min_samples_leaf&#39;: 3} model6 = DecisionTreeClassifier(**param) model7 = GaussianNB() model8 = RandomForestClassifier() model9 = ExtraTreesClassifier() models = {&#39;LR&#39;:model1, &#39;ADA&#39;:model2, &#39;GB&#39;:model3, &#39;KNN&#39;:model4, &#39;SVM&#39;:model5, &#39;DT&#39;:model6, &#39;NB&#39;:model7, &#39;RF&#39;:model8, &#39;ET&#39;:model9 } return models base_learners = get_models() meta_learner = GradientBoostingClassifier( n_estimators=1000, loss=&#34;exponential&#34;, max_features=6, max_depth=3, subsample=0.5, learning_rate=0.001, random_state=123 ) from mlens.ensemble import SuperLearner # Instantiate the ensemble with 10 folds sl = SuperLearner( folds=10, random_state=123, verbose=2, backend=&#34;multiprocessing&#34; ) # Add the base learners and the meta learner sl.add(list(base_learners.values()), proba=True) sl.add_meta(meta_learner, proba=True) # Train the ensemble from sklearn.model_selection import train_test_split X_train, X_test, Y_train, Y_test =train_test_split(X,Y, test_size=0.2, random_state=0) sl.fit(X_train, Y_train) # Predict the test set p_sl = sl.predict_proba(X_test) pp = [] for p in p_sl[:, 1]: if p&gt;0.5: pp.append(1.) else: pp.append(0.) print(&#34;\\nSuper Learner Accuracy score: %.8f&#34; % (Y_test== pp).mean())   \u7ed3\u679c\u8bc4\u5b9a/\u9a8c\u8bc1 \u7279\u5f81\u7684\u91cd\u8981\u6027 sklearn.inspection.permutation_importance\uff0c \u53ef\u4ee5\u7528\u6765\u4f30\u8ba1\u6bcf\u4e2a\u7279\u5f81\u7684\u91cd\u8981\u6027\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  from sklearn.ensemble import RandomForestClassifier from sklearn.inspection import permutation_importance X, y = make_classification(random_state=0, n_features=5, n_informative=3) rf = RandomForestClassifier(random_state=0).fit(X, y) result = permutation_importance(rf, X, y, n_repeats=10, random_state=0, n_jobs=-1) fig, ax = plt.subplots() sorted_idx = result.importances_mean.argsort() ax.boxplot(result.importances[sorted_idx].T, vert=False, labels=range(X.shape[1])) ax.set_title(&#34;Permutation Importance of each feature&#34;) ax.set_ylabel(&#34;Features&#34;) fig.tight_layout() plt.show()   ROC\u66f2\u7ebf Easily compare multiple ROC curves in a single plot\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24  import pandas as pd df = pd.read_csv(&#39;http://bit.ly/kaggletrain&#39;, header=0) cols = [&#39;Pclass&#39;, &#39;Fare&#39;, &#39;SibSp&#39;] X = df[cols] y = df[&#39;Survived&#39;] from sklearn.model_selection import train_test_split from sklearn.linear_model import LogisticRegression from sklearn.tree import DecisionTreeClassifier from sklearn.ensemble import RandomForestClassifier from sklearn.metrics import plot_roc_curve X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0) lr = LogisticRegression() dt = DecisionTreeClassifier() rf = RandomForestClassifier() lr.fit(X_train, y_train); dt.fit(X_train, y_train); rf.fit(X_train, y_train); disp = plot_roc_curve(lr, X_test, y_test) plot_roc_curve(dt, X_test, y_test, ax=disp.ax_); plot_roc_curve(rf, X_test, y_test, ax=disp.ax_);   ",
        "description": "",
        "id": 71,
        "section": "posts",
        "tags": [
            "Python",
            "sklearn"
        ],
        "title": "Scikit Learn Tips",
        "uri": "/posts/notes/209/"
    },
    {
        "content": " \u62ef\u6551\u8005Y9000p\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u30a2\u30b2\u30a4\u30f3\",\rartist: \"\u6a2a\u5c71\u514b\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E6%A8%AA%E5%B1%B1%E5%85%8B-293c40-Ag.mp3\",\rcover: \"https://p2.music.126.net/GSciAiBHt0OplBApxsUC-A==/7742760882881891.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%BA%AF%E9%9F%B3%E4%B9%90-%E6%97%A0%E6%AD%8C%E8%AF%8D-3ca159-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.4.1 \u56db\u6708\u662f\u4f60\u7684\u8c0e\u8a00 2020.4.2 1)\u6211\u662f\u4e0d\u662f\u592a\u65a4\u65a4\u8ba1\u8f83\u4e86\u3002\u96be\u514d\u6709\u4e9b\u4ee5\u5c0f\u4eba\u4e4b\u5fc3\u5ea6\u541b\u5b50\u4e4b\u8179\u30022)\u6211\u73b0\u5728\u7406\u89e3\u4e3a\u4ec0\u4e48\u597d\u591a\u4eba\u90fd\u8981\u9003\u79bb\u56fd\u5185\u7684\u5b66\u672f\u73af\u5883\u3002\u6211\u4e0d\u80fd\u518d\u6df1\u5316\u5fc3\u4e2d\u8fd9\u79cd\u60f3\u6cd5\u3002\u6211\u4e0d\u77e5\u9053\u8be5\u600e\u6837\u8868\u8fbe\u30023) \u5931\u843d 2020.4.3 1) \u201c\u81ea\u5df1\u8fd8\u662f\u6bd4\u8f83\u5e7c\u7a1a\uff0c\u5fc3\u6027\u8fd8\u4e0d\u6210\u719f\u201d\u3002 2) ROG\u51b0\u5203\u592a\u8d35\u4e86\u3002\u5f88\u6f02\u4eae\uff08\u76f4\u89c2\u611f\u89c9\uff09\uff0c\u6027\u80fd\u5f3a\uff1b\u8d1f\u91cd\u6709\u70b9\u5927\uff0c\u7eed\u822a\u6709\u5f85\u8003\u7a76\uff0c\u770b\u5b8c\u8bc4\u6d4b\u6ca1\u6709\u7406\u60f3\u4e3b\u4e49\u4e2d\u7684\u597d\u3002\u653e\u5f03\u5427\u3002 2020.4.4 \u4eca\u65e5\u4efd\u56de\u8001\u5bb6\u3002\u6302\u6e05\u660e\u5df2\u8dd1\u65ad\u817f\u3002 2020.4.5 \u6c14\u8c61\u62a5\u544a\u5929\u6c14\u5f88\u4e0d\u9519 \u592a\u9633\u6652\u5f97\u6211 \u8138\u988a\u7ea2\u7ea2 - \u300a123\u6728\u5934\u4eba\u300b 2020.4.6 \u5df2\u7ecf\u4e0b\u5355\u4e86\u3002\u62ef\u6551\u8005Y9000p 9299 2020.4.7 \u4eca\u5929\u914d\u7f6e\u7535\u8111\u5f04\u4e86\u4e00\u5929\u3002\u7535\u8111\u6bd4\u8f83\u65b0\u88c5\u4e0d\u4e86Linux\u7cfb\u7edf\uff08\u8bd5\u4e86\u51e0\u6b21\u6ca1\u6210\u529f\uff0c\u7f51\u4e0a\u4e5f\u6ca1\u6709\u6559\u7a0b\uff09\uff0c\u9042\u653e\u5f03\u3002\u4e0b\u8f7d\u4e86Win10\u4e13\u4e1a\u7248\uff0c\u91cd\u65b0\u88c5\u673a\u3002 2020.4.8 \u503c\u5f97\u5f00\u5fc3\u7684\u4e8b\u662f\u4eca\u5929\u628atensorflow-gpu\u7684\u73af\u5883\u5b89\u88c5\u597d\u4e86\u3002\u7231\u6298\u817e\u7adf\u7136\u628alightgbm\u7684gpu\u7248\u672c\u7f16\u8bd1\u597d\u4e86\u3002\u867d\u7136\u8fd9\u662f\u5728\u665a\u4e0a\u5341\u70b945\u9a6c\u4e0a\u7761\u89c9\u7684\u65f6\u5019\u5b8c\u6210\u7684\u201c\u5c0f\u4e8b\u201d\u3002\u54ce\uff0c\u81ea\u5df1\u6c38\u8fdc\u4e0d\u6ee1\u8db3\u7684\u5fc3\u3002 2020.4.9 \u8001\u5988\u751f\u65e5\u5feb\u4e50 \u4eca\u5929\u8001\u5988\u505a\u4e86\u4e00\u5927\u684c\u5b50\u83dc \u8bf7\u8205\u8205\u8205\u5988\u8fc7\u6765\u4e00\u8d77\u5403\u665a\u9910 2020.4.10 \u5c1d\u8bd5keras+GridSearch\u8c03\u53c2\uff0c\u53ef\u771f\u7684\u662f\u8017\u65f6\u95f4\u3002\u53d1\u73b0\u6df1\u5ea6\u5b66\u4e60\u8c03\u53c2\u771f\u7684\u662f\u6280\u672f\u6d3b\u3002\u867d\u7136\u6211\u53ea\u7528\u7684\u7b80\u5355\u7684\u611f\u77e5\u5c42\u3002\u662f\u4e0d\u662f\u8fd9\u4e2a\u539f\u56e0\uff1f\u4e0d\u597d\u8bf4 2020.4.11 1) Mark\u4e00\u4e0b\uff0c\u60f3\u5b66\rvue.js+\rlayuiPC\u7aefUI\u6846\u67b6. 2) \u5988\u5988\u53d1\u73b0\u4e86\u6211\u8fd8\u6ca1\u6709\u957f\u5927\u7684\u4e8b\u5b9e:( \u201cwuli fushen \u83ab\u5229\u65f6\u5019\u53ef\u4ee5\u957f\u5927\u54df\u201d\u6765\u81ea\u5988\u5988\u7684\u65e0\u5948\u3002 2020.4.12 \u5929\u7a7a\u7070\u7684\u50cf\u54ed\u8fc7\u3002 2020.4.13 \u4e3a\u4ec0\u4e48\u8fd9\u4e48\u56f0\u3002 2020.4.14 \u7d20\u5f71\u3002 2020.4.15 Cloudreve + Onedrive\u7f51\u76d8\u5b58\u50a8+Aria2\uff0c\u8fd8\u662f\u5f88\u4e0d\u9519\u7684\u3002\u5c31\u662f\u914d\u7f6eOneindex\u6ca1\u6210\u529f\u3002 2020.4.16 1) \u6211\u8fd9\u4e2a\u6298\u817e\u7684\u5fc3\u5450\u3002\u3002\u30022) \u8fd9\u4e24\u5929\u6298\u817eonedrive \u7684 web index\u6846\u67b6\u4e0a\u763e\u3002\u6700\u540eolaindex\u642d\u5efa\u6210\u529f\uff0c\u4f46\u662f\u56fe\u5e8a\u4e0a\u4f20\u548c\u9875\u9762\u5237\u65b0\u4ecd\u6709\u95ee\u9898\u3002oneindex\u538b\u6839\u6ca1\u6210\u529f\u3002\u6563\u4e86\u6563\u4e86 2020.4.17 \u6240\u6709\u7684\u4e8b\u60c5\u6700\u7ec8\u90fd\u662f\u5bf9\u7684\u3002\u5982\u679c\u89c9\u5f97\u4e0d\u6b63\u786e\uff0c\u90a3\u5c31\u662f\u56e0\u4e3a\u8fd8\u6ca1\u6709\u5230\u6700\u540e\u3002 2020.4.18 \u597d\u50cf\u505a\u4e86\u4e00\u4e2a\u5f88\u4e45\u7684\u68a6 2020.4.19 1) \u4f60\u8981\u5b66\u4f1a\u4ee5\u81ea\u5df1\u7684\u65b9\u5f0f\u6210\u957f\uff0c\u53bb\u9762\u5bf9\u8fd9\u53d8\u5316\u4e07\u5343\u7684\u4e16\u754c\u30022) \u5f97\u5230\u535a\u58eb\u5b66\u4f4d\u4e0d\u662f\u7ec8\u70b9\uff0c\u4e0d\u4ee3\u8868\u4f60\u4ee5\u540e\u80fd\u6bd4\u522b\u4eba\u6210\u529f\uff0c\u4f46\u535a\u58eb\u5b66\u4f4d\u80fd\u4ee3\u8868\u7684\u662f\uff0c\u53ea\u8981\u4f60\u613f\u610f\uff0c\u4f60\u53ef\u4ee5\u505a\u597d\u8fd9\u4e2a\u4e16\u754c\u4e0a\u51e0\u4e4e\u6240\u6709\u7684\u3001\u6709\u6280\u672f\u542b\u91cf\u7684\u4e8b\u60c5\u3002 - \u65f6\u95f4\u89c4\u5212\u5c40 2020.4.20 \u4e3a\u4ec0\u4e48\u6bcf\u6b21\u5ba1\u7a3f\u610f\u89c1\u8fd4\u56de\u4e86\uff0c\u6211\u8981\u5148\u81ea\u5df1\u5acc\u5f03\u4e00\u756a\u3002\u603b\u662f\u4e00\u79cd\u6ca1\u6709\u5e0c\u671b\u7684\u611f\u89c9\u3002 2020.4.21 \u5404\u4e2a\u51fb\u7834\uff01 2020.4.22 \u8fd9\u6bb5\u65f6\u95f4\u5bb6\u91cc\u5174\u8d77\u4e86\u9ebb\u5c06\u98ce\u6ce2\u3002\u7238\u5988\u3001\u6211\u70ed\u8877\u4e0eQQ\u5927\u4f17\u9ebb\u5c06~\u5927\u5bb6\u5728\u6bd4\u8c01\u8d62\u5f97\u6b22\u4e50\u8c46\u591a\u3002\u8fd9\u4e0d\uff0c\u6211\u7238\u5927\u6218\u53c8\u5f00\u59cb\u4e86\u3002 2020.4.23 \u8f6c\u89d2\u9047\u5230\u7231\u3002\u7f57\u5fd7\u7965\u7684\u74dc\u5403\u7684\u6211\u6015\u4e86\u3002\u71ac\u591c\u5f04\u51fa\u9ed1\u773c\u5708\uff0c\u6015\u51fa\u95e8\u88ab\u9a82\u6e23\u7537\u3002 2020.4.24 1) The \u201ccut-and-paste\u201d approach; 2) Colab Notebook\u5f88\u597d\u7528\uff01 3) NLP_beginner: FudanNLP/nlp-beginner, nlp-beginner-finish 2020.4.25 \u8fd9\u4e00\u5929\u53c8\u88ab\u7c97\u5fc3\u7684\u4f5c\u8005\u4e22\u5931\u4e86\u3002 2020.4.26 \u6d17\u5934\u53d1\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u60f3\u4ec0\u4e48\u5462 2020.4.27 1) JWPlayer\u89c6\u9891\u64ad\u653e\u63d2\u4ef6\uff0c\u53ef\u60dc\u6ca1\u6709\u653e\u89c6\u9891\u7684\u201c\u89c6\u9891\u5e8a\u201d\uff0c\u653e\u5728\u670d\u52a1\u5668\u4e0a\u5e26\u5bbd\u4e0d\u591f\u53c8\u5f88\u5361\u30022) Love means many things. 2020.4.28 \u6211\u53c8\u6362\u56deHexo\u5566~ \u76f8\u4fe1\u6211 hexo\u4fee\u6539\u8d77\u6765\u6bd4php\u8fd9\u6b3e\u6700\u7f8e\u7684\u8bed\u8a00\u96be\u5ea6\u5c0f\u5f88\u591a\u5566\u3002\u6bd5\u7adf\u4f60\u8fd8\u662f\u61c2\u4e00\u4e22\u4e22\u524d\u7aef\u3002 2020.4.29 \u4eca\u5929\u597d\u70ed\u554a\u3002 2020.4.30 4\u6708\u7684\u6700\u540e\u4e00\u5929\u3002\u62d6\u5ef6\u4e86\u597d\u51e0\u5929\u7684\u5927\u4fee\u521d\u7a3f\u63d0\u4ea4\u7ed9\u8001\u5e08\uff0c\u7b49\u5f85\u660e\u5929\u7684\u8ba8\u8bba\u3002\u65e9\u4e0a\u6536\u5230\u4e00\u4e2a\u597d\u6d88\u606f\uff0c\u6ca1\u60f3\u5230\u4e2d\u5348\u5b66\u6821\u5c31\u53d8\u5366\u4e86\u3002\u6211\u53d1\u73b0\u554a\uff0c\u8981\u4e0d\u5c31\u4e0d\u8981\u7ed9\u4e88\u53ef\u80fd\u6027\uff0c\u4e0d\u7136\u770b\u5230\u4e86\u53ef\u80fd\u6027\u5374\u4e0d\u53bb\u5151\u73b0\uff0c\u4f1a\u4f7f\u4eba\u4ea7\u751f\u4e0d\u516c\u5e73\u3002  ",
        "description": "",
        "id": 72,
        "section": "posts",
        "tags": [
            "\u5931\u843d",
            "ROG\u51b0\u5203",
            "\u6302\u6e05\u660e",
            "\u62ef\u6551\u8005Y9000p",
            "\u914d\u7f6e\u7535\u8111",
            "\u751f\u65e5",
            "\u8c03\u53c2",
            "\u5988\u5988\u7684\u65e0\u5948",
            "oneindex",
            "\u535a\u58eb\u5b66\u4f4d",
            "\u5ba1\u7a3f\u610f\u89c1\u8fd4\u56de",
            "\u62d2\u7a3f\u91cd\u6295",
            "OneDrive",
            "\u7f57\u5fd7\u7965",
            "\u6362\u56dehexo"
        ],
        "title": "2020-4",
        "uri": "/posts/journals/377/"
    },
    {
        "content": " \rfmm \u662f\u5728github\u4e0a\u627e\u5230\u7684\u6bd4\u8f83\u597d\u7528\u7684Map Matching\u8def\u7f51\u5339\u914d\u5de5\u5177\u3002\n \u76ee\u5f55\n[TOC]\n\u73af\u5883\u642d\u5efa (Installing)  \u5efa\u8bae\u5728Ubuntu\u7cfb\u7edf\u4e0b\u642d\u5efa\uff08\u7b14\u8005\u5c1d\u8bd5Window 10 wsl2, cwing\u548cUbuntu 18.04\u5747\u4e3a\u6210\u529f\uff0c\u6700\u7ec8\u5728Ubuntu16.04\u4e0b\u7f16\u8bd1\u6210\u529f\uff09,docker ubuntu 16.04\u5b89\u88c5\u6210\u529f(2020.5.20) \u4e3b\u8981\u53c2\u8003\rFMM-wiki \u9879\u76ee\u6253\u5305: \u94fe\u63a51, \u63d0\u53d6\u7801: 9ksw;  Install requirements  \u6dfb\u52a0ppa\uff0c\u66f4\u65b0gdal\u76f8\u5173\u7684\u5e93\nsudo add-apt-repository ppa:ubuntugis/ppa &amp;&amp; sudo apt update  P.S.: ppa\u5305\u6bd4\u8f83\u96be\u4e0b\u8f7d\uff0c\u5efa\u8bae\u7ec8\u7aef\u6302\u4ee3\u7406: export http_proxy=http://192.168.0.11:2802\n \u5b89\u88c5\u5e93\nsudo apt-get install libboost-dev libboost-serialization-dev gdal-bin libgdal-dev make cmake  Install C++ program  \u7f16\u8bd1  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42  # Under the project folder mkdir build cd build cmake .. make sudo make install # cmake output: -- The C compiler identification is GNU 5.4.0 -- The CXX compiler identification is GNU 5.4.0 -- Check for working C compiler: /usr/bin/cc -- Check for working C compiler: /usr/bin/cc -- works -- Detecting C compiler ABI info -- Detecting C compiler ABI info - done -- Detecting C compile features -- Detecting C compile features - done -- Check for working CXX compiler: /usr/bin/c++ -- Check for working CXX compiler: /usr/bin/c++ -- works -- Detecting CXX compiler ABI info -- Detecting CXX compiler ABI info - done -- Detecting CXX compile features -- Detecting CXX compile features - done -- Found GDAL: /usr/lib/libgdal.so (Required is at least version &#34;2.2&#34;) -- GDAL headers found at /usr/include/gdal -- GDAL library found at /usr/lib/libgdal.so -- Boost version: 1.58.0 -- Found the following Boost libraries: -- serialization -- Boost headers found at /usr/include -- Boost library found at /usr/lib/x86_64-linux-gnu/libboost_serialization.so -- Try OpenMP C flag = [-fopenmp] -- Performing Test OpenMP_FLAG_DETECTED -- Performing Test OpenMP_FLAG_DETECTED - Success -- Try OpenMP CXX flag = [-fopenmp] -- Performing Test OpenMP_FLAG_DETECTED -- Performing Test OpenMP_FLAG_DETECTED - Success -- Found OpenMP: -fopenmp -- OpenMP_CXX_LIBRARIES found at -- Configuring done -- Generating done -- Build files have been written to: /home/only/Projects/fmm-master/build    Verfication of installation\nfmm:  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  ------------ Fast map matching (FMM) ------------ ------------ Author: Can Yang ------------ ------------ Version: 2020.01.31 ------------ ------------ Applicaton: fmm ------------ A configuration file is given in the example folder Run `fmm config.xml` or with arguments fmm argument lists: --ubodt (required) &lt;string&gt;: Ubodt file name --network (required) &lt;string&gt;: Network file name --gps (required) &lt;string&gt;: GPS file name --output (required) &lt;string&gt;: Output file name --network_id (optional) &lt;string&gt;: Network id name (id) --source (optional) &lt;string&gt;: Network source name (source) --target (optional) &lt;string&gt;: Network target name (target) --gps_id (optional) &lt;string&gt;: GPS id name (id) --gps_geom (optional) &lt;string&gt;: GPS geometry name (geom) --candidates (optional) &lt;int&gt;: number of candidates (8) --radius (optional) &lt;double&gt;: search radius (300) --error (optional) &lt;double&gt;: GPS error (50) --pf (optional) &lt;double&gt;: penalty factor (0) --log_level (optional) &lt;int&gt;: log level (2) --output_fields (optional) &lt;string&gt;: Output fields opath,cpath,tpath,ogeom,mgeom,pgeom, offset,error,spdist,tp,ep,all For xml configuration, check example folder ------------ Program finished ------------   Install python extension \u5728Python2\u4f7f\u7528\n Swig installation  sudo apt-get install build-essential libpcre3-dev libpcre3 Build swig    1 2 3 4 5 6 7  tar -xf swig-4.0.1.tar.gz cd swig-4.0.1/ ./configure sudo make sudo make install swig -version    python-dev: sudo apt-get install python-dev Installation of fmm Python API\n\u7f16\u8bd1:  1 2 3 4 5  cd python mkdir build cd build cmake .. make   Add the build folder to the environment variable PYTHONPATH:\n1 2  echo &#39;export PYTHONPATH=${PYTHONPATH}:PATH_TO_BUILD_FOLDER&#39; &gt;&gt; ~/.bashrc source ~/.bashrc   PATH_TO_BUILD_FOLDER: /workspace/fmm-master/python/build\n \u9a8c\u8bc1  1 2  cd .. python2 fmm_test.py   \u4f7f\u7528 \u6837\u4f8b\u6587\u4ef6\u6253\u5305:\r\u94fe\u63a51\n\u8def\u7f51\u6570\u636e\u51c6\u5907  from osm-based osmnx  Download by place name\n1 2 3 4  import osmnx as ox place =&#34;Stockholm, Sweden&#34; G = ox.graph_from_place(place, network_type=&#39;drive&#39;,which_result=2) ox.save_graph_shapefile(G, filename=&#39;stockholm&#39;)   Download by a boundary polygon in geojson\n1 2 3 4 5 6 7 8  import osmnx as ox from shapely.geometry import shape json_file = open(&#34;stockholm_boundary.geojson&#34;) import json data = json.load(json_file) boundary_polygon = shape(data[&#34;features&#34;][0][&#39;geometry&#39;]) G = ox.graph_from_polygon(boundary_polygon, network_type=&#39;drive&#39;) ox.save_graph_shapefile(G, filename=&#39;stockholm&#39;)    \u81ea\u5b9a\u4e49\u6570\u636e\n\u5047\u8bbe\u624b\u5934\u4e0a\u6709\u7684\u8def\u7f51\u6570\u636e\u4ec5\u6709id\u548cgeometry\u5b57\u6bb5\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u6784\u5efa\u8def\u7f51\u62d3\u6251\u7ed3\u6784\uff0c\u4f7f\u7528\u7684\u662farcmap+postgresql\uff0c\u53c2\u8003\r\u8fd9\u91cc  \u6253\u65ad\u8def\u7f51\u76f8\u4ea4\u7ebf postgresql+postgis\u5b89\u88c5 \u5bfc\u5165shp\u6570\u636e\u81f3postgis db(\u591a\u79cd\u65b9\u5f0f: geopandas, psql bash command, PostGIS Shapefile and DBF Loader Exporter)  geopandas \u53c2\u8003\u535a\u6587Pandas/Geopandas Tricks\u4e2d\u7684Geopandas I/O   \u751f\u6210\u8def\u7f51\u62d3\u6251\u7ed3\u6784    1 2 3 4 5 6 7 8  ALTERTABLEpublic.bjrdv2proADDCOLUMNsourceinteger;ALTERTABLEpublic.bjrdv2proADDCOLUMNtargetinteger;ALTERTABLEpublic.bjrdv2proADDCOLUMNlengthdoubleprecision;SELECTpgr_createTopology(&#39;public.bjrdv2pro&#39;,0.00001,&#39;geom&#39;,&#39;gid&#39;);CREATEINDEXsource_idxONbjrdv2pro(&#34;source&#34;);CREATEINDEXtarget_idxONbjrdv2pro(&#34;target&#34;);updatebjrdv2prosetlength=st_length(geom);select*frombjrdv2pro;   \u5efa\u7acb\u53cc\u5411\u62d3\u6251(Complement bidirectional edges)\nDuplicate bidirectional edges, i.e., add a reverse edge  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  table_name = &#39;bjrdv2pro&#39; geom_col = &#39;geom&#39; sql_str = &#34;select * from {}&#34;.format(table_name) bjrd_gdf = gpd.read_postgis(sql=sql_str, con=engine, geom_col=geom_col) def reverse_coords(line_string): coords = list(line_string.coords) coords.reverse() return LineString(coords) _bjrd_gdf = bjrd_gdf.copy() _bjrd_gdf[&#39;geom&#39;] = _bjrd_gdf.geom.apply(lambda x: reverse_coords(x)) _bjrd_gdf[&#39;source&#39;] = bjrd_gdf.target _bjrd_gdf[&#39;target&#39;] = bjrd_gdf.source concat_gdf = pd.concat([bjrd_gdf, _bjrd_gdf], axis=0).reset_index(drop=True).set_geometry(&#39;geom&#39;) concat_gdf[&#39;gid&#39;] = concat_gdf.index concat_gdf.to_file(&#39;bjrdv2probidrt.shp&#39;)   \u914d\u7f6e&amp;\u8fd0\u884c \u914d\u7f6e\u53c2\u8003\uff1a\r\u94fe\u63a5\n ubodt\u914d\u7f6e(Preprocessing of fmm)  1  ubodt_gen --network bjrdv2probidrt.shp --id gid --source source --target target --output ubodt.txt --delta 4.0   \u751f\u6210ubodt.txt \u914d\u7f6e\u6587\u4ef6\uff08\u7c7b\u4f3c\u662f\u6784\u5efa\u8def\u7f51cache\u4e4b\u7c7b\u7684\uff09\n fmm\u914d\u7f6e\u6587\u4ef6\nfmm_config-bj.xml:  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  &lt;fmm_config&gt; &lt;input&gt; &lt;ubodt&gt; &lt;file&gt;./bj_example/ubodt.txt&lt;/file&gt; &lt;/ubodt&gt; &lt;network&gt; &lt;file&gt;./bj_example/bjrdv2probidrt.shp&lt;/file&gt; &lt;id&gt;gid&lt;/id&gt; &lt;source&gt;source&lt;/source&gt; &lt;target&gt;target&lt;/target&gt; &lt;/network&gt; &lt;/input&gt; &lt;parameters&gt; &lt;k&gt;50&lt;/k&gt; &lt;r&gt;0.01&lt;/r&gt; &lt;pf&gt;0&lt;/pf&gt; &lt;gps_error&gt;0.005&lt;/gps_error&gt; &lt;/parameters&gt; &lt;/fmm_config&gt;   Note: \u6ce8\u610f\u5355\u4f4d-\u5982\u679c\u662f\u7ecf\u7eac\u5ea6\uff0c\u5355\u4f4d\u5c31\u662f\u5ea6\uff0c0.001\u7ea6\u7b49\u4e8e100m; else\u5355\u4f4d\u662fm\n built model  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26  from __future__ import print_function import sys from pathlib import Path import geopandas as gpd import pandas as pd import os from shapely.wkt import dumps, loads sys.path.append(&#39;/home/only/Projects/fmm-master/python/build&#39;) import warnings warnings.filterwarnings(&#39;ignore&#39;) import fmm root_dp = Path(r&#39;/home/only/Projects/fmm-master&#39;) example_dp = Path(root_dp, &#39;example&#39;) py_test_dp = Path(root_dp, &#39;python&#39;) bj_example_dp = Path(py_test_dp, &#39;bj_example&#39;) fmm_config_fp = Path(bj_example_dp, &#39;fmm_config-bj.xml&#39;) bj_network_fp = Path(bj_example_dp, &#39;bjrdv2probidrt.shp&#39;) traj_tst_fp = Path(bj_example_dp, &#39;TrajPntsTst.shp&#39;) multi_traj_tst_fp = Path(bj_example_dp, &#39;1140.geojson&#39;) traj_tst_result_fp = Path(bj_example_dp, &#39;traj_tst_result.geojson&#39;) # fmm model model = fmm.MapMatcher(str(fmm_config_fp))    run and save result  1 2 3 4 5 6 7 8 9 10 11 12 13 14  traj_mm_df = multi_traj_tst_gdf[[&#39;traj_id&#39;, &#39;geometry&#39;]] def _mm(g): try: mrst = model.match_wkt(str(g)).mgeom return loads(mrst) except Exception as ex: return None traj_mm_df[&#39;geometry&#39;] = traj_mm_df.geometry.apply(lambda g: _mm(g)) # (\u53ef\u9009\u64cd\u4f5c)\u4e22\u6389\u5339\u914d\u5ea6\u975e\u5e38\u5dee\u7684\u8def\u5f84 traj_mm_df.dropna(inplace=True) traj_mm_df.set_geometry(&#39;geometry&#39;).to_file(traj_tst_result_fp, driver=&#39;GeoJSON&#39;)   ",
        "description": "",
        "id": 73,
        "section": "posts",
        "tags": [
            "Map Matching",
            "\u8def\u7f51\u5339\u914d"
        ],
        "title": "fmm-Map Matching\u8def\u7f51\u5339\u914d\u5de5\u5177\u73af\u5883\u642d\u5efa\u4e0e\u4f7f\u7528",
        "uri": "/posts/notes/148/"
    },
    {
        "content": " \u5e38\u7528\u52a0\u901f\u955c\u50cf\uff1bpython\u5e38\u7528\u865a\u62df\u73af\u5883\u7ba1\u7406;Jupyter Notebook\u5e38\u7528\u914d\u7f6e\n pip;conda;ubuntu\u955c\u50cf\u52a0\u901f \u53c2\u8003\uff1a\u5317\u4eac\u5916\u56fd\u8bed\u5927\u5b66\u5f00\u6e90\u955c\u50cf\u7ad9-https://mirrors.bfsu.edu.cn/#\npip 1  pip config set global.index-url https://mirrors.bfsu.edu.cn/pypi/web/simple   conda \u901a\u8fc7\u4fee\u6539\u7528\u6237\u76ee\u5f55\u4e0b\u7684 .condarc \u6587\u4ef6\n1 2 3 4 5 6 7 8 9 10 11 12 13 14  channels:- defaultsshow_channel_urls:truedefault_channels:- https://mirrors.bfsu.edu.cn/anaconda/pkgs/main- https://mirrors.bfsu.edu.cn/anaconda/pkgs/r- https://mirrors.bfsu.edu.cn/anaconda/pkgs/msys2custom_channels:conda-forge:https://mirrors.bfsu.edu.cn/anaconda/cloudmsys2:https://mirrors.bfsu.edu.cn/anaconda/cloudbioconda:https://mirrors.bfsu.edu.cn/anaconda/cloudmenpo:https://mirrors.bfsu.edu.cn/anaconda/cloudpytorch:https://mirrors.bfsu.edu.cn/anaconda/cloudsimpleitk:https://mirrors.bfsu.edu.cn/anaconda/cloud  ubuntu \u6839\u636e\u4e0d\u540c\u7248\u672c\u8bbe\u5b9a\uff1ahttps://mirrors.bfsu.edu.cn/help/ubuntu/\nUbuntu \u7684\u8f6f\u4ef6\u6e90\u914d\u7f6e\u6587\u4ef6\u662f /etc/apt/sources.list\uff0c\u4e0b\u9762\u662f20.04LTS\u7248\u672c\n1 2 3 4 5 6 7 8 9 10 11 12 13  # \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca deb https://mirrors.bfsu.edu.cn/ubuntu/ focal main restricted universe multiverse # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal main restricted universe multiverse deb https://mirrors.bfsu.edu.cn/ubuntu/ focal-updates main restricted universe multiverse # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-updates main restricted universe multiverse deb https://mirrors.bfsu.edu.cn/ubuntu/ focal-backports main restricted universe multiverse # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-backports main restricted universe multiverse deb https://mirrors.bfsu.edu.cn/ubuntu/ focal-security main restricted universe multiverse # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-security main restricted universe multiverse # \u9884\u53d1\u5e03\u8f6f\u4ef6\u6e90\uff0c\u4e0d\u5efa\u8bae\u542f\u7528 # deb https://mirrors.bfsu.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse # deb-src https://mirrors.bfsu.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse   \u865a\u62df\u73af\u5883 \u5efa\u8bae\u7ed3\u5408\u4f7f\u7528pyenv + virtualenvwrapper\uff0c\u7ba1\u7406python\u7248\u672c\u53ca\u865a\u62df\u73af\u5883\u3002\u5176\u6b21\u53ef\u4f7f\u7528conda\nvirtualenvwrapper virtualenv \u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u7684\u72ec\u7acb Python \u73af\u5883\uff0c\u4f46\u662f virtualenv \u521b\u5efa\u7684\u73af\u5883\u76f8\u5bf9\u5206\u6563\u4e0d\u4fbf\u4e8e\u7ba1\u7406,Virtualenvwrapper \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u547d\u4ee4\u7ba1\u7406\u865a\u62df\u73af\u5883\n\u53c2\u8003\uff1a\r1; 2\nVirtualenvwrapper \u5b89\u88c5 1 2  pip install virtualenv virtualenvwrapper pip install virtualenvwrapper-win # windows\u5e73\u53f0\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4   \u5b89\u88c5\u4e4b\u540e\u8fd8\u9700\u8981\u914d\u7f6e\uff0c \u5728.zshrc\u4e2d\u6dfb\u52a0\u4e0b\u5217\u5185\u5bb9:\n1 2 3  # \u8bbe\u7f6e\u865a\u62df\u73af\u5883\u7684\u5de5\u4f5c\u76ee\u5f55\uff0c \u521b\u5efa\u7684\u865a\u62df\u73af\u5883\u90fd\u4fdd\u5b58\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b export WORKON_HOME=$HOME/.virtualenvs source /usr/local/bin/virtualenvwrapper.sh    WORKON_HOME:\u5b58\u653e\u76f8\u5173\u5de5\u4f5c\u6587\u4ef6\u53ca\u865a\u62df\u73af\u5883\u7684\u76ee\u5f55 virtualenvwrapper.sh \u6587\u4ef6\u4f4d\u7f6e\u6839\u636e\u5b9e\u9645\u76ee\u5f55\u586b\u5199\uff0c\u53ef\u4ee5\u4f7f\u7528find / -name virtualenvwrapper.sh\u8fdb\u884c\u67e5\u627e \u914d\u7f6e\u597d\u540e\u6267\u884csource ~/.zshrc  \u521b\u5efa\u73af\u5883  \u5feb\u901f\u521b\u5efa\uff1amkvirtualenv [envname] \u6307\u5b9a\u7248\u672c\uff1amkvirtualenv ttenv --python=python3.5  --python\u53c2\u6570\u53ef\u8bbe\u5b9a\u5177\u4f53\u8def\u5f84\uff0c\u5982\uff1amkvirtualenv daily --python=C:\\Users\\Only\\.pyenv\\pyenv-win\\versions\\3.6.8\\python3.6.exe    \u73af\u5883\u7ba1\u7406 \u5217\u51fa\u6240\u6709\u73af\u5883\uff1aworkon\n\u5220\u9664\u73af\u5883\uff1armvirtualenv [envname]\n\u5207\u6362\u4e0e\u9000\u51fa\u73af\u5883 \u5207\u6362\u865a\u62df\u73af\u5883\uff1aworkon envname\n\u9000\u51fa\u865a\u62df\u73af\u5883\uff1adeactivate\npyenv-python\u7248\u672c\u7ba1\u7406 \u5b89\u88c5 \u53c2\u8003\uff1ahttps://zhuanlan.zhihu.com/p/30859003\npyenv-win: https://github.com/pyenv-win/pyenv-win\n\u5e38\u7528\u547d\u4ee4   \u67e5\u770b\u6240\u6709\u5df2\u5b89\u88c5Python\u7248\u672c\n1  pyenv version     \u67e5\u8be2\u6240\u6709\u53ef\u5b89\u88c5Python\u7248\u672c\n1 2 3  pyenv install -l # \u67e5\u8be23.6\u7248\u672c python install -l | grep 3.6     \u5b89\u88c5\u6307\u5b9a\u7248\u672c\n1 2 3 4  pyenv install 3.6.12 # \u4f7f\u7528\u955c\u50cf\u52a0\u901f # \u6ce8\u610f\uff1av \u4e3a Python \u7248\u672c\u53f7\uff0c\u8bf7\u6839\u636e\u9700\u8981\u81ea\u884c\u66f4\u6539\u3002 v=3.6.12;wget https://npm.taobao.org/mirrors/python/$v/Python-$v.tar.xz -P $(pyenv root)/cache/;pyenv install $v     \u5378\u8f7d\n1  pyenv uninstall 3.6.12     \u8bbe\u7f6ePython\u7248\u672c 1 2 3  pyenv shell 2.7.14 # \u8bbe\u7f6e\u9762\u5411 shell \u7684 Python \u7248\u672c\uff0c\u901a\u8fc7\u8bbe\u7f6e\u5f53\u524d shell \u7684 PYENV_VERSION \u73af\u5883\u53d8\u91cf\u7684\u65b9\u5f0f\u3002 pyenv local 2.7.14 # \u8bbe\u7f6e Python \u672c\u5730\u7248\u672c\uff0c\u901a\u8fc7\u5c06\u7248\u672c\u53f7\u5199\u5165\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 .python-version \u6587\u4ef6\u7684\u65b9\u5f0f\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u8bbe\u7f6e\u7684 Python \u7248\u672c\u4f18\u5148\u7ea7\u8f83 global \u9ad8\u3002 pyenv global 2.7.14 # \u8bbe\u7f6e\u5168\u5c40\u7684 Python \u7248\u672c\uff0c\u901a\u8fc7\u5c06\u7248\u672c\u53f7\u5199\u5165 ~/.pyenv/version \u6587\u4ef6\u7684\u65b9\u5f0f\u3002     \u6ce8\u610f\uff1a shell &gt; local &gt; global\u3002pyenv \u4f1a\u4ece\u5f53\u524d\u76ee\u5f55\u5f00\u59cb\u5411\u4e0a\u9010\u7ea7\u67e5\u627e .python-version \u6587\u4ef6\uff0c\u76f4\u5230\u6839\u76ee\u5f55\u4e3a\u6b62\u3002\u82e5\u627e\u4e0d\u5230\uff0c\u5c31\u7528 global \u7248\u672c\u3002Ps: \u56e0\u4e3a\u7cfb\u7edf\u672c\u8eab\u5e38\u5e38\u4f1a\u4f9d\u8d56\u81ea\u5e26\u7684 python \u7248\u672c\uff0c\u6240\u4ee5\u5c3d\u91cf\u4e0d\u8981\u4fee\u6539 global\u3002\n  \u53d6\u6d88 shell \u6216 local python \u7248\u672c\n1 2  pyenv shell --unset pyenv local --unset     pyenv-virtualenvwrapper   \u5b89\u88c5\n1  git clone https://github.com/pyenv/pyenv-virtualenvwrapper.git $(pyenv root)/plugins/pyenv-virtualenvwrapper     \u6fc0\u6d3b\n1  pyenv virtualenvwrapper   \u6fc0\u6d3b\u540e\u9700\u91cd\u542f\u5f53\u524dshell\n  \u4f7f\u7528\n1 2 3 4 5 6  # 1. \u8bbe\u7f6e\u5f53\u524d shell\u7684python\u7248\u672c pyenv shell 3.6.12 # 2. \u7b2c\u4e00\u6b21\u4f7f\u7528\u65b0\u7684 Python \u73af\u5883\u9700\u8981\u5b89\u88c5\u6b64\u5305\uff0c\u5426\u5219\u521b\u5efa\u7684\u865a\u62df\u73af\u5883 Python \u7248\u672c\u4ecd\u4e3a\u7cfb\u7edf\u9ed8\u8ba4 pip install virtualenvwrapper # 3. \u521b\u5efa\u8be5\u7248\u672c\u7684\u865a\u62df\u73af\u5883 mkvirtualenv [env_name] -p python3.6     conda \u5efa\u8bae\u4f18\u5148\u4f7f\u7528virtualenvwrapper\u3002conda\u592a\u5e9e\u5927\u4e86\uff0c\u5bfc\u5165pycharm\u5c24\u5176\u660e\u663e\u3002pycharm indexing\u8fc7\u7a0b\u8ba9\u4eba\u5954\u6e83\u3002\n\u521b\u5efa\u73af\u5883 1 2 3 4 5  conda create --name your_env_name # \u521b\u5efa\u5236\u5b9apython\u7248\u672c\u7684\u73af\u5883 conda create --name your_env_name python=2.7 conda create --name your_env_name python=3.7   \u5217\u4e3e\u5f53\u524d\u6240\u6709\u73af\u5883 1 2 3  conda env list # \u6216 conda info --envs   \u8fdb\u5165\u3001\u9000\u51fa\u67d0\u4e2a\u73af\u5883 1 2 3  activate your_env_name [conda] deactivate   \u5728\u5f53\u524d\u73af\u5883\u4f7f\u7528pip \u4e00\u5b9a\u6ce8\u610f\u8981\u5148\u5b89\u88c5pip\uff0c\u4e0d\u7136pip\u5b9a\u4f4d\u5230\u7684\u662froot\u73af\u5883\u7684pip\nconda install pip pip -V \u5907\u4efd\u548c\u6062\u590d \u53c2\u8003: \u94fe\u63a5\nconda\u63d0\u4f9b\u4e86\u5c06\u865a\u62df\u73af\u5883\u5bfc\u51fa\u4e3ayaml\u6587\u4ef6\u7684\u529f\u80fd\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u4fdd\u7559\u597d\u4e0d\u5bb9\u6613\u521b\u5efa\u597d\u7684\u865a\u62df\u73af\u5883\u4e2d\u7684\u914d\u7f6e\u4fe1\u606f\n \u5907\u4efd\uff1a  1  (python_spatial) C:\\Users\\hp&gt;conda env export &gt; C:\\Users\\hp\\Desktop\\python_spatial.yml    \u6062\u590d\uff1a  1  conda env create -n new_python_spatial -f C:\\Users\\hp\\Desktop\\python_spatial.yml   \u79fb\u9664\u67d0\u4e2a\u73af\u5883 1  conda remove --name your_env_name --all   conda\u5b89\u88c5\u52a0\u901f conda install mamba -n base -c conda-forge \u4f7f\u7528mamba\u52a0\u901f\u5b89\u88c5\uff1a\nmamba install pip jupyter notebook Installing pip install notebook\n\u914d\u7f6e\u542f\u52a8\u6587\u4ef6  \u65b0\u5efa\u914d\u7f6e\u6587\u4ef6root_jupyter_config.py \u914d\u7f6eroot_jupyter_config.py  1 2 3 4 5 6 7  c.NotebookApp.ip=&#39;*&#39; # \u6307\u5b9a \u53ef\u8bbf\u95ee IP \u6216\u8005 \u4f7f\u7528 * \u5219\u53ef\u4ee5\u7528\u4efb\u610f IP c.NotebookApp.open_browser = False # \u5173\u95ed\u81ea\u52a8\u6253\u5f00\u6d4f\u89c8\u5668 c.NotebookApp.port = 10086 # \u7aef\u53e3\u968f\u610f\u6307\u5b9a\uff0c\u7136\u540e\u5728\u963f\u91cc\u4e91\u5f00\u5bf9\u5e94\u7aef\u53e3\u7684\u9632\u706b\u5899\u5373\u53ef # \u5bc6\u7801\u662f 123345678 c.NotebookApp.password = u&#39;sha1:a38e2b0e6384:a57ca7170591f36911041ae92cdd7418ff76979a&#39; c.NotebookApp.allow_remote_access = True c.NotebookApp.notebook_dir = &#39;/jupyter/notebooks&#39; #\u6307\u5b9a\u9ed8\u8ba4\u6253\u5f00\u7684\u6587\u4ef6\u5939    \u542f\u52a8\u65f6\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\njupyter notebook --config=/jupyter/config/root_jupyter_config.py [--allow-root]  allow-root: \u5728Linux\u4e2d\u5141\u8bb8root\u7528\u6237\u542f\u52a8    kernel\u7ba1\u7406 \u5b89\u88c5ipykernel pip install ipykernel\n\u6ce8\uff1a\u5982\u679c\u6dfb\u52a0\u865a\u62df\u73af\u5883\u4e0b\u7684kernel, ipykernel\u4e5f\u9700\u8981\u5728\u865a\u62df\u73af\u5883\u4e0b\u5b89\u88c5\n\u5728\u865a\u62df\u73af\u5883\u4e2d\uff0c\u5c06\u73af\u5883\u5199\u5165notebook\u7684kernel\u4e2d python -m ipykernel install --user --name [\u73af\u5883\u540d] --display-name &quot;[python \u73af\u5883\u540d]&quot;\n\u67e5\u770b\u6240\u6709kernel \u67e5\u770b\u6240\u6709\u5df2\u7ecf\u5b89\u88c5\u7684jupyter notebook \u7684 kernel\njupyter kernelspec list\n\u5378\u8f7d\u6307\u5b9akernel jupyter kernelspec remove kernel_name\nJupyter notebook extensions\u63d2\u4ef6 \rNbextensions\u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u63d2\u4ef6\uff0c\u96c6\u5408\u4e86\u5f88\u591a\u63d2\u4ef6\u3002\ninstall  \u63a8\u8350conda\u5b89\u88c5:\nconda install -c conda-forge jupyter_contrib_nbextensions Install javascript and css files:\njupyter contrib nbextension install --user \u7136\u540e\u91cd\u65b0\u542f\u52a8Jupyter Notebook\u540e\uff0c\u5c31\u4f1a\u53d1\u73b0\u5df2\u7ecf\u6709Nbextensions\u6807\u7b7e\u4e86\u3002  \u5e38\u7528\u63d2\u4ef6  Hinterland\uff0c\u4ee3\u7801\u81ea\u52a8\u8865\u5168 (2020.3.8 \u4e0d\u63a8\u8350\uff0c\u7528\u4e86\u4e4b\u540e\u6ca1\u6709\u60f3\u8981\u7684\u6548\u679c\uff0c\u800c\u4e14\u4f60\u4f1a\u611f\u89c9\u5f88\u70e6\u4eba) Code prettify\uff1a\u5b83\u80fd\u91cd\u65b0\u8c03\u6574\u4ee3\u7801\u5757\u5185\u5bb9\u7684\u683c\u5f0f\u5e76\u8fdb\u884c\u7f8e\u5316\u3002 Scratchpad\uff1a\u8fd9\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u6682\u5b58\u5355\u5143\uff0c\u8ba9\u4f60\u53ef\u4ee5\u65e0\u9700\u4fee\u6539\u7b14\u8bb0\u672c\u5c31\u80fd\u8fd0\u884c\u4f60\u7684\u4ee3\u7801\u3002\u5f53\u4f60\u60f3\u5b9e\u9a8c\u4f60\u7684\u4ee3\u7801\u4f46\u4e0d\u60f3\u6539\u52a8\u4f60\u7684\u5b9e\u65f6\u7b14\u8bb0\u672c\u65f6\uff0c\u8fd9\u4f1a\u662f\u4e00\u4e2a\u975e\u5e38\u65b9\u4fbf\u7684\u6269\u5c55\u3002 Table of Contents(2)\uff1a\u8fd9\u4e2a\u5f88\u68d2\u7684\u6269\u5c55\u53ef\u4ee5\u6536\u96c6\u4f60\u7684\u7b14\u8bb0\u672c\u4e2d\u7684\u6240\u6709\u6807\u9898\uff0c\u5e76\u5c06\u5b83\u4eec\u663e\u793a\u5728\u4e00\u4e2a\u6d6e\u52a8\u7a97\u53e3\u4e2d\u3002 Codefolding: \u6298\u53e0\u4ee3\u7801 Collapsible headings: \u653e\u4e0b/\u6536\u8d77notebook\u7684\u67d0\u4e9b\u5185\u5bb9  ####\u66f4\u6539\u6837\u5f0f\uff08\u5b57\u4f53\uff0c\u4ee3\u7801\u9ad8\u4eae\uff09\n\u4f7f\u7528\r\u9644\u4ef6\u66ff\u6362C:\\Users\\Only\\.jupyter\\custom\\custom.css\n",
        "description": "",
        "id": 74,
        "section": "posts",
        "tags": [
            "\u52a0\u901f\u955c\u50cf",
            "pyenv",
            "Python",
            "\u865a\u62df\u73af\u5883",
            "\u5305\u7ba1\u7406",
            "virtualenvwrapper",
            "conda",
            "Jupyter notebook"
        ],
        "title": "\u5e38\u7528\u52a0\u901f\u955c\u50cf&Python\u865a\u62df\u73af\u5883/\u5305\u7ba1\u7406&Jupyter Notebook",
        "uri": "/posts/notes/2020-03-08-python%E5%BA%93-%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83_%E5%8C%85%E7%AE%A1%E7%90%86/"
    },
    {
        "content": " seaborn\u662fpython\u91cc\u9762\u505a\u6570\u636e\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60\u5e38\u7528\u7684\u53ef\u89c6\u5316\u5e93\u3002\u5b83\u5bf9matplotlib\u8fdb\u884c\u4e86\u6df1\u5ea6\u5c01\u88c5\uff0c\u4ece\u800c\u53ef\u4ee5\u7528\u975e\u5e38\u7b80\u5355\u7684api\u63a5\u53e3\u7ed8\u5236\u76f8\u5bf9\u590d\u6742\u7684\u56fe\u5f62\uff0c\u63d0\u4f9b\u5bf9\u6570\u636e\u7684\u6df1\u5165\u8ba4\u8bc6\u3002\n VIsual Vocabulary \u5f15\u7528 1 2 3 4 5 6  import pandas as pd import seaborn as sns import matplotlib.pyplot as plt import numpy as np %matplotlib inline   sns.set 1  sns.set(style=&#39;white&#39;,palette=&#39;muted&#39;,color_codes=True)    style\u4e3a\u56fe\u8868\u7684\u80cc\u666f\u4e3b\u9898\uff0c\u67095\u79cd\u4e3b\u9898\u53ef\u4ee5\u9009\u62e9\uff1a\ndarkgrid \u9ed1\u8272\u7f51\u683c\uff08\u9ed8\u8ba4\uff09\nwhitegrid \u767d\u8272\u7f51\u683c\ndark \u9ed1\u8272\u80cc\u666f\nwhite \u767d\u8272\u80cc\u666f\nticks \u56db\u5468\u90fd\u6709\u523b\u5ea6\u7ebf\u7684\u767d\u80cc\u666f palette\u4e3a\u8bbe\u7f6e\u4e3b\u4f53\u989c\u8272\uff0c\u67096\u79cd\u53ef\u4ee5\u9009\u62e9\uff1a\ndeep,muted,pastel,bright,dark,colorblind  matplotlib.pyplot cheatsheets handout \u521b\u5efa\u753b\u5e03\u4e0e\u521b\u5efa\u5b50\u56fe 1 2  fig = plt.figure(figsize=(8,6),dpi=300) #\u8bbe\u7f6e\u753b\u5e03\u5927\u5c0f\u53ca\u5206\u8fa8\u7387 ax = fig.add_subplot(2,1,1) #\u521b\u5efa\u4e00\u4e2a2\u884c1\u5217\u7684\u5b50\u56fe\uff0c\u7ed8\u5236\u7b2c1\u5f20\u5b50\u56fe   matplotlib.pyplot\r\u5143\u7d20\u7ed3\u6784\u56fe\n\u56fe\u50cf\u7684\u5404\u4e2a\u90e8\u4f4d\u540d\u79f0\n\u7ec6\u8282\u5904\u7406 1 2 3 4 5 6 7 8 9 10 11 12 13 14  ax.set_title(&#39;Title&#39;,fontsize=18) # \u8bbe\u7f6e\u6807\u9898 ax.set_xlabel(&#39;xlabel&#39;, fontsize=18,fontfamily = &#39;sans-serif&#39;,fontstyle=&#39;italic&#39;) # x\u8f74label ax.set_ylabel(&#39;ylabel&#39;, fontsize=&#39;x-large&#39;,fontstyle=&#39;oblique&#39;) # y\u8f74label ax.legend() #  ax.set_aspect(&#39;equal&#39;) ax.minorticks_on() ax.set_xlim(0,16) # x\u8f74\u8303\u56f4 ax.grid(which=&#39;minor&#39;, axis=&#39;both&#39;) # \u80cc\u666f\u7f51\u683c ax.xaxis.set_tick_params(rotation=45,labelsize=18,colors=&#39;w&#39;) start, end = ax.get_xlim() ax.xaxis.set_ticks(np.arange(start, end,1)) ax.yaxis.tick_right()   \u4fdd\u5b58\u7ed8\u56fe 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  import matplotlib.pyplot as plt import os eval_root = &#39;/workspace/UrbanFunctionalRegionalization/result/evaluation&#39; #\u5206\u8fa8\u7387 plt.rcParams[&#39;figure.dpi&#39;] = 300 fig, ax = plt.subplots(figsize=(12, 7)) ax = sns.pointplot(x=&#34;threshold&#34;, y=&#34;purity&#34;, data=eval_metrics_df) ax.set_xlabel(&#39;min region size&#39;, fontsize=14,) ax.set_ylabel(&#39;purity&#39;, fontsize=14,) # ax.set_xlim(0,100)  # ax.set_ylim(0,1) fig_fp = os.path.join(eval_root, &#39;purity.jpg&#39;) fig.savefig(fig_fp, dpi=300)   seaborn cheatsheets Categorical plots countplot \u901a\u8fc7countplot\u4f1a\u7ed8\u5236\u51fa\uff0c\u6bcf\u4e2a\u503c\u5728\u6837\u672c\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002\n Show value counts for a single categorical variable  1 2 3  sns.set(style=&#34;darkgrid&#34;) tips = sns.load_dataset(&#34;tips&#34;) ax = sns.countplot(x=&#34;day&#34;, data=tips)    Show value counts for two categorical variables  1 2  ax= sns.countplot(x=&#39;day&#39;, hue=&#39;smoker&#39;, data=tips) # ax= sns.countplot(x=&#39;day&#39;, hue=&#39;smoker&#39;, data=tips) # \u6a2a\u5411\u663e\u793a   barplot barplot\u4e3b\u8981\u7528\u6765\u63cf\u8ff0\u6837\u672c\u7684\u5747\u503c\u548c\u7f6e\u4fe1\u533a\u95f4\uff08\u7f6e\u4fe1\u533a\u95f4\u672c\u8d28\u4e0a\u5e94\u8be5\u7b97\u662f\u5bf9\u6574\u4e2a\u5206\u5e03\u7684\u9884\u4f30\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5c55\u793a\u5f53\u524d\u6837\u672c\u91cc\u9762\u7684\u4fe1\u606f\uff09\n Draw a set of vertical bar plots grouped by a categorical variable  1  ax = sns.barplot(x=&#34;day&#34;, y=&#34;total_bill&#34;, data=tips)     barplot\u662f\u4e00\u4e2a\u67f1\u72b6\u56fe\u4e0a\u9762\u52a0\u4e00\u4e2a\u9ed1\u7ebf\u3002\u67f1\u72b6\u56fe\u7684\u503c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5bf9\u5e94\u7684\u8981\u663e\u793a\u7684\u6837\u672c\u7684\u5747\u503c\uff0c\u800c\u9ed1\u7ebf\u9ed8\u8ba4\u60c5\u51b5\u5219\u6807\u8bc6\u4e8695%\u7684\u7f6e\u4fe1\u533a\u95f4\u3002\n\u4f55\u4e3a95%\u7684\u7f6e\u4fe1\u533a\u95f4\uff1f95%\u7684\u7f6e\u4fe1\u533a\u95f4\u6307\u7684\u662f\u5bf9\u4e8e\u5f53\u524d\u6837\u672c\u6240\u5c5e\u7684\u5206\u5e03\u800c\u8a00\uff0c\u5f53\u6709\u4e2a\u65b0\u7684\u503c\u4ea7\u751f\u65f6\uff0c\u8fd9\u4e2a\u503c\u670995%\u7684\u53ef\u80fd\u6027\u5728\u8be5\u533a\u95f4\u5185\uff0c5%\u7684\u53ef\u80fd\u6027\u4e0d\u5728\u8be5\u533a\u95f4\u5185\u3002\n  \u663e\u793a\u6807\u51c6\u5dee\u800c\u975e\u7f6e\u4fe1\u533a\u95f4\n  1  ax = sns.barplot(x=&#34;day&#34;, y=&#34;total_bill&#34;, data=tips, order=[&#39;Sun&#39;, &#39;Sat&#39;, &#39;Fri&#39;, &#39;Thur&#39;], ci=&#39;sd&#39;, capsize=.1)   - \u53c2\u6570\u8bf4\u660e: - order: \u63a7\u5236x\u8f74\u7684\u663e\u793a\u987a\u5e8f - ci: (float or \u201csd\u201d or None, optional).Size of confidence intervals to draw around estimated values. If \u201csd\u201d, skip bootstrapping and draw the standard deviation of the observations. If None, no bootstrapping will be performed, and error bars will not be drawn. - capsize: \u7ad6\u7ebf\u7684\u4e0a\u4e0b\u6dfb\u52a0\u4e00\u4e2a\u201c\u5c0f\u52fe\u52fe\u201d  pointplot \u542b\u4e49\u4e0ebarplox\u76f8\u540c\uff0c\u8868\u73b0\u5f62\u5f0f\u53d8\u66f4\n1 2 3  ax = sns.pointplot(x=&#34;day&#34;, y=&#34;total_bill&#34;, hue=&#39;sex&#39;, data=tips, estimator=np.median, markers=[&#39;o&#39;, &#39;x&#39;], linestyles=[&#39;-&#39;, &#39;--&#39;], palette=&#34;Set2&#34;)    \u53c2\u6570\u8bf4\u660e:  estimator: \u8bc4\u4f30\u5668\uff0c\u9ed8\u8ba4\u4e3a\u8ba1\u7b97\u4e2d\u503c\u3002\u6b64\u5904\u8bbe\u7f6e\u8ba1\u7b97\u4e2d\u4f4d\u6570 markers\uff1a \u5982\u56fe\uff0c\u70b9\u5f62\u72b6 linestyles\uff1a\u5982\u56fe\uff0c\u7ebf\u578b    boxplot boxplot\u662f\u6765\u8868\u73b0\u6837\u672c\u91cc\u9762\u7684\u56db\u5206\u4f4d\u503c\u4ee5\u53ca\u6700\u5927\u6700\u5c0f\u503c\u7684\n Draw a single horizontal boxen plot  1 2  sns.set(style=&#34;whitegrid&#34;) ax = sns.boxplot(x=&#34;total_bill&#34;, data=tips)   boxplot\u9ed1\u7ebf\u8d77\u70b9\u662f\u6700\u5c0f\u503c\uff0c\u7ec8\u70b9\u662f\u6700\u5927\u503c\u3002\u800c\u67f1\u5b50\u7684\u8d77\u70b9\u662f25%\u5904\u7684\u503c\uff0c\u7ec8\u70b9\u662f75%\u5904\u7684\u503c\u3002\u67f1\u5b50\u4e2d\u95f4\u7684\u90a3\u6761\u9ed1\u7ebf\u5219\u5bf9\u5e94\u774050%\u5904\u7684\u503c\u3002\u8ddf\u6211\u4eec\u901a\u8fc7df.describe()\u663e\u793a\u7684\u7ed3\u679c\u4e00\u81f4\n Draw a vertical boxen plot grouped by a categorical variable  1  ax = sns.boxplot(x=&#39;day&#39;, y=&#34;total_bill&#34;, data=tips, palette=&#34;Set3&#34;)   violinplot violinplot\u662f\u7ed3\u5408\u4e86boxplot\u548cdistplot\u7684\u4f18\u70b9\u3002\n\u901a\u8fc7violinplot\u65e2\u80fd\u770b\u5230\u5f53\u524d\u6837\u672c\u7684\u6700\u5927\u6700\u5c0f\u503c\u548c\u56db\u5206\u4f4d\u503c\uff0c\u53c8\u80fd\u770b\u5230\u5bf9\u6574\u4f53\u5206\u5e03\u7684\u9884\u4f30\uff0c\u4e86\u89e3\u4efb\u610f\u533a\u95f4\u7684\u6982\u7387\u5206\u5e03\u60c5\u51b5\u3002\n Draw a single horizontal violinplot  1 2  sns.set(style=&#34;whitegrid&#34;) ax = sns.violinplot(x=&#34;total_bill&#34;, data=tips, palette=&#34;Set3&#34;)    Draw split violins to compare the across the hue variable  1  ax = sns.violinplot(x=&#34;day&#34;, y=&#34;total_bill&#34;, hue=&#34;smoker&#34;, data=tips, palette=&#34;Set3&#34;, split=True)   catplot \u5b83\u662f\u4ee5\u4e0a\u51e0\u79cd\u56fe\u7684\u63a5\u53e3\uff0c\u4ee5\u4e0acategorical\u56fe\u8868\u5747\u53ef\u901a\u8fc7\u6307\u5b9akind\u53c2\u6570\u6765\r\u7ed8\u5236 + FacetGrid\n1  g = sns.catplot(x=&#39;day&#39;, y=&#39;tip&#39;, col=&#39;sex&#39;, data=tips, kind=&#39;bar&#39;)    \u53c2\u6570\u8bf4\u660e:  col/row: \u56fe\u8868\u5206\u7c7b\u4f9d\u636e, names of variables\uff1bcol\u6a2a\u5411\uff1brow\u7ad6\u5411\uff1b kind: \u201cpoint\u201d, \u201cbar\u201d, \u201cstrip\u201d, \u201cswarm\u201d, \u201cbox\u201d, \u201cviolin\u201d, or \u201cboxen\u201d\u7684\u4e00\u79cd    Distribution plots distplot distplot\u4e3b\u8981\u7528\u6765\u5bf9\u6574\u4f53\u5206\u5e03\u8fdb\u884c\u9884\u4f30\uff0c\u5e76\u5f88\u5bb9\u6613\u89c2\u5bdf\u51fa\u67d0\u4e2a\u533a\u95f4\u6982\u7387\u7684\u5927\u5c0f\u60c5\u51b5\u3002\n Show a default plot with a kernel density estimate and histogram with bin size determined automatically with a reference rule  1  ax = sns.distplot(a=tips.total_bill)   distplot\u5c55\u793a\u4e86\u6574\u4f53\u7684\u5206\u5e03\u60c5\u51b5\uff0c\u5176\u4e2d\u7684\u66f2\u7ebf\u56fe\u5219\u662f\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u3002\n\u5728\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e2d\uff0c\u67d0\u4e2a\u70b9\u7684\u6982\u7387\u662f\u65e0\u610f\u4e49\u7684\u3002\u800c\u67d0\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6982\u7387\u5219\u662f\u901a\u8fc7\u5bf9\u8fd9\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u9762\u79ef\u8ba1\u7b97\u5f97\u6765\u7684\u3002\u5bf9\u5e94\u5230\u8be5\u56fe\u4e0a\uff0c\u5219\u610f\u5473\u7740total_bill=40\u7684\u6982\u7387\u662f\u65e0\u610f\u4e49\u7684\uff0c\u4f46\u662ftotal_bill\u572830\u548c40\u4e4b\u95f4\u7684\u6982\u7387\u662f\u4e8c\u8005\u4e4b\u95f4\u7684\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\u3002\u6240\u4ee5\uff0c\u6574\u4e2a\u66f2\u7ebf\u4e0b\u7684\u9762\u79ef\u662f1\uff0c\u5bf9\u5e94\u7740\u6240\u6709\u503c\u51fa\u73b0\u7684\u6982\u7387\u603b\u548c\u3002\nkdeplot kernel density estimate\n Plot a basic univariate density  1  ax = sns.kdeplot(data=tips.total_bill, shade=True, color=&#34;r&#34;)    Plot a bivariate density  1  ax = sns.kdeplot(data=tips.total_bill, data2=tips.tip ,)    Plot two shaded bivariate densities  1 2 3 4 5 6 7  iris = sns.load_dataset(&#34;iris&#34;) setosa = iris.loc[iris.species == &#34;setosa&#34;] virginica = iris.loc[iris.species == &#34;virginica&#34;] ax = sns.kdeplot(setosa.sepal_width, setosa.sepal_length, cmap=&#34;Reds&#34;, shade=True, shade_lowest=False, cbar=True) ax = sns.kdeplot(virginica.sepal_width, virginica.sepal_length, cmap=&#34;Blues&#34;, shade=True, shade_lowest=False, cbar=True)   - \u53c2\u6570\u8bf4\u660e:\n- cbar: drawing a bivariate KDE plot, add a colorbar.\nRelational plots scatterplot \u6563\u70b9\u56fe\n Draw a simple scatter plot between two variables  1 2  sns.set(style=&#34;darkgrid&#34;) ax = sns.scatterplot(x=&#34;total_bill&#34;, y=&#34;tip&#34;, data=tips)    Show the grouping variable by varying both color and marker  1 2  sns.set(style=&#34;darkgrid&#34;) ax = sns.scatterplot(x=&#34;total_bill&#34;, y=&#34;tip&#34;, hue=&#34;smoker&#34;, data=tips, style=&#34;smoker&#34;)   - \u53c2\u6570\u8bf4\u660e:\n- hue: \u5206\u7ec4\u53d8\u91cf\n- style: marker\u53d8\u91cf\n Show a quantitative variable by varying the size of the points  1  ax = sns.scatterplot(x=&#34;total_bill&#34;, y=&#34;tip&#34;, hue=&#34;size&#34;, data=tips, size=&#34;size&#34;)   - \u53c2\u6570\u8bf4\u660e:\n- size: \u51b3\u5b9a\u5706\u5927\u5c0f\u7684\u53d8\u91cf\uff0c\u53ef\u4ee5\u662f\u79bb\u6563\u578b\u7684\n \u805a\u7c7b\u7ed3\u679c\u663e\u793a  1 2  ax= sns.scatterplot(x=&#39;sepal_width&#39;, y=&#39;sepal_length&#39;, data=iris, hue=&#39;species&#39;, style=&#39;species&#39;)   lineplot 1 2 3  ax = sns.lineplot(x=&#39;tip&#39;, y=&#39;total_bill&#39;, data=tips, hue=&#34;smoker&#34;, style=&#34;smoker&#34;, markers=True, dashes=True, ci=None)    \u53c2\u6570\u8bf4\u660e:  markers: \u5b9e\u6570\u70b9 \u5206\u7c7b\u6807\u8bb0 dashes: \u7ebf\u5206\u7c7b\u663e\u793a\uff08\u5b9e\u7ebf\u3001\u865a\u7ebf\uff09 ci: \u7f6e\u4fe1\u533a\u95f4    relplot \u6563\u70b9\u56fescatterplot()\u548c\u6298\u7ebf\u56felineplot()\u7684\u63a5\u53e3\uff0c\u6563\u70b9\u56fe\u548c\u6298\u7ebf\u56fe\u5747\u53ef\u901a\u8fc7\u6307\u5b9akind\u53c2\u6570\u6765\u7ed8\u5236 + FacetGrid\n1 2 3  sns.set(style=&#34;ticks&#34;) g = sns.relplot(x=&#34;total_bill&#34;, y=&#34;tip&#34;, col=&#34;time&#34;, data=tips, kind=&#34;line&#34;) g = sns.relplot(x=&#34;total_bill&#34;, y=&#34;tip&#34;, col=&#34;time&#34;, data=tips, hue=&#34;smoker&#34;, kind=&#34;scatter&#34;)    \u53c2\u6570\u8bf4\u660e:  col/row: \u56fe\u8868\u5206\u7c7b\u4f9d\u636e, names of variables\uff1bcol\u6a2a\u5411\uff1brow\u7ad6\u5411\uff1b kind: &ldquo;line&rdquo;, &ldquo;scatter&rdquo;    Regression plots regplot Plot data and a linear regression model fit.\n1 2  sns.set(style=&#34;darkgrid&#34;) ax = sns.regplot(x=&#39;tip&#39;, y=&#39;total_bill&#39;, data=tips)    \u53c2\u6570\u8bf4\u660e:  marker: str, \u53ef\u8bbe\u7f6e\u70b9\u7684marker; marker=&quot;+&quot;    lmplot \u529f\u80fd\u6bd4regplot\u66f4\u591a\u4e00\u4e9b\nPlot data and regression model fits across a FacetGrid\n1 2 3  g= sns.lmplot(x=&#39;tip&#39;, y=&#39;total_bill&#39;, data=tips, hue=&#39;smoker&#39;, col=&#39;smoker&#39;, markers=[&#39;o&#39;, &#39;+&#39;], palette=&#34;Set2&#34;)   Matrix plots heatmap(\u70ed\u529b\u56fe) 1 2  pt = iris.corr() # pt\u4e3a\u6570\u636e\u6846\u6216\u8005\u662f\u534f\u65b9\u5dee\u77e9\u9635 ax = sns.heatmap(pt, annot=True)   Examples highest and lowest  Identifying counties with highest and lowest Covid-19 Mortality Rates.\n Refer: https://www.kaggle.com/jmarfati/actual-spread-of-covid19-us-county-level-analysis?scriptVersionId=34667620&amp;cellId=23\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22  # two parallel barplot plt.figure(figsize=(20,8)) plt.subplot(1, 2, 1) g=sns.barplot(x=&#39;mortality&#39;, y=&#39;county_state&#39;,data=df[df.confirmed&gt;500].sort_values([&#39;mortality&#39;], ascending=False).head(10), color=&#34;red&#34;) show_values_on_bars(g, &#34;h&#34;, space=0.002, text_size=20) plt.xlim(0, 0.15) plt.xlabel(&#34;Covid Mortality Rate&#34;, size=20) plt.ylabel(&#34; &#34;, size=20) plt.yticks(size=15) plt.title(&#34;Counties with highest Covid Mortality&#34;, size=25) plt.subplot(1, 2, 2) g=sns.barplot(x=&#39;mortality&#39;, y=&#39;county_state&#39;,data=df[df.confirmed&gt;500].sort_values([&#39;mortality&#39;], ascending=True).head(10), color=&#34;blue&#34;) show_values_on_bars(g, &#34;h&#34;, space=0.002, text_size=20) plt.xlim(0, 0.05) plt.xlabel(&#34;Covid Mortality Rate&#34;, size=20) plt.ylabel(&#34; &#34;) plt.yticks(size=15) plt.title(&#34;Counties with lowest Covid Mortality&#34;, size=25) plt.tight_layout()   association between two variables  Association between percentage of population above 65 in the county and covid mortality.\n Refer: https://www.kaggle.com/jmarfati/actual-spread-of-covid19-us-county-level-analysis?scriptVersionId=34667620&amp;cellId=27\n1 2 3 4 5 6 7  # regplot + barplot(with qcut) plt.figure(figsize=(20,5)) plt.subplot(1, 2, 1) sns.regplot(df_temp.percent_above_65, df_temp.mortality) plt.subplot(1, 2, 2) sns.barplot(pd.qcut(df_temp.percent_above_65, 4), df_temp.mortality)   ",
        "description": "",
        "id": 75,
        "section": "posts",
        "tags": [
            "seaborn",
            "Python",
            "\u53ef\u89c6\u5316",
            "\u5b66\u4e60\u7b14\u8bb0",
            "matplotlib"
        ],
        "title": "Python\u5e93-seaborn + matplotlib",
        "uri": "/posts/notes/2020-03-03-python%E5%BA%93-seaborn_+_matplotlib/"
    },
    {
        "content": "  \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u773c\u91cc\",\rartist: \"\u5c0f\u54aa\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%9C%BC%E9%87%8C-%E5%B0%8F%E5%92%AA-e54e74-Ag.mp3\",\rcover: \"https://p2.music.126.net/dfdGWfzty8CicomWdYGo7w==/109951164034632009.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%9C%BC%E9%87%8C-%E5%B0%8F%E5%92%AA-eb3d7c-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.3.1 \u4e07\u4e07\u6ca1\u60f3\u5230\u6628\u5929\u662f\u4e8c\u6708\u7684\u6700\u540e\u4e00\u5929\u3002\u4e0d\u5bf9\uff0c\u4e07\u4e07\u6ca1\u60f3\u5230\u4eca\u5929\u7684\u662f\u4e09\u6708\u7684\u7b2c\u4e00\u5929\u3002\u8be5\u600e\u6837\u8868\u8ff0\u5462\u3002\u6ca1\u60f3\u5230\u4e8c\u6708\u4efd\u5c31\u8fd9\u6837\u8fc7\u53bb\u4e86\u3002 2020.3.2 \u5e74\u8f7b\u65f6\u5019\u72af\u4e0b\u7684\u9519\uff0c\u4e00\u76f4\u6df1\u6df1\u7684\u7559\u5728\u8111\u6d77\u91cc\u3002\u90a3\u65f6\u5019\u7559\u4e0b\u9057\u61be\u7684\u4e1c\u897f\uff0c\u65f6\u5e38\u5728\u68a6\u91cc\u5f97\u5230\u5bbd\u6055\u548c\u6ee1\u8db3\u3002\u90a3\u79cd\u6df1\u7231\u4e14\u4e0d\u820d\u4e0d\u5f03\u7684\u611f\u89c9\uff0c\u5728\u4f53\u4f1a\u8fc7\u6495\u88c2\u548c\u7edd\u671b\u540e\uff0c\u9010\u6e10\u6f14\u53d8\u4e3a\u7a7a\u865a\uff0c\u9ebb\u6728\u548c\u7231\u800c\u4e0d\u5f97\u7684\u4e45\u4e45\u4ea4\u9519\u3002\u73b0\u5728\uff0c\u6216\u8005\u5728\u68a6\u91cc\uff0c\u518d\u8bf4\u4e00\u53e5\u6211\u771f\u7684\u7231\u8fc7\u4f60\uff0c\u8fd8\u6709\u7528\u5417\uff1f 2020.3.3 Time will tell. 2020.3.4 \u4ed6\u80fd\u5f00\u6717\u7684\u63a5\u7eb3\u65c1\u4eba\uff0c\u5374\u53c8\u6d3b\u5728\u6df1\u6c89\u7684\u5b64\u72ec\u5f53\u4e2d\u3002 2020.3.5 Manjaro\u6298\u817e\u4e86\u4e00\u5929\u3002\u6211\u771f\u662f\u4e2a\u6298\u817e\u72c2;Manjaro\u600e\u4e48\u4e0d\u597d\u7f16\u8bd1python\u7684\u5305\u5462\uff0c\u67e5\u4e86\u534a\u5929\u8d44\u6599\u6ca1\u627e\u5230\u3002 2020.3.6 \u5904\u7406\u5317\u4eac\u51fa\u79df\u8f66\u6570\u636e\uff0c\u5317\u4eactaz\u5206\u533a\u4fee\u56fe\u3002\u5176\u4ed6\u8bba\u6587\u91cc\u7684\u65b9\u6cd5\u8fd8\u662f\u5b66\u4e0d\u4f1a \u53ea\u80fd\u7528\u7b28\u529e\u6cd5\u3002 2020.3.7 \u8363\u8a89\uff08honor\uff09,\u667a\u6167\uff08wisdom\uff09,\u6177\u6168\uff08generosity\uff09,\u82f1\u52c7\uff08valor\uff09,\u601c\u60af\uff08compassion\uff09- \u5deb\u5e083\u9a91\u58eb\u4e94\u5fb7 2020.3.8 \u4eca\u5929\u6728\u6709\u5b66\u4e60\u3002\u3002\u3002\u8fc7\u5468\u672b\u5417\uff1f \u554a\uff1f 2020.3.9  2020.3.10 \u597d\u5403\u7684\u9cab\u9c7c\u6c64~ 2020.3.11 \u8fd9\u4e00\u5929\u88ab\u7c97\u5fc3\u7684\u4f5c\u8005\u9057\u6f0f\u4e86\u3002 2020.3.12 1\uff09\u770b\u89c1\u8857\u8fb9\u7684\u6d41\u6d6a\u5c0f\u72d7\uff0c\u529d\u8bf4\u7238\u5988\u6536\u517b\u5931\u8d25\uff1b\u7ecf\u5e38\u542c\u5230\u5b83\u7684\u54c0\u53eb\uff0c\u4e5f\u770b\u5230\u5b83\u773c\u8fb9\u7559\u4e86\u8bb8\u591a\u6cea\u3002\u6ca1\u6709\u529e\u6cd5\u30022\uff09\u4eca\u5929\u53bb\u62ff\u4eac\u4e1c\u5feb\u9012\uff0c\u9a91\u7740\u7535\u8f66\u6162\u6162\u5f00\u4e86\u5341\u5206\u949f\u5de6\u53f3\uff0c\u89c9\u5f97\u5f88\u8212\u9002\uff0c\u5927\u7ea6\u5f88\u4e45\u6ca1\u6709\u51fa\u6765\u900f\u900f\u6c14\u3002\u8857\u8fb9\u4eba\u4e0d\u591a\uff0c\u6ca1\u6709\u90a3\u4e48\u538b\u6291\uff0c\u4f46\u662f\u8def\u8fc7\u533b\u9662\u770b\u5230\u6392\u7740\u961f\uff0c\u8fd8\u6709\u4e0d\u81ea\u7136\u7684\u8fdc\u79bb\u533b\u9662\u5927\u95e8\u30023\uff09\u8ba9\u8001\u5988\u5c1d\u5c1d\u6211\u521a\u4e70\u7684\u901f\u6eb6\u5496\u5561\uff0c\u6ca1\u60f3\u5230\u5979\u8fd8\u5f88\u559c\u6b22\u559d\uff0c\u4e0d\u65ad\u95ee\u6211\u8d35\u4e0d\u8d35\uff0c\u7adf\u7136\u95ee\u662f\u4e0d\u662f\u8865\u54c1\uff0c\u559d\u5496\u5561\u6709\u4ec0\u4e48\u4e4b\u7c7b\u7684\u95ee\u9898\uff1f\u770b\u51fa\u5979\u559c\u6b22\u559d\uff0c\u4f46\u5acc\u8d35\u3002\u5979\u8bf4\u52a0\u70b9\u7cd6\u6216\u8bb8\u5f88\u597d\u559d\uff0c\u88ab\u6211\u529d\u963b\u4e86\u3002\u770b\u6765\u5979\u5e94\u8be5\u66f4\u559c\u6b22\u504f\u751c\u7684\u5496\u5561(P.S. \u6211\u8fd9\u6b21\u5165\u624b\u7684\u662f\u6bd4\u8f83\u5e38\u89c1\u7684\u96c0\u5de22+1\u539f\u5473\uff0c\u5473\u9053\u504f\u6de1\u3002) 2020.3.13 \u4f60\u7684\u773c\u91cc\u6709\u661f\u8fb0\u5927\u6d77\uff0c\u662f\u6211\u770b\u4e0d\u5230\u7684\u672a\u6765\u3002 2020.3.14 \u59cb\u4e8e\u5507\u9f7f \u5fe0\u4e8e\u5c81\u6708 2020.3.15 \u4e0d\u60a3\u5be1\u800c\u60a3\u4e0d\u5747 2020.3.16 \u7737\u604b\uff1b\u4e09\u6708\u5df2\u7ecf\u8fc7\u534a\u4e86\uff0c\u62d6\u4e86\u8fd9\u4e48\u4e45\u7684\u5b9e\u9a8c\u8981\u5feb\u4e00\u4e9b\u4e86\uff0c\u65b9\u6cd5\u57fa\u672c\u786e\u5b9a\uff0c\u5bf9\u6bd4\u4e5f\u60f3\u597d\u4e86\uff0c\u4e0d\u8981\u518d\u4e00\u62d6\u518d\u62d6\uff1b\u4eca\u5929\u770b\u5230\u5b66\u6821\u7533\u8bf7\u4e0d\u7b54\u8fa9\u7684\u6d88\u606f\uff0c\u5176\u5b9e\u86ee\u9ad8\u5174\u7684\uff0c\u6bd5\u7adf\u81ea\u5df1\u7b54\u8fa9\u8fd9\u4e00\u5757\u4e00\u76f4\u662f\u5f31\u9879\u3002\u4f46\u662f\u540c\u65f6\u6709\u4e9b\u5fe7\u8651\uff0c\u81ea\u5df1\u7814\u4fee\u8ba1\u5212\u5199\u7684\u771f\u4e0d\u600e\u6837\uff0c\u786e\u5b9e\u9700\u8981\u82b1\u5fc3\u601d\u597d\u597d\u4f11\u6574\u4e00\u4e0b\u3002\u6bd5\u7adf\u4e4b\u524d\u63d0\u4ea4\u7684\u53ea\u662f\u5e94\u4ed8\u5b66\u6821\u63d0\u4ea4\u3002\u603b\u4e4b\u52a0\u6cb9\u5427\uff0c\u8fd9\u6b21\u5e0c\u671b\u5f88\u5927\u3002\u4e5f\u5e0c\u671b\u75ab\u60c5\u5c3d\u5feb\u597d\u8d77\u6765\uff0c\u5927\u5bb6\u90fd\u6062\u590d\u5065\u5eb7\u548c\u6b63\u5e38\u7684\u5de5\u4f5c\u3002 2020.3.17 \u5728window 10\u4e0a\u5e03\u7f6efmm Map Matching\u7684\u73af\u5883\u6ca1\u6709\u6210\u529f\u3002\u4e0d\u61c2C++\uff0c\u5e03\u7f6e\u4e00\u4e2a\u73af\u5883\u90fd\u8fd9\u4e48\u96be\u3002\u3002\u80fd\u529b\u6709\u9650\u3002\u4e0d\u8fc7\u5f88\u611f\u6fc0\u4f5c\u8005\u8010\u5fc3\u7684\u5e2e\u52a9\u3002github\u4e0a\u4e00\u6b21\u6b21commit\u90fd\u80fd\u5f88\u5feb\u56de\u590d~ 2020.3.18 fmm\u5728ubuntu\u4e0a\u642d\u5efa\u597d\u4e86\uff0c\u6d4b\u8bd5demo\u4e5f\u8dd1\u901a\u4e86\u3002\u4f46\u662f\uff0cemm\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u81ea\u5df1\u5efa\u7acb\u7684\u8def\u7f51\u8dd1\u4e0d\u901a\u3002\u601d\u6765\u60f3\u53bb\uff0c\u662f\u6ca1\u6709\u5efa\u7acb\u53cc\u5411\u8def\u7f51\u3002\u76ee\u524d\u6784\u5efa\u7684\u8def\u7f51\u5173\u7cfb\u662f\u5355\u5411\u7684\u3002\u7136\u540e\u67e5\u770b\u4e86\u4f5c\u8005\u5173\u4e8eosm map matching\u4e0a\u7684\u8bf4\u660e\uff0c\u786e\u5b9e\u6709\u4e00\u4e2a\u6b65\u9aa4\u662fComplement bidirectional edges. map matching\u554a\u3002 \u5509\u3002\u597d\u597d\u505a\u5427\uff0c\u8fd9\u4e2a\u505a\u597d\u4e86\u4ee5\u540emap matching\u53ea\u8981\u505a\u8f68\u8ff9\u7814\u7a76\u4e00\u5b9a\u7528\u7684\u5230\u7684; \u6211\u89c9\u5f97\u5728Ubuntu\u4e0a\u7801\u4ee3\u7801\u548c\u7801\u5b57\uff0c\u5f88\u8212\u9002\u3002\u662f\u7684\uff01 2020.3.19 \u6211\u60f3\u526a\u5934\u53d1\u3002\u3002\u3002Hair Cut 2020.3.20 \u5c0f\u670b\u53cb\uff0c\u4f60\u662f\u4e0d\u662f\u6709\u5f88\u591a\u95ee\u53f7\u3002 2020.3.21 \u5c31\u50cf\u662f\u5931\u53bb\u795e\u7ecf\uff0c\u6211\u611f\u89c9\u4e0d\u5230\u547c\u5438 2020.3.22 embedding + \u534f\u540c\u8fc7\u6ee4 =&gt; \u63a8\u8350\u7cfb\u7edf\u7684\u5e94\u7528\uff1b\u518dmark\u4e00\u4e2a\r\u77e5\u4e4e\u7528\u6237\uff0c\u4ed6\u7684\u5f88\u591a\u52a8\u6001\u90fd\u662f\u5173\u4e8eembedding\u7684 2020.3.23 \u4fac\u8111\u5b50\u74e6\u7279\u5566 2020.3.24 \u4eca\u5929\u8ddf\u5c0f\u6bdb\u4ed4\u804a\u4e86\u5f88\u591a\uff0c\u597d\u4e45\u6ca1\u8bf4\u8fd9\u4e48\u591a\u8bdd\uff0c\u55d3\u5b50\u90fd\u54d1\u4e86\u3002 2020.3.25 \u6d77\u9e1f\u8ddf\u9c7c\u76f8\u7231\uff0c\u53ea\u662f\u4e00\u573a\u610f\u5916\u3002 2020.3.26 \u6211\u786e\u5b9e\u6709\u70b9\u504f\u6267\uff0c\u6216\u8005\u8bf4\u662f\u5f88\u504f\u6267\u3002 2020.3.27 \u665a\u4e0a\u5c31\u597d\u56f0 \u4e0d\u60f3\u505a\u4e8b\u60c5 \u4eba\u7684\u7cbe\u529b\u662f\u6709\u9650\u7684 \u4e0d\u662f\u4e48 2020.3.28 \u6240\u8c13\u4f0a\u4eba \u5728\u6c34\u4e00\u65b9 2020.3.29 \u8fd9\u4e00\u5929\u88ab\u7c97\u5fc3\u7684\u4f5c\u8005\u9057\u6f0f\u4e86\u3002 2020.3.30 \u5feb\u5230\u6708\u5e95\u4e86\uff0c\u60f3\u95ee\u81ea\u5df1\u4e00\u4e2a\u4e8b\u60c5\u3002\u8fd9\u79cd\u6bcf\u5929\u4e00\u53e5\u8bdd\u575a\u6301\u4e86\u591a\u4e45\u4e86\uff1f\u4ee5\u524d\u53ea\u662f\u8bb0\u5f55\u4e00\u4e9b\u559c\u6b22\u7684\u53e5\u5b50\uff0c\u6b4c\u8bcd\u4e4b\u7c7b\u7684\uff0c\u540e\u6765\u5f00\u59cb\u5199\u4e00\u4e24\u53e5\u8bb0\u4e8b\uff0c\u60f3\u6cd5\uff0c\u611f\u89e6\uff0c\u8fd8\u6709\u65e0\u804a\u7684\u81ea\u8a00\u81ea\u8bed\u3002\u4ee5\u524d\u603b\u89c9\u5f97\u81ea\u5df1\u5f88\u96be\u575a\u6301\u505a\u4e00\u4ef6\u4e8b\u60c5\uff0c\u4e0d\u77e5\u9053\u8fd9\u7b97\u4e0d\u7b97\u6539\u53d8\u3002 2020.3.31 \u53d1\u73b0typecho\u5b98\u65b9\u7684\u8bba\u575b\uff0c\u5176\u5b9e\u8fd8\u662f\u86ee\u6d3b\u8dc3\u7684\uff0c\u66f4\u65b0\u5f88\u591a\u63d2\u4ef6\u548c\u6a21\u677f\u7b49\u3002\u6211\u4e4b\u524d\u7528\u7684markdown\u89e3\u6790\uff0c\u5b83\u4f1a\u963b\u788d\u5176\u4ed6\u5f88\u591a\u63d2\u4ef6\u7684\u5b9e\u73b0\uff0c\u662f\u6211\u8bef\u4ee5\u4e3a\u5f88\u591a\u63d2\u4ef6\u5747\u65e0\u6548\u6216\u8005\u8fc7\u671f\uff0c\u6700\u7ec8\u51b3\u5b9a\u653e\u5f03\u4e4b\u524d\u7684markdown\u63d2\u4ef6\uff08EditorMD\uff09\uff0c\u4f7f\u7528typecho\u5f00\u53d1\u7248\u539f\u751f\u7684markdown\u7f16\u8f91\u5668\u3002\u7136\u540e\u4eca\u5929\u6dfb\u52a0\u4e86\u597d\u591a\u529f\u80fd\uff08\u5177\u4f53\u89c1\u535a\u5ba2\u76f8\u5173\uff09\u3002\u4e09\u6708\u7684\u6700\u540e\u4e00\u5929\uff0c\u53c8\u6298\u817e\u4e86\u4e00\u5929\u535a\u5ba2  ",
        "description": "",
        "id": 76,
        "section": "posts",
        "tags": [
            "Manjaro",
            "\u6570\u636e\u5904\u7406",
            "\u5deb\u5e083",
            "\u6000\u5ff5",
            "\u9cab\u9c7c\u6c64",
            "\u75ab\u60c5\u89e3\u5c01",
            "\u6d41\u6d6a\u5c0f\u72d7",
            "\u5496\u5561",
            "\u535a\u5ba2\u7ef4\u62a4",
            "\u8def\u7f51\u5339\u914d",
            "embedding",
            "typecho"
        ],
        "title": "2020-3",
        "uri": "/posts/journals/138/"
    },
    {
        "content": " \u5173\u4e8eQGIS\u82e5\u5e72\u8bb0\u5f55\n \u76ee\u5f55\n[TOC]\nInstall Ubuntu (16.04) 1 2 3 4 5  sudo sh -c &#39;echo &#34;deb http://qgis.org/ubuntugis xenial main&#34; &gt;&gt; /etc/apt/sources.list&#39; sudo sh -c &#39;echo &#34;deb-src http://qgis.org/ubuntugis xenial main &#34; &gt;&gt; /etc/apt/sources.list&#39; sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable sudo apt-get update &amp;&amp; sudo apt-get install qgis python-qgis   PyQGIS \u642d\u5efaPyQGIS\u73af\u5883\uff08PyCharm\uff09(QGIS3)(gdal)  Window\u5b89\u88c5\rOSGeo4W64\u3002\u9009\u62e9QGIS\u684c\u9762\u7248\u548cgdal\u5f00\u53d1\u5e93\u5b89\u88c5(\u901f\u5ea6\u6162\u5efa\u8bae\u6302\u4e2a\u4ee3\u7406)\u3002 Setting up PyCharm for PyQGIS and Qt(\r\u53c2\u80031;\r\u53c2\u80032)  \u5728\u6839\u76ee\u5f55\u65b0\u5efapycharm-pyqgis.bat,\u5728\u811a\u672c\u91cc\u9762\u6dfb\u52a0:  1 2 3 4 5 6 7 8 9 10 11 12 13 14  @echo off SET OSGEO4W_ROOT=D:\\Apps\\OSGeo4W64 SET PYCHARM=&#34;D:\\Apps\\PyCharm 2019.2.2\\bin\\pycharm64.exe&#34; call &#34;%OSGEO4W_ROOT%&#34;\\bin\\o4w_env.bat @echo off path %PATH%;%OSGEO4W_ROOT%\\apps\\qgis\\bin path %PATH%;%OSGEO4W_ROOT%\\apps\\Qt5\\bin path %PATH%;%OSGEO4W_ROOT%\\apps\\Python37\\Scripts set PYTHONPATH=%PYTHONPATH%;%OSGEO4W_ROOT%\\apps\\qgis\\python set PYTHONHOME=%OSGEO4W_ROOT%\\apps\\Python37 start &#34;PyCharm aware of QGIS&#34; /B %PYCHARM% %*    - \u6839\u636e\u5b89\u88c5\u60c5\u51b5\u4fee\u6539OSGEO4W_ROOT\u548cPYCHARM - \u8fd0\u884c`pycharm-pyqgis.bat`\uff0c\u65b0\u5efa\u9879\u76ee\u3002\u8bbe\u7f6e\u9879\u76ee\u89e3\u91ca\u5668=`D:\\Apps\\OSGeo4W64\\bin\\python3.exe` - \u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\u8fdb\u884c\u6d4b\u8bd5: ```Python import qgis.core import PyQt5.QtCore  \u4e0d\u62a5\u9519\u5c31\u6ca1\u95ee\u9898\u4e86  \u731c\u60f3\u642d\u5efaarcpy\u73af\u5883\u65f6\u4e5f\u53ef\u4ee5\u7528\u7c7b\u4f3c\u65b9\u6cd5\u3002!  \u63d2\u4ef6\u5e93 Note: \u5728\u63d2\u4ef6\u7ba1\u7406\u7684Settings\u4e2d\u52fe\u9009Show also experimental plugins\n\u5730\u56fe\u5e95\u56fe\u63d2\u4ef6  OpenLayers Plugin QuickMapServices ",
        "description": "",
        "id": 78,
        "section": "posts",
        "tags": [
            "QGIS",
            "PyQGIS",
            "Python",
            "GIS\u5f00\u53d1",
            "\u5b66\u4e60\u7b14\u8bb0"
        ],
        "title": "\u5b66\u4e60\u7b14\u8bb0-QGIS",
        "uri": "/posts/notes/2020-02-29-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-qgis/"
    },
    {
        "content": " kaggle\u4e2d\u5904\u7406\u9884\u6d4b\u95ee\u9898\u901a\u7528\u6d41\u7a0b/\u57fa\u672c\u6846\u67b6\uff0c\u53c2\u8003\nHow to get to TOP 25% with Simple Model (sklearn)\n case complete: House Prices: Advanced Regression Techniques\n\u76ee\u5f55\n[TOC]\nInit Adding needed libraries and reading data\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  import pandas as pd import numpy as np import matplotlib.pyplot as plt import seaborn as sns from sklearn import ensemble, tree, linear_model from sklearn.model_selection import train_test_split, cross_val_score from sklearn.metrics import r2_score, mean_squared_error from sklearn.utils import shuffle %matplotlib inline import warnings warnings.filterwarnings(&#39;ignore&#39;) train = pd.read_csv(&#39;/kaggle/input/house-prices-advanced-regression-techniques/train.csv&#39;) test = pd.read_csv(&#39;/kaggle/input/house-prices-advanced-regression-techniques/test.csv&#39;)   Checking for NAs Checking for missing data\n1 2 3  NAs = pd.concat([train.isnull().sum(), test.isnull().sum()], axis=1, keys=[&#39;Train&#39;, &#39;Test&#39;]) NAs[NAs.sum(axis=1) &gt; 0]    output      Train Test     Alley 1369 1352   BsmtCond 37 45   BsmtExposure 38 44   BsmtFinSF1 0 1   BsmtFinSF2 0 1   BsmtFinType1 37 42   BsmtFinType2 38 42   BsmtFullBath 0 2   BsmtHalfBath 0 2   BsmtQual 37 44   BsmtUnfSF 0 1   Electrical 1 0   Exterior1st 0 1   Exterior2nd 0 1   Fence 1179 1169   FireplaceQu 690 730   Functional 0 2   GarageArea 0 1   GarageCars 0 1   GarageCond 81 78   GarageFinish 81 78   GarageQual 81 78   GarageType 81 76   GarageYrBlt 81 78   KitchenQual 0 1   LotFrontage 259 227   MSZoning 0 4   MasVnrArea 8 15   MasVnrType 8 16   MiscFeature 1406 1408   PoolQC 1453 1456   SaleType 0 1   TotalBsmtSF 0 1   Utilities 0 2    Importing public functions 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  # Prints R2 and RMSE scores def get_score(prediction, lables): print(&#39;R2: {}&#39;.format(r2_score(prediction, lables))) print(&#39;RMSE: {}&#39;.format(np.sqrt(mean_squared_error(prediction, lables)))) # Shows scores for train and validation sets  def train_test(estimator, x_trn, x_tst, y_trn, y_tst): prediction_train = estimator.predict(x_trn) prediction_test = estimator.predict(x_tst) # Printing estimator print(estimator) # Printing train scores print(&#34;Train&#34;) get_score(prediction_train, y_trn) # Printing test scores print(&#34;Test&#34;) get_score(prediction_test, y_tst)   Splitting to features and labels and deleting variables I don&rsquo;t need 1 2 3 4 5 6 7 8 9 10 11  # Spliting to features and lables and deleting variable I don&#39;t need train_labels = train.pop(&#39;SalePrice&#39;) features = pd.concat([train, test], keys=[&#39;train&#39;, &#39;test&#39;]) # I decided to get rid of features that have more than half of missing information or do not correlate to SalePrice features.drop([&#39;Utilities&#39;, &#39;RoofMatl&#39;, &#39;MasVnrArea&#39;, &#39;BsmtFinSF1&#39;, &#39;BsmtFinSF2&#39;, &#39;BsmtUnfSF&#39;, &#39;Heating&#39;, &#39;LowQualFinSF&#39;, &#39;BsmtFullBath&#39;, &#39;BsmtHalfBath&#39;, &#39;Functional&#39;, &#39;GarageYrBlt&#39;, &#39;GarageArea&#39;, &#39;GarageCond&#39;, &#39;WoodDeckSF&#39;, &#39;OpenPorchSF&#39;, &#39;EnclosedPorch&#39;, &#39;3SsnPorch&#39;, &#39;ScreenPorch&#39;, &#39;PoolArea&#39;, &#39;PoolQC&#39;, &#39;Fence&#39;, &#39;MiscFeature&#39;, &#39;MiscVal&#39;], axis=1, inplace=True)     features = pd.concat([train, test], keys=['train', 'test']) \u4e3a\u4e0a\u4e0b\u62fc\u63a5\uff0c\u5e76\u6dfb\u52a0&rsquo;train', &lsquo;test&rsquo;\u6807\u7b7e\n  \u6709\u4eba\u8bf4\u4e0d\u5efa\u8bae\u5728\u4e00\u5f00\u59cb\u4e22\u5f03\u53d8\u91cf\n   Don&rsquo;t discard variables unless you have a good reason for it. Note that it is not a good reason to say it&rsquo;s not correlated. Tree algorithms can use the information and are not harmed by including it. A good reason for excluting could be using KNN. The other main reason for discarding variables are if they are correlated with being in the test or training set e.g. in many competitions you goal is to predict out of time. So including time can be very harmfull.\n Filling NAs and converting features  \u53d6\u4ee3NA\u503c\u5f97\u65b9\u6cd5  \u6570\u503c\u578b  \u4f17\u6570\uff08filling with most popular values\uff09 1  features[&#39;MSZoning&#39;].fillna(features[&#39;MSZoning&#39;].mode()[0])    0\uff08filling with 0\uff09 1  features[&#39;TotalBsmtSF&#39;].fillna(0)    \u5e73\u5747\u503c\uff08filling with means\uff09 1  features[&#39;LotFrontage&#39;].fillna(features[&#39;LotFrontage&#39;].mean())      category\u578b  NA\u7528\u65b0\u503c\u4ee3\u66ff 1  features[&#39;Alley&#39;].fillna(&#39;NOACCESS&#39;)          1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  # MSSubClass as str features[&#39;MSSubClass&#39;] = features[&#39;MSSubClass&#39;].astype(str) # MSZoning NA in pred. filling with most popular values features[&#39;MSZoning&#39;] = features[&#39;MSZoning&#39;].fillna(features[&#39;MSZoning&#39;].mode()[0]) # LotFrontage NA in all. I suppose NA means 0 features[&#39;LotFrontage&#39;] = features[&#39;LotFrontage&#39;].fillna(features[&#39;LotFrontage&#39;].mean()) # Alley NA in all. NA means no access features[&#39;Alley&#39;] = features[&#39;Alley&#39;].fillna(&#39;NOACCESS&#39;) # Converting OverallCond to str features.OverallCond = features.OverallCond.astype(str) # MasVnrType NA in all. filling with most popular values features[&#39;MasVnrType&#39;] = features[&#39;MasVnrType&#39;].fillna(features[&#39;MasVnrType&#39;].mode()[0]) # BsmtQual, BsmtCond, BsmtExposure, BsmtFinType1, BsmtFinType2 # NA in all. NA means No basement for col in (&#39;BsmtQual&#39;, &#39;BsmtCond&#39;, &#39;BsmtExposure&#39;, &#39;BsmtFinType1&#39;, &#39;BsmtFinType2&#39;): features[col] = features[col].fillna(&#39;NoBSMT&#39;) # TotalBsmtSF NA in pred. I suppose NA means 0 features[&#39;TotalBsmtSF&#39;] = features[&#39;TotalBsmtSF&#39;].fillna(0) # Electrical NA in pred. filling with most popular values features[&#39;Electrical&#39;] = features[&#39;Electrical&#39;].fillna(features[&#39;Electrical&#39;].mode()[0]) # KitchenAbvGr to categorical features[&#39;KitchenAbvGr&#39;] = features[&#39;KitchenAbvGr&#39;].astype(str) # KitchenQual NA in pred. filling with most popular values features[&#39;KitchenAbvGr&#39;] = features[&#39;KitchenAbvGr&#39;].astype(str) features[&#39;KitchenQual&#39;].fillna(features[&#39;KitchenQual&#39;].mode()[0]) # FireplaceQu NA in all. NA means No Fireplace features[&#39;FireplaceQu&#39;] = features[&#39;FireplaceQu&#39;].fillna(&#39;NoFP&#39;) # GarageType, GarageFinish, GarageQual NA in all. NA means No Garage for col in (&#39;GarageType&#39;, &#39;GarageFinish&#39;, &#39;GarageQual&#39;): features[col] = features[col].fillna(&#39;NoGRG&#39;) # GarageCars NA in pred. I suppose NA means 0 features[&#39;GarageCars&#39;] = features[&#39;GarageCars&#39;].fillna(0.0) # SaleType NA in pred. filling with most popular values features[&#39;SaleType&#39;] = features[&#39;SaleType&#39;].fillna(features[&#39;SaleType&#39;].mode()[0]) # Year and Month to categorical features[&#39;YrSold&#39;] = features[&#39;YrSold&#39;].astype(str) features[&#39;MoSold&#39;] = features[&#39;MoSold&#39;].astype(str) # Adding total sqfootage feature and removing Basement, 1st and 2nd floor features features[&#39;TotalSF&#39;] = features[&#39;TotalBsmtSF&#39;] + features[&#39;1stFlrSF&#39;] + features[&#39;2ndFlrSF&#39;] features.drop([&#39;TotalBsmtSF&#39;, &#39;1stFlrSF&#39;, &#39;2ndFlrSF&#39;], axis=1, inplace=True)    \u6839\u636e\u53d8\u91cf\u63cf\u8ff0\u548c\u7279\u5f81\u9010\u4e00\u5206\u6790 data_description MSSubClass: Identifies the type of dwelling involved in the sale. \u6839\u636e\u91ca\u4e49\uff0c MSSubClass\u66f4\u5e94\u8be5\u662f\u4e00\u79cdcategory\u7c7b\u578b\uff0c\u56e0\u6b64\u4ee3\u7801\u4e2d\u901a\u8fc7\u7c7b\u578b\u53d8\u6362\u4e3a\u5b57\u7b26\u4e32\u518d\u901a\u8fc7\u540e\u7eed\u53d8\u6362\u4ece\u800c\u8f6c\u5316\u6210 category \u7c7b\u578b  Log transformation  log\u53d8\u6362  1 2 3 4 5 6 7  # Our SalesPrice is skewed right (check plot below). I&#39;m logtransforming it.  ax = sns.distplot(train_labels) ## Log transformation of labels train_labels = np.log(train_labels) ## Now it looks much better ax = sns.distplot(train_labels)     output\nAfter transform:\n  \u6ce8\u610f\u6700\u540e\u7684\u9884\u6d4b\u503c\u8981\u7528 np.exp() \u53d8\u6362\u4e3a\u539f\u7ef4\u5ea6\n  Standardizing numeric data  \u6570\u503c\u7c7b\u578b\u53d8\u91cf\u6807\u51c6\u5316  1 2 3 4 5  ## Standardizing numeric features numeric_features = features.loc[:,[&#39;LotFrontage&#39;, &#39;LotArea&#39;, &#39;GrLivArea&#39;, &#39;TotalSF&#39;]] numeric_features_standardized = (numeric_features - numeric_features.mean())/numeric_features.std() ax = sns.pairplot(numeric_features_standardized)    output  Converting categorical data to dummies 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  # Getting Dummies from Condition1 and Condition2 conditions = set([x for x in features[&#39;Condition1&#39;]] + [x for x in features[&#39;Condition2&#39;]]) dummies = pd.DataFrame(data=np.zeros((len(features.index), len(conditions))), index=features.index, columns=conditions) for i, cond in enumerate(zip(features[&#39;Condition1&#39;], features[&#39;Condition2&#39;])): dummies.ix[i, cond] = 1 features = pd.concat([features, dummies.add_prefix(&#39;Condition_&#39;)], axis=1) features.drop([&#39;Condition1&#39;, &#39;Condition2&#39;], axis=1, inplace=True) # Getting Dummies from Exterior1st and Exterior2nd exteriors = set([x for x in features[&#39;Exterior1st&#39;]] + [x for x in features[&#39;Exterior2nd&#39;]]) dummies = pd.DataFrame(data=np.zeros((len(features.index), len(exteriors))), index=features.index, columns=exteriors) for i, ext in enumerate(zip(features[&#39;Exterior1st&#39;], features[&#39;Exterior2nd&#39;])): dummies.ix[i, ext] = 1 features = pd.concat([features, dummies.add_prefix(&#39;Exterior_&#39;)], axis=1) features.drop([&#39;Exterior1st&#39;, &#39;Exterior2nd&#39;, &#39;Exterior_nan&#39;], axis=1, inplace=True) # Getting Dummies from all other categorical vars for col in features.dtypes[features.dtypes == &#39;object&#39;].index: for_dummy = features.pop(col) features = pd.concat([features, pd.get_dummies(for_dummy, prefix=col)], axis=1)    Condition \u548c Exterior \u4e3a\u7279\u6b8a\u5904\u7406  Obtaining standardized dataset 1 2 3 4 5 6  ### Copying features features_standardized = features.copy() ### Replacing numeric features by standardized values features_standardized.update(numeric_features_standardized)   Splitting train and test features 1 2 3 4 5 6 7 8  ### Splitting features train_features = features.loc[&#39;train&#39;].drop(&#39;Id&#39;, axis=1).select_dtypes(include=[np.number]).values test_features = features.loc[&#39;test&#39;].drop(&#39;Id&#39;, axis=1).select_dtypes(include=[np.number]).values ### Splitting standardized features train_features_st = features_standardized.loc[&#39;train&#39;].drop(&#39;Id&#39;, axis=1).select_dtypes(include=[np.number]).values test_features_st = features_standardized.loc[&#39;test&#39;].drop(&#39;Id&#39;, axis=1).select_dtypes(include=[np.number]).values    \u4e24\u7c7b\u7279\u5f81\u6570\u636e\uff0c\u4e00\u7c7b\u672a\u6807\u51c6\u5316 \u4e00\u7c7b\u6807\u51c6\u5316\u8fc7\u7684 \u9002\u5e94\u4e0d\u540c\u6a21\u578b  tree-based model\u65e0\u9700\u6807\u51c6\u5316 \u7ebf\u6027\u6a21\u578b\u9700\u6807\u51c6\u5316    Splitting to train and validation sets 1 2 3 4 5 6  ### Shuffling train sets train_features_st, train_features, train_labels = shuffle(train_features_st, train_features, train_labels, random_state = 5) ### Splitting x_train, x_test, y_train, y_test = train_test_split(train_features, train_labels, test_size=0.1, random_state=200) x_train_st, x_test_st, y_train_st, y_test_st = train_test_split(train_features_st, train_labels, test_size=0.1, random_state=200)    shuffle \u6253\u4e71\u6570\u636e\u987a\u5e8f  First level models Elastic Net using ElasticNetCV estimator to choose best alpha and l1_ratio for my Elastic Net model\n1 2 3 4 5  ENSTest = linear_model.ElasticNetCV(alphas=[0.0001, 0.0005, 0.001, 0.01, 0.1, 1, 10], l1_ratio=[.01, .1, .5, .9, .99], max_iter=5000).fit(x_train_st, y_train_st) train_test(ENSTest, x_train_st, x_test_st, y_train_st, y_test_st)    output  1 2 3 4 5 6  Train R2: 0.9015542514742068 RMSE: 0.11906917427161198 Test R2: 0.8983659574062 RMSE: 0.10972333168339993   1 2 3 4  # Average R2 score and standart deviation of 5-fold cross-validation scores = cross_val_score(ENSTest, train_features_st, train_labels, cv=5) print(&#34;Accuracy: %0.2f(+/- %0.2f)&#34; % (scores.mean(), scores.std() * 2))    output  Accuracy: 0.88 (+/- 0.09)\nGradient Boosting We use a lot of features and have many outliers. So I&rsquo;m using max_features='sqrt' to reduce overfitting of my model. I also use loss='huber' because it more tolerant to outliers. All other hyper-parameters was chosen using GridSearchCV.\n1 2 3 4 5 6 7 8 9  GBest = ensemble.GradientBoostingRegressor(n_estimators=3000, learning_rate=0.05, max_depth=3, max_features=&#39;sqrt&#39;, min_samples_leaf=15, min_samples_split=10, loss=&#39;huber&#39;).fit(x_train, y_train) train_test(GBest, x_train, x_test, y_train, y_test)   1 2 3 4 5 6  Train R2: 0.9618766649349884 RMSE: 0.07600479015539144 Test R2: 0.9046920143397521 RMSE: 0.10696670219256725   1 2 3 4  # Average R2 score and standart deviation of 5-fold cross-validation scores = cross_val_score(GBest, train_features_st, train_labels, cv=5) print(&#34;Accuracy: %0.2f(+/- %0.2f)&#34; % (scores.mean(), scores.std() * 2))   Accuracy: 0.89 (+/- 0.04)\nEnsembling final model final ensemble model is an average of Gradient Boosting and Elastic Net predictions. But before that I retrained my models on all train data.\n1 2 3 4 5 6 7  # Retraining models GB_model = GBest.fit(train_features, train_labels) ENST_model = ENSTest.fit(train_features_st, train_labels) ## Getting our SalePrice estimation Final_labels = (np.exp(GB_model.predict(test_features)) + np.exp(ENST_model.predict(test_features_st))) / 2    \u878d\u5408\u6a21\u578b\uff0c\u53d6\u8f93\u51fa\u7684\u5e73\u5747\u503c  Saving to CSV 1 2  pd.DataFrame({&#39;Id&#39;: test.Id, &#39;SalePrice&#39;: Final_labels}).to_csv(&#39;2020-02-25.csv&#39;, index =False)   ",
        "description": "",
        "id": 79,
        "section": "posts",
        "tags": [
            "Kaggle",
            "\u9884\u6d4b\u6a21\u578b",
            "\u6bd4\u8d5b"
        ],
        "title": "Kaggle-Starter Simple Framework For Prediction Issues",
        "uri": "/posts/notes/2020-02-25-kaggle-starter_simple_framework_for_prediction_issues/"
    },
    {
        "content": " \u8bba\u6587\u9605\u8bfb\uff0c\u611f\u5174\u8da3\u70b9\u3001\u5173\u952e\u8bcd\u6574\u7406\n \u535a\u58eb\u8bba\u6587: \u57fa\u4e8e\u51fa\u79df\u8f66\u6570\u636e\u7684\u57ce\u5e02\u5c45\u6c11\u6d3b\u52a8\u7a7a\u95f4\u4e0e\u7f51\u7edc\u65f6\u7a7a\u7279\u6027\u7814\u7a76  \u5927\u591a\u6570\u7814\u7a76\u5bf9\u4e8e\u6d3b\u52a8\u6570\u636e\u4ec5\u4f7f\u7528\u6d3b\u52a8\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u4f4d\u7f6e\u70b9\u6570\u636e\uff0c\u5ffd\u7565\u884c\u9a76\u8f68\u8ff9\uff0c\u6570\u636e\u5229\u7528\u4e0d\u5145\u5206\u3002 \u4ece\u4e2a\u4eba\u8f68\u8ff9\u6bb5\u548cPOI\u65f6\u7a7a\u5438\u5f15\u529b\u68f1\u955c\u7684\u65f6\u7a7a\u5173\u7cfb\u51fa\u53d1\uff0c\u786e\u5b9a\u4e2a\u4f53\u6d3b\u52a8\u6240\u5728\u7684POI\u3002 \u7a7a\u95f4\u53e5\u6cd5\uff08space syntax\uff09\u88ab\u7528\u6765\u89e3\u91ca\u9053\u8def\u7f51\u7ed3\u6784\u4e0e\u57ce\u5e02\u5e03\u5c40\u4e4b\u95f4\u7684\u5173\u7cfb \u7a7a\u95f4\u53e5\u6cd5\u5c06\u73b0\u5b9e\u7a7a\u95f4\u62bd\u8c61\u8868\u8fbe\u4e3a\u7b26\u53f7\u7a7a\u95f4\uff0c\u5982\u5c06\u9053\u8def\u6bb5\u62bd\u8c61\u4e3a\u70b9\uff0c\u5e76\u5229\u7528\u53e5\u6cd5\u6a21\u578b\u7684\u8ba1\u7b97\u4e0e\u5206\u6790\u5c06\u5177\u6709\u62d3\u6251\u5173\u7cfb\u7684\u56fe\u89e3\u4e0e\u53d8\u91cf\u4e00\u4e00\u5bf9\u5e94\uff0c\u6210\u529f\u5c06\u57ce\u5e02\u7a7a\u95f4\u5f15\u5165\u5b9a\u91cf\u7684\u8868\u8fbe\u3002 \u57fa\u4e8e\u91cd\u529b\u6a21\u578b\u8ba1\u7b97\u53ef\u8fbe\u6027\u6307\u6807\u7684\u65b9\u6cd5 \u5c06\u7a7a\u95f4\u5212\u5206\u4e3a\u683c\u7f51\uff0c\u5b9a\u4e49\u51fa\u79df\u8f66GPS\u8f68\u8ff9\u4e3a\u4f2a\u683c\u7f51\u5e8f\u5217(pseudo cells)  \u8ba1\u7b97\u8f68\u8ff9\u957f\u5ea6\u5e76\u4e0d\u662f\u51fa\u79df\u8f66\u5b9e\u9645\u884c\u9a76\u7684\u7f51\u7edc\u8ddd\u79bb \u5ffd\u7565\u8def\u7f51\u73af\u5883\u5bfc\u81f4\u5728\u5206\u6790\u8f68\u8ff9\u7279\u5f81\u65f6\u65e0\u89c6\u57ce\u5e02\u4ea4\u901a\u6761\u4ef6   \u5224\u522b\u8f68\u8ff9\u5f02\u5e38\u7a0b\u5ea6\u7684\u6307\u6807  \u8ddd\u79bb\u7ea6\u675f\uff1a\u5b9e\u9645\u8ddd\u79bb\u4e0e\u6700\u77ed\u8def\u5f84\u4e4b\u95f4\u7684\u91cf\u5316\u5dee\u5f02 \u89c4\u907f\u8def\u6bb5\u7ea6\u675f \u65f6\u95f4\u7ea6\u675f\u3002   \u51fa\u79df\u8f66\u7ecf\u8fc7\u7684\u57ce\u5e02\u5173\u952e\u7ed3\u70b9  Journal Article: 2013-Land-Use Classification Using Taxi GPS Traces  Refer: IEEE Transactions on Intelligent Transportation Systems AAAA GPS traces of vehicles human mobility and activity information, which can be closely related to the land use of a region recognizing the social function of urban land pick-up/set-down(set-down\u8868\u793a\u4e0b\u8f66\u70b9\u6bd4\u8f83\u5c11\u89c1\uff0c\u7528drop-off\u5427) dynamics/pattern:\u4e0a\u4e0b\u8f66\u6a21\u5f0f \u4f5c\u8005\u603b\u7ed3\u7684\u8d21\u732e\uff1a   \u5173\u4e8eRemote sensing based land use classification\n Previous (2013) land-use classification research was based on the physical properties of studied objects in remote-sensing data Most urban land-use classification research has used remote-sensing data, particularly satellite images.  satellite resolution spectral reflectance and the nature of the materials methods: Pixel-based classification &amp; Object-based classification      we verify that the social function of a certain urban area can be characterized by the temporal and spatial dynamics of the taxi pick-up/set-down number (the temporal and spatial dynamics: simply describe the variation of pick-up/set-down number over time)\n \u6362\u4e00\u79cd\u8bf4\u6cd5: verified that there is an inherent relationship between land-use classes and the temporal pattern of taxi pick-up/set-down dynamics    designed six features extracted from the pick-up/set-down data of different time lengths\n six features(P7): a recognition accuracy of 95% (\u592a\u9ad8\u4e86\uff1f\u51e0\u5206\u7c7b\uff1f)534 regions with eigth kinds of social functions: Four classical classifiers are evaluated(All the parameters for the algorithms are optimized.):  linear-kernel SVM (Best Classification Result with Feature I + II) k-nearest neighbor linear discriminate analysis three-layer BP      social function transition (\u53d8\u66f4) of regions\n   \u76f8\u5173\u6587\u732e  taxi trace data  Ubiquitous mobility data contain information that is important for the smart environment; reflect urban traffic behaviors and convey lots of information about a city Taxi trace data could be used for:   urban land-use classification approaches using mobility data for land-use classification in the literature  clustering algorithm more land-use classes origin-destination(OD) flows      Journal Article: 2020-The Traj2Vec model to quantify residents\u2019 spatial trajectories and estimate the proportions of urban land-use types  Refer: IJGIS; iGEODATA AAAAA Abstract  geo-semantic mining approach: quantify the trajectories of residents as highdimensional semantic vectors RF: model the relationship between the semantic vectors and\nmixed urban land uses \u8bb2\u7684\u4e00\u624b\u597d\u6545\u4e8b[\u5206\u6790\u6df7\u5408\u6307\u6570\u548c\u65c5\u884c\u8ddd\u79bb\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u53d1\u73b0\u4ed6\u4eec\u4e4b\u95f4\u6709\u4e00\u79cd\u663e\u8457\u7684\uff08\u5f31\u7684\uff09\u8d1f\u76f8\u5173\u5173\u7cfb\uff0c\u8868\u660e\u571f\u5730\u5229\u7528\u6df7\u5408\u6307\u6570\u589e\u52a0\uff0c\u5c45\u6c11\u51fa\u884c\u8ddd\u79bb\u7f29\u77ed\uff0c\u8fdb\u4e00\u6b65\u51cf\u5c11\u4e86\u80fd\u6e90\u6d88\u8017\u3002]: analyzing the mixing index and the travel distance, a weak but significant negative correlation between them; an increase in the degree of mixing will reduce the travel distances of residents.   Introduction  urban land use  the spatial distribution of urban land use urban land uses and urban spatial structures have become increasingly diverse and sophisticated obtaining qualitative and quantitative data on mixed urban land uses quickly and accurately is very important for understanding and managing cities There is a general lack of such studies, because mixed urban land use is difficult to estimate using conventional methods.   trajectory data (\u5957\u8def\u8bb2\u7684\u662f\u6781\u597d\u7684)  [\u6240\u8c13\u5c45\u6c11\u6d3b\u52a8\u6570\u636e]Human activity data can provide more detailed and accurate information for analyzing mixed urban land-uses since urban land use is defined as the use of the urban space by residents and the activities within that area = (the data contain valuable information on how people utilize urban spaces) [LBSs\u80fd\u591f\u63d0\u4f9b\u5c45\u6c11\u6d3b\u52a8\u4fe1\u606f\uff0c\u5e76\u7528\u4e8e\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784\u7814\u7a76]The rapid development of location-based services (LBSs) provides us with a large amount of human activity information that can be used to measure urban spatial structures and land uses. In particular, trajectory information is generated by residents in their daily lives and can represent the resident\u2019s behavioral purposes. [\u4ee5\u5f80\u7684\u7814\u7a76\u4ec5\u4f7f\u7528\u7b80\u5355\u7684\u7279\u5f81] previous studies have only taken some simple features from human activity data, such as the frequency and volume. These methods may waste the majority of the spatial information and the inner spatial correlations in human activity data   geo-semantic mining techniques(\u5927\u8bba\u6587\u53ef\u53c2\u8003)  explore the spatial semantic features of geospatial data [NLP\u4e2d\u7684\u8bed\u4e49\u6316\u6398]In NLP, semantic mining refers to the transformation of words, phrases, signs, and symbols into forms that computers can recognize and understand the relationships between them. Semantic information is a digital high-dimensional feature vector that can fully characterize these relationships. [\u5730\u7406\u8bed\u4e49\u6316\u6398\u89e3\u91ca]geo-semantic mining refers to mining potential relationships in geographical data. By exploiting the potential relationships, we can fully extract the information inside geographical data and apply it in various geographic applications. [\u76ee\u524d\u7684\u5730\u7406\u8bed\u4e49\u6316\u6398\u7814\u7a76]Existing research on geo-semantic mining show that the semantic model can well discover the potential semantic information of the geospatial data, and the obtained information can be used to quantify the relationship between the urban land uses and geospatial data [\u6587\u4e2d\u7684\u8bed\u4e49\u4e0e\u4f20\u7edf\u7684\u5730\u7406\u4fe1\u606f\u8bed\u4e49\u7684\u5173\u7cfb]: In particular, there are some differences between the semantics here and the traditional geographical semantics. The semantics here is an abstract concept that uses feature vectors to represent the potential relationship within geographic data. Traditional geographic semantics refers to describing the meaning of spatial data and the relationship between them, and making the semantics of geographic information explicit.   consider the spatial context in spatial data  introduced the Word2Vec model to measure the potential contextual relationships between POIs and obtained satisfactory results in the classification of detailed urban land uses [POI\u6570\u636e\u662f\u7a7a\u95f4\u79bb\u6563\u7684\uff0c\u6784\u5efa\u8fde\u7eed\u5e8f\u5217\u7684\u65b9\u6cd5\u5f88\u5927\u7a0b\u5ea6\u4e0a\u5f71\u54cd\u7a7a\u95f4\u4e0a\u4e0b\u6587\u5173\u7cfb]POIs are spatially discrete, so some methods were also developed to construct a continuous dataset from POIs. The method used to construct a continuous POI dataset largely affects the spatial contextual relationships, thus affecting the result of urban land-use identification [\u7531POI\u7684\u7a7a\u95f4\u79bb\u6563\u5f15\u7533\u5230\u8f68\u8ff9\u7684\u8fde\u7eed]A trajectory is continuous in space, and a person\u2019s travel information can reflect the use of urban space. Therefore, it is expected that the use of the Word2Vec model to explore the potential semantic information in a trajectory can help us to better understand structures and land uses.      Journal Article: 2017-Road2Vec: Measuring Traffic Interactions in Urban Road System from Massive Travel Routes  Refer: IJGI AAA Abstract  [\u4ea4\u901a\u4e92\u4f5c\u7528\uff1f(\u53cd\u590d\u51fa\u73b0)/\u6211\u89c9\u5f97\u7528Traffic-Flow Dependency\u66f4\u6070\u5f53\u4e00\u4e9b]traffic interactions among urban roads; quantify the implicit traffic interactions; can be effectively utilized for quantifying complex traffic interactions among roads and capturing underlying heterogeneous and non-linear properties large-scale taxi operating route data   Introduction  [\u57ce\u5e02\u9053\u8def\u7684\u4ea4\u901a\u72b6\u51b5\u901a\u5e38\u53d7\u90bb\u8fd1\u9053\u8def\u7684\u5f71\u54cd]The traffic states of urban roads are often influenced by their neighboring roads. Different terms, such as spatial dependency/relationship in traffic and spatial correlation, are used in the literature to express such relationship between neighboring roads. In this paper, we use the term traffic interaction to describe the traffic influence between neighboring roads, which is fundamentally caused by the dynamic vehicle movements from one road to another. [\u9053\u8def\u4e4b\u95f4\u7684\u4ea4\u4e92\u6e90\u4e8e\u8f66\u8f86\u7684\u79fb\u52a8\uff1b\u56e0\u6b64\u9053\u8def\u4e4b\u95f4\u7684\u672c\u8d28\u8054\u7cfb\u53ef\u4ee5\u4ece\u8f66\u8f86\u8f68\u8ff9\u4e4b\u95f4\u83b7\u53d6]Essentially, the traffic influence among roads originates from numerous vehicle movements on road systems; hence, the inherent relationships among roads should be extracted from massive vehicle travel routes. [\u5411\u91cf\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u89e3\u91ca]According to the principle of word embedding models, a high similarity between two word vectors indicates that the two words co-occur frequently in textual documents or their local contexts are very similar. Correspondingly, high similarity between two road segment vectors indicates that two road segments frequently co-occur in travel routes or they frequently share common upstream and/or downstream segments in travel routes. Both situations indicate that there are strong traffic interactions. [\u6d6e\u52a8\u8f66\u6570\u636e] (low-frequency) floating car data (FCD) collected by GPS-equipped taxies; [\u4e58\u5ba2\u4e0a\u4e0b\u8f66\u4f4d\u7f6e]passengers\u2019 pick-up and drop-off locations; mapping each GPS point to a road segment=&gt;travel routes [\u770b\u6765\u5927\u5bb6\u90fd\u559c\u6b22\u8ba1\u7b97\u8fd9\u4e2a\u5e73\u5747\u76f8\u4f3c\u5ea6]calculate the average similarities of vectors among the first-order, second-order, third-order, and fourth-order neighboring roads, respectively    Journal Article: 2019-Identifying spatial interaction patterns of vehicle movements on urban road networks by topic modelling  Refer: CEUS; \u672a\u540d\u65f6\u7a7a AAA \u4e0e\u4e0a\u4e00\u7bc7(Road2Vec)\u540c\u4f5c\u8005traffic interaction =&gt; spatial interaction Abstract  investigate the spatial interactions derived from human movements = identify spatial interaction patterns of vehicle movements on urban road network [\u57ce\u5e02\u5c45\u6c11\u79fb\u52a8\u53d7\u9650\u4e8e\u8f66\u8f86\u548c\u57ce\u5e02\u8def\u7f51=&gt;\u9053\u8def\u4e4b\u95f4\u7684\u4ea4\u4e92]in most cases, human movements are carried by vehicles and constrained by the underlying road network, which causes the interactions among roads &ldquo;strokes&rdquo; (i.e., natural streets) are chosen as geographical units to represent the vehicle moving paths.    Journal Article: 2017-Street as a big geo-data assembly and analysis unit in urban studies: A case study using Beijing taxi data  Refer: Applied Geography AAAAA \u5b66\u4f1a\u6234\u5e3d\u5b50 Abstract  understanding urban environments Spatial assembly: an essential analytical step to summarize and perceive geographical environment from individual behaviours [\u8857\u9053\u5c3a\u5ea6]the adopted spatial units for data aggregation remain areal in nature; sensing cities from a street perspective, emphasizes the significance of street units in quantitative urban studies three-month taxi trajectory dataset [\u9053\u8def\u7684\u52a8\u6001\u529f\u80fd\u548c\u627f\u8f7d\u529b]explore the spatio-temporal patterns of urban mobility on streets, cluster streets into nine types based on their dynamic functions and capacities is able to effectively minify the modifiable areal unit problem (MAUP) [\u610f\u4e49\u5957\u88c5]sense urban dynamics, depict urban functions, and understand urban structures   Introduction  [\u4f20\u611f\u5668\u6570\u636e]Through automated and routine movement tracking of individuals, various forms of locator devices work as sensors to collect geospatial data and characterize the activity of a city in both spatial and temporal perspectives [\u4e24\u4e2a\u89d2\u5ea6\u7684\u5e3d\u5b50]From the perspective of individuals, citizens play the role of voluntary sensors and produce plenty of volunteered geographic information. At the collective level, the distribution of geographic phenomena such as land use (or social function) and the pattern of spatial interaction flows can be investigated after spatio-temporal aggregation of individual behaviour data. [\u4e24\u79cd\u5c5e\u6027\u7528\u4e8e\u7406\u89e3\u57ce\u5e02\u95ee\u9898]Utilizing massive amounts of geospatial data, the first-order distribution of urban attributes (e.g., economic indices, population intensity, condition of public facilities), as well as second-order interactions (e.g., human movements, flow of goods, financial flows, social ties) can be used to better understand human mobility, urban functions, and urban structures [\u7a7a\u95f4\u96c6\u914d(?)\u4e2d\u7684MAUP\u95ee\u9898]Spatial assembly: inevitable to confront the issue of spatial resolution (or scale) when mapping individual details onto regular or irregular units  Voronoi polygons regular grids   [\u8857\u9053\u5c3a\u5ea6\u7814\u7a76\u7684\u610f\u4e49]using streets as the basic elements to characterize urban functions and understand urban structures.  the street system is never an insignificant part of a city. Lynch\u7684\u57ce\u5e02\u6620\u8c61,path\u4e3a\u9996 [\u57ce\u5e02\u5185\u90e8\u7684\u79fb\u52a8\u53d7\u8def\u7f51/\u8857\u9053\u9650\u5236]It is now generally accepted that the physical movement in an urban space is usually constrained by a road network and streets interlink urban functions physically and cognitively [\u9762\u72b6\u7814\u7a76\u5355\u5143\u7684\u66ff\u4ee3]street unit is a promising substitute for areal units and can help us uncover hidden knowledge concealed under areas     Methodology  Temporal patterns of pick-ups and drop-offs Association of street classifications with dynamic street\npatterns  Hierarchical clustering based on dynamic street functions and\ncapacities: (1) vector; (2) normalization; (3) unsupervised hierarchical bisecting k-means clustering. Characterizing street types by dynamic functions and capacities: (1) classified into nine types. Uncovering urban structures in the street perspective: (1) Uncovering urban structures in the street perspective; (2) detect communities with the best modularity.   The complexity of streets  [\u672a\u8003\u8651\u571f\u5730\u5229\u7528\u7684\u590d\u6742\u6027]comprise the complex land uses along streets [\u672a\u8003\u8651\u53cc\u5411\u9053\u8def\u5c5e\u6027]the bidirectional nature of streets is not considered in our work for simplicity.      Journal Article: 2016-Incorporating spatial interaction patterns in classifying and understanding urban land use  Refer: IJGIS Abstract  Land use classification travel behaviour [(\u5927\u6570\u636e)\u4f5c\u4e3a\u4f20\u7edf\u9065\u611f\u5f71\u54cd\u6570\u636e\u65b9\u6cd5\u7684\u4e00\u79cd\u8865\u5145]complementing the outcome of traditional remote sensing methods spatial interaction patterns [\u672a\u80fd\u5f97\u5230\u9a8c\u8bc1\u548c\u5206\u6790]have rarely been examined and analysed unsupervised land use classification method   Introduction  Traditionally, researchers collect residents\u2019 trip information by travel surveys understand human movements and urban built environments [\u57ce\u5e02\u5c45\u6c11\u6d3b\u52a8\u7684\u8ffd\u8e2a/\u8db3\u8ff9]the spatial footprints of citizens\u2019 activities [\u4eba\u4eec\u7684\u79fb\u52a8\u662f\u53ef\u4ee5\u9884\u6d4b\u7684]people\u2019s mobilities are highly predictable emphasizes the social function of a place [\u76f8\u540c\u571f\u5730\u5229\u7528\u7c7b\u578b\u7684\u533a\u57df\u7528\u76f8\u4f3c\u7684\u65f6\u7a7a\u6d3b\u52a8\u6a21\u5f0f]The routines of people guarantee that places of the same land use type, to some extent, share similar temporal activity variations. [\u4ec5\u4ec5\u6269\u5145\u65f6\u7a7a\u6d3b\u52a8\u53d8\u91cf\u662f\u65e0\u6cd5\u8865\u6551\u7684]simply adding more features of temporal activity variations for land use classification is not a remedy. [\u8003\u8651\u8f68\u8ff9\u8fde\u7eed\u6027\uff0c\u63d0\u53d6\u4ea4\u901a\u6d41(\u7279\u5f81)]consider the movement between two consecutive activities as a travel and extract traffic flows from the trajectory data    Journal Article: 2019-Detecting regional dominant movement patterns in trajectory data with a convolutional neural network  Refer: IJGIS Abstract  movement pattern detection detect regional dominant movement patterns (RDMP) in trajectory data a novel feature descriptor  directional flow image (DFI) to store the local directional movement information   a classification model  TRNet, designed based on CNN trained with a synthetic trajectory dataset [\u5408\u6210\u8f68\u8ff9\u6570\u636e]   a sliding window detector - detect RDMP at multiple scales a clustering-based merging method - prune the redundant detection results Evalution  high training accuracy experiments on a real-world taxi trajectory dataset   Introduction  [\u79fb\u52a8\u6a21\u5f0f\u91cd\u8981\u6027] Movement patterns embedded in trajectory data can provide valuable information for the tracked objects and the context, which play an important role in many applications. previous work =&gt; low generalization capability [\u6df1\u5ea6\u5b66\u4e60\u5e94\u7528\u5728\u4ea4\u901a\u9886\u57df\u7684\u4e00\u4e9b\u5c1d\u8bd5] several attempts have been made in the transportation domain to employ deep learning methods to exploit the value of big data. Conventional CNN models  the input of CNN is required to be a fixed tensor A trajectory can contain a variable number of points, which belongs to vector data a trajectory provides two additional pieces of information: direction and connectivity between points   To address the above problem, this paper&hellip;      ",
        "description": "",
        "id": 80,
        "section": "posts",
        "tags": [
            "\u51fa\u79df\u8f66\u8f68\u8ff9",
            "\u8f68\u8ff9",
            "Trajectory",
            "\u8bba\u6587",
            "\u8bba\u6587\u9605\u8bfb",
            "Human activity data",
            "NLP",
            "semantic",
            "geo-semantic mining",
            "geo-semantic",
            "spatial context",
            "interactions",
            "vehicle moving paths"
        ],
        "title": "Papers Reading-Taxi Trajectory/GPS Records",
        "uri": "/posts/notes/2020-02-24-papers_reading-taxi_trajectory_gps_records/"
    },
    {
        "content": " \u6574\u7406\u548c\u603b\u7ed3\u4e86\u8bba\u6587\u5199\u4f5c\u4e2d\u5173\u4e8e\u57ce\u5e02\u4e3b\u9898\u6a21\u578b\u3001\u57ce\u5e02\u529f\u80fd\u533a\u57df\u6316\u6398\u76f8\u5173\u7684\u77ed\u8bed\u8bcd\u7ec4\u6216\u76f8\u5173\u53e5\u578b\u53e5\u5f0f\u3002\n \u77ed\u8bed   \u57ce\u5e02\u529f\u80fd\u533a  urban function(s) urban functional zones urban functional areas    \u57ce\u5e02\u571f\u5730\u5229\u7528\u3001\u571f\u5730\u5229\u7528\u6591\u5757  (urban) land use land use of parcels    \u57ce\u5e02\u7a7a\u95f4\uff0c\u57ce\u5e02\u73af\u5883\uff0c\u57ce\u5e02\u7a7a\u95f4\u4e0a\u4e0b\u6587  urban space, e.x., utilization of urban space \u57ce\u5e02\u7a7a\u95f4\u7684\u5229\u7528 land parcels with diverse functions \u4e0d\u540c\u529f\u80fd\u7684\u57ce\u5e02\u6591\u5757 urban spatial structure \u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784 spatial and social structure of urban environments \u57ce\u5e02\u73af\u5883\u7684\u7a7a\u95f4\u548c\u793e\u4f1a\u7ed3\u6784 (urban) socioeconomic environments \u793e\u4f1a\u7ecf\u6d4e\u73af\u5883 in the context of geographical space \u57ce\u5e02\u7a7a\u95f4\u4e0a\u4e0b\u6587    \u63d0\u53d6/\u63cf\u7ed8/\u8bc6\u522b/\u6316\u6398/\u63a2\u7d22/\u5212\u5206 \u57ce\u5e02\u529f\u80fd\u533a  infer/delineate/identified/discover/detect ~ understanding, representing, and reasoning accurate classification of urban functional zones \u57ce\u5e02\u529f\u80fd\u533a\u7684\u7cbe\u786e\u5212\u5206 sensing the spatial structures of urban land use quickly \u611f\u77e5\u57ce\u5e02\u571f\u5730\u5229\u7528\u7684\u7a7a\u95f4\u7ed3\u6784 identifying urban function structures accurately \u8bc6\u522b\u57ce\u5e02\u529f\u80fd\u7ed3\u6784 infer the territory of these functions \u63a8\u65ad\u57ce\u5e02\u529f\u80fd\u533a\u7684\u8303\u56f4     \u5730\u7406\u7a7a\u95f4/\u571f\u5730\u7684\u4e00\u79cd\u7279\u5f81/\u5c5e\u6027  an attribute of land geospatial features    \u57ce\u5e02\u4ea4\u901a\uff0c\u516c\u5171\u5b89\u5168\uff0c\u57ce\u5e02\u7ba1\u7406  the city transportation, public security, and management    \u57ce\u5e02\u7cfb\u7edf\u7684\u590d\u6742\u6027  the comlexity of urban systems    \u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf  High spatial resolution (HSR) remote sensing images    \u4f5c\u7528\uff0c\u610f\u4e49\u7c7b\u63cf\u8ff0  improve urban vitality \u63d0\u5347\u57ce\u5e02\u6d3b\u529b meet the daily living needs of citizens \u6ee1\u8db3\u57ce\u5e02\u5c45\u6c11\u7684\u65e5\u5e38\u9700\u6c42 to better serve residents and their cities \u66f4\u597d\u7684\u670d\u52a1\u57ce\u5e02\u5c45\u6c11 The rational distribution of urban functions facilitates the daily living of citizens. \u57ce\u5e02\u529f\u80fd\u533a\u7684\u5408\u7406\u5e03\u5c40\u4fc3\u8fdb\u57ce\u5e02\u5c45\u6c11\u7684\u65e5\u5e38\u751f\u6d3b\u3002 characterize intra-city urban spatial structure \u7279\u5f81\u5316\u57ce\u5e02\u7a7a\u95f4\u7ed3\u6784 inform future planning and policy evaluation \u672a\u6765\u89c4\u5212\u548c\u89c4\u5212\u8bc4\u4ef7\u505a\u53c2\u8003 design better urbanization strategies for the future \u8bbe\u8ba1\u66f4\u597d\u7684\u57ce\u5e02\u5316\u7b56\u7565      \u6458\u53e5 &nbsp;   \u4f5c\u7528\uff0c\u610f\u4e49\u7c7b\u63cf\u8ff0  Urban land use information plays an important role in urban management, government policy-making, and population activity monitoring. \uff08\u57ce\u5e02\u571f\u5730\u5229\u7528\u4fe1\u606f\u5728\u57ce\u5e02\u7ba1\u7406\uff0c\u653f\u5e9c\u51b3\u7b56\u548c\u4eba\u7c7b\u6d3b\u52a8\u76d1\u6d4b\u65b9\u9762\u5360\u7528\u91cd\u8981\u5730\u4f4d\u3002\uff09 Land use and land cover (LULC) information comprises essential geographical spatial features for many fields, such as urban planning, government management, and sustainable development (\u53ef\u6301\u7eed\u53d1\u5c55).\uff08\u571f\u5730\u5229\u7528\u548c\u571f\u5730\u8986\u76d6\u4fe1\u606f\u5305\u542b\u5927\u91cf\u7684\u57fa\u672c\u5730\u7406\u7a7a\u95f4\u7279\u5f81\u5bf9\u8bb8\u591a\u9886\u57df\uff0c\u5982\u3002\u3002\u3002\u4f55\u53ef\u6301\u7eed\u53d1\u5c55\u3002\uff09 As an attribute of land, the urban function indicates the types of potential activities in such areas.\uff08\u4f5c\u4e3a\u571f\u5730\u7684\u4e00\u79cd\u5c5e\u6027\uff0c\u57ce\u5e02\u529f\u80fd\u533a\u8868\u660e\u8be5\u533a\u57df\u6f5c\u5728\u6d3b\u52a8\u7684\u7c7b\u578b\u3002\uff09 Cities support a variety of functions that relate to land use types, including residential, commercial, industrial, transportation, and business regions and infrastructure, while affording different types of human activities, such as living, working, commuting, shopping, eating, and recreation. \u57ce\u5e02\u652f\u6301\u4e86\u4e0e\u571f\u5730\u5229\u7528\u7c7b\u578b\u76f8\u5173\u7684\u5927\u91cf\u529f\u80fd\uff0c\u5305\u62ec\u5c45\u4f4f\uff0c\u91d1\u878d\uff0c\u5de5\u4e1a\uff0c\u4ea4\u901a\uff0c\u5546\u4e1a\u548c\u57fa\u7840\u8bbe\u65bd\uff0c\u627f\u8f7d\u7740\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u7c7b\u6d3b\u52a8\uff0c\u5982\u5c45\u4f4f\uff0c\u5de5\u4f5c\uff0c\u901a\u52e4\uff0c\u8d2d\u7269\uff0c\u996e\u98df\u548c\u4f11\u95f2\u5a31\u4e50\u3002 Cities consist of many different functional regions that interact with each other, which generates the complexities that shape a city. \u57ce\u5e02\u4e2d\u5305\u542b\u8bb8\u591a\u76f8\u4e92\u4ea4\u4e92\u7684\u4e0d\u540c\u529f\u80fd\u533a\uff0c\u4fc3\u4f7f\u57ce\u5e02\u7684\u591a\u6837\u6027\u3002 The step of urbanization and modern civilization leads to (gradually fosters) different functional regions in a city, e.g., residential areas, business districts, and educational areas, which support different needs of people\u2019s urban lives and serve as a valuable organizing technique for framing detailed knowledge of a metropolitan. \u57ce\u5e02\u5316\u548c\u73b0\u4ee3\u5316\u7684\u811a\u6b65\uff08\u8fdb\u6b65\uff09\u4fc3\u4f7f\u5728\u57ce\u5e02\u4e2d\u5f62\u6210\u4e86\u591a\u79cd\u529f\u80fd\u533a\uff0c\u4f8b\u5982\u5c45\u4f4f\u533a\uff0c\u5546\u4e1a\u533a\u548c\u6559\u80b2\u533a\u7b49\uff0c\u8fd9\u4e9b\u529f\u80fd\u533a\u652f\u6301\u8005\u751f\u6d3b\u5728\u57ce\u5e02\u4e2d\u7684\u4eba\u4eec\u7684\u4e0d\u540c\u9700\u6c42\uff0c\u540c\u65f6\u4f5c\u4e3a\u4e00\u79cd\u9ad8\u4ef7\u503c\u7684\u5bf9\u57ce\u5e02\u7406\u89e3\u548c\u77e5\u8bc6\u7684\u7ec4\u7ec7\u6280\u672f\u3002 Hence, sensing the spatial structures of urban land use quickly and identifying urban function structures accurately are of great significance in formulating effective policies and regulations for urban planning. \u56e0\u6b64\uff0c\u611f\u77e5\u57ce\u5e02\u571f\u5730\u5229\u7528\u7684\u7a7a\u95f4\u7ed3\u6784\u548c\u8bc6\u522b\u57ce\u5e02\u529f\u80fd\u7ed3\u6784\u5728\u57ce\u5e02\u89c4\u5212\u9ad8\u6548\u51b3\u7b56\u4e2d\u6709\u91cd\u8981\u4f5c\u7528\u3002 The discovered functional regions help people easily understand a complex metropolitan, benefiting a variety of applications, such as urban planning, location choosing for a business, advertisement casting, and social recommendations.\u529f\u80fd\u533a\u57df\uff08\u7684\u53d1\u73b0\uff09\u5e2e\u52a9\u4eba\u4eec\u7406\u89e3\u590d\u6742\u57ce\u5e02\uff0c\u6709\u52a9\u4e8e\u5927\u91cf\u5e94\u7528\uff0c\u5982\u57ce\u5e02\u89c4\u5212\uff0c\u5546\u4e1a\u4f4d\u7f6e\u9009\u5740\uff0c\u5e7f\u544a\u6295\u653e\uff0c\u793e\u4ea4\u63a8\u8350\u7b49\u3002 \u5bf9\u4e8e\u4ece\u4e8b\u57ce\u5e02\u89c4\u5212\u7684\u4e13\u5bb6\u5b66\u8005\u548c\u57ce\u5e02\u7684\u7ba1\u7406\u8005\u6765\u8bf4\uff0c\u57ce\u5e02\u529f\u80fd\u533a\u7684\u8bc6\u522b\u548c\u533a\u57df\u91cd\u8981\u7a0b\u5ea6\u5206\u6790\u53ef\u4ee5\u542f\u53d1\u57ce\u5e02\u7684\u5408\u7406\u89c4\u5212\u3002\u57ce\u5e02\u7a7a\u95f4\u5e03\u5c40\u590d\u6742\uff0c\u533a\u57df\u529f\u80fd\u53d1\u5c55\u5f88\u96be\u9884\u6d4b\u548c\u638c\u63a7\u3002\u57ce\u5e02\u529f\u80fd\u533a\u7684\u8bc6\u522b\u65e2\u53ef\u4ee5\u5bf9\u4e4b\u524d\u653f\u7b56\u89c4\u5212\u7528\u5730\u6709\u6548\u9a8c\u8bc1\uff0c\u540c\u65f6\u53c8\u53ef\u4ee5\u5f88\u597d\u7684\u76d1\u7763\u571f\u5730\u4f7f\u7528\u60c5\u51b5\u6307\u5bfc\u57ce\u5e02\u53ef\u6301\u7eed\u53d1\u5c55\uff0c\u534f\u8c03\u7ba1\u7406\u57ce\u5e02\u8d44\u6e90\u73af\u5883\u7684\u914d\u7f6e\u3002\u5bf9\u4e8e\u57ce\u5e02\u5c45\u6c11\u6765\u8bf4\uff0c\u57fa\u4e8e\u8f68\u8ff9\u6570\u636e\u6316\u6398\u4e0e\u5174\u8da3\u70b9\u8bed\u4e49\u5206\u6790\u7684\u57ce\u5e02\u529f\u80fd\u533a\u8bc6\u522b\u65b9\u6cd5\u53ef\u4ee5\u4e3a\u5546\u5bb6\u548c\u5b85\u57fa\u5730\u9009\u5740\u63d0\u4f9b\u4fbf\u5229\u3002\u5408\u7406\u7684\u529f\u80fd\u533a\u5206\u5e03\u4e5f\u4e3a\u57ce\u5e02\u5c45\u6c11\u7684\u516c\u5171\u670d\u52a1\u63d0\u4f9b\u4fdd\u969c\uff0c\u4f7f\u516c\u5171\u7ba1\u7406\u66f4\u52a0\u667a\u6167\uff0c\u5c45\u6c11\u751f\u6d3b\u8d28\u91cf\u5f97\u5230\u63d0\u5347\u3002    \u7814\u7a76\u8fdb\u5c55\u76f8\u5173  The effective detection of urban land use patterns, which are significant for formulating effective urban planning policies, has been a controversial issue in recent studies. \u6709\u6548\u7684\u76d1\u6d4b\u57ce\u5e02\u571f\u5730\u5229\u7528\u6a21\u5f0f\uff0c\u6210\u4e3a\u4e00\u4e2a\u8fd1\u671f\u7814\u7a76\u4e2d\u4e89\u8bae\u6027\u7684\u8bdd\u9898\u3002 Regarding temporal activity signatures as the proxy of human activities, the close relationship between human activity patterns and urban functions has been recognized. \u5c06\u4eba\u7c7b\u6d3b\u52a8\u7279\u5f81\u4f5c\u4e3a\u4ee3\u7406\uff0c\u6316\u6398\u4eba\u7c7b\u6d3b\u52a8\u6a21\u5f0f\u4e0e\u57ce\u5e02\u529f\u80fd\u533a\u4e4b\u95f4\u7684\u5173\u7cfb\u3002    \u57ce\u5e02\u5feb\u901f\u53d1\u5c55\uff0c\u57ce\u5e02\u5316\u8fdb\u7a0b  China's repid economic and urban developments have generated diverse and sohisticated(\u590d\u6742\u7684) urban functional zones which reflect in urban land use patterns. \u4e2d\u56fd\u5feb\u901f\u7684\u7ecf\u6d4e\u548c\u57ce\u5e02\u53d1\u5c55\u4fc3\u4f7f\u591a\u6837\u548c\u590d\u6742\u7684\u57ce\u5e02\u529f\u80fd\u533a\u7684\u751f\u6210\uff0c\u53cd\u6620\u57ce\u5e02\u571f\u5730\u5229\u7528\u6a21\u5f0f\u3002 In recent years, rapid urbanization and modern civilizations have generated diverse and sophisticated urban land use types, such as residential areas, education facilities and business districts, at different scales in China. \u5728\u6700\u8fd1\u51e0\u5e74\uff0c\u5feb\u901f\u7684\u57ce\u5e02\u5316\u548c\u73b0\u4ee3\u6587\u660e\u5316\u8fdb\u7a0b\u5b58\u751f\u4e86\u591a\u6837\u7684\uff0c\u590d\u6742\u7684\u548c\u591a\u5c3a\u5ea6\u7684\u571f\u5730\u5229\u7528\u7c7b\u578b\uff0c\u6bd4\u5982\u8bf4\u5c45\u4f4f\u533a\uff0c\u6559\u80b2\u8bbe\u65bd\uff0c\u5546\u4e1a\u533a\u3002    \u57ce\u5e02\u529f\u80fd\u533a\u57df/\u57ce\u5e02\u571f\u5730\u5229\u7528\u7684\u652f\u914d\u6027\uff0c\u53d7\u591a\u65b9\u9762\u5f71\u54cd  Urban function is directly determined by human activities and also related to the land use type, which is a static attribute planned by the government.\uff08\u57ce\u5e02\u529f\u80fd\u76f4\u63a5\u7531\u4eba\u7c7b\u6d3b\u52a8\u51b3\u5b9a\uff0c\u540c\u65f6\u4e5f\u4e0e\u571f\u5730\u5229\u7528\u7c7b\u578b\u76f8\u5173\uff0c\u8fd9\u79cd\u571f\u5730\u5229\u7528\u7c7b\u578b\u662f\u4e00\u79cd\u53d7\u653f\u5e9c\u90e8\u95e8\u89c4\u5212\u7684\u9759\u6001\u5c5e\u6027\u3002\uff09 Urban land use patterns are affected not only by government policies but also indoor lifestyles, which are continuously changing with urban development.\uff08\u57ce\u5e02\u571f\u5730\u5229\u7528\u6a21\u5f0f\u4e0d\u4ec5\u53d7\u653f\u5e9c\u51b3\u7b56\u7684\u652f\u914d\uff0c\u540c\u65f6\u53d7\u5230\u6301\u7eed\u53d8\u5316\u7684\u751f\u6d3b\u73af\u5883\u7684\u5f71\u54cd\u3002\uff09 Urban or regional land use patterns are not only determined by urban layouts specified by governments but also affected by people\u2019s lifestyles, which cannot be stereotyped and are continuously changing with further urban development.\uff08\u57ce\u5e02\u548c\u5c40\u90e8\u571f\u5730\u5229\u7528\u6a21\u5f0f\u4e0d\u4ec5\u53d7\u653f\u5e9c\u51b3\u7b56\u7684\u652f\u914d\uff0c\u540c\u65f6\u53d7\u4eba\u4eec\u751f\u6d3b\u65b9\u5f0f\u7684\u5f71\u54cd\u3002\uff09 Urban regions may be artificially designed by urban planners, or naturally formulated according to people\u2019s actual lifestyle, and would change functions and territories (\u533a\u57df\uff0c\u8303\u56f4) with the development of a city. (\u57ce\u5e02\u533a\u57df\u53ef\u80fd\u53c8\u57ce\u5e02\u89c4\u5212\u8005\u7684\u4eba\u4e3a\u8bbe\u8ba1\uff0c\u6216\u8005\u53d7\u5230\u4eba\u4eec\u751f\u6d3b\u65b9\u5f0f\u7684\u81ea\u7136\u5f71\u54cd\uff0c\u5e76\u4e14\u57ce\u5e02\u533a\u57df\u4f1a\u53d7\u5230\u57ce\u5e02\u53d1\u5c55\u800c\u6539\u53d8\u529f\u80fd\u548c\u8303\u56f4)    \u6570\u636e\u5c42\u9762\u63cf\u8ff0\uff0c\u5730\u7406\u5927\u6570\u636e  The development of information and communication technology (ICT) offers the opportunity to gain a significant amount of geo-data with fine-grained human activity information. Spatial-temporal analyses of human activities based on big geo-data, such as social media check-in data, taxi trajectory data, and mobile phone data, benefit the understanding of socioeconomic environments.\uff08\u4fe1\u606f\u4ea4\u6d41\u6280\u672f\u7684\u5feb\u901f\u53d1\u5c55\u63d0\u4f9b\u4e00\u4e2a\u91cd\u8981\u7684\u673a\u4f1a\u83b7\u53d6\u5927\u91cf\u7684\u5730\u7406\u6570\u636e\uff0c\u63ed\u793a\u7ec6\u7c92\u5ea6\u7684\u4eba\u7c7b\u6d3b\u52a8\u4fe1\u606f\u3002\u57fa\u4e8e\u8fd9\u4e9b\u5730\u7406\u6570\u636e\u7684\u4eba\u7c7b\u6d3b\u52a8\u65f6\u7a7a\u5206\u6790\uff0c\u4f8b\u5982\u793e\u4ea4\u5a92\u4f53\u7b7e\u5230\u6570\u636e\uff0c\u51fa\u79df\u8f66\u8f68\u8ff9\u6570\u636e\uff0c\u79fb\u52a8\u624b\u673a\u6570\u636e\uff0c\u4fc3\u8fdb\u5bf9\u793e\u4f1a\u7ecf\u6d4e\u73af\u5883\u7684\u7406\u89e3\u3002\uff09 There is a growing trend of using location-awareness sensing data (e.g., trajectories from mobile phones), POI data, and social media feeds to study the spatial and social structure of urban environments.\u57fa\u4e8e\u4f4d\u7f6e\u611f\u77e5\u4f20\u611f\u5668\u6570\u636e\uff0cPOI\u6570\u636e\u548c\u793e\u4ea4\u5a92\u4f53\u6570\u636e\u6765\u7814\u7a76\u57ce\u5e02\u73af\u5883\u7684\u7a7a\u95f4\u548c\u793e\u4f1a\u7ed3\u6784\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\u3002     \u9065\u611f\u5f71\u50cf\u63cf\u8ff0  High spatial resolution (HSR) remote sensing images enable computation-based urban land use detection, where HSR image classification models have been extensively applied to extract and analyze LULC in recent studies.\uff08\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u4f7f\u57fa\u4e8e\u8ba1\u7b97\u7684\u57ce\u5e02\u571f\u5730\u5229\u7528\u76d1\u6d4b\u6210\u4e3a\u53ef\u80fd\uff0c\u5927\u91cf\u9ad8\u5206\u8fa8\u7387\u9065\u611f\u5f71\u50cf\u5206\u7c7b\u6a21\u578b\u88ab\u5e7f\u6cdb\u5e94\u7528\u5728\u63d0\u53d6\u548c\u5206\u6790LULC\u7814\u7a76\u4e2d\u3002\uff09 Analyses of urban LULC are primarily conducted with three types of spatial units; units of pixels and objects are usually employed to evaluate land cover, whereas scenes are commonly used to identify urban functional zones and accurate urban land use patterns. \uff08\u5206\u6790\u57ce\u5e02LULC\u4e3b\u8981\u5e94\u7528\u4e09\u79cd\u7c7b\u578b\u7684\u7a7a\u95f4\u5355\u5143\u3002\u57fa\u4e8e\u50cf\u7d20\u548c\u57fa\u4e8e\u5bf9\u8c61\u7684\u65b9\u6cd5\u901a\u5e38\u5e94\u7528\u5728\u8bc4\u4f30\u571f\u5730\u8986\u76d6\uff0c\u57fa\u4e8e\u573a\u666f\u7684\u65b9\u6cd5\u901a\u5e38\u5e94\u7528\u4e8e\u8bc6\u522b\u57ce\u5e02\u529f\u80fd\u533a\u57df\u548c\u571f\u5730\u5229\u7528\u6a21\u5f0f\u3002\uff09 Many studies applied object-oriented classification (OOC) models to extract urban land use patterns using physical features (such as spectral, shape, and texture features) of ground components. However, OOC models often overlook the spatial distribution and semantic features of ground components because they were only designed to mine the low-level semantic land cover information of ground components.\uff08\u5f88\u591a\u7814\u7a76\u5e94\u7528\u5730\u9762\u7684\u7269\u7406\u7279\u5f81\uff08\u5149\u8c31\uff0c\u5f62\u72b6\u548c\u7eb9\u7406\u7279\u5f81\uff09\uff0c\u91c7\u7528\u57fa\u4e8e\u5bf9\u8c61\u7684\u5206\u7c7b\u6a21\u578b\u6765\u63d0\u53d6\u57ce\u5e02\u571f\u5730\u5229\u7528\u6a21\u5f0f\u3002\u7136\u800cOOC\u6a21\u578b\u901a\u5e38\u5ffd\u89c6\u4e86\u5730\u9762\u7684\u7a7a\u95f4\u5206\u5e03\u548c\u8bed\u4e49\u7279\u5f81\u3002\u3002\uff09 Remote sensing images together with spatial metrics have been widely used to classify urban land use and monitor change at different spatial scales.\uff08\u57fa\u4e8e\u7a7a\u95f4\u6307\u6807\u7684\u9065\u611f\u5f71\u50cf\u5df2\u7ecf\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4e0d\u540c\u5c3a\u5ea6\u7684\u57ce\u5e02\u571f\u5730\u5229\u7528\u5206\u7c7b\u548c\u76d1\u6d4b\u3002\uff09 However, human activities usually take place in different types of points of interest (POIs). Remote sensing techniques perform well in extracting physical characteristics, such as land surface reflectivity and texture of urban space but are not good in identifying functional interaction patterns or in helping understand socioeconomic environments. Compared with other datasets and methods in remote sensing and field mapping, using POI data, social media, and their associated methods can lead to a better understanding of individual- and group-level utilization of urban space at a fine-grained spatial and temporal resolution. \uff08\u7136\u800c\uff0c\u4eba\u7c7b\u6d3b\u52a8\u901a\u5e38\u5728\u4e0d\u540c\u7c7b\u578b\u7684POI\u53d1\u751f\u3002\u9065\u611f\u6280\u672f\u5728\u63d0\u53d6\u7269\u7406\u7279\u5f81\uff0c\u5982\u571f\u5730\u8986\u76d6\u53cd\u5c04\u7387\u548c\u57ce\u5e02\u7a7a\u95f4\u7eb9\u7406\uff0c\u7b49\u7279\u5f81\u65f6\u8868\u73b0\u4f18\u5f02\uff0c\u4f46\u662f\u5e76\u4e0d\u64c5\u957f\u4e8e\u8bc6\u522b\u529f\u80fd\u4ea4\u4e92\u6a21\u5f0f\u6216\u8005\u7406\u89e3\u793e\u4f1a\u7ecf\u6d4e\u73af\u5883\u3002\u5bf9\u6bd4\u9065\u611f\u548c\u5236\u56fe\u9886\u57df\u7684\u5176\u4ed6\u6570\u636e\u96c6\u548c\u76f8\u5173\u65b9\u6cd5\uff0c\u4f7f\u7528POI\u6570\u636e\uff0c\u793e\u4ea4\u6570\u636e\u548c\u4ed6\u4eec\u76f8\u5e94\u7684\u65b9\u6cd5\u53ef\u4ee5\u66f4\u597d\u7684\u7406\u89e3\u4e0d\u540c\u65f6\u7a7a\u5c3a\u5ea6\u7684\uff0c\u4ee5\u4e2a\u4eba\u4e3a\u5355\u5143\u3001\u4ee5\u96c6\u4f53\u4e3a\u5355\u5143\u7684\u57ce\u5e02\u7a7a\u95f4\u5229\u7528\u3002\uff09 However, methods derived for pure RS images can only reflect the natural properties of ground objects. Land use types in a region often have strong relationships with inner social\u2013economic activities, which is difficult to detect from pure RS imagery. \uff08\u7136\u800c\uff0c\u7531\u7eaf\u9065\u611f\u5f71\u50cf\u884d\u751f\u7684\u65b9\u6cd5\u4ec5\u4ec5\u53cd\u6620\u5730\u8868\u7269\u4f53\u7684\u81ea\u7136\u5c5e\u6027\u3002\u533a\u57df\u5185\u7684\u571f\u5730\u5229\u7528\u7c7b\u578b\u901a\u5e38\u4e0e\u5185\u5bb9\u7684\u793e\u4f1a\u7ecf\u6d4e\u6d3b\u52a8\u7531\u5f3a\u76f8\u5173\u6027\uff0c\u7eaf\u9065\u611f\u65b9\u6cd5\u662f\u65e0\u6cd5\u68c0\u6d4b\u7684\u3002\uff09 Conventional methods of delineating urban functional areas heavily rely on remote sensing images. Although remote-sensing based methods are capable of capturing physical changes of urban functional areas, they do not provide sufficient socioeconomic information relating to urban functional areas. \uff08\u63cf\u7ed8\u57ce\u5e02\u529f\u80fd\u533a\u4f20\u7edf\u7684\u65b9\u6cd5\u4f9d\u8d56\u4e8e\u9065\u611f\u5f71\u50cf\u3002\u867d\u7136\u57fa\u4e8e\u9065\u611f\u5f71\u50cf\u7684\u65b9\u6cd5\u80fd\u591f\u6355\u6349\u57ce\u5e02\u529f\u80fd\u533a\u7684\u7269\u7406\u53d8\u5316\uff0c\u4f46\u662f\u5b83\u4eec\u5e76\u4e0d\u80fd\u63d0\u4f9b\u5145\u5206\u7684\u6709\u5173\u57ce\u5e02\u529f\u80fd\u533a\u57df\u7684\u793e\u4f1a\u7ecf\u6d4e\u4fe1\u606f\u3002\uff09    POI  The same types of POIs can be located in different land use types and may also support different functions. \uff08\u76f8\u540c\u7c7b\u578b\u7684POI\u53ef\u80fd\u51fa\u73b0\u5728\u4e0d\u540c\u7684\u571f\u5730\u5229\u7528\u7c7b\u578b\uff0c\u4e5f\u53ef\u80fd\u652f\u6301\u4e0d\u540c\u7684\u529f\u80fd\u3002\uff09 We argue that geographic knowledge and measures of spatial distribution over POI types (categories) can be employed to derive latent classification features for these types, which will then enable the detection and the abstraction of higher-level functional regions (i.e., semantically coherent areas of interest) such as shopping areas, business districts, educational areas, and tourist zones.\u6211\u4eec\u5047\u8bbe\u5730\u7406\u77e5\u8bc6\u548cPOI\u7c7b\u578b\u7684\u7a7a\u95f4\u5206\u5e03\u4e4b\u95f4\u7684\u6d4b\u5ea6\u53ef\u4ee5\u88ab\u5e94\u7528\u4e8e\u6f5c\u5728\u5206\u7c7b\u7279\u5f81\uff0c\u8fd9\u4e9b\u6f5c\u5728\u5206\u7c7b\u7279\u5f81\u53ef\u4ee5\u7528\u4e8e\u68c0\u6d4b\u548c\u62bd\u8c61\u5316\u9ad8\u7b49\u7ea7\u7684\u529f\u80fd\u533a\u57df\uff0c\u5982\u8d2d\u7269\u533a\uff0c\u5546\u4e1a\u533a\uff0c\u6559\u80b2\u533a\u548c\u65c5\u6e38\u533a\u3002 POIs can effectively present regional functions as a result of their high accessibility from the Internet. In recent years, numerous in-depth discussions have been conducted to classify urban land use via POIs.POI\u53ef\u4ee5\u8f83\u5bb9\u6613\u7684\u4ece\u7f51\u4e0a\u83b7\u53d6\uff0c\u53ef\u4ee5\u6709\u6548\u7684\u8868\u8fbe\u533a\u57df\u529f\u80fd\u3002\u5728\u6700\u8fd1\u51e0\u5e74\uff0c\u5e94\u7528POI\u8fdb\u884c\u57ce\u5e02\u571f\u5730\u5229\u7528\u5212\u5206\u5438\u5f15\u4e86\u5927\u91cf\u7684\u6df1\u5165\u7684\u8ba8\u8bba\u3002 Previous studies have demonstrated that different POI types have distinctive semantic signatures (i.e., spatial, temporal, and thematic distributions) based on crowd-sourced location-based social media data analysis, in analogy to spectral bands in remote sensing.\u4ee5\u5f80\u7684\u7814\u7a76\u8868\u660e\u901a\u8fc7\u5c06POI\u7c7b\u6bd4\u4e3a\u9065\u611f\u5f71\u50cf\u7684\u5149\u8c31\u5e26\uff0c\u4e0d\u540c\u7684poi\u7c7b\u578b\u5b58\u5728\u663e\u8457\u5730\u8bed\u4e49\u7279\u5f81\u5dee\u5f02\uff08\u7a7a\u95f4\uff0c\u65f6\u95f4\u548c\u4e3b\u9898\u5206\u5e03\uff09\u3002 Moreover, due to the complexity of urban land use, it is clearly unsatisfactory to analyze land use patterns via POI frequencies alone.\u7531\u4e8e\u57ce\u5e02\u571f\u5730\u5229\u7528\u7684\u590d\u6742\u6027\uff0c\u663e\u7136\u4ec5\u901a\u8fc7POI\u9891\u7387\u6765\u5206\u6790\u571f\u5730\u5229\u7528\u6a21\u5f0f\u662f\u4e0d\u53ef\u53d6\u7684\u3002 The abovementioned studies only take frequencies of POIs as the judgment of a region\u2019s land use types without considering inner spatial correlations, which may lead to most of the spatial information of POIs being wasted.\u4ec5\u4ec5\u8003\u8651POI\u7684\u9891\u7387\u4f5c\u4e3a\u533a\u57df\u571f\u5730\u5229\u7528\u7c7b\u578b\u7684\u8bc4\u4ef7\u6307\u6807\uff0c\u5ffd\u89c6\u4e86POI\u4e4b\u95f4\u7684\u5185\u90e8\u5173\u8054\uff0c\u6d6a\u8d39\u4e86\u4f17\u591aPOI\u7684\u7a7a\u95f4\u4fe1\u606f\u3002 By exploiting the potential of context relationships, information inside POIs can be better mined.\u901a\u8fc7\u63a2\u7d22\u4e0a\u4e0b\u6587\u5173\u7cfb\u7684\u6f5c\u529b\uff0cPOIs\u4e4b\u95f4\u7684\u76f8\u5173\u4fe1\u606f\u88ab\u66f4\u597d\u7684\u5229\u7528\uff08\u8003\u8651\uff09\u3002     ",
        "description": "",
        "id": 81,
        "section": "posts",
        "tags": [
            "\u6458\u6284",
            "Writing",
            "\u8bba\u6587"
        ],
        "title": "\u8bba\u6587\u5199\u4f5c\u6458\u6284-\u57ce\u5e02\u529f\u80fd\u533a\u57df\u6316\u6398",
        "uri": "/posts/notes/127/"
    },
    {
        "content": " \u82f1\u6587\u90ae\u4ef6\u5e38\u7528\u8868\u8fbe\u3002\u540c\u65f6\u5f88\u591a\u5185\u5bb9\u53ef\u4ee5\u7528\u5728\u8bba\u6587\u5ba1\u9605\u56de\u590dreviewer\u90ae\u4ef6\u4e2d\u3002\n\u53c2\u8003\u81ea\uff1a\r\u54ea\u4e9b\u53e5\u5b50\u62ef\u6551\u4e86\u4f60\u7684\u82f1\u6587\u90ae\u4ef6\uff1f\n \u76ee\u5f55\n[TOC]\n\u79f0\u547c  \u4e00\u822c\u4e0d\u52a0Dear \u666e\u901a\u90ae\u4ef6\uff1a\u76f4\u63a5\u79f0\u547c\u540d\u5b57\u5373\u53ef\u3002Hi Steven \u5b66\u672f\u573a\u5408\uff1a\u52a0\u62ac\u5934\u3002 Hi Prof.Johnson  \u611f\u8c22  \u5f00\u5934\uff0c\u611f\u8c22\u522b\u4eba\u56de\u590d\u81ea\u5df1\u7684\u90ae\u4ef6  Thanks for the quick reply. Thanks for getting back to me. Thanks for the update on the situation. Thanks for the updated information. Thanks for gathering the information this week on this issue.   \u4e5f\u53ef\u4ee5\u7528thank you\uff0c\u5728\u7a0d\u5fae\u6b63\u5f0f\u573a\u5408\u3002 \u7b80\u5355\u56de\u590d\uff0c\u8868\u793a\u611f\u8c22  Thank you. Well noted. Noted/Received with thanks. Good information.    \u9053\u6b49  \u56de\u590d\u90ae\u4ef6\u665a\u4e86\uff0c\u5148\u9053\u6b49  Sorry I haven&rsquo;t got back to you sooner. Sorry for the delay getting back to you. \u4ee5\u4e0asorry\u66ff\u6362\u6210apologize\u66f4\u6b63\u5f0f\u4e00\u4e9b   \u4e34\u65f6\u901a\u77e5  Apologies for the late/short notice.   \u4e0a\u4e00\u5c01\u90ae\u4ef6\u6ca1\u5199\u6e05\u695a\u5bfc\u81f4\u6536\u4ef6\u4eba\u8bef\u89e3  I apologize if this was not made clear.   \u63d0\u524d\u7ed9\u522b\u4eba\u9884\u8b66\u81ea\u5df1\u63aa\u8f9e\u8fc7\u4e8e\u5f3a\u786c  I apologize if this may make you feel uncomfortable/bad. I apologize if this may sound a little harsh.    \u6536\u5c3e  \u4e00\u822c\u95ee\u522b\u4eba\u610f\u4e0b\u5982\u4f55  Let me know if you have any questions or concerns. Looking forward to your input/insight. Please let me know (what you think)/(your thoughts).    \u9644\u4ef6  Attached/Enclosed please find the report. I attached the report and let me know what you think. excel, pdf, word\u7528 document(excel\u4e5f\u53efspreadsheet, ppt\u4e5f\u53efpresentation)  Attached please find the document.    \u8d77\u627f\u8f6c\u5408\u8bcd  as/on a side note(\u539f\u610f\u662f\u8fb9\u6ce8\uff0c\u5f15\u7533\u4e3a\u8865\u5145\u8bf4\u660e\u67d0\u4ef6\u4e8b\u60c5\uff0c\u7279\u522b\u662f\u4f60\u60f3\u63d0\u9192\u522b\u4eba\u505a\u67d0\u4ef6\u4e8b\uff0c\u8fd9\u6837\u66f4\u52a0\u59d4\u5a49\uff0c\u53ef\u4ee5\u7ffb\u8bd1\u6210\u201c\u53cb\u60c5\u63d0\u793a)  Also, on a side note, can you XXX? As a side note, I&rsquo;m begining to think our current measurement method doesn&rsquo;t seem to be accurate enough.   specifically(\u7279\u522b\u8bf4\u660e\u4e00\u4ef6\u4e8b\uff0c\u7528\u8fd9\u4e2a\u8bcd\uff0c\u53e6\u5199\u4e00\u4e2a\u81ea\u7136\u6bb5)  Specifically, we are interested in XX. Specifically, we&rsquo;d like to XX.   all said/with all that said(\u4e2d\u6587\u610f\u601d\u5c31\u662f\u201c\u8bf4\u4e86\u90a3\u4e48\u591a\u201d\uff0c\u7528\u4e8e\u603b\u7ed3\u3002)  All said, I think we are in an envialbe position going into XX.   that being said \u8bdd\u867d\u5982\u6b64  That being said, we still need to..\uff08\u8bdd\u867d\u5982\u6b64\uff0c\u6211\u4eec\u4ecd\u9700&hellip;\uff09   on another front\u4ee3\u66ffon another side (\u53e6\u4e00\u65b9\u9762) with regard to/regarding \u5173\u4e8e&hellip;\u7684\u8bdd\u9898\uff0c\u4ee3\u66ffabout  I&rsquo;ll have a business trip regarding the quality issue.   echo(\u672c\u610f\u662f\u201c\u56de\u58f0\u201d\uff0c\u5f15\u7533\u4e3a\u201c\u9644\u548c\uff0c\u90ae\u4ef6\u7ecf\u5e38\u7528\u8fd9\u4e2a\u8bcd\u6765\u8868\u793a\u201c\u6211\u53ea\u662f\u91cd\u590d\u4e00\u4e0b\u67d0\u4eba\u89c2\u70b9\u201d\uff0c\u8c26\u865a\u7684\u8bf4\u6cd5)  To echo John&rsquo;s direction, our plan is XX.   bring up(\u8868\u793a\u628a\u4e00\u4e2a\u95ee\u9898/\u8bdd\u9898\u63d0\u51fa\u6765\uff0c\u8fd9\u4e2a\u662f\u6700\u5e38\u7528\u7684\u8868\u8fbe\uff0c\u9690\u542b\u63d0\u51fa\u6765\u4f9b\u5927\u5bb6\u8ba8\u8bba\u7684\u610f\u601d\uff0c\u6bd4mention\u7684\u610f\u601d\u66f4\u4e30\u5bcc\u3002)  One thing I&rsquo;d like to bring up is XX. one of the ideas brought up by the team was to look at XX.   \u610f\u89c1/\u4fe1\u606f/\u5efa\u8bae  direction(\u5b57\u9762\u610f\u601d\u662f\u201c\u65b9\u5411\u201d\uff0c\u5f15\u7533\u4e49\u4e3a\u201c\u6307\u793a\u201d\uff0c\u4e0d\u4e00\u5b9a\u662f\u4e0a\u7ea7\u5bf9\u4e0b\u7ea7\uff0c\u4efb\u4f55\u201c\u505a\u67d0\u4ef6\u4e8b\u7684\u65b9\u6cd5\u201d\u90fd\u53ef\u4ee5\u53ebdirection.)  Thanks for your direction.   input(\u672c\u610f\u662f\u300c\u8f93\u5165\u300d\u7684\u610f\u601d\uff0c\u4f46\u662f\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u7ecf\u5e38\u505a\u300c\u63d0\u4f9b\u4fe1\u606f/\u5efa\u8bae\u300d\u7406\u89e3\u3002)  Thanks for your input. We value your input. I&rsquo;d like your input on it.(\u4f60\u60f3\u95ee\u522b\u4eba\u5bf9\u8fd9\u4ef6\u4e8b\u7684\u770b\u6cd5)   insight(\u7ffb\u8bd1\u6210\u300c\u6d1e\u89c1\u300d\uff0c\u4e0d\u63a5\u5730\u6c14\uff0c\u4f46\u4e5f\u627e\u4e0d\u51fa\u66f4\u597d\u7684\u8868\u8fbe\uff08\u6216\u8005\u662f\u300c\u9ad8\u89c1\u300d\uff1f\uff09)  Look forward to your insight. That&rsquo;s valuable insight.     concern (\u5b57\u9762\u610f\u601d\u662f\u201c\u65b9\u5411\u201d\uff0c\u5f15\u7533\u4e49\u4e3a\u201c\u6307\u793a\u201d\uff0c\u4e0d\u4e00\u5b9a\u662f\u4e0a\u7ea7\u5bf9\u4e0b\u7ea7\uff0c\u4efb\u4f55\u201c\u505a\u67d0\u4ef6\u4e8b\u7684\u65b9\u6cd5\u201d\u90fd\u53ef\u4ee5\u53ebdirection.)  quality concern delivery concern   dig into(\u6df1\u5165\u7814\u7a76)  We need to dig into the root cause.(\u6df1\u6316\u6839\u672c\u539f\u56e0)    \u90ae\u4ef6\u793c\u4eea  \u548c\u964c\u751f\u4eba\u53d1\u90ae\u4ef6\u5982\u4f55\u81ea\u6211\u4ecb\u7ecd  \u4e0d\u8981\u8bf4This is\u548cI am\u8fd9\u79cd\u53e5\u5f0f \u5f00\u5934\u76f4\u63a5\u8bf4 My name is  My name is Steven Gates. I work in the R&amp;D department and am in charge of&hellip;     \u95ee\u522b\u4eba\u4e00\u4e2a\u95ee\u9898\uff0c\u524d\u9762\u52a0\u4e2awondering\u8868\u793a\u60f3\u77e5\u9053\uff0c\u66f4\u52a0\u59d4\u5a49  I was wondering what your thoughts are changing this design. I am wondering if you are using the same material.   \u8bf7\u6c42\u522b\u4eba\u5e2e\u5fd9\u505a\u4e00\u4ef6\u4e8b\u60c5  If you cloud XXX, that would be great. By any chance, could you help check the data? (\u610f\u4e3a\u6709\u65f6\u95f4\u53ef\u4e0d\u53ef\u4ee5\u5e2e\u5fd9&hellip;)   \u95ee\u522b\u4eba\u662f\u5426\u53ef\u4ee5\u505a\u4e00\u4ef6\u4e8b\u60c5  Is it possible for you to change the desgin?(\u800c\u4e0d\u662fCould you change the design?)   tentative\u8bed\u6c14\uff08\u8bd5\u63a2\u6027\uff09\uff1a\u591a\u7528seem, appear, sound, look\u8fd9\u6837\u7684\u8bcd; \u8bed\u6c14\u522b\u90a3\u4e48\u751f\u786c\u3002  This seems to be wrong. (\u4e0d\u7528 This is wrong.) It seems we don&rsquo;t have other option.(We don&rsquo;t have other option.) \u63cf\u8ff0\u4e00\u4e2a\u4e1c\u897f\uff0c\u5c31\u7b97\u662f\u660e\u663e\u5df2\u7ecf\u77e5\u9053\u5f88\u597d\uff0c\u4e5f\u8981\u8bf4looks good, sounds good,\u800c\u4e0d\u662fit&rsquo;s good. \u4e0d\u8981\u7528maybe,\u5982\u679c\u786e\u5b9a\u6027\u6bd4\u8f83\u5927\uff0c\u7528probably (maybe\u662f\u6bd4\u8f83\u4e0d\u786e\u5b9a\uff0c\u800c\u4e0d\u662f\u6709\u53ef\u80fd)  This is probably right. Could we have a better way to do it? - Probably.   \u7ed9\u522b\u4eba\u63d0\u4f9b\u5efa\u8bae\uff0c\u4e0d\u8981\u7528should\uff0c\u4e5f\u4e0d\u8981\u7528you&rsquo;d better, \u7528it would be better  It would be better if we can change the design. You&rsquo;ll need to buy a new machine if yhis one doesn&rsquo;t work. (\u7ed9need\u52a0\u5c06\u6765\u65f6\uff0c\u66f4\u52a0\u59d4\u5a49) It might be a good idea to fasten your seat belt. (\u59d4\u5a49\u547d\u4ee4\u522b\u4eba\u505a\u67d0\u4e8b\uff0c)   \u8868\u793a\u4e00\u4ef6\u4e8b\u5e0c\u671b\u4f60\u505a\uff0c\u4f46\u662f\u4e0d\u5f3a\u6c42\uff0c\u7528It would be nice/great\u800c\u4e0d\u662fI need you to XXX, I hope you XXX, could you?  It would be nice/great if you can come today(\u9690\u542b\u7684\u610f\u601d\u662fstill OK if you can&rsquo;t make it.).   \u95ee\u522b\u4eba\u8981\u4e1c\u897f/\u4fe1\u606f\u65f6\uff0c\u7528 May I have&hellip;? \u800c\u4e0d\u662f Could you give me?  May I have your name? May I have the drawing today? May I have the letter?   \u95ee\u6709\u6ca1\u6709\u65f6\u95f4  Could I have a minute/moment of your time? (\u975e\u5e38\u975e\u5e38\u793c\u8c8c\uff0c\u9500\u552e\u5458\u95ee\u6cd5) Do you have a minute/monment? (\u4e00\u822c\u793c\u8c8c\uff0c\u540c\u4e8b\u670b\u53cb\u4e4b\u95f4\u7528\u6cd5)   \u6307\u8d23\u522b\u4eba\uff0c\u7528\u73b0\u5728\u8fdb\u884c\u65f6\u6bd4\u4e00\u822c\u73b0\u5728\u65f6\u66f4\u59d4\u5a49(\u8868\u793a\u67d0\u65f6\u67d0\u523b\u8fd9\u4e2a\u4eba\u5904\u4e8e\u7684\u72b6\u6001,\u4e0d\u8868\u793a\u4f60\u628a\u4ed6\u5f7b\u5e95\u8bf4\u6b7b\u3002)  You are being impatient//argumentative/unreasonable.\uff08\u4f60\u5f88\u6ca1\u8010\u5fc3/\u5f3a\u8bcd\u593a\u7406/\u65e0\u7406\u53d6\u95f9\uff09 You are better than that(\u6307\u51fa\u522b\u4eba\u9519\u8bef\u7684\u65f6\u5019)   \u7528would like\u4ee3\u66ffwant  I&rsquo;d like to have a meeting with you.   \u614e\u7528please(please\u6709\u65f6\u5019\u7a0d\u5fae\u5e26\u4e00\u70b9\u8981\u6c42\u547d\u4ee4\u7684\u8bed\u6c14)  Could you reply to me by today? (\u800c\u4e0d\u662fPlease reply to me by today.)   \u7528let, allow\u66f4\u793c\u8c8c  Please let me know your feedback.(\u8fd9\u91cc\u7528please\u6ca1\u95ee\u9898\uff0c\u56e0\u4e3a\u662f\u81ea\u5df1let me) Please allow me to make a proposal. (I want to make a proposal.)   \u7528I&rsquo;m good\u4ee3\u66ffno(\u4e2d\u56fd\u4e60\u60efyes or no\u5f0f\u7684\u601d\u7ef4\u3002\u4f46\u662f\u6709\u4e9b\u573a\u5408\u56de\u7b54no\u672a\u514d\u6709\u70b9\u5510\u7a81.\u7f8e\u56fd\u4eba\u4e00\u822c\u7528I&rsquo;m good\u6765\u5a49\u62d2\u5e2e\u52a9\u6216\u8005\u597d\u610f)  Would you care for some coffee? -I&rsquo;m good. Thank you.   \u67d0\u4e9b\u8d1f\u9762\u60c5\u51b5\u4e0b\u7528have difficulty \u4ee3\u66ff can&rsquo;t\uff0c\u59d4\u5a49\u628a\u8d23\u4efb\u63a8\u5411\u81ea\u5df1\u8fd9\u8fb9  I have difficulty understanding your question. I have difficulty trusting you.     \u4e3b\u9898\u5fc5\u987b\u8981\u201c\u6807\u9898\u515a\u201d\uff0c\u5fc5\u987b\u5305\u542b\u5fc5\u8981\u4fe1\u606f\uff0c\u8ba9\u4eba\u6709\u6253\u5f00\u7684\u6b32\u671b\u3002 \u4e00\u5b9a\u4e0d\u8981\u7528\u4efb\u4f55\u7b80\u5199\uff0c\u6bd4\u5982c.u(see you)\u4e4b\u7c7b \u4e00\u5b9a\u4e0d\u8981\u7528gonna, wanna\u8fd9\u79cd\u5f62\u5f0f\uff0c\u6076\u4fd7\u81f3\u6781\uff0c\u8bf7\u53d8\u6210\u539f\u5f62 going to, want to  ",
        "description": "",
        "id": 82,
        "section": "posts",
        "tags": [
            "\u90ae\u4ef6",
            "Email",
            "Writing"
        ],
        "title": "English Writing-Email",
        "uri": "/posts/notes/108/"
    },
    {
        "content": " papers about investigating cognitive places&amp;urban perception\n \u76f8\u5173\u6982\u5ff5 \u573a\u6240(place)\u662f\u88ab\u8d4b\u4e88\u4e86\u4e2a\u4f53\u7ecf\u9a8c\u3001\u751f\u6d3b\u4e0e\u60c5\u611f\u610f\u4e49\u7684\u7a7a\u95f4\u4f4d\u7f6e\u6216\u533a\u57df\uff0c\u662f\u7406\u89e3\u5730\u7406\u73af\u5883\u7684\u91cd\u8981\u9014\u5f84\u4e4b\u4e00\u3002\uff08\u5927\u4f17\u70b9\u8bc4\u6570\u636e\u4e0b\u7684\u57ce\u5e02\u573a\u6240\u8303\u56f4\u611f\u77e5\u65b9\u6cd5\uff09\nCognitive region boundaries are typically substantially vague and their membership functions are substantially variable \u2013 the transition from outside to inside the region is imprecise or vague, and different places within the region are not equally strong or clear as exemplars of the region. (Vague cognitive regions in geography and geographic information science)\nvague geographic regions\ntaxonomy of geographic regions\nRegions in geography: Process and content Montello-2003-\rFoundations of geographic information science\nIntroduction  regions  the concept of regions has nearly always been of central importance the identification, description, and explanation of regions has played a critical role   in this eassy  revisit the regional concept  place can be considered a subset of the regions   contrast the concept of geographic regions propose a taxonomy of geographic regions: administrative, thematic, functional, and cognitive regions differentiate formal regions into administrative and thematic regions consider the individual vs. social nature of cognitive regions consider the important issue of boundaries  consider the important issue of boundaries how it applies to the four region types   The special status of administrative regions    What are geographic regions  P1: Regionalization=&gt;Categorization=&gt;Categories=&gt;Spatial categories\u2014regions P2: Geographic regions have certain shared properties P3: Geographic regions are thus examples of spatial regions in general P4: Geographic regions need not be contiguous  Regions in thought PROCESS- AND CONTENT-BASED TAXONOMY OF REGIONS new taxonomy of regions  Administrative regions are formed by legal or political action, by decree or negotiation. Thematic regions are formed by the measurement and mapping of one or more observable content variables or themes Functional regions are formed by patterns of interaction among separate locations on the earth Cognitive regions are produced by people\u2019s informal perceptions and conceptions  traditional region taxonomy  formal, functional, and general regions internal similarity and external dissimilarity of regions  comment In applying the taxonomy, it is critical to recognize that people use the same region label at different times to refer to different regions; they also use it to refer to different types of regions. ( \u5728\u5e94\u7528\u5206\u7c7b\u6cd5\u65f6\uff0c\u5173\u952e\u662f\u8981\u8ba4\u8bc6\u5230\uff0c\u4eba\u4eec\u5728\u4e0d\u540c\u7684\u65f6\u95f4\u4f7f\u7528\u540c\u4e00\u4e2a\u533a\u57df\u6807\u7b7e\u6765\u6307\u4ee3\u4e0d\u540c\u7684\u533a\u57df\uff1b\u4ed6\u4eec\u4e5f\u7528\u5b83\u6765\u6307\u4ee3\u4e0d\u540c\u7c7b\u578b\u7684\u533a\u57df\u3002)\nVague cognitive regions in geography and geographic information science Montello-2014-\rIJGIS\n regions are spatial categories (\u7a7a\u95f4\u8303\u7574): A region encompasses places that are internally similar to each other and externally dissimilar to places outside the region.   A region encompasses places internally similar; dissimilar to places outside the region   All regions have boundaries  One of the most important properties of boundaries is that they vary in their precision or sharpness or, conversely, their vagueness. geographic boundaries are not sharp at all but are really two-dimensional features \u2013 regions \u2013 themselves Vague boundaries are transition zones (\u8fc7\u6e21\u533a\u57df) rather than lines between neighboring regions, but they are just as real as sharp boundaries   Reseach about boundaries  discuss different reasons for boundary vagueness quantifying and representing vague boundaries in computational systems / cartographic depiction explored fuzzy logic as a formalization of vague boundaries   Taxonomy of geographic regions  administrative, thematic, functional, and cognitive regions Cognitive regions (traditionally called \u2018perceptual\u2019)  regions in the mind, reflecting informal ways that people organize places can be idiosyncratic to a single person but are often shared among members of cultural groups (\u56e0\u4eba\u800c\u5f02, \u540c\u65f6\u5177\u6709\u7fa4\u4f53\u4e00\u81f4\u6027) reflect the type of spatially categorical thinking that so highly characterizes human thought and communication substantially vague boundaries: The transition (\u8f6c\u53d8) from inside to outside the cognitive region is usually a probabilistically graded zone of significant width variable membership functions: As a corollary (\u5fc5\u7136\u7ed3\u679c) to boundary vagueness, their membership functions are variable or probabilistically graded so that all places within the region are not equally strong or clear as members or exemplars of the region.      Investigating urban metro stations as cognitive places in cities using points of interest  extracting and understanding the cognitive regions  extract the cognitive regions of metro stations identify the semantics of metro stations   polygon generation techniques detect the place characteristics of urban metro stations urban metro stations are typical cognitive places perceived by the crowd through interacting with the surrounding society and environment, which are characterized by vague boundaries and rich semantics\uff08\u5b9a\u4e49\u7c7b\uff09 identify the semantics of the regions that can reflect the crowd&rsquo;s impressions and perceptions. (\u610f\u4e49\u7c7b) geotagged data are not ideal for studying the metro station areas owing to issues of completeness and biases\uff08\u590d\u6742\u6027\u548c\u6709\u504f\u6027\uff09 Assuming that frequently co-occurred place names on web pages implies a strong relatedness between them, researchers have investigated the relationships between geographical entities\uff08\u5047\u8bbe\uff09  Representing place locales using scene elements  locale indicates the physical settings where everyday-life activities take place, including visible and tangible aspects of a place such as buildings, streets, parks, etc. \uff08\u5b9a\u4e49\u7c7b\uff09 sense of place refers to the human experience and nebulous meanings associated with a place\uff08\u5b9a\u4e49\u7c7b\uff09 a vague cognitive region of a place, which mines place semantics regarding human activities and perceptions how to formalize the concept of place with respect to locale and how to build a quantitative representation of locale remain unclear. analyze the physical appearance of an urban space by photos\uff08\u7269\u7406\u89c6\u89c9\uff09 enabled by the proliferation of computer vision and deep learning techniques, it has been proven possible to acquire the semantic information of every single pixel in a natural image with high accuracy, thus improving our ability to semantically understand scene content\uff08\u8ba1\u7b97\u673a\u89c6\u89c9\uff09 the purpose of this study is to formalize the concept of place in terms of locale - the physical appearance of place employ an image semantic segmentation technique to parse street-level images and obtain 64 scene elements (building, sky, grass, etc.) that constitute a typical street scene\uff08\u56fe\u7247\u8bed\u4e49\u5206\u5272\u6280\u672f\uff09 The scene visual descriptor enables the carrying out of measurements among places and contributes to the calculations between place and other spatial, demographic, and socioeconomic factors\uff08\u8d21\u732e\u7c7b\uff09 The street scene ontology illustrates the semantic relationships among a certain number of scene elements to support qualitative analysis of street characteristics.\uff08\u91cf\u5316\u5206\u6790\uff09 64-dimensional computational vector, where each dimension corresponds to the cover ratio of a specific scene element in the field of view (FOV), which indicates the spatial area that is visible from a location contributes to the calculations between place and other spatial, and socioeconomic variables.\uff08\u8d21\u732e\u7c7b\uff09  A human-machine adversarial scoring framework for urban perception assessment using street-view images  Traditionally, the evaluation of human perceptions towards their visual surroundings remains difficult due to the lack of high-throughput methods, inadequate sample problems and being restricted to interviews and questionnaires\uff08\u4f20\u7edf\u65b9\u6cd5\u7684\u7f3a\u9677\uff09 urban perception assessment process multi-sources of geospatial big data massive geo-tagged imagery datasets intuitive way for urban residents to gain perceptions about their surrounding environments \uff08\u610f\u4e49\u7c7b\uff09 tackle the large-scale derivation problem for urban perception\uff08\u5927\u6570\u636e\u5e26\u6765\u7684\u95ee\u9898\uff09 has emerged as a promising data source to infer urban perceptions\uff08\u6570\u636e\u6e90\uff09 Street-view imagery is primarily distributed along urban streets and represents the physical morphological properties of urban interior spaces \uff08\u8857\u666f\uff09 assess the effect of a city\u2019s environment on social and economic outcomes overcoming the inadequate sample problem and certain limits imposed by traditional interview and questionnaire approach\uff08\u8d21\u732e\u7c7b\uff0c\u5ba2\u670d\u4f20\u7edf\u6570\u636e\u7684\u95ee\u9898\uff09 their special political and economic status and physical environments\uff08\u7269\u7406\u3001\u793e\u4f1a\u7ecf\u6d4e\u73af\u5883\u4e24\u65b9\u9762\uff09 an urban perception is a subjective assessment and is influenced by people\u2019s social and cultural backgrounds\uff08\u4e3b\u89c2\u6027\u5236\u7ea6\uff09 rapidly and costeffectively assess local urban perceptions\uff08\u4fee\u9970\u7c7b\u3001\u5feb\u901f\u6709\u6548\uff09 This study developed a framework with deep learning, street-view imagery and iterative feedback mechanism and to assess cityscale urban perceptions\uff08\u4fee\u9970\u7c7b\uff0c\u57ce\u5e02\u5c3a\u5ea6\uff09 We conducted a case study of an urban perception assessment in a high-density urban environment, e.g., Wuhan, to demonstrate the efficacy of the proposed framework. \uff08\u6848\u4f8b\u3001\u8bc4\u4f30\uff09 we analyzed the driving factors to explain the results from both the visual and urban functional aspects.\uff08\u4e24\u65b9\u9762\uff0c\u53ef\u89c6\u5316\u548c\u57ce\u5e02\u529f\u80fd\uff09 ",
        "description": "",
        "id": 83,
        "section": "posts",
        "tags": [
            "\u8bba\u6587",
            "cognitive places",
            "street view images",
            "POIs"
        ],
        "title": "Papers Reading-Cognitive Places&Urban Perception",
        "uri": "/posts/notes/107/"
    },
    {
        "content": " \r\u77e5\u4e4e\u6587\u7ae0-\u9605\u8bfb\u7b14\u8bb0\uff1a\u4eceWord Embedding\u5230Bert\u6a21\u578b\u2014\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u9884\u8bad\u7ec3\u6280\u672f\u53d1\u5c55\u53f2\n \u76ee\u5f55\n[TOC]\n\u7b80\u4ecb NLP\u4e2d\u7684\u9884\u8bad\u7ec3\u6280\u672f\u662f\u4e00\u6b65\u4e00\u6b65\u5982\u4f55\u53d1\u5c55\u5230Bert\u6a21\u578b\u7684\n Bert\u7684\u601d\u8def\u662f\u5982\u4f55\u9010\u6e10\u5f62\u6210\u7684 Bert\u7684\u5386\u53f2\u6cbf\u9769\u662f\u4ec0\u4e48\uff0c\u7ee7\u627f\u4e86\u4ec0\u4e48\uff0c\u521b\u65b0\u4e86\u4ec0\u4e48\uff0c\u4e3a\u4ec0\u4e48\u6548\u679c\u90a3\u4e48\u597d\uff0c\u4e3b\u8981\u539f\u56e0\u662f\u4ec0\u4e48 \u4e3a\u4f55\u8bf4\u6a21\u578b\u521b\u65b0\u4e0d\u7b97\u592a\u5927\uff0c\u4e3a\u4f55\u8bf4Bert\u662f\u8fd1\u5e74\u6765NLP\u91cd\u5927\u8fdb\u5c55\u7684\u96c6\u5927\u6210\u8005  \u5148\u4ece\u56fe\u50cf\u9886\u57df\u7684\u9884\u8bad\u7ec3\u8bf4\u8d77  Frozen Fine-Tuning \u5bf9\u4e8e\u5c42\u7ea7\u7684CNN\u7ed3\u6784\u6765\u8bf4\uff0c\u4e0d\u540c\u5c42\u7ea7\u7684\u795e\u7ecf\u5143\u5b66\u4e60\u5230\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u50cf\u7279\u5f81\uff0c\u7531\u5e95\u5411\u4e0a\u7279\u5f81\u5f62\u6210\u5c42\u7ea7\u7ed3\u6784\uff0c\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5982\u679c\u6211\u4eec\u624b\u5934\u662f\u4e2a\u4eba\u8138\u8bc6\u522b\u4efb\u52a1\uff0c\u8bad\u7ec3\u597d\u7f51\u7edc\u540e\uff0c\u628a\u6bcf\u5c42\u795e\u7ecf\u5143\u5b66\u4e60\u5230\u7684\u7279\u5f81\u53ef\u89c6\u5316\u8089\u773c\u770b\u4e00\u770b\u6bcf\u5c42\u5b66\u5230\u4e86\u5565\u7279\u5f81\uff0c\u4f60\u4f1a\u770b\u5230\u6700\u5e95\u5c42\u7684\u795e\u7ecf\u5143\u5b66\u5230\u7684\u662f\u7ebf\u6bb5\u7b49\u7279\u5f81\uff0c\u56fe\u793a\u7684\u7b2c\u4e8c\u4e2a\u9690\u5c42\u5b66\u5230\u7684\u662f\u4eba\u8138\u4e94\u5b98\u7684\u8f6e\u5ed3\uff0c\u7b2c\u4e09\u5c42\u5b66\u5230\u7684\u662f\u4eba\u8138\u7684\u8f6e\u5ed3\uff0c\u901a\u8fc7\u4e09\u6b65\u5f62\u6210\u4e86\u7279\u5f81\u7684\u5c42\u7ea7\u7ed3\u6784\uff0c\u8d8a\u662f\u5e95\u5c42\u7684\u7279\u5f81\u8d8a\u662f\u6240\u6709\u4e0d\u8bba\u4ec0\u4e48\u9886\u57df\u7684\u56fe\u50cf\u90fd\u4f1a\u5177\u5907\u7684\u6bd4\u5982\u8fb9\u89d2\u7ebf\u5f27\u7ebf\u7b49\u5e95\u5c42\u57fa\u7840\u7279\u5f81\uff0c\u8d8a\u5f80\u4e0a\u62bd\u53d6\u51fa\u7684\u7279\u5f81\u8d8a\u4e0e\u624b\u5934\u4efb\u52a1\u76f8\u5173\u3002\u6b63\u56e0\u4e3a\u6b64\uff0c\u6240\u4ee5\u9884\u8bad\u7ec3\u597d\u7684\u7f51\u7edc\u53c2\u6570\uff0c\u5c24\u5176\u662f\u5e95\u5c42\u7684\u7f51\u7edc\u53c2\u6570\u62bd\u53d6\u51fa\u7279\u5f81\u8ddf\u5177\u4f53\u4efb\u52a1\u8d8a\u65e0\u5173\uff0c\u8d8a\u5177\u5907\u4efb\u52a1\u7684\u901a\u7528\u6027\uff0c\u6240\u4ee5\u8fd9\u662f\u4e3a\u4f55\u4e00\u822c\u7528\u5e95\u5c42\u9884\u8bad\u7ec3\u597d\u7684\u53c2\u6570\u521d\u59cb\u5316\u65b0\u4efb\u52a1\u7f51\u7edc\u53c2\u6570\u7684\u539f\u56e0\u3002\u800c\u9ad8\u5c42\u7279\u5f81\u8ddf\u4efb\u52a1\u5173\u8054\u8f83\u5927\uff0c\u5b9e\u9645\u53ef\u4ee5\u4e0d\u7528\u4f7f\u7528\uff0c\u6216\u8005\u91c7\u7528Fine-tuning\u7528\u65b0\u6570\u636e\u96c6\u5408\u6e05\u6d17\u6389\u9ad8\u5c42\u65e0\u5173\u7684\u7279\u5f81\u62bd\u53d6\u5668\u3002  Word Embedding\u8003\u53e4\u53f2  \u8bed\u8a00\u6a21\u578b \u795e\u7ecf\u7f51\u7edc\u8bed\u8a00\u6a21\u578b(NNLM, 2003) Word2Vec(2013)  CBOW Skip-gram   Word Embedding\u540e\u4e0b\u6e38\u4efb\u52a1\u662f\u600e\u4e48\u7528\u5b83\u7684  \u53e5\u5b50\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u4ee5Onehot\u5f62\u5f0f\u4f5c\u4e3a\u8f93\u5165\uff0c\u7136\u540e\u4e58\u4ee5\u5b66\u597d\u7684Word Embedding\u77e9\u9635Q\uff0c\u5c31\u76f4\u63a5\u53d6\u51fa\u5355\u8bcd\u5bf9\u5e94\u7684Word Embedding Word Embedding\u77e9\u9635Q\u5176\u5b9e\u5c31\u662f\u7f51\u7edcOnehot\u5c42\u5230embedding\u5c42\u6620\u5c04\u7684\u7f51\u7edc\u53c2\u6570\u77e9\u9635   \u6709\u4ec0\u4e48\u95ee\u9898\u503c\u5f97\u6539\u8fdb\u7684  Word Embedding\u5176\u5b9e\u5bf9\u4e8e\u5f88\u591a\u4e0b\u6e38NLP\u4efb\u52a1\u662f\u6709\u5e2e\u52a9\u7684\uff0c\u53ea\u662f\u5e2e\u52a9\u6ca1\u6709\u5927\u5230\u95ea\u778e\u5fd8\u8bb0\u6234\u58a8\u955c\u7684\u56f4\u89c2\u7fa4\u4f17\u7684\u53cc\u773c\u800c\u5df2 \u591a\u4e49\u8bcd\u95ee\u9898 \u591a\u4e49\u8bcdBank\uff0c\u6709\u4e24\u4e2a\u5e38\u7528\u542b\u4e49\uff0c\u4f46\u662fWord Embedding\u5728\u5bf9bank\u8fd9\u4e2a\u5355\u8bcd\u8fdb\u884c\u7f16\u7801\u7684\u65f6\u5019\uff0c\u662f\u533a\u5206\u4e0d\u5f00\u8fd9\u4e24\u4e2a\u542b\u4e49\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5c3d\u7ba1\u4e0a\u4e0b\u6587\u73af\u5883\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u4e0d\u540c\uff0c\u4f46\u662f\u5728\u7528\u8bed\u8a00\u6a21\u578b\u8bad\u7ec3\u7684\u65f6\u5019\uff0c\u4e0d\u8bba\u4ec0\u4e48\u4e0a\u4e0b\u6587\u7684\u53e5\u5b50\u7ecf\u8fc7word2vec\uff0c\u90fd\u662f\u9884\u6d4b\u76f8\u540c\u7684\u5355\u8bcdbank\uff0c\u800c\u540c\u4e00\u4e2a\u5355\u8bcd\u5360\u7684\u662f\u540c\u4e00\u884c\u7684\u53c2\u6570\u7a7a\u95f4\uff0c\u8fd9\u5bfc\u81f4\u4e24\u79cd\u4e0d\u540c\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u90fd\u4f1a\u7f16\u7801\u5230\u76f8\u540c\u7684word embedding\u7a7a\u95f4\u91cc\u53bb\u3002\u6240\u4ee5word embedding\u65e0\u6cd5\u533a\u5206\u591a\u4e49\u8bcd\u7684\u4e0d\u540c\u8bed\u4e49\uff0c\u8fd9\u5c31\u662f\u5b83\u7684\u4e00\u4e2a\u6bd4\u8f83\u4e25\u91cd\u7684\u95ee\u9898\u3002    \u4eceWord Embedding\u5230ELMO   \u57fa\u4e8e\u4e0a\u4e0b\u6587\u7684Embedding-ELMO: Embedding from Language Models (\rFrom Deep contextualized word representation)\n  \u4e4b\u524d\u7684Word Embedding\u672c\u8d28\u4e0a\u662f\u4e2a\u9759\u6001\u7684\u65b9\u5f0f\uff0c\u6240\u8c13\u9759\u6001\u6307\u7684\u662f\u8bad\u7ec3\u597d\u4e4b\u540e\u6bcf\u4e2a\u5355\u8bcd\u7684\u8868\u8fbe\u5c31\u56fa\u5b9a\u4f4f\u4e86\uff0c\u4ee5\u540e\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u4e0d\u8bba\u65b0\u53e5\u5b50\u4e0a\u4e0b\u6587\u5355\u8bcd\u662f\u4ec0\u4e48\uff0c\u8fd9\u4e2a\u5355\u8bcd\u7684Word Embedding\u4e0d\u4f1a\u8ddf\u7740\u4e0a\u4e0b\u6587\u573a\u666f\u7684\u53d8\u5316\u800c\u6539\u53d8\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6bd4\u5982Bank\u8fd9\u4e2a\u8bcd\uff0c\u5b83\u4e8b\u5148\u5b66\u597d\u7684Word Embedding\u4e2d\u6df7\u5408\u4e86\u51e0\u79cd\u8bed\u4e49 \uff0c\u5728\u5e94\u7528\u4e2d\u6765\u4e86\u4e2a\u65b0\u53e5\u5b50\uff0c\u5373\u4f7f\u4ece\u4e0a\u4e0b\u6587\u4e2d\uff08\u6bd4\u5982\u53e5\u5b50\u5305\u542bmoney\u7b49\u8bcd\uff09\u660e\u663e\u53ef\u4ee5\u770b\u51fa\u5b83\u4ee3\u8868\u7684\u662f\u201c\u94f6\u884c\u201d\u7684\u542b\u4e49\uff0c\u4f46\u662f\u5bf9\u5e94\u7684Word Embedding\u5185\u5bb9\u4e5f\u4e0d\u4f1a\u53d8\uff0c\u5b83\u8fd8\u662f\u6df7\u5408\u4e86\u591a\u79cd\u8bed\u4e49\u3002\n  ELMO\u9884\u8bad\u7ec3\n ELMO\u7684\u672c\u8d28\u601d\u60f3\u662f\uff1a\u6211\u4e8b\u5148\u7528\u8bed\u8a00\u6a21\u578b\u5b66\u597d\u4e00\u4e2a\u5355\u8bcd\u7684Word Embedding\uff0c\u6b64\u65f6\u591a\u4e49\u8bcd\u65e0\u6cd5\u533a\u5206\uff0c\u4e0d\u8fc7\u8fd9\u6ca1\u5173\u7cfb\u3002\u5728\u6211\u5b9e\u9645\u4f7f\u7528Word Embedding\u7684\u65f6\u5019\uff0c\u5355\u8bcd\u5df2\u7ecf\u5177\u5907\u4e86\u7279\u5b9a\u7684\u4e0a\u4e0b\u6587\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u6211\u53ef\u4ee5\u6839\u636e\u4e0a\u4e0b\u6587\u5355\u8bcd\u7684\u8bed\u4e49\u53bb\u8c03\u6574\u5355\u8bcd\u7684Word Embedding\u8868\u793a\uff0c\u8fd9\u6837\u7ecf\u8fc7\u8c03\u6574\u540e\u7684Word Embedding\u66f4\u80fd\u8868\u8fbe\u5728\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u4e2d\u7684\u5177\u4f53\u542b\u4e49\uff0c\u81ea\u7136\u4e5f\u5c31\u89e3\u51b3\u4e86\u591a\u4e49\u8bcd\u7684\u95ee\u9898\u4e86\u3002\u6240\u4ee5ELMO\u672c\u8eab\u662f\u4e2a\u6839\u636e\u5f53\u524d\u4e0a\u4e0b\u6587\u5bf9Word Embedding\u52a8\u6001\u8c03\u6574\u7684\u601d\u8def\u3002 \u6bcf\u4e2a\u7f16\u7801\u5668\u7684\u6df1\u5ea6\u90fd\u662f\u4e24\u5c42LSTM\u53e0\u52a0\u3002\u8fd9\u4e2a\u7f51\u7edc\u7ed3\u6784\u5176\u5b9e\u5728NLP\u4e2d\u662f\u5f88\u5e38\u7528\u7684\u3002 \u53e5\u5b50\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u90fd\u80fd\u5f97\u5230\u5bf9\u5e94\u7684\u4e09\u4e2aEmbedding:\u6700\u5e95\u5c42\u662f\u5355\u8bcd\u7684Word Embedding\uff0c\u5f80\u4e0a\u8d70\u662f\u7b2c\u4e00\u5c42\u53cc\u5411LSTM\u4e2d\u5bf9\u5e94\u5355\u8bcd\u4f4d\u7f6e\u7684Embedding\uff0c\u8fd9\u5c42\u7f16\u7801\u5355\u8bcd\u7684\u53e5\u6cd5\u4fe1\u606f\u66f4\u591a\u4e00\u4e9b\uff1b\u518d\u5f80\u4e0a\u8d70\u662f\u7b2c\u4e8c\u5c42LSTM\u4e2d\u5bf9\u5e94\u5355\u8bcd\u4f4d\u7f6e\u7684Embedding\uff0c\u8fd9\u5c42\u7f16\u7801\u5355\u8bcd\u7684\u8bed\u4e49\u4fe1\u606f\u66f4\u591a\u4e00\u4e9b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cELMO\u7684\u9884\u8bad\u7ec3\u8fc7\u7a0b\u4e0d\u4ec5\u4ec5\u5b66\u4f1a\u5355\u8bcd\u7684Word Embedding\uff0c\u8fd8\u5b66\u4f1a\u4e86\u4e00\u4e2a\u53cc\u5c42\u53cc\u5411\u7684LSTM\u7f51\u7edc\u7ed3\u6784\uff0c\u800c\u8fd9\u4e24\u8005\u540e\u9762\u90fd\u6709\u7528\u3002     \u9884\u8bad\u7ec3\u597d\u7f51\u7edc\u7ed3\u6784\u540e\uff0c\u5982\u4f55\u7ed9\u4e0b\u6e38\u4efb\u52a1\u4f7f\u7528\u5462\uff1f\n \u8fd9\u6837\u53e5\u5b50X\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u5728ELMO\u7f51\u7edc\u4e2d\u90fd\u80fd\u83b7\u5f97\u5bf9\u5e94\u7684\u4e09\u4e2aEmbedding\uff0c\u4e4b\u540e\u7ed9\u4e88\u8fd9\u4e09\u4e2aEmbedding\u4e2d\u7684\u6bcf\u4e00\u4e2aEmbedding\u4e00\u4e2a\u6743\u91cda\uff0c\u8fd9\u4e2a\u6743\u91cd\u53ef\u4ee5\u5b66\u4e60\u5f97\u6765\uff0c\u6839\u636e\u5404\u81ea\u6743\u91cd\u7d2f\u52a0\u6c42\u548c\uff0c\u5c06\u4e09\u4e2aEmbedding\u6574\u5408\u6210\u4e00\u4e2a\u3002\u7136\u540e\u5c06\u6574\u5408\u540e\u7684\u8fd9\u4e2aEmbedding\u4f5c\u4e3aX\u53e5\u5728\u81ea\u5df1\u4efb\u52a1\u7684\u90a3\u4e2a\u7f51\u7edc\u7ed3\u6784\u4e2d\u5bf9\u5e94\u5355\u8bcd\u7684\u8f93\u5165\uff0c\u4ee5\u6b64\u4f5c\u4e3a\u8865\u5145\u7684\u65b0\u7279\u5f81\u7ed9\u4e0b\u6e38\u4efb\u52a1\u4f7f\u7528\u3002 \u8fd9\u4e00\u7c7b\u9884\u8bad\u7ec3\u7684\u65b9\u6cd5\u88ab\u79f0\u4e3a\u201cFeature-based Pre-Training\u201d    \u591a\u4e49\u8bcd\u95ee\u9898\u89e3\u51b3\u4e86\u4e48\n \u9759\u6001Word Embedding\u65e0\u6cd5\u89e3\u51b3\u591a\u4e49\u8bcd\u7684\u95ee\u9898\uff0c\u90a3\u4e48ELMO\u5f15\u5165\u4e0a\u4e0b\u6587\u52a8\u6001\u8c03\u6574\u5355\u8bcd\u7684embedding\u540e\u591a\u4e49\u8bcd\u95ee\u9898\u89e3\u51b3\u4e86\u5417\uff1f\u89e3\u51b3\u4e86\uff0c\u800c\u4e14\u6bd4\u6211\u4eec\u671f\u5f85\u7684\u89e3\u51b3\u5f97\u8fd8\u8981\u597d\u3002    ELMO\u6709\u4ec0\u4e48\u7f3a\u70b9\uff1f\n ELMO\u4f7f\u7528\u4e86LSTM\u800c\u4e0d\u662f\u65b0\u8d35Transformer\uff0c Transformer\u63d0\u53d6\u7279\u5f81\u7684\u80fd\u529b\u662f\u8981\u8fdc\u5f3a\u4e8eLSTM\u7684 ELMO\u91c7\u53d6\u53cc\u5411\u62fc\u63a5\u8fd9\u79cd\u878d\u5408\u7279\u5f81\u7684\u80fd\u529b\u53ef\u80fd\u6bd4Bert\u4e00\u4f53\u5316\u7684\u878d\u5408\u7279\u5f81\u65b9\u5f0f\u5f31 ELMO\u662f\u57fa\u4e8e\u7279\u5f81\u878d\u5408\u7684\u9884\u8bad\u7ec3\u65b9\u6cd5    \u4eceWord Embedding\u5230GPT  \u751f\u6210\u5f0f\u9884\u8bad\u7ec3-GPT\uff1aGenerative Pre-Training (\u7b2c\u4e00\u4e2a\u9636\u6bb5\u662f\u5229\u7528\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u9884\u8bad\u7ec3\uff0c\u7b2c\u4e8c\u9636\u6bb5\u901a\u8fc7Fine-tuning\u7684\u6a21\u5f0f\u89e3\u51b3\u4e0b\u6e38\u4efb\u52a1) Transformer  Transformer\u662f\u4e2a\u53e0\u52a0\u7684\u201c\u81ea\u6ce8\u610f\u529b\u673a\u5236\uff08Self Attention\uff09\u201d\u6784\u6210\u7684\u6df1\u5ea6\u7f51\u7edc\uff0c\u662f\u76ee\u524dNLP\u91cc\u6700\u5f3a\u7684\u7279\u5f81\u63d0\u53d6\u5668\uff0c\u6ce8\u610f\u529b\u8fd9\u4e2a\u673a\u5236\u5728\u6b64\u88ab\u53d1\u626c\u5149\u5927\uff0c\u4ece\u4efb\u52a1\u7684\u914d\u89d2\u4e0d\u65ad\u62a2\u620f\uff0c\u76f4\u5230Transformer\u4e00\u8dc3\u6210\u4e3a\u8e22\u5f00RNN\u548cCNN\u4f20\u7edf\u7279\u5f81\u63d0\u53d6\u5668\uff0c\u8363\u5347\u5934\u724c\uff0c\u5927\u7ea2\u5927\u7d2b\u3002 \r\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7684\u6ce8\u610f\u529b\u6a21\u578b - \u8865\u5145\u4e0b\u76f8\u5173\u57fa\u7840\u77e5\u8bc6 Transformer\u6bd4\u8f83\u597d\u7684\u6587\u7ae0\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u4e24\u7bc7\u6587\u7ae0  \rJay Alammar\u53ef\u89c6\u5316\u5730\u4ecb\u7ecdTransformer \u54c8\u4f5b\u5927\u5b66NLP\u7814\u7a76\u7ec4\u5199\u7684\rThe Annotated Transformer. Transformer\u5728\u672a\u6765\u4f1a\u9010\u6e10\u66ff\u4ee3\u6389RNN\u6210\u4e3a\u4e3b\u6d41\u7684NLP\u5de5\u5177\uff0cRNN\u4e00\u76f4\u53d7\u56f0\u4e8e\u5176\u5e76\u884c\u8ba1\u7b97\u80fd\u529b\uff0c\u8fd9\u662f\u56e0\u4e3a\u5b83\u672c\u8eab\u7ed3\u6784\u7684\u5e8f\u5217\u6027\u4f9d\u8d56\u5bfc\u81f4\u7684\uff0c\u5c3d\u7ba1\u5f88\u591a\u4eba\u5728\u8bd5\u56fe\u901a\u8fc7\u4fee\u6b63RNN\u7ed3\u6784\u6765\u4fee\u6b63\u8fd9\u4e00\u70b9\uff0c\u4f46\u662f\u6211\u4e0d\u770b\u597d\u8fd9\u79cd\u6a21\u5f0f\uff0c\u56e0\u4e3a\u7ed9\u9a6c\u8f66\u6362\u8f6e\u80ce\u4e0d\u5982\u628a\u5b83\u5347\u7ea7\u5230\u6c7d\u8f66\uff0c\u8fd9\u4e2a\u9053\u7406\u5f88\u597d\u61c2\uff0c\u66f4\u4f55\u51b5\u76ee\u524d\u6c7d\u8f66\u7684\u96cf\u5f62\u5df2\u7ecf\u51fa\u73b0\u4e86\uff0c\u5e72\u561b\u8fd8\u8981\u6267\u7740\u5728\u6362\u8f6e\u80ce\u8fd9\u4e2a\u4e8b\u60c5\u5462\uff1f\u662f\u5427\uff1f\u518d\u8bf4CNN\uff0cCNN\u5728NLP\u91cc\u4e00\u76f4\u6ca1\u6709\u5f62\u6210\u4e3b\u6d41\uff0cCNN\u7684\u6700\u5927\u4f18\u70b9\u662f\u6613\u4e8e\u505a\u5e76\u884c\u8ba1\u7b97\uff0c\u6240\u4ee5\u901f\u5ea6\u5feb\uff0c\u4f46\u662f\u5728\u6355\u83b7NLP\u7684\u5e8f\u5217\u5173\u7cfb\u5c24\u5176\u662f\u957f\u8ddd\u79bb\u7279\u5f81\u65b9\u9762\u5929\u7136\u6709\u7f3a\u9677\uff0c\u4e0d\u662f\u505a\u4e0d\u5230\u800c\u662f\u505a\u4e0d\u597d\uff0c\u76ee\u524d\u4e5f\u6709\u5f88\u591a\u6539\u8fdb\u6a21\u578b\uff0c\u4f46\u662f\u7279\u522b\u6210\u529f\u7684\u4e0d\u591a\u3002\u7efc\u5408\u5404\u65b9\u9762\u60c5\u51b5\uff0c\u5f88\u660e\u663eTransformer\u540c\u65f6\u5177\u5907\u5e76\u884c\u6027\u597d\uff0c\u53c8\u9002\u5408\u6355\u83b7\u957f\u8ddd\u79bb\u7279\u5f81\uff0c\u6ca1\u6709\u7406\u7531\u4e0d\u5728\u8d5b\u8dd1\u6bd4\u8d5b\u4e2d\u8dd1\u4e0d\u8fc7RNN\u548cCNN\u3002     GPT\u8bad\u7ec3\u597d\u4e86\u5982\u4f55\u4f7f\u7528  \u7ed3\u6784\u6539\u9020 \uff08\u8fd9\u91cc\u6162\u6162\u5c31\u6ca1\u770b\u61c2\u4e86\uff09 \u5bf9\u7f51\u7edc\u53c2\u6570\u8fdb\u884cFine-tuning   GPT\u7684\u7f3a\u70b9  \u8981\u662f\u628a\u8bed\u8a00\u6a21\u578b\u6539\u9020\u6210\u53cc\u5411\u7684\u5c31\u597d\u4e86    Bert\u7684\u8bde\u751f   NLP\u7684\u56db\u5927\u7c7b\u4efb\u52a1\n  \u5e8f\u5217\u6807\u6ce8  \u4e2d\u6587\u5206\u8bcd\uff0c\u8bcd\u6027\u6807\u6ce8\uff0c\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff0c\u8bed\u4e49\u89d2\u8272\u6807\u6ce8\u7b49 \u7279\u70b9\u662f\u53e5\u5b50\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u8981\u6c42\u6a21\u578b\u6839\u636e\u4e0a\u4e0b\u6587\u90fd\u8981\u7ed9\u51fa\u4e00\u4e2a\u5206\u7c7b\u7c7b\u522b   \u5206\u7c7b\u4efb\u52a1  \u6587\u672c\u5206\u7c7b\uff0c\u60c5\u611f\u8ba1\u7b97\u7b49 \u7279\u70b9\u662f\u4e0d\u7ba1\u6587\u7ae0\u6709\u591a\u957f\uff0c\u603b\u4f53\u7ed9\u51fa\u4e00\u4e2a\u5206\u7c7b\u7c7b\u522b\u5373\u53ef   \u53e5\u5b50\u5173\u7cfb\u5224\u65ad  Entailment\uff0cQA\uff0c\u8bed\u4e49\u6539\u5199\uff0c\u81ea\u7136\u8bed\u8a00\u63a8\u7406\u7b49 \u7279\u70b9\u662f\u7ed9\u5b9a\u4e24\u4e2a\u53e5\u5b50\uff0c\u6a21\u578b\u5224\u65ad\u51fa\u4e24\u4e2a\u53e5\u5b50\u662f\u5426\u5177\u5907\u67d0\u79cd\u8bed\u4e49\u5173\u7cfb   \u751f\u6210\u5f0f\u4efb\u52a1  \u673a\u5668\u7ffb\u8bd1\uff0c\u6587\u672c\u6458\u8981\uff0c\u5199\u8bd7\u9020\u53e5\uff0c\u770b\u56fe\u8bf4\u8bdd\u7b49 \u7279\u70b9\u662f\u8f93\u5165\u6587\u672c\u5185\u5bb9\u540e\uff0c\u9700\u8981\u81ea\u4e3b\u751f\u6210\u53e6\u5916\u4e00\u6bb5\u6587\u5b57      Bert\u666e\u9002\u6027\n  Bert\u5982\u4f55\u6539\u9020\u4e0b\u6709\u4efb\u52a1\uff1f\n  Bert\u6548\u679c\u5982\u4f55\n \u572811\u4e2a\u5404\u79cd\u7c7b\u578b\u7684NLP\u4efb\u52a1\u4e2d\u8fbe\u5230\u76ee\u524d\u6700\u597d\u7684\u6548\u679c\uff0c\u67d0\u4e9b\u4efb\u52a1\u6027\u80fd\u6709\u6781\u5927\u7684\u63d0\u5347\u3002    \u4eceGPT\u548cELMO\u53caWord2Vec\u5230Bert\uff1a\u56db\u8005\u7684\u5173\u7cfb\n \u5982\u679c\u6211\u4eec\u628aGPT\u9884\u8bad\u7ec3\u9636\u6bb5\u6362\u6210\u53cc\u5411\u8bed\u8a00\u6a21\u578b\uff0c\u90a3\u4e48\u5c31\u5f97\u5230\u4e86Bert\uff1b\u800c\u5982\u679c\u6211\u4eec\u628aELMO\u7684\u7279\u5f81\u62bd\u53d6\u5668\u6362\u6210Transformer\uff0c\u90a3\u4e48\u6211\u4eec\u4e5f\u4f1a\u5f97\u5230Bert\u3002\u6240\u4ee5\u4f60\u53ef\u4ee5\u770b\u51fa\uff1aBert\u6700\u5173\u952e\u4e24\u70b9\uff0c\u4e00\u70b9\u662f\u7279\u5f81\u62bd\u53d6\u5668\u91c7\u7528Transformer\uff1b\u7b2c\u4e8c\u70b9\u662f\u9884\u8bad\u7ec3\u7684\u65f6\u5019\u91c7\u7528\u53cc\u5411\u8bed\u8a00\u6a21\u578b\u3002 Bert\uff1a\u6700\u8fd1\u51e0\u5e74NLP\u91cd\u8981\u6280\u672f\u7684\u96c6\u5927\u6210\u8005    Bert\u5982\u4f55\u6539\u9020\u53cc\u5411\u8bed\u8a00\u6a21\u578b\uff1f\n Masked LM Next Sentence Prediction    Bert\u8bc4\u4ef7\u53ca\u603b\u7ed3\n  Bert\u501f\u9274\u4e86ELMO\uff0cGPT\u53caCBOW\uff0c\u4e3b\u8981\u63d0\u51fa\u4e86Masked \u8bed\u8a00\u6a21\u578b\u53caNext Sentence Prediction\uff0c\u4f46\u662f\u8fd9\u91ccNext Sentence Prediction\u57fa\u672c\u4e0d\u5f71\u54cd\u5927\u5c40\uff0c\u800cMasked LM\u660e\u663e\u501f\u9274\u4e86CBOW\u7684\u601d\u60f3\u3002\u6240\u4ee5\u8bf4Bert\u7684\u6a21\u578b\u6ca1\u4ec0\u4e48\u5927\u7684\u521b\u65b0\uff0c\u66f4\u50cf\u6700\u8fd1\u51e0\u5e74NLP\u91cd\u8981\u8fdb\u5c55\u7684\u96c6\u5927\u6210\u8005 \u9996\u5148\u662f\u4e24\u9636\u6bb5\u6a21\u578b\uff0c\u7b2c\u4e00\u9636\u6bb5\u53cc\u5411\u8bed\u8a00\u6a21\u578b\u9884\u8bad\u7ec3\uff0c\u8fd9\u91cc\u6ce8\u610f\u8981\u7528\u53cc\u5411\u800c\u4e0d\u662f\u5355\u5411\uff0c\u7b2c\u4e8c\u9636\u6bb5\u91c7\u7528\u5177\u4f53\u4efb\u52a1Fine-tuning\u6216\u8005\u505a\u7279\u5f81\u96c6\u6210\uff1b\u7b2c\u4e8c\u662f\u7279\u5f81\u62bd\u53d6\u8981\u7528Transformer\u4f5c\u4e3a\u7279\u5f81\u63d0\u53d6\u5668\u800c\u4e0d\u662fRNN\u6216\u8005CNN\uff1b\u7b2c\u4e09\uff0c\u53cc\u5411\u8bed\u8a00\u6a21\u578b\u53ef\u4ee5\u91c7\u53d6CBOW\u7684\u65b9\u6cd5\u53bb\u505a Bert\u6700\u5927\u7684\u4eae\u70b9\u5728\u4e8e\u6548\u679c\u597d\u53ca\u666e\u9002\u6027\u5f3a\uff0c\u51e0\u4e4e\u6240\u6709NLP\u4efb\u52a1\u90fd\u53ef\u4ee5\u5957\u7528Bert\u8fd9\u79cd\u4e24\u9636\u6bb5\u89e3\u51b3\u601d\u8def\uff0c\u800c\u4e14\u6548\u679c\u5e94\u8be5\u4f1a\u6709\u660e\u663e\u63d0\u5347\u3002\u53ef\u4ee5\u9884\u89c1\u7684\u662f\uff0c\u672a\u6765\u4e00\u6bb5\u65f6\u95f4\u5728NLP\u5e94\u7528\u9886\u57df\uff0cTransformer\u5c06\u5360\u636e\u4e3b\u5bfc\u5730\u4f4d\uff0c\u800c\u4e14\u8fd9\u79cd\u4e24\u9636\u6bb5\u9884\u8bad\u7ec3\u65b9\u6cd5\u4e5f\u4f1a\u4e3b\u5bfc\u5404\u79cd\u5e94\u7528\u3002    ",
        "description": "",
        "id": 84,
        "section": "posts",
        "tags": [
            "Bert",
            "Embedding"
        ],
        "title": "\u9605\u8bfb\u7b14\u8bb0-\u4eceWord Embedding\u5230Bert\u6a21\u578b",
        "uri": "/posts/notes/84/"
    },
    {
        "content": " Copy from:\nNLP papers\n \u5f85\u6574\u7406\nA Model of Coherence Based on Distributed Sentence Representation pdf: \u4e0b\u8f7d\n\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5206\u5e03\u5f0f\u53e5\u5b50\u8868\u793a\u7684\u6a21\u578b\uff0c\u7528\u6765\u5224\u65ad\u6587\u672c\u8fde\u8d2f\u6027(Coherence)\u3002\u6a21\u578b\u7684\u8f93\u5165\u662f\u591a\u4e2a\u53e5\u5b50\uff08a window of sentences\uff09\uff0c\u8f93\u51fa\u662f\u8fd9\u4e9b\u53e5\u5b50\u662f\u8fde\u7eed\u7684\u6982\u7387\u3002\u6a21\u578b\u7684\u4e3b\u8981\u6b65\u9aa4\u5982\u4e0b\uff1a\n \u5bf9\u6bcf\u4e2a\u53e5\u5b50\u8fdb\u884c\u7f16\u7801\uff1a\u8bba\u6587\u5b9e\u73b0\u4e86\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u7f16\u7801\u548c\u9012\u5f52\u795e\u7ecf\u7f51\u7edc\u7f16\u7801\u4e24\u79cd\u65b9\u5f0f\uff0c\u5c06\u6bcf\u4e2a\u53e5\u5b50\u8868\u793a\u6210\u4e00\u4e2a$k \\times 1\u200b$\u7684\u8bed\u4e49\u5411\u91cf$h_{s_i}, i = 1,&hellip;,L\u200b$\uff0c\u5176\u4e2d$L\u200b$\u4e3a\u53e5\u5b50\u4e2a\u6570\uff08\u7a97\u53e3\u5927\u5c0f\uff09\uff1b \u5c06\u4e00\u4e2a\u7a97\u53e3\u5185\u7684\u6240\u6709\u53e5\u5b50\u7684\u8bed\u4e49\u5411\u91cf\u8fdb\u884c\u7ea7\u8054\uff0c\u5f97\u5230\u5927\u5c0f\u4e3a$(L \\times k) \\times 1\u200b$\u7684\u8bed\u4e49\u5411\u91cf$h_C = [h_{s_1},h_{s_2},&hellip;,h_{s_L}]\u200b$\u540e\uff0c\u8fdb\u884c\u975e\u7ebf\u6027\u53d8\u6362\uff0c\u5373$q_C=tanh(W_{sen} \\times h_C + b_{sen})\u200b$\uff0c\u5f97\u5230\u5927\u5c0f\u4e3a$H \\times 1\u200b$\u7684\u9690\u85cf\u5c42\u8bed\u4e49\u8868\u793a\u5411\u91cf$q_C\u200b$\uff0c\u5176\u4e2d$W_{sen}\u200b$\u4e3a\u5927\u5c0f\u4e3a$H \\times (L \\times k)\u200b$\u7684\u77e9\u9635\uff0c$b_{sen}\u200b$\u4e3a\u5927\u5c0f\u4e3a$H \\times 1\u200b$\u7684\u504f\u79fb\u5411\u91cf\uff1b \u6700\u540e\u5c06$q_C\u200b$\u8f93\u5165\u5230\u5168\u8fde\u63a5\u5c42\u8fdb\u884c\u4e8c\u5206\u7c7b\uff0c\u5373$p(y_C=1) = sigmoid(U^Tq_C + b)\u200b$\uff0c\u5176\u4e2d$y_C=1\u200b$\u8868\u793a\u8be5\u7a97\u53e3\u4e2d\u7684\u53e5\u5b50\u662f\u8fde\u8d2f\u7684\uff0c\u7b49\u4e8e0\u5219\u8868\u793a\u4e0d\u8fde\u8d2f\u3002  \u7ed9\u5b9a\u4e00\u7bc7\u5305\u542b$N_d$\u4e2a\u53e5\u5b50\u7684\u6587\u6863$d={s_1,s_2, &hellip;,s_{N_d}}$\uff0c\u5047\u8bbe$L=3$\uff0c\u53ef\u4ee5\u751f\u6210\u5982\u4e0b\u7684\u6837\u672c\uff1a\n$$&lt; s _ { \\text{start} } , s _ { 1 } , s _ { 2 } &gt; , &lt; s _ { 1 } , s _ { 2 } , s _ { 3 } &gt; , \\ldots \\ &lt; s _ { N _ { d } - 2 } , s _ { N _ { d } - 1 } , s _ { N _ { d } } &gt; , &lt; s _ { N _ { d } - 1 } , s _ { N _ { d } } , s _ { e n d } &gt;$$\n\u6587\u6863$d$\u7684\u8fde\u8d2f\u6027\u5f97\u5206$S_d$\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u6240\u4ee5\u6837\u672c\u8fde\u8d2f\u6027\u6982\u7387\u7684\u4e58\u79ef\uff08\u5f97\u5206\u8d8a\u5927\u8868\u793a\u8d8a\u8fde\u8d2f\uff09\uff0c\u5373\n$$S _ { d } = \\prod _ { C \\in d } p \\left( y _ { C } = 1 \\right)$$\n\u867d\u7136\u8bba\u6587\u7684\u4efb\u52a1\u662f\u5224\u65ad\u6587\u672c\u8fde\u8d2f\u6027\uff0c\u7ed9\u4e86\u540e\u7eed\u7684\u7814\u7a76\u8005\u7814\u7a76\u53e5\u5b50\u5206\u5e03\u5f0f\u8868\u793a\u7684\u542f\u793a:\u7c7b\u4f3c\u4e8eword2vec\u4e2d\u4f7f\u7528\u76f8\u90bb\u8bcd\u9884\u6d4b\u7684\u65b9\u5f0f\u6765\u83b7\u5f97word embedding\uff0c\u53ef\u4ee5\u901a\u8fc7\u53e5\u5b50\u8fde\u8d2f\u6027\u8fd9\u4e2a\u4efb\u52a1\u81ea\u52a8\u6784\u5efa\u6570\u636e\u96c6\uff0c\u65e0\u9700\u6807\u6ce8\u5373\u53ef\u5f97\u5230sentence embedding\u3002\nSkip-Thought Vectors pdf: \u4e0b\u8f7d\n\u672c\u6587\u63d0\u51fa\u4e86Skip-Thought\u6a21\u578b\u7528\u4e8e\u5f97\u5230\u53e5\u5b50\u5411\u91cf\u8868\u793aSkip-Thought Vectors\u3002\u57fa\u672c\u601d\u60f3\u4e0eword2vec\u4e2d\u7684skip-gram\u6a21\u578b\u7c7b\u4f3c\uff1a\u5bf9\u5f53\u524d\u53e5\u5b50\u8fdb\u884c\u7f16\u7801\u540e\u5bf9\u5176\u5468\u56f4\u7684\u53e5\u5b50\u8fdb\u884c\u9884\u6d4b\u3002\u5177\u4f53\u5730\uff0cskip-thought\u6a21\u578b\u5982\u4e0b\u56fe\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u8fde\u7eed\u7684\u53e5\u5b50\u4e09\u5143\u7ec4\uff0c\u5bf9\u4e2d\u95f4\u7684\u53e5\u5b50\u8fdb\u884c\u7f16\u7801\uff0c\u901a\u8fc7\u7f16\u7801\u7684\u53e5\u5b50\u5411\u91cf\u9884\u6d4b\u524d\u4e00\u4e2a\u53e5\u5b50\u548c\u540e\u4e00\u4e2a\u53e5\u5b50\u3002Skip-Thought\u5411\u91cf\u7684\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u53ef\u4ee5\u4ece\u76f8\u90bb\u53e5\u5b50\u7684\u5185\u5bb9\u63a8\u65ad\u51fa\u4e30\u5bcc\u7684\u53e5\u5b50\u8bed\u4e49\u3002\n\u6a21\u578b\u7684\u57fa\u672c\u67b6\u6784\u4e0eencoder-decoder\u6a21\u578b\u7c7b\u4f3c\uff0c\u8bba\u6587\u4e2d\u4f7f\u7528\u7684encoder\u548cdecoder\u90fd\u4e3aGRU\uff0c\u4f7f\u7528\u5355\u5411GRU\u79f0\u4e3auni-skip,\u53cc\u5411GRU\u79f0\u4e3abi-skip\uff0c\u5c06uni-skip\u548cbi-skip\u751f\u6210\u7684sentence embedding\u8fdb\u884cconcat\u79f0\u4e3acombine-skip\u3002\u8bba\u6587\u901a\u8fc7\u5927\u91cf\u5b9e\u9a8c\u5bf9\u6bd4\u4e86\u4e0a\u8ff0\u4e09\u79cd\u53d8\u4f53\u7684\u6548\u679c\uff0c\u603b\u4f53\u4e0a\u6765\u8bf4\u662funi-skip &lt; bi-skip &lt; combine-skip\u3002\u5305\u62ec\u5982\u4e0b\u5b9e\u9a8c\uff1a\n \u8bed\u4e49\u76f8\u5173\u6027\uff1athe SemEval 2014 Task 1: semantic relatedness SICK dataset \u91ca\u4e49\u8bc6\u522b\uff1aMicrosoft Research Paraphrase Corpus \u56fe\u50cf\u68c0\u7d22\uff08Image-sentence ranking\uff09\uff1athe Microsoft COCO dataset \u53e5\u5b50\u5206\u7c7b\uff1aMR\u3001CR\u3001SUBJ\u3001MPQA\u4ee5\u53caTREC\u4e94\u4e2a\u6570\u636e\u96c6  \r\u8bcd\u8868\u6269\u5c55\uff1askip-thought\u6a21\u578b\u7684\u8bcd\u8868\u89c4\u6a21\u5f80\u5f80\u662f\u8fdc\u5c0f\u4e8e\u73b0\u5b9e\u4e2d\u7684\u8bcd\u8868\uff08\u5982\u7528\u6d77\u91cf\u6570\u636e\u8bad\u7ec3\u7684word2vec\uff09\u3002\u4e3a\u4e86\u8ba9\u6a21\u578b\u80fd\u591f\u5bf9\u4efb\u610f\u53e5\u5b50\u8fdb\u884c\u7f16\u7801\uff0c\u53d7\u8bba\u6587\rExploiting similarities among languages for machine translation\u7684\u542f\u53d1\uff0c\u672c\u6587\u8bad\u7ec3\u4e00\u4e2a\u7ebf\u6027\u6620\u5c04\u6a21\u578b\uff0c\u5c06word2vec\u7684\u8bcd\u5411\u91cf\u6620\u5c04\u4e3askip-thought\u6a21\u578bencoder\u8bcd\u8868\u7a7a\u95f4\u7684\u8bcd\u5411\u91cf\u3002\u5047\u8bbe\u8bad\u7ec3\u540e\u7684skip-thought\u6a21\u578b\u7684\u8bcd\u5411\u91cf\u77e9\u9635\u4e3a$X$\uff0c\u5927\u5c0f\u4e3a[num_words\uff0cdim1]\uff0c\u5373\u8bcd\u8868\u5927\u5c0f\u4e3anum_words\uff0c\u8bcd\u5411\u91cf\u7ef4\u5ea6\u4e3adim1\uff0c\u8fd9num_words\u4e2a\u8bcd\u5728word2vec\u4e2d\u5bf9\u5e94\u7684\u8bcd\u5411\u91cf\u77e9\u9635\u4e3aY\uff0c\u5927\u5c0f\u4e3a[num_words, dim2]\uff0c\u5373word2vec\u7684\u8bcd\u5411\u91cf\u7ef4\u5ea6\u4e3adim2\u3002\u6211\u4eec\u7684\u76ee\u7684\u662fword2vec\u4e2d\u7684\u8bcd\u5411\u91cf\u901a\u8fc7\u7ebf\u6027\u53d8\u6362\u540e\u5f97\u5230\u8bcd\u5411\u91cf\u4e0eskip-thought\u6a21\u578bencoder\u7a7a\u95f4\u7684\u8bcd\u5411\u91cf\u65e0\u9650\u63a5\u8fd1\uff0c\u56e0\u6b64\u6700\u5c0f\u5316\u7ebf\u6027\u56de\u5f52\u3002\u5f97\u5230\u8fd9\u4e2a\u7ebf\u6027\u6a21\u578b\u540e\uff0c\u5047\u8bbe\u5f85\u7f16\u7801\u7684\u53e5\u5b50\u4e2d\u7684\u67d0\u4e2a\u8bcd\u4e0d\u5c5e\u4e8eskip-thought\u8bcd\u8868\uff0c\u5219\u9996\u5148\u5728word2vec\u8bcd\u8868\u4e2d\u8fdb\u884clook up\u5f97\u5230word2vec\u5bf9\u5e94\u7684\u8bcd\u5411\u91cf\uff0c\u518d\u901a\u8fc7\u7ebf\u6027\u6a21\u578b\u6620\u5c04\u4e3askip-thought\u6a21\u578bencoder\u7a7a\u95f4\u7684\u8bcd\u5411\u91cf\u3002\nLearning Distributed Representations of Sentences from Unlabelled Data pdf: \u4e0b\u8f7d\n\u672c\u6587\u63d0\u51fa\u4e86\u4e24\u79cd\u65e0\u76d1\u7763\u5b66\u4e60\u6a21\u578b\u7528\u4e8e\u5b66\u4e60\u53e5\u5b50\u5206\u5e03\u5f0f\u8868\u793a\u3002\u7b2c\u4e00\u79cd\u6a21\u578b\u79f0\u4e3a\u5e8f\u5217\u53bb\u566a\u81ea\u7f16\u7801\u5668\uff08SDAE: Sequential Denoising AutoEncoder\uff09\u3002AutoEncoder\u5305\u62ec\u7f16\u7801\u5668\u548c\u89e3\u7801\u5668\u4e24\u90e8\u5206\uff0c\u8f93\u5165\u4fe1\u606f\u901a\u8fc7\u7f16\u7801\u5668\u4ea7\u751f\u7f16\u7801\u4fe1\u606f\uff0c\u518d\u901a\u8fc7\u89e3\u7801\u5668\u5f97\u5230\u8f93\u5165\u4fe1\u606f\uff0c\u6a21\u578b\u7684\u76ee\u6807\u662f\u4f7f\u8f93\u51fa\u4fe1\u606f\u548c\u8f93\u5165\u4fe1\u606f\u539f\u6765\u8d8a\u63a5\u8fd1\u3002DAE (Denoising AutoEncoder)\u8868\u793a\u6a21\u578b\u7684\u8f93\u5165\u4fe1\u606f\u9996\u5148\u7ecf\u8fc7\u4e86\u566a\u58f0\u5904\u7406\u540e\u518d\u8fdb\u884c\u7f16\u7801\u548c\u89e3\u7801\uff0c\u5e76\u4e14\u5e0c\u671b\u89e3\u7801\u7684\u8f93\u51fa\u4fe1\u606f\u662f\u4e0d\u542b\u566a\u58f0\u7684\u8f93\u5165\u4fe1\u606f\uff0c\u5373\u53bb\u566a\u3002DAE\u5e38\u7528\u4e8e\u56fe\u50cf\u5904\u7406\uff0c\u672c\u6587\u63d0\u51faSDAE\u6a21\u578b\u8868\u793a\u7528\u6765\u5904\u7406\u53d8\u957f\u7684\u53e5\u5b50\uff08\u5e8f\u5217\uff09\u3002\u5177\u4f53\u5730\uff0c\u7ed9\u5b9a\u53e5\u5b50$S\u200b$\uff0c\u91c7\u7528\u566a\u58f0\u51fd\u6570\uff1a$N(S|p_0,p_x)\u200b$\uff0c\u5176\u4e2d$p_0, p_x\u200b$\u4e3a0\u52301\u4e4b\u95f4\u7684\u6982\u7387\u503c\u3002\u9996\u5148\uff0c\u5bf9\u4e8e$S\u200b$\u4e2d\u7684\u6bcf\u4e2a\u8bcd$w\u200b$\uff0c\u566a\u58f0\u51fd\u6570$N\u200b$\u6309\u7167\u6982\u7387$p_0\u200b$\u968f\u673a\u5220\u9664$w\u200b$\uff0c\u7136\u540e\u5bf9\u4e8e$S\u200b$\u4e2d\u6bcf\u4e2a\u4e0d\u91cd\u53e0\u7684bigram $w_iw_{i+1}\u200b$\uff0c\u566a\u58f0\u51fd\u6570$N\u200b$\u6309\u7167\u6982\u7387$p_x\u200b$\u5bf9$w_i\u200b$\u548c$w_{i+1}\u200b$\u8fdb\u884c\u4ea4\u6362\u3002\u8bba\u6587\u91c7\u7528\u57fa\u4e8eLSTM\u7684encoder-decoder\u6a21\u578b\uff0cSDAE\u7684\u76ee\u6807\u662f\u9884\u6d4b\u51fa\u539f\u59cb\u53e5\u5b50$S\u200b$\u3002SDAE\u6a21\u578b\u5728\u9a8c\u8bc1\u96c6\u4e0a\u5bf9\u8d85\u53c2\u6570$p_0,p_x \\in {0.1, 0.2, 0.3}\u200b$\u8fdb\u884c\u641c\u7d22\uff0c\u5f97\u5230\u5f53$p_0=p_x=0.1\u200b$\u4e3a\u6700\u4f18\u7ed3\u679c\u3002\u8bba\u6587\u8fd8\u5c1d\u8bd5\u4ee4$p_0=p_x=0\u200b$\u8fdb\u884c\u5bf9\u6bd4\u5b9e\u9a8c\uff0cSDAE\u6a21\u578b\u5373\u53d8\u6210\u4e86SAE\u6a21\u578b\u3002 SDAE\u6a21\u578b\u76f8\u8f83\u4e8e\rSkip-Thought\u7684\u4f18\u70b9\u662f\u53ea\u9700\u8981\u8f93\u5165\u5355\u4e2a\u53e5\u5b50\uff0c\u5373\u4e0d\u8981\u6c42\u53e5\u5b50\u6240\u5728\u7684\u6587\u672c\u662f\u6709\u5e8f\u7684\uff0c\u800cSkip-Thought\u7684\u8f93\u5165\u5fc5\u987b\u662f\u4e09\u4e2a\u6709\u5e8f\u7684\u53e5\u5b50\u3002\n\u7b2c\u4e8c\u79cd\u6a21\u578b\u79f0\u4e3aFastSent\uff0c\rSkip-Thought\u6a21\u578b\u91c7\u53d6\u8bed\u8a00\u6a21\u578b\u5f62\u5f0f\u7684\u7f16\u7801\u89e3\u7801\u65b9\u5f0f\uff0c\u5bfc\u81f4\u5176\u8bad\u7ec3\u901f\u5ea6\u4f1a\u5f88\u6162\u3002FastSent\u91c7\u53d6\u4e86BOW\u5f62\u5f0f\u7684\u7f16\u7801\u65b9\u5f0f\uff0c\u4f7f\u5f97\u6a21\u578b\u8bad\u7ec3\u901f\u5ea6\u5927\u5e45\u63d0\u9ad8\uff0c\u56e0\u6b64\u79f0\u4e3aFastSent\u3002\u5177\u4f53\u5730\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u8fde\u7eed\u7684\u53e5\u5b50\u4e09\u5143\u7ec4$S_{i-1}, S_i, S_{i+1}$\uff0c\u5bf9\u4e2d\u95f4\u7684\u53e5\u5b50$S_{i}$\u8fdb\u884c\u7f16\u7801\uff0c\u7f16\u7801\u65b9\u5f0f\u662f$S_i$\u4e2d\u6240\u6709\u8bcd\u7684\u8bcd\u5411\u91cf\u4e4b\u548c\uff0c\u5373$\\mathbf { s } _ { \\mathbf { i } } = \\sum _ { w \\in S _ { i } } u _ { w }$\uff0c\u7136\u540e\u6839\u636e$\\mathbf { s } _ { \\mathbf { i } }$\u5bf9$w \\in S_{i-1} \\cup S_{i+1}$\u8fdb\u884c\u9884\u6d4b\uff0c\u8fd9\u4e0eword2vec\u6a21\u578b\u4e2d\u7684skip-gram\u57fa\u672c\u4e00\u81f4\uff0c\u800c\u65e0\u9700\u50cfSkip-Thought\u4e00\u6837\u6309\u7167\u53e5\u5b50\u4e2d\u8bcd\u7684\u987a\u5e8f\u751f\u6210\uff08\u9884\u6d4b\uff09\u3002\u56e0\u6b64FastSent\u7684\u635f\u5931\u51fd\u6570\u5982\u4e0b:\n$$\\sum _ { w \\in S _ { i - 1 } \\cup S _ { i + 1 } } \\phi \\left( \\mathbf { s } _ { \\mathbf { i } } , v _ { w } \\right)$$\n\u5176\u4e2d$\\phi \\left( v _ { 1 } , v _ { 2 } \\right)$\u4e3asoftmax\u51fd\u6570\uff0c$v_w$\u4e3a\u76ee\u6807\u53e5\u5b50\u4e2d\u7684\u8bcd$w$\u7684embedding\u3002\u8bba\u6587\u8fd8\u63d0\u51fa\u4e86\u4e00\u79cd\u53d8\u4f53\u6a21\u578bFastSent+AE\uff0c\u8be5\u53d8\u4f53\u4e0d\u5149\u662f\u9884\u6d4b\u524d\u540e\u4e24\u4e2a\u53e5\u5b50\u4e2d\u7684\u8bcd\uff0c\u8fd8\u9884\u6d4b\u672c\u8eab\u53e5\u5b50\u7684\u8bcd\uff0c\u635f\u5931\u51fd\u6570\u5373\u4e3a\uff1a\n$$\\sum _ { w \\in S _ { i - 1 } \\cup S _ { i } \\cup S _ { i + 1 } } \\phi \\left( \\mathbf { s _ { i } } , v _ { w } \\right)$$\n\u6a21\u578b\u8bad\u7ec3\u540e\uff0c\u6d4b\u8bd5\u9636\u6bb5\uff0cFastSent\u80fd\u591f\u901a\u8fc7\u8ba1\u7b97\u53e5\u5b50\u4e2d\u6240\u6709\u8bcd\u5411\u91cf\u7684\u548c\u8fc5\u901f\u5f97\u5230\u53e5\u5b50embedding\uff0c\u5373\uff1a$\\mathbf { s } = \\sum _ { w \\in S } u _ { w }\u200b$\u3002\n\u8bba\u6587\u901a\u8fc7\u4e24\u79cd\u7c7b\u578b\u7684\u4e0b\u6e38\u4efb\u52a1\u6765\u8bc4\u6d4b\u53e5\u5b50\u5206\u5e03\u5f0f\u8868\u793a\u7684\u8d28\u91cf\uff0c\u5206\u522b\u4e3a\u76d1\u7763\u7c7b\u578b\uff08\u5305\u62ec\u91ca\u4e49\u8bc6\u522b\uff0c\u6587\u672c\u5206\u7c7b\uff09\u548c\u975e\u76d1\u7763\u7c7b\u578b\uff08\u8bed\u4e49\u76f8\u5173\u6027\uff1aSICK\u6570\u636e\u96c6\u4e0eSTS\u6570\u636e\u96c6\uff0c\u76f4\u63a5\u8ba1\u7b97\u53e5\u5b50\u5411\u91cf\u7684\u4f59\u5f26\u76f8\u4f3c\u5ea6\u5e76\u4e0e\u4eba\u7c7b\u6253\u5206\u8fdb\u884c\u6bd4\u8f83\uff09\u3002\u5b9e\u9a8c\u7ed3\u679c\u4e3aSDAE\u6a21\u578b\u5728\u76d1\u7763\u7c7b\u578b\u8bc4\u6d4b\u4e0a\u6bd4CBOW\uff08\u5c06CBOW\u7c7b\u578b\u8bcd\u5411\u91cf\u76f4\u63a5\u76f8\u52a0\u5f97\u5230\u53e5\u5b50\u5411\u91cf\uff09\u548cSkipgram\u7b49\u7b80\u5355\u6a21\u578b\u8981\u597d\uff0c\u4f46\u662f\u5728\u975e\u76d1\u7763\u7c7b\u578b\u8bc4\u6d4b\u4e0a\u7ed3\u679c\u5374\u76f8\u53cd\u3002\u7c7b\u4f3c\u5730\uff0cSkip-Thought\u6a21\u578b\u5728\u76d1\u7763\u7c7b\u578b\u8bc4\u6d4b\u4e0a\u6bd4FastSent\u6a21\u578b\u6548\u679c\u597d\uff0c\u4f46\u5728\u975e\u76d1\u7763\u7c7b\u578b\u8bc4\u6d4b\u4e0a\uff0cFastSent\u8981\u597d\u4e8eSkip-Thought\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u6700\u4f73\u65b9\u6cd5\u4e3b\u8981\u53d6\u51b3\u4e8e\u9884\u671f\u7684\u5e94\u7528\u3002 \u66f4\u6df1\uff0c\u66f4\u590d\u6742\u7684\u6a21\u578b\uff08\u540c\u65f6\u4e5f\u9700\u8981\u66f4\u591a\u7684\u8ba1\u7b97\u8d44\u6e90\u548c\u8bad\u7ec3\u65f6\u95f4\uff09\u66f4\u9002\u7528\u4e8e\u76d1\u7763\u7c7b\u578b\u8bc4\u6d4b\uff0c\u4f46\u6d45\u7684\u5bf9\u6570\u7ebf\u6027\u6a21\u578b\u66f4\u9002\u5408\u65e0\u76d1\u7763\u7c7b\u578b\u8bc4\u6d4b\u3002\nA simple but tough-to-beat baseline for sentence embeddings pdf: \u4e0b\u8f7d\n\u4ece\u8bba\u6587\u9898\u76ee\u53ef\u4ee5\u770b\u51fa\uff0c\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u975e\u5e38\u7b80\u5355\u4f46\u662f\u5177\u6709\u4e00\u5b9a\u7ade\u4e89\u529b\u7684\u53e5\u5b50\u5411\u91cf\u8868\u793a\u7b97\u6cd5\u3002\u7b97\u6cd5\u5305\u62ec\u4e24\u6b65\uff0c\u7b2c\u4e00\u6b65\u662f\u5bf9\u53e5\u5b50\u4e2d\u6240\u6709\u7684\u8bcd\u5411\u91cf\u8fdb\u884c\u52a0\u6743\u5e73\u5747\uff0c\u5f97\u5230\u5e73\u5747\u5411\u91cf$v_s$\uff1b\u7b2c\u4e8c\u6b65\u662f\u79fb\u51fa\uff08\u51cf\u53bb\uff09$v_s$\u5728\u6240\u6709\u53e5\u5b50\u5411\u91cf\u7ec4\u6210\u7684\u77e9\u9635\u7684\u7b2c\u4e00\u4e2a\u4e3b\u6210\u5206(principal component / singular vector)\u4e0a\u7684\u6295\u5f71\uff0c\u56e0\u6b64\u8be5\u7b97\u6cd5\u88ab\u7b80\u8bb0\u4e3aWR\uff08W:weighting, R: removing\uff09\u3002\n\u7b2c\u4e00\u6b65\u4e3b\u8981\u662f\u5bf9TFIDF\u52a0\u6743\u5e73\u5747\u8bcd\u5411\u91cf\u8868\u793a\u53e5\u5b50\u7684\u65b9\u6cd5\u8fdb\u884c\u6539\u8fdb\u3002\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5e73\u6ed1\u5012\u8bcd\u9891 (smooth inverse frequency, SIF)\u65b9\u6cd5\u7528\u4e8e\u8ba1\u7b97\u6bcf\u4e2a\u8bcd\u7684\u52a0\u6743\u7cfb\u6570\uff0c\u5177\u4f53\u5730\uff0c\u8bcd$w$\u7684\u6743\u91cd\u4e3a$a / (a+p(w))$\uff0c\u5176\u4e2d$a$\u4e3a\u5e73\u6ed1\u53c2\u6570\uff0c$p(w)$\u4e3a\uff08\u4f30\u8ba1\u7684\uff09\u8bcd\u9891\u3002\u76f4\u89c2\u7406\u89e3SIF\uff0c\u5c31\u662f\u8bf4\u9891\u7387\u8d8a\u4f4e\u7684\u8bcd\u5728\u5f53\u524d\u53e5\u5b50\u51fa\u73b0\u4e86\uff0c\u8bf4\u660e\u5b83\u5728\u53e5\u5b50\u4e2d\u7684\u91cd\u8981\u6027\u66f4\u5927\uff0c\u4e5f\u5c31\u662f\u52a0\u6743\u7cfb\u6570\u66f4\u5927\u3002\u4e8b\u5b9e\u4e0a\uff0c\u5982\u679c\u628a\u4e00\u4e2a\u53e5\u5b50\u8ba4\u4e3a\u662f\u4e00\u7bc7\u6587\u6863\u5e76\u4e14\u5047\u8bbe\u8be5\u53e5\u4e2d\u4e0d\u51fa\u73b0\u91cd\u590d\u7684\u8bcd\uff08TF=1\uff09\uff0c\u90a3\u4e48TFIDF\u5c06\u6f14\u53d8\u6210IF\uff0c\u5373\u672a\u5e73\u6ed1\u7684\u5012\u8bcd\u9891\u3002\u4f46\u662f\u76f8\u8f83\u4e8eTFIDF\u8fd9\u79cd\u7ecf\u9a8c\u5f0f\u516c\u5f0f\uff0c\u8bba\u6587\u901a\u8fc7\u7406\u8bba\u8bc1\u660e\u4e3aSIF\u63d0\u4f9b\u7406\u8bba\u4f9d\u636e\u3002\u5bf9\u4e8e\u7b2c\u4e8c\u6b65\uff0c\u4e2a\u4eba\u7684\u76f4\u89c2\u7406\u89e3\u662f\u79fb\u51fa\u6240\u6709\u53e5\u5b50\u7684\u5171\u6709\u4fe1\u606f\uff0c\u56e0\u6b64\u4fdd\u7559\u4e0b\u6765\u7684\u53e5\u5b50\u5411\u91cf\u66f4\u80fd\u591f\u8868\u793a\u672c\u8eab\u5e76\u4e0e\u5176\u5b83\u53e5\u5b50\u5411\u91cf\u4ea7\u751f\u5dee\u8ddd\u3002\u7b97\u6cd5\u63cf\u8ff0\u5982\u4e0b(\u5176\u4e2d$v_s, u$\u7684shape\u5747\u4e3a[d, 1]\uff0c$uu^T$\u4e3a[d,d]\u7684\u77e9\u9635\uff0cd\u4e3a\u8bcd\u5411\u91cf\u7ef4\u5ea6)\uff1a\n\u8bba\u6587\u5b9e\u9a8c\u8868\u660e\u8be5\u65b9\u6cd5\u5177\u6709\u4e0d\u9519\u7684\u7ade\u4e89\u529b\uff0c\u5728\u5927\u90e8\u5206\u6570\u636e\u96c6\u4e0a\u90fd\u6bd4\u5b8c\u5168\u5e73\u5747\u6216\u8005\u4f7f\u7528TFIDF\u52a0\u6743\u5e73\u5747\u7684\u6548\u679c\u597d\uff0c\u5728\u4f7f\u7528PSL\u4f5c\u4e3a\u8bcd\u5411\u91cf\u65f6\u751a\u81f3\u80fd\u8fbe\u5230\u6700\u4f18\u7ed3\u679c\u3002\u5f53\u7136\uff0c\u7531\u4e8ePSL\u672c\u8eab\u662f\u57fa\u4e8e\u6709\u76d1\u7763\u4efb\u52a1\uff08\u77ed\u8bed\u5bf9\uff09\u6765\u8bad\u7ec3\u8bcd\u5411\u91cf\uff0c\u56e0\u6b64PSL+WR\u80fd\u5728\u6587\u672c\u8574\u542b\u6216\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u4efb\u52a1\u4e0a\u8fbe\u5230\u751a\u81f3\u6253\u8d25LSTM\u7684\u6548\u679c\u4e5f\u5728\u60c5\u7406\u4e4b\u4e2d\u3002\nUnsupervised Learning of Sentence Embeddings using Compositional n-Gram Features pdf: \u4e0b\u8f7d\n\u672c\u6587\u662fword2vec\u6a21\u578b\u4e2dCBOW\u5f62\u5f0f\u7684\u6269\u5c55\uff0c\u4e0d\u4ec5\u4ec5\u4f7f\u7528\u7a97\u53e3\u4e2d\u7684\u8bcd\u6765\u9884\u6d4b\u76ee\u6807\u8bcd\uff0c\u800c\u662f\u4f7f\u7528\u7a97\u53e3\u4e2d\u6240\u6709\u7684n-grams\u6765\u9884\u6d4b\u76ee\u6807\u8bcd\uff08uni-gram\uff09\u3002\u4e3a\u4e86\u5f97\u5230\u53e5\u5b50\u5411\u91cf\uff0c\u5c06\u53e5\u5b50\u770b\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u7a97\u53e3\uff0c\u6a21\u578b\u7684\u8f93\u5165\u4e3a\u53e5\u5b50\u4e2d\u7684n-grams\uff0c\u76ee\u6807\u662f\u9884\u6d4b\u53e5\u5b50\u4e2d\u7684missing word(\u76ee\u6807\u8bcd\uff09\uff0c\u800c\u53e5\u5b50\u5411\u91cf\u662f\u6240\u6709n-grams\u5411\u91cf\u8868\u793a\u7684\u5e73\u5747\u3002\u672c\u6587\u7684\u6a21\u578b\u4e0e\u8bba\u6587\rEnriching word vectors with subword information(FastText)\u5f88\u7c7b\u4f3c\uff0c\u4e3b\u8981\u533a\u522b\u6709\u4e24\u70b9\uff0c\u5176\u4e00\u662f\u672c\u6587\u7684\u6a21\u578b\u8f93\u5165\u662f\u8bcd\u7ea7\u522b\u7684n-grams\u5e8f\u5217\u800cFastText\u662f\u5b57\u7b26\u7ea7\u522b\u7684n-grams\u5e8f\u5217\uff0c\u5176\u4e8c\u662f\u672c\u6587\u6700\u7ec8\u7684\u8868\u793a\u662f\u5bf9\u8f93\u5165\u7684n-grams embedding\u8fdb\u884c\u5e73\u5747\u800cFastText\u662f\u76f8\u52a0\u3002\nAn efficient framework for learning sentence representations pdf: \u4e0b\u8f7d\n\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u7b80\u5355\u4e14\u6709\u6548\u7684\u6846\u67b6\u7528\u4e8e\u5b66\u4e60\u53e5\u5b50\u8868\u793a\u3002\u548c\u5e38\u89c4\u7684\u7f16\u7801\u89e3\u7801\u7c7b\u6a21\u578b\uff08\u5982\rskip-thoughts\u548c\rSDAE\uff09\u4e0d\u540c\u7684\u662f\uff0c\u672c\u6587\u91c7\u7528\u4e00\u79cd\u5206\u7c7b\u5668\u7684\u65b9\u5f0f\u5b66\u4e60\u53e5\u5b50\u8868\u793a\u3002\u5177\u4f53\u5730\uff0c\u6a21\u578b\u7684\u8f93\u5165\u4e3a\u4e00\u4e2a\u53e5\u5b50$s$\u4ee5\u53ca\u4e00\u4e2a\u5019\u9009\u53e5\u5b50\u96c6\u5408$S_{cand}$\uff0c\u5176\u4e2d$S_{cand}$\u5305\u542b\u4e00\u4e2a\u53e5\u5b50$s_{ctxt}$\u662f$s$\u7684\u4e0a\u4e0b\u6587\u53e5\u5b50\uff08\u4e5f\u5c31\u662f$s$\u7684\u524d\u4e00\u4e2a\u53e5\u5b50\u6216\u540e\u4e00\u4e2a\u53e5\u5b50\uff09\u4ee5\u53ca\u5176\u4ed6\u4e0d\u662f$s$\u4e0a\u4e0b\u6587\u7684\u53e5\u5b50\u3002\u6a21\u578b\u901a\u8fc7\u5bf9$s$\u4ee5\u53ca$S_{cand}$\u4e2d\u7684\u6bcf\u4e2a\u53e5\u5b50\u8fdb\u884c\u7f16\u7801\uff0c\u7136\u540e\u8f93\u5165\u5230\u4e00\u4e2a\u5206\u7c7b\u5668\u4e2d\uff0c\u8ba9\u5206\u7c7b\u5668\u9009\u51fa$S_{cand}$\u4e2d\u7684\u54ea\u4e2a\u53e5\u5b50\u662f$s_{ctxt}$\u3002\u5b9e\u9a8c\u8bbe\u7f6e\u5019\u9009\u53e5\u5b50\u96c6\u5408\u5927\u5c0f\u4e3a3\uff0c\u5373$S_{cand}$\u5305\u542b1\u4e2a\u4e0a\u4e0b\u6587\u53e5\u5b50\u548c\u4e24\u4e2a\u65e0\u5173\u53e5\u5b50\u3002\u6a21\u578b\u7ed3\u6784\u5982\u4e0b\uff1a\n\u6a21\u578b\u6709\u5982\u4e0b\u4e24\u4e2a\u7ec6\u8282\u9700\u8981\u6ce8\u610f\uff1a\n \u6a21\u578b\u4f7f\u7528\u7684\u5206\u7c7b\u5668\uff08\u5f97\u5206\u51fd\u6570\uff09$c$\u975e\u5e38\u7b80\u5355\uff0c\u662f\u4e24\u4e2a\u5411\u91cf\u5185\u79ef\uff0c\u5373$c(u, v)=u^Tv$\uff0c\u8ba1\u7b97$s$\u7684embedding\u4e0e\u6240\u6709$S_{cand}$\u4e2d\u7684\u53e5\u5b50\u5411\u91cf\u5185\u79ef\u5f97\u5206\u540e\uff0c\u8f93\u5165\u5230softmax\u5c42\u8fdb\u884c\u5206\u7c7b\u3002\u4f7f\u7528\u7b80\u5355\u5206\u7c7b\u5668\u662f\u4e3a\u4e86\u5f15\u5bfc\u6a21\u578b\u7740\u91cd\u8bad\u7ec3\u53e5\u5b50\u7f16\u7801\u5668\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u5f97\u5230\u597d\u7684\u53e5\u5b50\u5411\u91cf\u8868\u793a\u800c\u4e0d\u662f\u597d\u7684\u5206\u7c7b\u5668\u3002 \u867d\u7136\u67d0\u4e9b\u76d1\u7763\u4efb\u52a1\u6a21\u578b\u5982\u6587\u672c\u8574\u542b\u6a21\u578b\u662f\u53c2\u6570\u5171\u4eab\u7684\uff0c$s$\u7684\u7f16\u7801\u5668\u53c2\u6570\u548c\u5019\u9009\u53e5\u5b50\u7f16\u7801\u5668\u53c2\u6570\u662f\u4e0d\u540c\u7684\uff08\u4e0d\u5171\u4eab\uff09\uff0c\u56e0\u4e3a\u53e5\u5b50\u8868\u793a\u5b66\u4e60\u5f80\u5f80\u662f\u5728\u5927\u89c4\u6a21\u8bed\u6599\u4e0a\u8fdb\u884c\u8bad\u7ec3\uff0c\u4e0d\u5fc5\u62c5\u5fc3\u53c2\u6570\u5b66\u4e60\u4e0d\u5145\u5206\u7684\u95ee\u9898\u3002\u6d4b\u8bd5\u65f6\uff0c\u7ed9\u5b9a\u5f85\u7f16\u7801\u53e5\u5b50$s$\uff0c\u901a\u8fc7\u8be5\u6a21\u578b\u5f97\u5230\u7684\u53e5\u5b50\u8868\u793a\u662f\u4e24\u79cd\u7f16\u7801\u5668\u7684\u8fde\u7ed3 $[ f ( s ) ;g ( s ) ]$\u3002  \u8bba\u6587\u5c06\u4e0a\u8ff0\u6a21\u578b\u547d\u540d\u4e3aquick thoughts\uff08QT\uff09\uff0c\u610f\u5473\u7740\u8be5\u6a21\u578b\u80fd\u591f\u8fc5\u901f\u6709\u6548\u5730\u5b66\u4e60\u53e5\u5b50\u8868\u793a\u5411\u91cf\u3002\u6a21\u578b\u4f7f\u7528GRU\u4f5c\u4e3aEncoder\uff0c\u4e3a\u4e86\u548cSkip-Tought\u6a21\u578b\u8fdb\u884c\u6bd4\u8f83\uff0c\u6a21\u578b\u5305\u542b\u4e09\u79cd\u53d8\u4f53\uff0c\u4f7f\u7528\u5355\u5411GRU\u79f0\u4e3auni-QT\uff0c\u53cc\u5411GRU\u79f0\u4e3abi-QT\uff0c\u5c06uni-QT\u548cbi-QT\u751f\u6210\u7684sentence embedding\u8fdb\u884cconcat\u79f0\u4e3acombine-QT\u3002\u6b64\u5916\uff0c\u8bba\u6587\u5c06\u540c\u65f6\u4f7f\u7528\u9884\u8bad\u7ec3\u8bcd\u5411\u91cf\u548c\u968f\u673a\u521d\u59cb\u5316\u8bcd\u5411\u91cf\u7684\u6a21\u578b\u79f0\u4e3aMultiChannel-QT\uff08MC-QT\uff09,\u8fd9\u79cd\u8bbe\u7f6e\u662f\u53c2\u7167\rmulti-channel CNN\u6a21\u578b\u3002\n\u8bba\u6587\u901a\u8fc7\u591a\u4e2a\u53e5\u5b50\u5206\u7c7b\u4efb\u52a1\u8bc1\u660eQT\u6a21\u578b\u4e86\u7684\u4f18\u8d8a\u6027\uff1a\n \u76f8\u8f83\u4e8e\u5176\u4ed6\u65e0\u76d1\u7763\u53e5\u5b50\u8868\u793a\u5b66\u4e60\u65b9\u6cd5\uff0cQT\u5728\u8bad\u7ec3\u65f6\u95f4\u8f83\u5c11\u7684\u60c5\u51b5\u4e0b\uff08\u76f8\u8f83\u4e8eSkip-Thought\u3001SDAE\uff09\uff0c\u80fd\u591f\u8fbe\u5230\u975e\u5e38\u4e0d\u9519\u7684\u6548\u679c\uff0c\u5728\u5927\u591a\u6570\u6570\u636e\u96c6\u4e0a\u7684\u6548\u679c\u90fd\u662f\u6700\u597d\u7684\u3002 \u4e0e\u76d1\u7763\u53e5\u5b50\u8868\u793a\u5b66\u4e60\u65b9\u6cd5\uff08\u5982InferSent\u7b49\uff09\u5bf9\u6bd4\uff0cQT\uff08MC-QT\uff09\u540c\u6837\u80fd\u591f\u5728\u5927\u591a\u6570\u6570\u636e\u96c6\u4e0a\u53d6\u5f97\u6700\u4f18\u6548\u679c\u3002 \u4e0e\u4e13\u95e8\u7528\u4e8e\u53e5\u5b50\u5206\u7c7b\u4efb\u52a1\u6a21\u578b\uff08\u5982CNN\uff09\u5bf9\u6bd4\uff0cQT\u4f7f\u7528ensemble\uff0c\u8003\u8651\u6a21\u578b\u7c7b\u578b(\u5355\u5411/\u53cc\u5411)\uff0c\u8bcd\u5411\u91cf\uff08\u968f\u673a/\u9884\u8bad\u7ec3\uff09\u4ee5\u53ca\u6570\u636e\u96c6\uff08BookCorpus/UMBC \uff09\u4e09\u4e2a\u65b9\u9762\u8fdb\u884c\u8bad\u7ec3\u4e0d\u540c\u7684\u6a21\u578b\u8fdb\u884c\u96c6\u6210\uff0c\u4e5f\u53d6\u5f97\u4e86\u6709\u7ade\u4e89\u529b\u7684\u6548\u679c\u3002  \u8bba\u6587\u8fd8\u901a\u8fc7image-sentence ranking\u548cnearest neighbors\u4e24\u4e2a\u5b9e\u9a8c\u6765\u4e3aQT\u6709\u6548\u6027\u63d0\u4f9b\u4f9d\u636e\u3002\nTowards universal paraphrastic sentence embeddings pdf: \u4e0b\u8f7d\n\u672c\u6587\u63d0\u51fa\u4f7f\u7528\rPPDB(the Paraphrase Database)\u6765\u5b66\u4e60\u901a\u7528\u7684sentence embeddings\u3002\u8bba\u6587\u6a21\u578b\u7684\u57fa\u672c\u6d41\u7a0b\u662f\u8f93\u5165mini-batch\u7684\u91ca\u4e49\u5bf9$&lt;x_1, x_2&gt;\u200b$\u96c6\u5408$X_b\u200b$\uff0c\u5e76\u901a\u8fc7\u5bf9$X_b\u200b$\u4e2d\u7684\u53e5\u5b50\u8fdb\u884c\u91c7\u6837\u5f97\u5230$x_1,x_2\u200b$\u5bf9\u5e94\u7684\u8d1f\u6837\u672c$t_1, t_2\u200b$\uff0c\u5c06\u8fd9\u56db\u4e2a\u53e5\u5b50\u901a\u8fc7\u7f16\u7801\u5668\uff08\u7f16\u7801\u51fd\u6570\uff09$g\u200b$\u5f97\u5230\u53e5\u5b50\u7f16\u7801\uff0c\u7136\u540e\u4f7f\u7528\u4e00\u79cd margin-based loss\u8fdb\u884c\u4f18\u5316\uff0c\u635f\u5931\u51fd\u6570\u7684\u57fa\u672c\u601d\u60f3\u662f\u5e0c\u671b\u7f16\u7801\u540e\u7684\u91ca\u4e49\u5bf9$&lt;x_1,x_2&gt;\u200b$\u80fd\u591f\u975e\u5e38\u76f8\u8fd1\u800c\u975e\u91ca\u4e49\u5bf9$&lt;x_1,t_1&gt;\u200b$\u548c$&lt;x_2,t_2&gt;\u200b$\u80fd\u591f\u6709\u4e0d\u5c0f\u4e8e$\\delta\u200b$\u7684\u95f4\u8ddd\u3002\u5bf9\u4e8e\u5168\u4f53\u8bad\u7ec3\u6570\u636e$X\u200b$\uff0c\u76ee\u6807\u51fd\u6570\u5982\u4e0b\uff0c\u5176\u4e2d$\\lambda_c,\\lambda_w\u200b$\u4e3a\u6b63\u5219\u5316\u53c2\u6570\uff0c$W_w\u200b$\u4e3aword embedding\u53c2\u6570\uff0c$W_{w_{initial}}\u200b![](https://latex.codecogs.com/svg.latex?\u4e3aword embedding\u521d\u59cb\u5316\u77e9\u9635\uff0c$W_c\u200b$\u662f\u9664\u4e86$W_w\u200b$\u540e\u7684\u5176\u4ed6\u53c2\u6570\u3002\n\u8bba\u6587\u5b9e\u73b0\u4e866\u79cd\u7c7b\u578b\u7684\u7f16\u7801\u51fd\u6570$g$\uff0c\u5177\u4f53\u5982\u4e0b\uff1a\n \u8bcd\u5411\u91cf\u5e73\u5747\uff1b \u8bcd\u5411\u91cf\u5e73\u5747\u540e\u901a\u8fc7\u4e00\u4e2a\u7ebf\u6027\u5c42\uff1b \rDAN\u6a21\u578b\uff1a\u8bcd\u5411\u91cf\u5e73\u5747\u540e\u901a\u8fc7\u591a\u5c42\u5e26\u975e\u7ebf\u6027\u51fd\u6570\u7684\u5168\u8fde\u63a5\u5c42\uff1b Simple RNN\uff0c\u53d6\u6700\u540e\u4e00\u4e2a\u9690\u72b6\u6001\u5411\u91cf\uff1b identity-RNN (iRNN)\uff0c \u4e00\u79cd\u7279\u6b8a\u7684simple RNN\uff0c\u5176weight\u77e9\u9635\u521d\u59cb\u5316\u4e3a\u5355\u4f4d\u77e9\u9635\uff0cbias\u521d\u59cb\u5316\u4e3a0\u5411\u91cf\uff0c\u6fc0\u6d3b\u51fd\u6570\u4e3a\u6052\u7b49\u51fd\u6570\uff0c\u6700\u7ec8\u7684\u53e5\u5b50\u7f16\u7801\u5411\u91cf\u4e3a\u6700\u540e\u4e00\u4e2a\u9690\u72b6\u6001\u5411\u91cf\u9664\u4ee5\u53e5\u5b50\u4e2d\u8bcd\u7684\u4e2a\u6570\u3002\u5f53\u6b63\u5219\u5316\u7a0b\u5ea6\u5f88\u9ad8\u65f6\uff08\u6a21\u578b\u53c2\u6570\u51e0\u4e4e\u4e0d\u66f4\u65b0\uff09\uff0ciRNN\u5c06\u53d8\u6210\u6a21\u578b1\uff08\u8bcd\u5411\u91cf\u5e73\u5747\uff09\uff0c\u4e0d\u540c\u7684\u662fiRNN\u80fd\u591f\u8003\u8651\u8bcd\u5e8f\uff0c\u6709\u5e0c\u671b\u80fd\u591f\u6bd4\u6a21\u578b1\u6548\u679c\u597d\uff1b LSTM\uff0c\u53d6\u6700\u540e\u4e00\u4e2a\u9690\u72b6\u6001\u5411\u91cf\u3002  \u8bba\u6587\u901a\u8fc7\u5927\u91cf\u5b9e\u9a8c\u6765\u5bf9\u6bd4\u4e0a\u8ff06\u79cd\u7f16\u7801\u5668\u7684\u4f18\u52a3\uff0c\u5f97\u5230\u5982\u4e0b\u7ed3\u8bba\uff1a\n \u5bf9\u4e8e\u65e0\u76d1\u7763\u6587\u672c\u76f8\u4f3c\u5ea6\u4efb\u52a1\uff0c\u590d\u6742\u7684\u6a21\u578b\u5982LSTM\u5728\u5782\u76f4\u9886\u57df\u6570\u636e\u96c6\u4e0a\u8868\u73b0\u66f4\u597d\uff0c\u800c\u5bf9\u4e8e\u5f00\u653e\u57df\u6570\u636e\u96c6\uff0c\u7b80\u5355\u7684\u6a21\u578b\u5982\u8bcd\u5411\u91cf\u5e73\u5747\u6bd4LSTM\u7684\u6548\u679c\u66f4\u597d\uff1b \u5bf9\u4e8e\u53e5\u5b50\u76f8\u4f3c\u5ea6\uff0c\u53e5\u5b50\u8574\u542b\u4ee5\u53ca\u60c5\u611f\u5206\u6790\u8fd9\u4e09\u79cd\u6709\u76d1\u7763\u4efb\u52a1\uff0c\u8bcd\u5411\u91cf\u5e73\u5747\u6a21\u578b\u5728\u53e5\u5b50\u76f8\u4f3c\u5ea6\u548c\u53e5\u5b50\u8574\u542b\u4e24\u4e2a\u4efb\u52a1\u4e0a\u8868\u73b0\u6bd4LSTM\u7684\u6548\u679c\u66f4\u597d\uff0c\u800c\u60c5\u611f\u5206\u6790\u4efb\u52a1LSTM\u8868\u73b0\u975e\u5e38\u4e0d\u9519\u3002  Fine-grained Analysis of Sentence Embeddings Using Auxiliary Prediction Tasks pdf: \u4e0b\u8f7d\n\u4e4b\u524d\u5f80\u5f80\u662f\u901a\u8fc7\u8bc4\u6d4bsentence embeddings\u5728\u4e0b\u6e38\u4efb\u52a1\u5982\u53e5\u5b50\u5206\u7c7b\u7684\u8868\u73b0\u6765\u53cd\u6620\u8be5sentence embeddings\u7684\u4f18\u52a3\u3002\u800c\u672c\u6587\u8bbe\u8ba1\u4e86\u4e09\u79cd\u8f85\u52a9\u9884\u6d4b\u4efb\u52a1\u6765\u5bf9sentence embeddings\u672c\u8eab\u8fdb\u884c\u7ec6\u7c92\u5ea6\u5206\u6790\uff0c\u5305\u62ec\u53e5\u5b50\u957f\u5ea6\uff0c\u8bcd\u5185\u5bb9\uff08word content\uff09\uff0c\u8bcd\u5e8f\u4e09\u4e2a\u65b9\u9762\u3002\u4e09\u79cd\u8f85\u52a9\u9884\u6d4b\u4efb\u52a1\u5982\u4e0b\uff1a\n Length Task\uff1a\u8be5\u4efb\u52a1\u662f\u6765\u5ea6\u91cf\u53e5\u5b50\u5411\u91cf\u591a\u5927\u7a0b\u5ea6\u4e0a\u7f16\u7801\u4e86\u53e5\u5b50\u957f\u5ea6\uff08\u8bcd\u7684\u4e2a\u6570\uff09\u4fe1\u606f\u3002\u8be5\u4efb\u52a1\u5b9a\u4e49\u4e3a\u591a\u5206\u7c7b\u95ee\u9898\uff0c\u5c06\u53e5\u5b50\u957f\u5ea6\u5212\u5206\u4e3a8\u4e2a\u7b49\u7ea7\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u53e5\u5b50\u5411\u91cf\uff0c\u5206\u7c7b\u5668\u7684\u76ee\u6807\u662f\u9884\u6d4b\u53e5\u5b50\u957f\u5ea6\u5c5e\u4e8e\u54ea\u4e2a\u7b49\u7ea7\u3002 Word-content Task: \u8be5\u4efb\u52a1\u662f\u6765\u5ea6\u91cf\u53e5\u5b50\u5411\u91cf\u591a\u5927\u7a0b\u5ea6\u4e0a\u7f16\u7801\u4e86\u53e5\u5b50\u4e2d\u662f\u5426\u5305\u542b\u67d0\u8bcd\u7684\u4fe1\u606f\uff0c\u8be5\u4efb\u52a1\u5b9a\u4e49\u4e3a\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u53e5\u5b50\u5411\u91cf\u548c\u4e00\u4e2a\u8bcd\u5411\u91cf\uff0c\u5206\u7c7b\u5668\u7684\u76ee\u6807\u662f\u5224\u65ad\u8fd9\u4e2a\u8bcd\u662f\u5426\u5c5e\u4e8e\u8be5\u53e5\u3002 Word-order Task: \u8be5\u4efb\u52a1\u662f\u6765\u5ea6\u91cf\u53e5\u5b50\u5411\u91cf\u591a\u5927\u7a0b\u5ea6\u7f16\u7801\u4e86\u53e5\u5b50\u8bcd\u5e8f\u4fe1\u606f\u3002\u8be5\u4efb\u52a1\u5b9a\u4e49\u4e3a\u4e8c\u5206\u7c7b\u95ee\u9898\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u53e5\u5b50\u5411\u91cf\u548c\u4e24\u4e2a\u5c5e\u4e8e\u8be5\u53e5\u7684\u8bcd\u5411\u91cf$w_1,w_2$\uff0c\u5206\u7c7b\u5668\u7684\u76ee\u6807\u662f\u5224\u65ad$w_1$\u662f\u5426\u5728$w_2$\u524d\u9762\u3002  Supervised Learning of Universal Sentence Representations from Natural Language Inference Data pdf: \u4e0b\u8f7d\n\u672c\u6587\u63d0\u51fa\u4f7f\u7528\u81ea\u7136\u8bed\u8a00\u63a8\u7406\uff08natural language inference, NLI\uff09\u6570\u636e\u96c6\u6765\u5b66\u4e60\u901a\u7528\u7684\u53e5\u5b50\u8868\u793a\u3002\u9009\u62e9NLI\u4efb\u52a1\u662f\u56e0\u4e3aNLI\u662f\u4e00\u4e2ahigh-level\u7406\u89e3\u4efb\u52a1\uff0c\u6d89\u53ca\u63a8\u7406\u53e5\u5b50\u95f4\u7684\u8bed\u4e49\u5173\u7cfb\u3002\u6a21\u578b\u6574\u4f53\u67b6\u6784\u5982\u4e0b\uff1a\n\u8bba\u6587\u5bf9\u6bd4\u4e867\u79cd\u4e0d\u540c\u7684\u53e5\u5b50\u7f16\u7801\u5668\uff0c\u5305\u62ec\uff1a\n  GRU\uff0c\u53d6\u6700\u540e\u4e00\u4e2a\u9690\u72b6\u6001\n  LSTM\uff0c\u53d6\u6700\u540e\u4e00\u4e2a\u9690\u72b6\u6001\n  BiGRU\uff0c\u524d\u5411GRU\u4e0e\u53cd\u5411GRU\u6700\u540e\u4e00\u4e2a\u9690\u72b6\u6001\u7684\u8fde\u7ed3\n  BiLSTM+mean pooling\n  BiLSTM+max pooling\n  Self-attentive network: bi-LSTM+inner Attention with multiple views\uff0cInner Attention\u673a\u5236\u5982\u4e0b\uff1a\n$$\\overline { h } _ { i } = \\tanh \\left( W h _ { i } + b _ { w } \\right); \\alpha _ { i } = \\frac { e ^ { \\overline { h } _ { i } ^ { T } u _ { w } } } { \\sum _ { i } e ^ { \\overline { h } _ { i } ^ { T } u _ { w } } }; u = \\sum _ { t } \\alpha _ { i } h _ { i }$$\n\u5176\u4e2d${h_1,&hellip;,h_T}$\u4e3aBiLSTM\u7684\u9690\u72b6\u6001\u8f93\u51fa\uff0c\u5c06\u5b83\u4eec\u8f93\u5165\u5230tanh\u53d8\u6362\u5c42\u4ea7\u751fkeys\u96c6\u5408$( \\overline { h } _ { 1 } , \\ldots , \\overline { h } _ { T } )$\uff0c\u7136\u540e\u4e0e\u53ef\u5b66\u4e60\uff08\u53ef\u8bad\u7ec3\uff09\u7684query\u5411\u91cf\uff08\u4e0a\u4e0b\u6587\u5411\u91cf\uff09\u8ba1\u7b97\u5f97\u5230${a_i}$\uff0c\u7136\u540e\u8fdb\u884c\u52a0\u6743\u5f97\u5230\u53e5\u5b50\u8868\u793a$u$\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a\n\u8bba\u6587\u5177\u4f53\u662f\u91c7\u75284\u4e2a\u4e0a\u4e0b\u6587\u5411\u91cf$u _ { w } ^ { 1 } , u _ { w } ^ { 2 } , u _ { w } ^ { 3 } , u _ { w } ^ { 4 }$\uff08multiple views\uff09\uff0c\u5bf9\u5e94\u4ea7\u751f4\u4e2a\u8868\u793a\u540e\u8fdb\u884c\u8fde\u7ed3\u4f5c\u4e3a\u6700\u7ec8\u7684\u53e5\u5b50\u8868\u793a\u3002\n  Hierarchical ConvNet\uff0c\u591a\u5c42\u5377\u79ef\uff084\u5c42\uff09\uff0c\u6bcf\u5c42\u5377\u79ef\u7684maxpooling\u8f93\u51fa\u8fdb\u884c\u8fde\u7ed3\u5f97\u5230\u6700\u7ec8\u53e5\u5b50\u8868\u793a\uff0c\u6a21\u578b\u7ed3\u6784\u5982\u4e0b\u56fe\uff1a\n  \u8bba\u6587\u5b9e\u9a8c\u8868\u660e\uff1aBiLSTM+maxpooling\u4f5c\u4e3a\u7f16\u7801\u5668\uff0c\u8bad\u7ec3\u6570\u636e\u4e3a\rSNLI\uff0c\u80fd\u591f\u8bad\u7ec3\u51fa\u6bd4Skip-Toughts\u548cFastSent\u7b49\u65e0\u76d1\u7763\u65b9\u6cd5\u66f4\u597d\u7684sentences embedding\uff0c\u8fbe\u5230state-of-the-art \uff082017\u5e74\uff09\u3002\nUniversal Sentence Encoder pdf: \u4e0b\u8f7d\n\u672c\u6587\u5728\u524d\u4eba\u7814\u7a76\u7684\u57fa\u7840\u4e0a\uff0c\u7efc\u5408\u5229\u7528\u65e0\u76d1\u7763\u8bad\u7ec3\u6570\u636e\u548c\u6709\u76d1\u7763\u8bad\u7ec3\u6570\u636e\uff0c\u8fdb\u884c\u591a\u4efb\u52a1\u8bad\u7ec3\uff0c\u4ece\u800c\u5b66\u4e60\u4e00\u4e2a\u901a\u7528\u7684\u53e5\u5b50\u7f16\u7801\u5668\u3002\u65e0\u76d1\u7763\u8bad\u7ec3\u6570\u636e\u5305\u62ec\u95ee\u7b54(QA)\u578b\u7f51\u9875\u548c\u8bba\u575b\uff0cWikipedia, web news\uff0c\u6709\u76d1\u7763\u8bad\u7ec3\u6570\u636e\u4e3a\rSNLI\u3002\u591a\u4efb\u52a1\u6a21\u578b\u8bbe\u8ba1\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5176\u4e2d\u7070\u8272\u7684encoder\u4e3a\u5171\u4eab\u53c2\u6570\u7684\u53e5\u5b50\u7f16\u7801\u5668\u3002\n\u8bba\u6587\u5bf9\u6bd4\u4e86\rDAN\u548c\rTransfomer\u8fd9\u4e24\u79cd\u7f16\u7801\u5668\u3002\u5f97\u51fa\u5982\u4e0b\u7ed3\u8bba\uff1a\n Transformer \u6a21\u578b\u5728\u5404\u79cd\u4efb\u52a1\u4e0a\u7684\u8868\u73b0\u90fd\u4f18\u4e8e\u7b80\u5355\u7684 DAN \u6a21\u578b\uff0c\u4e14\u5728\u5904\u7406\u77ed\u53e5\u5b50\u65f6\u53ea\u7a0d\u6162\u4e00\u4e9b\u3002 DAN\u6a21\u578b\u4e5f\u80fd\u5177\u6709\u5f88\u4e0d\u9519\u7684\u8868\u73b0\uff0c\u5e76\u4e14\u76f8\u8f83\u4e8eTransformer\u6a21\u578b\uff0c\u8bad\u7ec3\u65f6\u95f4\u548c\u5185\u5b58\u7684\u5f00\u9500\u90fd\u66f4\u5c0f\uff0c\u5c24\u5176\u662f\u5f53\u53e5\u5b50\u8f83\u957f\u65f6\u3002  \u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\u53ef\u4ee5\u53c2\u8003\u8bba\u6587\u4f5c\u8005\u7684\u535a\u5ba2\rGoogle AI Blog (\u4e2d\u6587\u7248)\u3002\n",
        "description": "",
        "id": 85,
        "section": "posts",
        "tags": [
            "Sentence Embedding",
            "\u53e5\u5b50\u5411\u91cf",
            "Sentence Representation"
        ],
        "title": "\u8f6c\u8f7d-Sentence Representation",
        "uri": "/posts/notes/%E8%BD%AC%E8%BD%BD-sentence-representation/"
    },
    {
        "content": " Linux\u57fa\u7840\u53ca\u90e8\u5206\u5e38\u7528\u547d\u4ee4\n \u76ee\u5f55\u7ed3\u6784 \u53c2\u8003\u81ea\r\u77e5\u4e4e\n bin (binaries)\u5b58\u653e\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6 sbin (super user binaries)\u5b58\u653e\u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u53ea\u6709root\u624d\u80fd\u8bbf\u95ee etc (etcetera)\u5b58\u653e\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6 usr (unix shared resources)\u7528\u4e8e\u5b58\u653e\u5171\u4eab\u7684\u7cfb\u7edf\u8d44\u6e90 home \u5b58\u653e\u7528\u6237\u6587\u4ef6\u7684\u6839\u76ee\u5f55 root \u8d85\u7ea7\u7528\u6237\u76ee\u5f55 dev (devices)\u7528\u4e8e\u5b58\u653e\u8bbe\u5907\u6587\u4ef6 lib (library)\u5b58\u653e\u8ddf\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u7a0b\u5e8f\u8fd0\u884c\u6240\u9700\u8981\u7684\u5171\u4eab\u5e93\u53ca\u5185\u6838\u6a21\u5757 mnt (mount)\u7cfb\u7edf\u7ba1\u7406\u5458\u5b89\u88c5\u4e34\u65f6\u6587\u4ef6\u7cfb\u7edf\u7684\u5b89\u88c5\u70b9 boot \u5b58\u653e\u7528\u4e8e\u7cfb\u7edf\u5f15\u5bfc\u65f6\u4f7f\u7528\u7684\u5404\u79cd\u6587\u4ef6 tmp (temporary)\u7528\u4e8e\u5b58\u653e\u5404\u79cd\u4e34\u65f6\u6587\u4ef6 var (variable)\u7528\u4e8e\u5b58\u653e\u8fd0\u884c\u65f6\u9700\u8981\u6539\u53d8\u6570\u636e\u7684\u6587\u4ef6  Note:\n\rLinux \u8f6f\u4ef6\u5b89\u88c5\u5230 /usr\uff0c/usr/local/ \u8fd8\u662f /opt \u76ee\u5f55\uff1f\nLinux \u7684\u8f6f\u4ef6\u5b89\u88c5\u76ee\u5f55\u662f\u4e5f\u662f\u6709\u8bb2\u7a76\u7684\uff0c\u7406\u89e3\u8fd9\u4e00\u70b9\uff0c\u5728\u5bf9\u7cfb\u7edf\u7ba1\u7406\u662f\u6709\u76ca\u7684\n/usr\uff1a\u7cfb\u7edf\u7ea7\u7684\u76ee\u5f55\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aC:/Windows/\uff0c/usr/lib\u7406\u89e3\u4e3aC:/Windows/System32\u3002\n/usr/local\uff1a\u7528\u6237\u7ea7\u7684\u7a0b\u5e8f\u76ee\u5f55\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aC:/Progrem Files/\u3002\u7528\u6237\u81ea\u5df1\u7f16\u8bd1\u7684\u8f6f\u4ef6\u9ed8\u8ba4\u4f1a\u5b89\u88c5\u5230\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u3002\n/opt\uff1a\u7528\u6237\u7ea7\u7684\u7a0b\u5e8f\u76ee\u5f55\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3aD:/Software\uff0copt\u6709\u53ef\u9009\u7684\u610f\u601d\uff0c\u8fd9\u91cc\u53ef\u4ee5\u7528\u4e8e\u653e\u7f6e\u7b2c\u4e09\u65b9\u5927\u578b\u8f6f\u4ef6\uff08\u6216\u6e38\u620f\uff09\uff0c\u5f53\u4f60\u4e0d\u9700\u8981\u65f6\uff0c\u76f4\u63a5rm -rf\u6389\u5373\u53ef\u3002\u5728\u786c\u76d8\u5bb9\u91cf\u4e0d\u591f\u65f6\uff0c\u4e5f\u53ef\u5c06/opt\u5355\u72ec\u6302\u8f7d\u5230\u5176\u4ed6\u78c1\u76d8\u4e0a\u4f7f\u7528\u3002\n\u6e90\u7801\u653e\u54ea\u91cc\uff1f\n/usr/src\uff1a\u7cfb\u7edf\u7ea7\u7684\u6e90\u7801\u76ee\u5f55\u3002\n/usr/local/src\uff1a\u7528\u6237\u7ea7\u7684\u6e90\u7801\u76ee\u5f55\u3002\n\u6587\u4ef6\u6743\u9650\u64cd\u4f5c  r \u53ef\u8bfb\u6743\u9650\uff0cw\u53ef\u5199\u6743\u9650\uff0cx\u53ef\u6267\u884c\u6743\u9650\uff08\u4e5f\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u8868\u793a 111 110 100 &ndash;&gt; 764\uff09 \u7b2c1\u4f4d\uff1a\u6587\u4ef6\u7c7b\u578b\uff08d \u76ee\u5f55\uff0c- \u666e\u901a\u6587\u4ef6\uff0cl \u94fe\u63a5\u6587\u4ef6\uff09 \u7b2c2-4\u4f4d\uff1a\u6240\u5c5e\u7528\u6237\u6743\u9650\uff0c\u7528u\uff08user\uff09\u8868\u793a \u7b2c5-7\u4f4d\uff1a\u6240\u5c5e\u7ec4\u6743\u9650\uff0c\u7528g\uff08group\uff09\u8868\u793a \u7b2c8-10\u4f4d\uff1a\u5176\u4ed6\u7528\u6237\u6743\u9650\uff0c\u7528o\uff08other\uff09\u8868\u793a \u7b2c2-10\u4f4d\uff1a\u8868\u793a\u6240\u6709\u7684\u6743\u9650\uff0c\u7528a\uff08all\uff09\u8868\u793a  Linux\u7cfb\u7edf\u5e38\u7528\u5feb\u6377\u952e\u53ca\u7b26\u53f7\u547d\u4ee4 \u641c\u7d22 find\u547d\u4ee4 \u53c2\u8003\u81ea\rcsdn\nfind &lt; path &gt; &lt; expression &gt; &lt; cmd &gt;\n path\uff1a \u6240\u8981\u641c\u7d22\u7684\u76ee\u5f55\u53ca\u5176\u6240\u6709\u5b50\u76ee\u5f55\u3002\u9ed8\u8ba4\u4e3a\u5f53\u524d\u76ee\u5f55\u3002 expression\uff1a \u6240\u8981\u641c\u7d22\u7684\u6587\u4ef6\u7684\u7279\u5f81\u3002 cmd\uff1a \u5bf9\u641c\u7d22\u7ed3\u679c\u8fdb\u884c\u7279\u5b9a\u7684\u5904\u7406\u3002  \u5982\u679c\u4ec0\u4e48\u53c2\u6570\u4e5f\u4e0d\u52a0\uff0cfind\u9ed8\u8ba4\u641c\u7d22\u5f53\u524d\u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\uff0c\u5e76\u4e14\u4e0d\u8fc7\u6ee4\u4efb\u4f55\u7ed3\u679c\uff08\u4e5f\u5c31\u662f\u8fd4\u56de\u6240\u6709\u6587\u4ef6\uff09\uff0c\u5c06\u5b83\u4eec\u5168\u90fd\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u3002\n -name \u6309\u7167\u6587\u4ef6\u540d\u67e5\u627e\u6587\u4ef6  1 2 3  find /dir -name filename \u5728/dir\u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\u4e0b\u9762\u67e5\u627e\u540d\u5b57\u4e3afilename\u7684\u6587\u4ef6 find . -name &#34;*.c&#34; \u5728\u5f53\u524d\u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\uff08\u7528\u201c.\u201d\u8868\u793a\uff09\u4e2d\u67e5\u627e\u4efb\u4f55\u6269\u5c55\u540d\u4e3a\u201cc\u201d\u7684\u6587\u4ef6 find / -name &#34;\u822a\u62cd*&#34; \u5728\u6240\u6709\u6587\u4ef6\u67e5\u627e   \u8fd0\u7ef4   \u5173\u673a\u548c\u91cd\u542f\n \u7acb\u523b\u5173\u673a: shutdown -h now \u7acb\u523b\u91cd\u542f: shutdown -r now    \u670d\u52a1\u7ba1\u7406\n  service\u547d\u4ee4: sudo service [\u670d\u52a1\u540d] + start/restart/status/stop\n  systemd\u8fdb\u7a0b\u5b88\u62a4\n \u914d\u7f6e\u6587\u4ef6\u76ee\u5f55\nsystemctl\u811a\u672c\u76ee\u5f55\uff1a/usr/lib/systemd/\n\u7cfb\u7edf\u670d\u52a1\u76ee\u5f55\uff1a/usr/lib/systemd/system/\n\u7528\u6237\u670d\u52a1\u76ee\u5f55\uff1a/usr/lib/systemd/user/ \u5728/usr/lib/systemd/system\u76ee\u5f55\u4e0b\u65b0\u5efacloudreve.service\u6587\u4ef6\uff1a  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  [Unit]Description=CloudreveDocumentation=https://docs.cloudreve.orgAfter=network.targetWants=network.target[Service]WorkingDirectory=/PATH_TO_CLOUDREVEExecStart=/PATH_TO_CLOUDREVE/cloudreveRestart=on-abnormalRestartSec=5sKillMode=mixedStandardOutput=nullStandardError=syslog[Install]WantedBy=multi-user.target   \u5e38\u7528\u547d\u4ee4  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  # \u66f4\u65b0\u914d\u7f6e systemctl daemon-reload # \u542f\u52a8\u670d\u52a1 systemctl start cloudreve # \u8bbe\u7f6e\u5f00\u673a\u542f\u52a8 systemctl enable cloudreve # \u542f\u52a8\u670d\u52a1 systemctl start cloudreve # \u505c\u6b62\u670d\u52a1 systemctl stop cloudreve # \u91cd\u542f\u670d\u52a1 systemctl restart cloudreve # \u67e5\u770b\u72b6\u6001 systemctl status cloudreve       \u67e5\u770b\u7cfb\u7edf\u8d44\u6e90\u5360\u7528-htop\u5de5\u5177\nhtop\u5de5\u5177\u76f4\u89c2\u67e5\u770bCPU\u4f7f\u7528\u4fe1\u606f\n1 2  sudo apt install htop htop      Ubuntu \u67e5\u770b\u78c1\u76d8\u7a7a\u95f4\u53ca\u76ee\u5f55\u5bb9\u91cf\n  df\u547d\u4ee4\u662flinux\u7cfb\u7edf\u4ee5\u78c1\u76d8\u5206\u533a\u4e3a\u5355\u4f4d\u67e5\u770b\u6587\u4ef6\u7cfb\u7edf\uff0c\u53ef\u4ee5\u52a0\u4e0a\u53c2\u6570\u67e5\u770b\u78c1\u76d8\u5269\u4f59\u7a7a\u95f4\uff1a df -hl\n\u663e\u793a\u683c\u5f0f\u4e3a\uff1a\n\u6587\u4ef6\u7cfb\u7edf \u5bb9\u91cf \u5df2\u7528 \u53ef\u7528 \u5df2\u7528% \u6302\u8f7d\u70b9\n  \u67e5\u770b\u7aef\u53e3\u5360\u7528/\u7ec8\u6b62\u7aef\u53e3\u7a0b\u5e8f\n \u67e5\u770b8888\u7aef\u53e3: lsof -i:8888 \u6216\u8005 sudo netstat -ap | grep 8080    \u7ec8\u6b62\u7aef\u53e3: kill +\u5bf9\u5e94\u7684pid\n    \u8bbe\u7f6e\u5f00\u673a\u7a0b\u5e8f\u81ea\u542f\u52a8\nsudo gnome-session-properties \u6dfb\u52a0\u542f\u52a8\u9879\u5373\u53ef\n  \u73af\u5883\u53d8\u91cf   \u4e34\u65f6\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf: export: \u5728 shell \u4e2d\u6267\u884c\u7a0b\u5e8f\u65f6\uff0cshell \u4f1a\u63d0\u4f9b\u4e00\u7ec4\u73af\u5883\u53d8\u91cf\u3002export \u53ef\u65b0\u589e\uff0c\u4fee\u6539\u6216\u5220\u9664\u73af\u5883\u53d8\u91cf\uff0c\u4f9b\u540e\u7eed\u6267\u884c\u7684\u7a0b\u5e8f\u4f7f\u7528\u3002export \u7684\u6548\u529b\u4ec5\u9650\u4e8e\u8be5\u6b21\u767b\u9646\u64cd\u4f5c\u3002\nexport MYENV=7 //\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\u5e76\u8d4b\u503c\n  \u6c38\u4e45\u8bbe\u7f6e\n \u65b9\u6cd5\u4e00: \u4fee\u6539.bashrc\u6587\u4ef6\uff08\u5f53\u524d\u7528\u6237\uff09  nano ~/.bashrc; \u5728bashrc\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\uff1aexport MYENV=7 \u4f7f\u751f\u6548\uff1asource ~/.bashrc   \u65b9\u6cd5\u4e8c: \u4fee\u6539profile\u6587\u4ef6\uff08\u5bf9\u6240\u6709\u7528\u6237\u90fd\u662f\u6709\u6548\u7684\uff09  nano /etc/profile \u5728profile\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\uff1aexport MYENV=7 \u4f7f\u751f\u6548\uff1asource /etc/profile      \u67e5\u770b\u73af\u5883\u53d8\u91cf\n echo $MYENV\u6216\u8005export $MYENV \u663e\u793a\u6240\u6709\u73af\u5883\u53d8\u91cf\uff1aexport -p    \u8bbe\u7f6e\u547d\u4ee4\u884c\u522b\u540d\n \u4e34\u65f6\u8bbe\u7f6e: \u5728\u5f53\u524d\u7a97\u53e3\u8f93\u5165alias jb='jupyter notebook'\u5373\u53ef \u6c38\u4e45\u8bbe\u7f6e:  \u7f16\u8f91bashrc: gedit ~/.bashrc; \u6dfb\u52a0alias: alias jb='jupyter notebook'      \u8bbe\u7f6e\u7ec8\u7aef\u4ee3\u7406: \u6dfb\u52a0\u81f3~/.zshrc\uff0c\u5e76\u6267\u884csource ~/.zshrc :\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  set-proxy () { # for terminal export proxyserveraddr=&#34;192.168.123.155&#34; export proxyserverport=&#34;7890&#34; export ALL_PROXY=&#34;http://$proxyserveraddr:$proxyserverport&#34; export all_proxy=&#34;http://$proxyserveraddr:$proxyserverport&#34; export http_proxy=&#34;http://$proxyserveraddr:$proxyserverport&#34; git config --global http.proxy &#34;http://$proxyserveraddr:$proxyserverport&#34; git config --global https.proxy &#34;https://$proxyserveraddr:$proxyserverport&#34; curl https://ip.gs } unset-proxy () { unset proxyserveraddr unset proxyserverport unset ALL_PROXY unset all_proxy unset http_proxy git config --global --unset http.proxy git config --global --unset https.proxy curl https://ip.gs }      \u6587\u4ef6  \u538b\u7f29\u4e0e\u89e3\u538b\nLinux\u4e0b\u5e38\u89c1\u7684\u538b\u7f29\u5305\u683c\u5f0f\u67095\u79cd:zip tar.gz tar.bz2 tar.xz tar.Z \u538b\u7f29\n\u538b\u7f29\u5230\u6307\u5b9a\u76ee\u5f55(DirName): tar -zcvf FileName.tar.gz DirName  \u89e3\u538b  zip\u89e3\u538b: unzip FileName.zip tar.gz tar.bz2 tar.xz tar.Z\u89e3\u538b: tar -xvf FileName.tar.gz  tar\u53ef\u4ee5\u81ea\u52a8\u8bc6\u522b\u538b\u7f29\u7684\u683c\u5f0f x: extract\u89e3\u538b; v:verbose\u8be6\u7ec6\u4fe1\u606f; f:file\u6587\u4ef6        ",
        "description": "",
        "id": 86,
        "section": "posts",
        "tags": [
            "Linux",
            "Ubuntu",
            "\u8fd0\u7ef4",
            "\u4ee3\u7406"
        ],
        "title": "Linux-\u57fa\u7840\u53ca\u5e38\u7528\u547d\u4ee4",
        "uri": "/posts/notes/2020-02-17-linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"
    },
    {
        "content": " \u8f6c\u8f7d-SCI\u5e38\u7528\u7ecf\u5178\u8bcd\u548c\u5e38\u7528\u53e5\u578b\uff1a\r\u8f6c\u8f7d\u5730\u5740\n \u7ecf\u5178\u66ff\u6362\u8bcd   individuals, characters, folks \u66ff\u6362 people , persons.\n  positive, favorable, rosy, promising, perfect, pleasurable, excellent, outstanding, superior \u66ff\u6362 good.\n  dreadful, unfavorable, poor, adverse, ill \u66ff\u6362 bad\uff08\u5982\u679cbad\u505a\u8868\u8bed\uff0c\u53ef\u4ee5\u6709be less impressive\u66ff\u6362\u3002\uff09\n  an army of, an ocean of, a sea of, a multitude of, a host of, if not most \u66ff\u6362 many.\n  a slice of, quiet a few \u66ff\u6362 some.\n  harbor the idea that, take the attitude that, hold the view that, it is widely shared that, it is universally acknowledged that \u66ff\u6362 think\u3002\n  affair, business, matter \u66ff\u6362 thing.\n  shared \u66ff\u6362 common .\n  reap huge fruits \u66ff\u6362 get many benefits.\n  for my part ,from my own perspective \u66ff\u6362 in my opinion.\n  Increasing(ly), growing \u66ff\u6362 more and more\uff08\u6ce8\u610f\u6ca1\u6709growingly\u8fd9\u79cd\u5f62\u5f0f\u3002\u6240\u4ee5\u5f53\u4fee\u9970\u540d\u8bcd\u65f6\u7528increasing/growing\u4fee\u9970\u5f62\u5bb9\u8bcd\uff0c\u526f\u8bcd\u7528increasingly.\uff09\n  little if anything\u6216little or nothing \u66ff\u6362 hardly.\n  beneficial, rewarding \u66ff\u6362 helpful.\n  shopper, client, consumer, purchaser \u66ff\u6362 customer.\n  overwhelmingly, exceedingly, extremely, intensely \u66ff\u6362 very.\n  hardly necessary, hardly inevitable\u2026\u66ff\u6362 unnecessary, avoidable.\n  indispensable \u66ff\u6362 necessary.\n  sth appeals to sb, sth exerts a tremendous fascination on sb \u66ff\u6362sb take interest in / sb. be interested in.\n  capture one&rsquo;s attention \u66ff\u6362 attract one&rsquo;s attention.\n  facet, demension, sphere \u66ff\u6362 aspect.\n  be indicative of, be suggestive of, be fearful of \u66ff\u6362 indicate,suggest, fear.\n  give rise to, lead to, result in, trigger \u66ff\u6362 cause.\n  There are several reasons behind sth \u66ff\u6362\u2026reasons for sth.\n  desire \u66ff\u6362 want.\n  pour attention into \u66ff\u6362 pay attention to.\n  bear in mind that \u66ff\u6362 remember.\n  enjoy, possess \u66ff\u6362 have\uff08\u6ce8\u610fprocess\u662f\u8fc7\u7a0b\u7684\u610f\u601d\uff09\u3002\n  interaction \u66ff\u6362 communication.\n  frown on sth \u66ff\u6362 be against , disagree with sth .\n  as an example \u66ff\u6362 for example, for instance.\n  next to / virtually impossible \u66ff\u6362 nearly / almost impossible.\n  regarding / concerning \u66ff\u6362 about.\n  crucial /paramount \u66ff\u6362 important.\n  \u7b2c\u4e00\uff08in the first place/the first and foremost\uff09\uff1b\u7b2c\u4e8c\uff08there is one more point, I should touch on, that\u2026\uff09\uff1b\u7b2c\u4e09\uff08the last but not the least\uff09\u3002\n  assiduous \u66ff\u6362 hard-working.\n  arduous / formidable \u66ff\u6362 difficult.\n  underdeveloped / financially-challenged \u66ff\u6362poor\uff08\u56e0\u4e3apoor\u901a\u5e38\u542b\u6709\u8d2c\u4e49\uff09.\n  demonstrate / manifest \u66ff\u6362 show.\n  invariably \u66ff\u6362 always.\n  perilous / hazardous\u66ff\u6362 dangerous.\n  quintessential \u66ff\u6362 typical\uff08\u4e3e\u4f8b\u65f6\u5e38\u7528\uff0c\u4f8b\u5982\uff1aa quintessential example should be cited that=for example; for instance\uff09.\n  distinguished \u66ff\u6362 famous.\n  feasible \u66ff\u6362 possible.\n  consequently, accordingly\u66ff\u6362 so.\n  \u901a\u5e38\uff0c\u7531\u6570\u636e\u63a8\u65ad\u51fa\u4e00\u5b9a\u7684\u7ed3\u8bba\uff0c\u7528Results indicate, infer, suggest, imply that\u2026\u2026\n  \u6700\u5e38\u89c1\u7684\u5f15\u8ff0\u522b\u4eba\u89c2\u70b9\u7684\u8bcd\u6c47  Much of the research in sexual selection in the last two decades has examined how a female\u2019s preference that does not influence her immediate reproductive success can still evolve if it is genetically correlated with another character under direct selection.(\u4e0d\u8981\u6bcf\u6b21\u5199\u5230\u7814\u7a76\u65f6\u603b\u7528study\uff0c\u53ef\u4ee5\u7528\u4e9b\u5176\u5b83\u7684\u8bcd\u6c47\uff0c\u6bd4\u5982examine\uff0cwork\u3002) Two hypotheses for female preference evolution\u2014runaway sexual selection and good genes selection\u2014state that preferences evolve indirectly because they are genetically correlated with male traits that are under direct selection; that is, the preferences themselves are not under direct selection.(\u5728\u5f15\u8ff0\u522b\u4eba\u7684\u89c2\u70b9\u65f6\uff0c\u5982\u679c\u4e0d\u80fd\u5b8c\u5168\u540c\u610f\uff0c\u4f7f\u7528state \u6bd4show\u66f4\u52a0\u4e2d\u7acb\u4e9b\u3002) Studies of receiver biases suggest that such analogies might not be broadly applicable(\u4e0d\u80fd\u5e7f\u6cdb\u88ab\u5e94\u7528).(suggest,\u53c8\u4e00\u79cd\u8f83\u4e3a\u5ba2\u89c2\u7684\u5f15\u8ff0\u89c2\u70b9\u7684\u8868\u8fbe\u65b9\u6cd5\u3002) Burley argued that the preference for red beaks is adaptive because it indicates male health, and this preference is then transferred to leg-band color.(argue,\u5f15\u7528\u522b\u4eba\u89c2\u70b9\u7684\u53c8\u4e00\u8868\u8ff0\u3002) According to the anti-monotony hypothesis, habituation plays an important role in the evolution of complex vocalizations in songbirds: Increased song complexity reduces habituation of neighboring males and courting females.(\u6839\u636e\u2026) Previous studies of acoustic and bioluminescent interactions had emphasized potential advantages to group-signaling organization, such as minimizing predation, preserving species-specific signal characters, or increasing the attractiveness of the group.(\u5e26\u6709\u5c0f\u5c0f\u7684\u5f3a\u8c03)  \u5e38\u89c1\u7684\u8fde\u63a5\u8bcd\u6709 However, also, in addition, consequently, afterwards, moreover, Furthermore, further, although, unlike, in contrast, Similarly, Unfortunately, alternatively, parallel results, In order to, despite, For example, Compared with, other results, thus, therefore\u2026\u2026\n\u7528\u597d\u8fde\u63a5\u8bcd\u80fd\u4f7f\u6587\u7ae0\u5c42\u6b21\u6e05\u695a\uff0c\u610f\u601d\u660e\u786e\u3002\u6bd4\u5982\uff0c\u53d9\u8ff0\u6709\u65f6\u95f4\u987a\u5e8f\u7684\u4e8b\u4ef6\u6216\u6587\u732e\uff0c\u6700\u65e9\u7684\u6587\u732e\u53ef\u7528AA advocated it for the first time.\u63a5\u4e0b\u6765\u53ef\u7528Then BB further demonstrated that. \u518d\u63a5\u4e0b\u6765\uff0c\u53ef\u7528Afterwards, CC\u2026\u2026\u5982\u679c\u8fd8\u6709\uff0c\u53ef\u7528More recent studies by DD\u2026\u2026\n\u4e00\u4e9b\u5e38\u7528\u7684\u77ed\u8bed\u53ca\u53e5\u5f0f \u201cIn order to prove\u2026., we used\u2026\u201d\uff1b\u201cWe have set up\u2026.\u201d\uff1b\u201cTo demonstrate\u2026., we further\u2026\u201d\uff1b\u201cConsistently/Consistent with\u2026\u201d\uff1b\u201cCompared with\u2026.\u201d\uff1b\u201cThus, at current time, we have evidence that\u2026\u201d\uff1b\u201cWe next characterized\u2026\u201d\uff1b\u201cWe found that\u2026\u201d\uff1b\u201cWe have noticed that\u2026.\u201d\uff1b\u201cIt\u2019s known that\u2026.\u201d\uff1b\u201cSo we introduced\u2026.in our study\u201d\uff1b\u201cIn contrast\u2026\u201d\uff1b\u201cThese data suggest that\u2026.\u201d\uff1b\u201cSo we next explored\u2026.\u201d\uff1b\u201cNotably,\n\u2026.\u201d\uff1b\u201cImportantly, \u2026.\u201d\uff1b\u201cFurthermore\u2026.\u201d\uff1b\u201cMoreover\u2026.\u201d\uff1b\u201cWe have previously shown that\u2026.\u201d\uff1b\u201cAs shown in Fig. 1,\u2026..\u201d\uff1b\u201cFig. 1 shows\u2026.\u201d\uff1b\u201cOverall,\u2026.\u201d\uff1b\u201cTaken together, these results suggest\u2026.\u201d\uff1b\u201cThese data are consistent with the notion that&hellip;..\u201d\uff1b\u201cNext, we examined the effect of\u2026.\u201d\uff1b\u201cWe next set out to determine whether\u2026.\u201d\uff1b\u201cLastly, we examined\u2026..\u201d\uff1b\u201cIn order to establish\u2026.\u201d.\n\u5e38\u7528\u53e5\u578b Beginning  In this paper, we focus on the need for This paper proceeds as follow. The structure of the paper is as follows. In this paper, we shall first briefly introduce fuzzy sets and related concepts To begin with we will provide a brief background on the  Introduction (\u4ecb\u7ecd\u6216\u603b\u7ed3\u540e\u7eed\u5185\u5bb9)  This will be followed by a description of the fuzzy nature of the problem and a detailed presentation of how the required membership functions are defined. Details on xx and xx are discussed in later sections. In the next section, after a statement of the basic problem, various situations involving possibility knowledge are investigated: first, an entirely possibility model is proposed; then the cases of a fuzzy service time with stochastic arrivals and non fuzzy service rule is studied; lastly, fuzzy service rule are considered.  Review  This review is followed by an introduction. A brief summary of some of the relevant concepts in xxx and xxx is presented in Section 2. In the next section, a brief review of the &hellip;. is given. In the next section, a short review of &hellip; is given with special regard to &hellip; Section 2 reviews relevant research related to xx. Section 1.1 briefly surveys the motivation for a methodology of action, while 1.2 looks at the difficulties posed by the complexity of systems and outlines the need for development of possibility methods.  Body   Section 1 defines the notion of robustness, and argues for its importance.\n  Section 1 devoted to the basic aspects of the FLC decision making logic.\n  Section 2 gives the background of the problem which includes xxx\n  Section 2 discusses some problems with and approaches to, natural language understanding.\n  Section 2 explains how flexibility which often &hellip; can be expressed in terms of fuzzy time window\n  Section 3 discusses the aspects of fuzzy set theory that are used in the &hellip;\n  Section 3 describes the system itself in a general way, including the \u2026.. and also discusses how to evaluate system performance.\n  Section 3 describes a new measure of xx.\n  Section 3 demonstrates the use of fuzzy possibility theory in the analysis of xx.\n  Section 3 is a fine description of fuzzy formulation of human decision.\n  Section 3, is developed to the modeling and processing of fuzzy decision rules\n  The main idea of the FLC is described in Section 3 while Section 4 describes the xx strategies.\n  Section 3 and 4 show experimental studies for verifying the proposed model.\n  Section 4 discusses a previous fuzzy set based approach to cost variance investigation.\n  Section 4 gives a specific example of xxx.\n  Section 4 is the experimental study to make a fuzzy model of memory process.\n  Section 4 contains a discussion of the implication of the results of Section 2 and 3.\n  Section 4 applies this fuzzy measure to the analysis of xx and illustrate its use on experimental data.\n  Section 5 presents the primary results of the paper: a fuzzy set model ..\n  Section 5 contains some conclusions plus some ideas for further work.\n  Section 6 illustrates the model with an example.\n  Various ways of justification and the reasons for their choice are discussed very briefly in Section 2.\n  In Section 2 are presented the block diagram expression of a whole model of human DM system\n  In Section 2 we shall list a collection of basic assumptions which a &hellip; scheme must satisfy.\n  In Section 2 of this paper, we present representation and uniqueness theorems for the fundamental measurement of fuzziness when the domain of discourse is order dense.\n  In Section 3, we describe the preliminary results of an empirical study currently in progress to verify the measurement model and to construct membership functions.\n  In Section 5 is analyzed the inference process through the two kinds of inference experiments&hellip;\n  This Section  In this section, the characteristics and environment under which MRP is designed are described. We will provide in this section basic terminologies and notations which are necessary for the understanding of subsequent results.Next Section The next section describes the mathematics that goes into the computer implementation of such fuzzy logic statements. However, it is cumbersome for this purpose and in practical applications the formulae were rearranged and simplified as discussed in the next section. The three components will be described in the next two section, and an example of xx analysis of a computer information system will then illustrate their use. We can interpret the results of Experiments I and II as in the following sections. The next section summarizes the method in a from that is useful for arguments based on xx  Summary  This paper concludes with a discussion of future research consideration in section 5. Section 5 summarizes the results of this investigation. Section 5 gives the conclusions and future directions of research. Section 7 provides a summary and a discussion of some extensions of the paper. Finally, conclusions and future work are summarized The basic questions posed above are then discussed and conclusions are drawn. Section 7 is the conclusion of the paper.  Abstract  A basic problem in the design of xx is presented by the choice of a xx rate for the measurement of experimental variables. This paper examines a new measure of xx in xx based on fuzzy mathematics which overcomes the difficulties found in other xx measures. This paper describes a system for the analysis of the xx. The method involves the construction of xx from fuzzy relations. The procedure is useful in analyzing how groups reach a decision. The technique used is to employ a newly developed and versatile xx algorithm. The usefulness of xx is also considered. A brief methodology used in xx is discussed. The analysis is useful in xx and xx problem. A model is developed for a xx analysis using fuzzy matrices. Algorithms to combine these estimates and produce a xx are presented and justified. The use of the method is discussed and an example is given. Results of an experimental applications of this xx analysis procedure are given to illustrate the proposed technique. This paper analyses problems in This paper outlines the functions carried out by &hellip; This paper includes an illustration of the &hellip; This paper provides an overview and information useful for approaching Emphasis is placed on the construction of a criterion function by which the xx in achieving a hierarchical system of objectives are evaluated. The main emphasis is placed on the problem of xx Our proposed model is verified through experimental study. The experimental results reveal interesting examples of fuzzy phases of: xx, xx The compatibility of a project in terms of cost, and xx are likewise represented by linguistic variables. A didactic example is included to illustrate the computational procedure  Time  Over the course of the past 30 years, .. has emerged form intuitive Technological revolutions have recently hit the industrial world The advent of &hellip; systems for has had a significant impact on the The development of &hellip; is explored During the past decade, the theory of fuzzy sets has developed in a variety of directions The concept of xx was investigated quite intensively in recent years There has been a turning point in &hellip; methodology in accordance with the advent of &hellip; A major concern in &hellip; today is to continue to improve&hellip; A xx is a latecomer in the part representation arena. At the time of this writing, there is still no standard way of xx Although a lot of effort is being spent on improving these weaknesses, the efficient and effective method has yet to be developed. The pioneer work can be traced to xx [1965]. To date\uff08\u5230\u76ee\u524d\u4e3a\u6b62\uff09, none of the methods developed is perfect and all are far from ready to be used in commercial systems.  Objective / Goal / Purpose   The purpose of the inference engine can be outlined as follows:\n  The ultimate goal of the xx system is to allow the non experts to utilize the existing knowledge in the area of manual handling of loads, and to provide intelligent, computer aided instruction for xxx.\n  The paper concerns the development of a xx\n  The scope of this research lies in\n  The main theme of the paper is the application of rule based decision making.\n  These objectives are to be met with such thoroughness and confidence as to permit &hellip;\n  The objectives of the &hellip; operations study are as follows:\n  The primary purpose/consideration/objective of\n  The ultimate goal of this concept is to provide\n  The main objective of such a &hellip; system is to\n  The aim of this paper is to provide methods to construct such probability distribution.\n  In order to achieve these objectives, an xx must meet the following requirements:\n  In order to take advantage of their similarity\n  more research is still required before final goal of &hellip; can be completed\n  In this trial, the objective is to generate&hellip;\n  for the sake of concentrating on &hellip; research issues\n  A major goal of this report is to extend the utilization of a recently developed procedure for the xx.\n  For an illustrative purpose, four well known OR problems are studied in presence of fuzzy data: xx.\n  A major thrust of the paper is to discuss approaches and strategies for structuring ..methods\n  This illustration points out the need to specify\n  The ultimate goal is both descriptive and prescriptive.\n  Chapter 2. Literature Review\n  A wealth of information is to be found in the statistics literature, for example, regarding xx\n  A considerable amount of research has been done .. during the last decade\n  A great number of studies report on the treatment of uncertainties associated with xx.\n  There is considerable amount of literature on planning\n  However, these studies do not provide much attention to uncertainty in xx.\n  Since then, the subject has been extensively explored and it is still under investigation as well in methodological aspects as in concrete applications.\n  Many research studies have been carried out on this topic.\n  Problem of xx draws recently more and more attention of system analysis.\n  Attempts to resolve this dilemma have resulted in the development of\n  Many complex processes unfortunately, do not yield to this design procedure and have, therefore, not yet been automated.\n  Most of the methods developed so far are deterministic and /or probabilistic in nature.\n  The central issue in all these studies is to\n  The problem of xx has been studied by other investigators, however, these studies have been based upon classical statistical approaches.\n  Applied &hellip; techniques to\n  Characterized the &hellip; system as\n  Developed an algorithm to\n  Developed a system called &hellip; which\n  Uses an iterative algorithm to deduce\n  Emphasized the need to\n  Identifies six key issues surrounding high technology\n  A comprehensive study of the&hellip; has been undertaken\n  Much work has been reported recently in these filed\n  Proposed/Presented/Statethat/Described/Illustrated/Indicated/Hasshown/showed/Address/Highlights\n  Point out that the problem of\n  A study on &hellip;was done / developed by []\n  Previous work, such as [] and [], deal only with\n  The approach taken by [] is\n  The system developed by [] consists\n  A paper relevant to this research was published by []\n  []&rsquo;s model requires consideration of&hellip;\n  []' model draws attention to evolution in human development\n  []&rsquo;s model focuses on&hellip;\n  Little research has been conducted in applying &hellip; to\n  The published information that is relevant to this research&hellip;\n  This study further shows that\n  Their work is based on the principle of\n  More history of &hellip; can be found in xx et al. [1979].\n  Studies have been completed to established\n  The &hellip;studies indicated that\n  Though application of xx in the filed of xx has proliferated in recent years, effort in analyzing xx, especially xx, is lacking.\n  Problem / Issue / Question  Unfortunately, real-world engineering problems such as manufacturing planning do not fit well with this narrowly defined model. They tend to span broad activities and require consideration of multiple aspects. Remedy / solve / alleviate these problems &hellip; is a difficult problem, yet to be adequately resolved Two major problems have yet to be addressed An unanswered question This problem in essence involves using x to obtain a solution.  ",
        "description": "",
        "id": 87,
        "section": "posts",
        "tags": [
            "\u8bba\u6587",
            "\u5199\u4f5c"
        ],
        "title": "\u8f6c\u8f7d-SCI\u8bba\u6587\u5199\u4f5c\u5e38\u7528\u7ecf\u5178\u8bcd\u548c\u5e38\u7528\u53e5\u578b",
        "uri": "/posts/notes/83/"
    },
    {
        "content": "  \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u8fd9\u4e00\u751f\u5173\u4e8e\u4f60\u7684\u98ce\u666f\",\rartist: \"\u9694\u58c1\u8001\u6a0a\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E8%BF%99%E4%B8%80%E7%94%9F%E5%85%B3%E4%BA%8E%E4%BD%A0%E7%9A%84%E9%A3%8E%E6%99%AF-61f1bc-Ag.mp3\",\rcover: \"https://p1.music.126.net/72pkxsrTN_zUscdzMk5mMA==/109951164289743850.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E8%BF%99%E4%B8%80%E7%94%9F%E5%85%B3%E4%BA%8E%E4%BD%A0%E7%9A%84%E9%A3%8E%E6%99%AF-%E9%9A%94%E5%A3%81%E8%80%81%E6%A8%8A-595287-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"name\",\rartist: \"artist\",\rurl: \"\",\rcover: \"\",\rlrc: \"\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.2.1 \u9759\u5fc3\u3002\u52ff\u6025\u8e81\u3002 2020.2.2 \u53e4\u8bed\u4e91\uff1a\u7531\u4fed\u5165\u5962\u6613\uff0c\u7531\u5962\u5165\u4fed\u96be\u3002\u662f\u5426\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff0c\u53e4\u4eba\u56e0\u4e3a\u5bb3\u6015\u6539\u53d8\uff0c\u5c31\u62d2\u7edd\u66f4\u597d\u751f\u6d3b\u7684\u53ef\u80fd\uff1f\u56e0\u4e3a\u5bb3\u6015\u5931\u53bb\uff0c\u5c31\u62d2\u7edd\u6240\u6709\u7684\u5f00\u59cb\uff1f 2020.2.3 \u505a\u4e00\u4e2a\u7b80\u5355\u5355\u7eaf\u7684\u4eba\u3002 2020.2.4 \u6c89\u7a33\u4e00\u4e9b\u3002 2020.2.5 \u201c\u51e1\u6709\u7684\uff0c\u8fd8\u8981\u52a0\u500d\u7ed9\u4ed6\u53eb\u4ed6\u591a\u4f59\uff1b\u6ca1\u6709\u7684\uff0c\u8fde\u4ed6\u6240\u6709\u7684\u4e5f\u8981\u593a\u8fc7\u6765\u3002\u201d 2020.2.6 \u201c\u5df4\u5df4\u5730\u6d3b\u7740\uff0c\u6bcf\u5929\u6253\u6c34\uff0c\u716e\u996d\uff0c\u6309\u65f6\u5403\u836f \u9633\u5149\u597d\u7684\u65f6\u5019\u5c31\u628a\u81ea\u5df1\u653e\u8fdb\u53bb\uff0c\u50cf\u653e\u4e00\u5757\u9648\u76ae \u8336\u53f6\u8f6e\u6362\u7740\u559d\uff1a\u83ca\u82b1\uff0c\u8309\u8389\uff0c\u73ab\u7470\uff0c\u67e0\u6aac \u8fd9\u4e9b\u7f8e\u597d\u7684\u4e8b\u7269\u4eff\u4f5b\u628a\u6211\u5f80\u6625\u5929\u7684\u8def\u4e0a\u5e26 \u6240\u4ee5\u6211\u4e00\u6b21\u6b21\u6309\u4f4f\u5185\u5fc3\u7684\u96ea \u5b83\u4eec\u8fc7\u4e8e\u6d01\u767d\u8fc7\u4e8e\u63a5\u8fd1\u6625\u5929 \u5728\u5e72\u51c0\u7684\u9662\u5b50\u91cc\u8bfb\u4f60\u7684\u8bd7\u6b4c\u3002 \u8fd9\u4eba\u95f4\u60c5\u4e8b \u604d\u60da\u5982\u7a81\u7136\u98de\u8fc7\u7684\u9ebb\u96c0\u513f \u800c\u5149\u9634\u768e\u6d01\u3002\u6211\u4e0d\u9002\u5b9c\u809d\u80a0\u5bf8\u65ad \u5982\u679c\u7ed9\u4f60\u5bc4\u4e00\u672c\u4e66\uff0c\u6211\u4e0d\u4f1a\u5bc4\u7ed9\u4f60\u8bd7\u6b4c \u6211\u8981\u7ed9\u4f60\u4e00\u672c\u5173\u4e8e\u690d\u7269\uff0c\u5173\u4e8e\u5e84\u7a3c\u7684 \u544a\u8bc9\u4f60\u7a3b\u5b50\u548c\u7a17\u5b50\u7684\u533a\u522b \u544a\u8bc9\u4f60\u4e00\u68f5\u7a17\u5b50\u63d0\u5fc3\u540a\u80c6\u7684 \u6625\u5929\u201d - \u4f59\u79c0\u534e \u300a\u6211\u7231\u4f60\u300b 2020.2.7 \u971c\u53f6\u7ea2\u4e8e\u4e8c\u6708\u82b1\u3002 2020.2.8 \u65e5\u65e5\u91cd\u590d\u540c\u6837\u7684\u4e8b\uff0c\u9075\u5faa\u7740\u4e0e\u6628\u65e5\u76f8\u540c\u7684\u60ef\u4f8b\uff0c\u82e5\u80fd\u907f\u5f00\u731b\u70c8\u7684\u72c2\u559c \uff0c\u81ea\u7136\u4e5f\u4e0d\u4f1a\u6709\u60b2\u75db\u7684\u6765\u88ad\u3002 2020.2.9 \u5c71\u5ddd\u5f02\u57df\uff0c\u98ce\u6708\u540c\u5929\u3002\u5c82\u66f0\u65e0\u8863\uff0c\u4e0e\u5b50\u540c\u88f3\u3002 2020.2.10 \u300c\u4f60\u4f1a\u81ea\u8a00\u81ea\u8bed\u5417\uff1f\u300d\u300c\u4e0d\u7136\u4f60\u4ee5\u4e3a\u6211\u73b0\u5728\u5728\u8ddf\u8c01\u8bf4\u8bdd\uff1f\u300d 2020.2.11 1) \u6ca1\u6709\u4e0d\u505c\u7684\u96e8\uff0c\u5929\u4e00\u5b9a\u4f1a\u6674\u3002\u4e92\u76f8\u4e89\u5c31\u4e0d\u8db3\uff0c\u4e92\u76f8\u5206\u5c31\u6709\u9980\u30022) window10 \u4e0a pip\u5b89\u88c5\u7684\u65f6\u5019\u52a0\u4e0a &ndash;user \u4f1a\u51cf\u5c11\u5f88\u591a\u201c\u62d2\u7edd\u8bbf\u95ee\u201d\u7684\u95ee\u9898\u3002 pip install --user; 3) pip\u8bbe\u7f6e\u6e90\uff1apip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ 2020.2.12 \u9752\u57ce\u5c71\u4e0b\u767d\u7d20\u8d1e~~ 2020.2.13 kepler.gl \u53ef\u89c6\u5316\u597d\u7528\uff0c\u800c\u4e14\u53ef\u4ee5\u5230\u5904\u9ad8\u5206\u8fa8\u7387\u56fe\u96c6\u3002\u4f46kepler.gl for Jupyter\u7684\u7248\u672c\u8f83\u4f4e \u4e0d\u597d\u7528\u3002\u529e\u6cd5\u662f\u5728\u5c06kepler.gl\u5728github\u7684\u6e90\u7801clone\u5728\u672c\u5730\uff0c\u642d\u5efa\u597dnode, yarn \u73af\u5883\u540e\uff0c \u8bbe\u7f6emapbox\u7684key ,\u5c31\u53ef\u4ee5cpm start\u7684\u4e86\u3002\u975e\u5e38\u65b9\u4fbf~\u6709\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u76f4\u63a5\u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\u3002 2020.2.14 \u6587\u7ae0\u8fd8\u6709\u4e00\u70b9\u5c31\u53ef\u4ee5\u5b8c\u6210\u521d\u7a3f\u4e86\u3002 2020.2.15 \u9020\u5316\u5230\u5e95\u4e3a\u4f55\u7269 2020.2.16 1) \u4e0d\u8981\u628a\u6000\u5ff5\u641e\u5f97\u6bd4\u7ecf\u5386\u8fd8\u957f\u3002 2) \u5982\u679c\u5168\u4e16\u754c\u90fd\u4e0d\u8981\u4f60\u4e86\uff0c\u8bb0\u5f97\u8981\u6765\u627e\u6211\uff0c\u6211\u8ba4\u8bc6\u597d\u51e0\u4e2a\u4eba\u8d29\u5b50\u3002 2020.2.17 \u81ea\u76d1\u7763\u5b66\u4e60\uff1b\u56fe\u50cf\u8868\u793a\u5b66\u4e60\u3002 2020.2.18 Skip-Thought Vectors; \u4eceWord Embedding\u5230Bert\u6a21\u578b\u2014\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u9884\u8bad\u7ec3\u6280\u672f\u53d1\u5c55\u53f2; \u901a\u7528\u53e5\u5b50\u8bed\u4e49\u7f16\u7801\u5668; 2020.2.19 \u8bdd\u90fd\u8bf4\u4e0d\u6e05\u695a \u8be5\u600e\u4e48\u660e\u4e86 2020.2.20 hexo\u7684\u5305\u592a\u7e41\u7410\u4e86\uff0c\u540e\u7eed\u5de5\u5177\u63d2\u4ef6\u591a\u4e86\u52a8\u4e0d\u52a8\u5c31\u62a5\u9519\u3002\u601d\u8003\u4e86wordpress\u540e\uff0c\u8f6c\u5230\u4e86typecho\u3002\u8bb0\u5f97\u6700\u5f00\u59cb\u7528\u7684\u662ftypecho\u3002 2020.2.21 \u7ec8\u4e8e\u628a\u6587\u6863\u90fd\u8fc1\u79fb\u8fc7\u6765\u4e86\u3002\u6211\u771f\u662f\u95f2\u7684\u3002\u4e0d\u6298\u817e\u4e86\uff01\u97f3\u4e50\u64ad\u653e\u5668\u548c\u516c\u5f0f\u7684\u63d2\u4ef6\u641e\u4e0d\u5b9a\u3001\u5c31\u8fd9\u6837\u4e86\u5427\u3001 2020.2.22 \u628a\u4ee5\u524d\u535a\u5ba2(WordPress)\u91cc\u9762\u7684\u6587\u7ae0\uff0c\u7f16\u8f91\u4e86\u8fc7\u6765\u3002\u90a3\u4e9b\u5468\u8bb0\u548c\u65e5\u8bb0\u592a\u7e41\u7410\u4e86\uff0c\u5c31\u968f\u5b83\u53bb\u5427\u3002 2020.2.23 \u7b2c\u4e8c\u7248\u4fee\u6539\u7a3f\u5b8c\u6210\ud83d\ude0e \ud83d\ude0e \u618b\u4e86\u8fd9\u4e48\u591a\u5929 \u6211\u89c9\u5f97\u6211\u5199\u4e1c\u897f\u4e25\u91cd\u9760\u611f\u89c9\u3002 \u903c\u662f\u903c\u4e0d\u51fa\u4ec0\u4e48\u58a8\u6c34 2020.2.24 \u4eca\u5929\u5403\u4e86\u8783\u87f9\uff0c\u5f88\u7f8e\u5473\u3002\u4f46\u662f\u665a\u4e0a\u80c3\u80c0\uff0c\u611f\u89c9\u4e0d\u6d88\u5316\uff0c\u5f88\u4e0d\u8212\u670d\u3002\ud83d\ude35 2020.2.25 \u5173\u4e8e House Prices \u53c8\u6709\u4e86\u65b0\u7684\u63d0\u5347\u70b9\uff080.12116\uff09\uff0c\u8fd8\u662f\u86ee\u5f00\u5fc3\u7684\u3002\u4e0d\u77e5\u600e\u4e48\u6ef4playground\u53c8\u662f\u4e00\u5929\u3002 2020.2.26 \u8f68\u8ff9\u8868\u793a\u5b66\u4e60 2020.2.27 1\uff09\u81ea\u5b9a\u4e49\u97f3\u4e50\u5f15\u7528:\u5f00\u542f\u7f51\u7ad9\u6307\u5b9a\u6587\u4ef6\u5939ftp\u529f\u80fd\uff08\u901a\u8fc7\u5b9d\u5854\u9762\u677f\uff09\uff1bPython\u901a\u8fc7ftplib\u5b9e\u73b0ftp\u4e0a\u4f20\u97f3\u4e50\u81f3custom\u6587\u4ef6\u5939\uff1b\u501f\u52a9cplayer\u751f\u6210html\uff1biframe\u6307\u5411html\u63d2\u5165\u97f3\u4e50\uff1b2\uff09\u81ea\u5b9a\u4e49\u56fe\u5e8a\uff08\u7528\u516c\u5171\u56fe\u5e8a\u603b\u662f\u6709\u901f\u5ea6\u95ee\u9898\uff0c\u60f3\u60f3\u5c31\u81ea\u5df1\u642d\u5efa\u56fe\u5e8a\uff09\uff1a\u4f7f\u7528\rPicGo + gitee \u4f5c\u4e3a\u56fe\u5e8a\uff0c\r\u53c2\u8003; 3)QGIS\u633a\u597d\u7528\u7684\uff0c\u800c\u4e14\u53cd\u5e94\u901f\u5ea6\u4e5f\u5feb\uff0c\u4ee5\u540e\u6df1\u5165\u5b66\u4e00\u4e0b\u3002 2020.2.28 \u591c\u5149\u9065\u611f\u6570\u636e\u53cd\u6620\u533a\u57df\u7ecf\u6d4e\u72b6\u51b5\uff0c\u540c\u6837\u4e5f\u662f\u7f51\u683c\u72b6\u6570\u636e\uff0c\u540c\u51fa\u79df\u8f66\u6570\u636e\u8054\u7acb\u4e00\u4e0b\u3002 2020.2.29 \u7ec8\u4e8e\u628aManuscript\u4e22\u51fa\u53bb\u4e86\u3002\u611f\u89c9\u653e\u4e0b\u4e86\u5427\uff0c\u53c8\u89c9\u5f97\u6c89\u4e86\u8d77\u6765\u3002\u6211\u4e3a\u5565\u7ed9\u81ea\u5df1\u8fd9\u4e48\u5927\u538b\u529b\u5462\u3002  ",
        "description": "",
        "id": 88,
        "section": "posts",
        "tags": [
            "\u81ea\u5b9a\u4e49\u97f3\u4e50\u63d2\u4ef6",
            "\u81ea\u5b9a\u4e49\u56fe\u5e8a",
            "\u535a\u5ba2\u8fc1\u79fb",
            "\u51fa\u79df\u8f66\u8f68\u8ff9\u63a2\u7d22",
            "kepler.gl",
            "\u8bba\u6587\u6295\u7a3f",
            "pip\u8bbe\u7f6e\u6e90"
        ],
        "title": "2020-2",
        "uri": "/posts/journals/98/"
    },
    {
        "content": " \u7528Python\u5b9e\u73b0WGS84\u3001\u706b\u661f\u5750\u6807\u7cfb\u3001\u767e\u5ea6\u5750\u6807\u7cfb\u3001web\u58a8\u5361\u6258\u56db\u79cd\u5750\u6807\u76f8\u4e92\u8f6c\u6362\n \u7b80\u4ecb \u5750\u6807\u7cfb\u7edf\uff1a\u7528\u4e8e\u5b9a\u4f4d\u7684\u7cfb\u7edf\uff0c\u5c31\u8ddf\u4e8c\u7ef4\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u7edf\u4e00\u6837\uff0c\u4e00\u4e2a\u70b9\u4f7f\u7528(x,y)\uff0c\u5c31\u80fd\u786e\u5b9a\u8be5\u70b9\u5728\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u7edf\u4e2d\u7684\u552f\u4e00\u4f4d\u7f6e\u3002\u8fd9\u91cc\u8bb2\u7684\u5750\u6807\u7cfb\u7edf\uff0c\u76f8\u5bf9\u4e8e\u7b1b\u5361\u5c14\u5750\u6807\u7cfb\u7edf\uff0c\u8981\u590d\u6742\u8bb8\u591a\uff0c\u4f46\u4f5c\u7528\u5374\u90fd\u662f\u4e00\u6837\uff0c\u4e3b\u8981\u7528\u4e8e\u5b9a\u4f4d\uff0c\u4e5f\u5c31\u662f\u7cbe\u786e\u5730\u5b9a\u4f4d\u5730\u8868\u4e0a\u7684\u4e00\u70b9\u3002\n\u5730\u7406\u5750\u6807\u7cfb\u7edf\uff1aWGS84\u5c31\u662f\u4e00\u79cd\u5730\u7406\u5750\u6807\u7cfb\u7edf\u3002\u5730\u7406\u5750\u6807\u5750\u6807\u662f\u5bf9\u5730\u7403\u8fdb\u884c\u7b80\u5355\u51e0\u4f55\u5efa\u6a21\uff0c\u6bd4\u5982\u5c06\u5730\u7403\u770b\u6210\u4e00\u4e2a\u7403\u4f53\u6216\u8005\u7c7b\u7403\u4f53\uff0c\u7136\u540e\u518d\u5c06\u5730\u8868\u4e0a\u70b9\u6295\u5f71\u5230\u8be5\u7403\u9762\u4e0a\u5f62\u6210\u7684\u5750\u6807\u5c31\u662f\u5730\u7406\u5750\u6807\u7cfb\u7edf\u3002WGS84\u5c31\u662f\u5b9a\u4e49\u4e86\u5982\u4f55\u5c06\u5730\u7403\u62bd\u8c61\u6210\u7403\u4f53\u6216\u8005\u7c7b\u7403\u4f53\u7684\u89c4\u5219\u3002\u6216\u8005\u7b80\u5355\u5730\u6765\u8bf4\uff0cWGS84\u5c31\u662f\u4e00\u5806\u53c2\u6570\uff0c\u7528\u4e8e\u5efa\u7acb\u7403\u4f53\u6216\u8005\u7c7b\u7403\u4f53\uff0c\u6765\u8fd1\u4f3c\u5730\u7403\u3002\n\u6295\u5f71\u5750\u6807\u7cfb\u7edf\uff1a\u7531\u4e8e\u5730\u7403\u662f\u4e00\u4e2a\u7403\u72b6\uff0c\u6240\u4ee5\u4e00\u822c\u5c06\u5176\u67d0\u4e2a\u533a\u57df\u6295\u5f71\u5728\u5e73\u9762\u4e0a\uff0c\u5f62\u6210\u7684\u5750\u6807\u7cfb\u79f0\u4e3a\u6295\u5f71\u5750\u6807\u7cfb\u3002\n\u56fd\u5185\u5404\u5730\u56feAPI\u5750\u6807\u7cfb\u7edf\u6bd4\u8f83\n \u5730\u7406\u5750\u6807\u7cfb\uff1aWGS84(Google, OSM)\u3001\u706b\u661f\u5750\u6807\u7cfb/GCJ02(\u9ad8\u5fb7\u3001\u817e\u8baf\u5730\u56fe)\u3001\u767e\u5ea6\u5750\u6807\u7cfb(BD09)  WGS84 \uff1aGoogle Earth\u548c\u4e2dGoogle Map\u4f7f\u7528\uff0c\u53e6\u5916\uff0c\u76ee\u524d\u57fa\u672c\u4e0a\u6240\u6709\u5b9a\u4f4d\u7a7a\u95f4\u4f4d\u7f6e\u7684\u8bbe\u5907\u90fd\u4f7f\u7528\u8fd9\u79cd\u5750\u6807\u7cfb\u7edf\uff0c\u4f8b\u5982\u624b\u673a\u7684GPS\u7cfb\u7edf\u3002 GCJ-02\uff1a\u4e5f\u5c31\u662f\u6211\u4eec\u5e73\u5e38\u6240\u8bf4\u7684\u706b\u661f\u5750\u6807\u7cfb\uff0c\u9ad8\u5fb7\u548c\u817e\u8baf\u4f7f\u7528\uff0c\u8fd9\u4e2a\u662f\u4e2d\u56fd\u81ea\u5df1\u5728WGS84\u57fa\u7840\u4e0a\u52a0\u5bc6\u800c\u6210\u3002 BD09\uff1a\u767e\u5ea6\u5730\u56fe\u4f7f\u7528\uff0c\u5728GCJ-02\u57fa\u7840\u4e0a\u4e8c\u6b21\u52a0\u5bc6\u800c\u6210\u3002   \u6295\u5f71\u5750\u6807\u7cfb\uff1aweb\u58a8\u5361\u6258  P.S. \u5173\u4e8e\u7ecf\u7eac\u5ea6\u5341\u8fdb\u5236\u8868\u793a\u6cd5   \u4e00\u5ea660\u5206,\u4e00\u520660\u79d2. \u5730\u7403\u7684\u5b50\u5348\u7ebf\u603b\u957f\u5ea6\u5927\u7ea640008km.\u5e73\u5747\uff1a \u7eac\u5ea61\u5ea6=\u5927\u7ea6111km \u7eac\u5ea61\u5206=\u5927\u7ea61.85km \u7eac\u5ea61\u79d2=\u5927\u7ea630.9m \u5355\u4f4d\u7ecf\u5ea6\u7684\u957f\u5ea6\u968f\u7740\u7eac\u5ea6\u7684\u4e0d\u540c\u800c\u53d8\u5316\uff1a\u4e00\u4e2a\u7ecf\u5ea6\u5355\u4f4d=\uff08\u4e00\u4e2a\u7eac\u5ea6\u5355\u4f4d\u7684\u957f\u5ea6\uff09\u4e58\u4ee5\uff08\u8be5\u5730\u533a\u7eac\u5ea6\u7684\u4f59\u5f26\u503c\uff09.\n  \u5bf9\u4e8e\u4e24\u4e2a\u70b9\uff0c\u5728\u7eac\u5ea6\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff1a\u7ecf\u5ea6\u6bcf\u96940.00001\u5ea6\uff0c\u8ddd\u79bb\u76f8\u5dee\u7ea61\u7c73\uff1b\u6bcf\u96940.0001\u5ea6\uff0c\u8ddd\u79bb\u76f8\u5dee\u7ea610\u7c73\uff1b\u6bcf\u96940.001\u5ea6\uff0c\u8ddd\u79bb\u76f8\u5dee\u7ea6100\u7c73\uff1b\u6bcf\u96940.01\u5ea6\uff0c\u8ddd\u79bb\u76f8\u5dee\u7ea61000\u7c73\uff1b\u6bcf\u96940.1\u5ea6\uff0c\u8ddd\u79bb\u76f8\u5dee\u7ea610000\u7c73\u3002\n  \u5bf9\u4e8e\u4e24\u4e2a\u70b9\uff0c\u5728\u7ecf\u5ea6\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff1a\u7eac\u5ea6\u6bcf\u96940.00001\u5ea6\uff0c\u8ddd\u79bb\u76f8\u5dee\u7ea61.1\u7c73\uff1b\u6bcf\u96940.0001\u5ea6\uff0c\u8ddd\u79bb\u76f8\u5dee\u7ea611\u7c73\uff1b\u6bcf\u96940.001\u5ea6\uff0c\u8ddd\u79bb\u76f8\u5dee\u7ea6111\u7c73\uff1b\u6bcf\u96940.01\u5ea6\uff0c\u8ddd\u79bb\u76f8\u5dee\u7ea61113\u7c73\uff1b\u6bcf\u96940.1\u5ea6\uff0c\u8ddd\u79bb\u76f8\u5dee\u7ea611132\u7c73\u3002\n  P.P.S.\n Longitude (lon). \u7ecf\u5ea6 Latitude (lat). \u7eac\u5ea6  CoordinateTransctionTools.pyimport pandas as pd import math, uuid &#34;&#34;&#34; GPS\u5750\u6807\u8f6c\u6362\uff1a &#34;&#34;&#34; def transformLat(x, y): ret = -100.0 + 2.0 * x + 3.0 * y + 0.2 * y * y + 0.1 * x * y + 0.2 * math.sqrt(abs(x)) ret += (20.0 * math.sin(6.0 * x * math.pi) + 20.0 * math.sin(2.0 * x * math.pi)) * 2.0 / 3.0 ret += (20.0 * math.sin(y * math.pi) + 40.0 * math.sin(y / 3.0 * math.pi)) * 2.0 / 3.0 ret += (160.0 * math.sin(y / 12.0 * math.pi) + 320 * math.sin(y * math.pi / 30.0)) * 2.0 / 3.0 return ret def transformLon(x, y): ret = 300.0 + x + 2.0 * y + 0.1 * x * x + 0.1 * x * y + 0.1 * math.sqrt(abs(x)) ret += (20.0 * math.sin(6.0 * x * math.pi) + 20.0 * math.sin(2.0 * x * math.pi)) * 2.0 / 3.0 ret += (20.0 * math.sin(x * math.pi) + 40.0 * math.sin(x / 3.0 * math.pi)) * 2.0 / 3.0 ret += (150.0 * math.sin(x / 12.0 * math.pi) + 300.0 * math.sin(x / 30.0 * math.pi)) * 2.0 / 3.0 return ret def delta(lat, lng): a = 6378245.0 # a: \u536b\u661f\u692d\u7403\u5750\u6807\u6295\u5f71\u5230\u5e73\u9762\u5730\u56fe\u5750\u6807\u7cfb\u7684\u6295\u5f71\u56e0\u5b50 ee = 0.00669342162296594323 # ee: \u692d\u7403\u7684\u504f\u5fc3\u7387 dLat = transformLat(lng - 105.0, lat - 35.0) dLon = transformLon(lng - 105.0, lat - 35.0) radLat = lat / 180.0 * math.pi magic = math.sin(radLat) magic = 1 - ee * magic * magic sqrtMagic = math.sqrt(magic) dLat = (dLat * 180.0) / ((a * (1 - ee)) / (magic * sqrtMagic) * math.pi) dLon = (dLon * 180.0) / (a / sqrtMagic * math.cos(radLat) * math.pi) return dLat, dLon def wgs2gcj(wgsLat, wgsLng): &#34;&#34;&#34; WGS-84\u8f6c\u6210GCJ-02 &#34;&#34;&#34; if outOfChina(wgsLat, wgsLng): print(&#34;The latitude or longitude is out of China!&#34;) return wgsLat, wgsLng lat, lng = delta(wgsLat, wgsLng) return wgsLat + lat, wgsLng + lng def gcj2wgs_rough(gcjLat, gcjLon): &#34;&#34;&#34; GCJ-02 \u8f6c WGS-84 \u7c97\u7565\u7248 &#34;&#34;&#34; if outOfChina(gcjLat, gcjLon): print(&#34;The latitude or longitude is out of China!&#34;) return gcjLat, gcjLon lat, lng = delta(gcjLat, gcjLon) return gcjLat - lat, gcjLon - lng def gcj2wgs_accurate(gcjLat, gcjLon): &#34;&#34;&#34; GCJ-02 \u8f6c WGS-84 \u7cbe\u786e\u7248 &#34;&#34;&#34; initDelta = 0.01 threshold = 0.000000001 dLat = initDelta dLon = initDelta mLat = gcjLat - dLat mLon = gcjLon - dLon pLat = gcjLat + dLat pLon = gcjLon + dLon wgsLat = 0 wgsLon = 0 i = 0 while 1: wgsLat = (mLat + pLat) / 2 wgsLon = (mLon + pLon) / 2 lat, lon = gcj2wgs_rough(wgsLat, wgsLon) dLat = lat - gcjLat dLon = lon - gcjLon if (abs(dLat) &lt; threshold) and (abs(dLon) &lt; threshold): break if dLat &gt; 0: pLat = wgsLat else: mLat = wgsLat if dLon &gt; 0: pLon = wgsLon else: mLon = wgsLon if ++i &gt; 10000: break return wgsLat, wgsLon def gcj2bd(gcjLat, gcjLon): &#34;&#34;&#34; GCJ-02 \u8f6c BD-09 &#34;&#34;&#34; x_pi = math.pi * 3000.0 / 180.0 x = gcjLon y = gcjLat z = math.sqrt(x * x + y * y) + 0.00002 * math.sin(y * x_pi) theta = math.atan2(y, x) + 0.000003 * math.cos(x * x_pi) bdLon = z * math.cos(theta) + 0.0065 bdLat = z * math.sin(theta) + 0.006 return bdLat, bdLon def bd2gcj(bdLat, bdLon): &#34;&#34;&#34; BD-09 \u8f6c GCJ-02 &#34;&#34;&#34; x_pi = math.pi * 3000.0 / 180.0 x = bdLon - 0.0065 y = bdLat - 0.006 z = math.sqrt(x * x + y * y) - 0.00002 * math.sin(y * x_pi) theta = math.atan2(y, x) - 0.000003 * math.cos(x * x_pi) gcjLon = z * math.cos(theta) gcjLat = z * math.sin(theta) return gcjLat, gcjLon def wgs2mercator(wgsLat, wgsLon): &#34;&#34;&#34; WGS-84 to Web mercator mercatorLat -&gt; y mercatorLon -&gt; x &#34;&#34;&#34; x = wgsLon * 20037508.34 / 180. y = math.log(math.tan((90. + wgsLat) * math.pi / 360)) / (math.pi / 180) y = y * 20037508.34 / 180. return y, x def mercator2wgs(mercatorLat, mercatorLon): &#34;&#34;&#34; Web mercator to WGS-84 mercatorLat -&gt; y mercatorLon -&gt; x &#34;&#34;&#34; x = mercatorLon / 20037508.34 * 180 y = mercatorLat / 20037508.34 * 180 y = 180 / math.pi * (2 * math.atan(math.exp(y * math.pi / 180.)) - math.pi / 2) return y, x def outOfChina(lat, lng): &#34;&#34;&#34; \u5224\u65ad\u662f\u5426\u5728\u4e2d\u56fd\u8303\u56f4\u5916 &#34;&#34;&#34; if lng &lt; 72.004 or lng &gt; 137.8347: return True if lat &lt; 0.8293 or lat &gt; 55.8271: return True return False def haversine(lat1, lon1, lat2, lon2): &#34;&#34;&#34; :param: \u7eac\u5ea61\uff0c\u7ecf\u5ea61\uff0c\u7eac\u5ea62\uff0c\u7ecf\u5ea62\uff08\u5341\u8fdb\u5236\u5ea6\u6570\uff09 :return: \u4e8c\u4e2a\u5750\u6807\u4e4b\u95f4\u7684\u8ddd\u79bb\uff08\u5355\u4f4d\u7c73\uff09 Calculate the great circle distance between two points on the earth (specified in decimal degrees) &#34;&#34;&#34; # \u5c06\u5341\u8fdb\u5236\u5ea6\u6570\u8f6c\u5316\u4e3a\u5f27\u5ea6 lat1, lon1, lat2, lon2 = map(math.radians, [lat1, lon1, lat2, lon2]) # haversine\u516c\u5f0f dlon = lon2 - lon1 dlat = lat2 - lat1 a = math.sin(dlat / 2) ** 2 + math.cos(lat1) * math.cos(lat2) * math.sin(dlon / 2) ** 2 c = 2 * math.asin(math.sqrt(a)) r = 6371 # \u5730\u7403\u5e73\u5747\u534a\u5f84\uff0c\u5355\u4f4d\u4e3a\u516c\u91cc return c * r * 1000 if __name__ == &#39;__main__&#39;: //   case Ploygon Transfor 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  import json from copy import deepcopy from CoordinateTransctionTools import * with open(&#39;./layers/sz_block_mars.json&#39;, &#39;r&#39;) as fp: blocks_json = json.load(fp) blocks_json_tran = deepcopy(blocks_json) def transfer(coordinates): new_coordinates = [] for coor in coordinates: try: (x, y) = coor except: print(_) print(&#39;----&#39;) _y, _x = gcj2wgs_rough(y, x) new_coordinates.append([_x, _y]) return [new_coordinates] for idx, blocks in enumerate(blocks_json[&#39;features&#39;]): _type = blocks[&#39;geometry&#39;][&#39;type&#39;] if _type == &#34;Polygon&#34;: coordinates = blocks[&#39;geometry&#39;][&#39;coordinates&#39;][0] blocks_json_tran[&#39;features&#39;][idx][&#39;geometry&#39;][&#39;coordinates&#39;] = transfer(coordinates) elif _type == &#34;MultiPolygon&#34;: coordinates = blocks[&#39;geometry&#39;][&#39;coordinates&#39;] new_coordinates_list = [] for _coor in coordinates: new_coordinates_list.append(transfer(_coor[0])) blocks_json_tran[&#39;features&#39;][idx][&#39;geometry&#39;][&#39;coordinates&#39;] = new_coordinates_list with open(&#39;./layers/sz_street_blocks_wgs84.json&#39;, &#39;w+&#39;) as fp: json.dump(blocks_json_tran, fp)   ",
        "description": "",
        "id": 89,
        "section": "posts",
        "tags": [
            "Python",
            "\u5750\u6807\u8f6c\u6362"
        ],
        "title": "Python-\u5750\u6807\u7cfb\u8f6c\u6362",
        "uri": "/posts/notes/75/"
    },
    {
        "content": " \u6bcf\u4e00\u5e74\u7684\u4e34\u8fd1\u65b0\u5e74\u65f6\u671f\uff0c\u603b\u4f1a\u611f\u6168\u65f6\u95f4\u7684\u5306\u5306\u3002\u56e0\u4e3a\u56de\u60f3\u4e00\u5e74\u7684\u5de5\u4f5c\u548c\u6536\u83b7\uff0c\u603b\u89c9\u5f97\u5c11\u7684\u53ef\u601c\u30022019\u5e74\u7684\u5e74\u521d\u7ed9\u81ea\u5df1\u5b9a\u4e0b\u4e24\u4e2a\u76ee\u6807\uff0c\u5728\u5143\u65e6\u5230\u6765\u4e4b\u524d\u4e5f\u5747\u6709\u4e86\u7ed3\u679c\u3002\u4e00\u6b21\u60c5\u611f\u7ecf\u5386\uff0c\u4e00\u7bc7\u8bba\u6587\u53d1\u8868\uff0c\u4e00\u6b21\u96c5\u601d\u8003\u8bd5\u3002\u603b\u4f53\u4e0a\u5bf9\u4eca\u5e74\u7684\u8868\u73b0\u57fa\u672c\u6ee1\u610f\uff0c\u4f1a\u7ed9\u81ea\u5df1\u5236\u5b9a\u8ba1\u5212\uff0c\u4f1a\u4f9d\u7167\u8ba1\u5212\u884c\u4e8b\uff0c\u4f46\u662f\u4ecd\u8868\u73b0\u61d2\u6563\uff0c\u5e38\u6709\u62d6\u62c9\u3002\u7136\u800c\uff0c\u672a\u6765\u53ef\u671f\uff0c\u5bf9\u660e\u5e74\u751a\u81f3\u63a5\u4e0b\u6765\u7684\u51e0\u5e74\uff0c\u6211\u90fd\u6000\u6709\u671f\u5f85\uff0c\u800c\u4e14\u5bf9\u81ea\u5df1\u5145\u6ee1\u81ea\u4fe1\u3002\u4ee5\u4e0b\u662f\u6211\u5177\u4f53\u7684\u603b\u7ed3\u4ee5\u53ca\u76f8\u5173\u89c4\u5212\u3002\n qwer\n  --- DON'T MODIFY THIS LINE ---  \u5434\u8001\u5e08\u60a8\u597d\uff0c \u519c\u5386\u65b0\u5e74\u5373\u5c06\u6765\u4e34\uff0c\u9996\u5148\u795d\u60a8\u65b0\u5e74\u5feb\u4e50\uff01 \u6bcf\u4e00\u5e74\u7684\u4e34\u8fd1\u65b0\u5e74\u65f6\u671f\uff0c\u603b\u4f1a\u611f\u6168\u65f6\u95f4\u7684\u5306\u5306\u3002\u56e0\u4e3a\u56de\u60f3\u4e00\u5e74\u7684\u5de5\u4f5c\u548c\u6536\u83b7\uff0c\u603b\u89c9\u5f97\u5c11\u7684\u53ef\u601c\u30022019\u5e74\u7684\u5e74\u521d\u7ed9\u81ea\u5df1\u5b9a\u4e0b\u4e24\u4e2a\u76ee\u6807\uff0c\u5728\u5143\u65e6\u5230\u6765\u4e4b\u524d\u4e5f\u5747\u6709\u4e86\u7ed3\u679c\u3002\u4e00\u6b21\u60c5\u611f\u7ecf\u5386\uff0c\u4e00\u7bc7\u8bba\u6587\u53d1\u8868\uff0c\u4e00\u6b21\u96c5\u601d\u8003\u8bd5\u3002\u603b\u4f53\u4e0a\u5bf9\u4eca\u5e74\u7684\u8868\u73b0\u57fa\u672c\u6ee1\u610f\uff0c\u4f1a\u7ed9\u81ea\u5df1\u5236\u5b9a\u8ba1\u5212\uff0c\u4f1a\u4f9d\u7167\u8ba1\u5212\u884c\u4e8b\uff0c\u4f46\u662f\u4ecd\u8868\u73b0\u61d2\u6563\uff0c\u5e38\u6709\u62d6\u62c9\u3002\u7136\u800c\uff0c\u672a\u6765\u53ef\u671f\uff0c\u5bf9\u660e\u5e74\u751a\u81f3\u63a5\u4e0b\u6765\u7684\u51e0\u5e74\uff0c\u6211\u90fd\u6000\u6709\u671f\u5f85\uff0c\u800c\u4e14\u5bf9\u81ea\u5df1\u5145\u6ee1\u81ea\u4fe1\u3002\u4ee5\u4e0b\u662f\u6211\u5177\u4f53\u7684\u603b\u7ed3\u4ee5\u53ca\u76f8\u5173\u89c4\u5212\uff1a \u603b\u7ed3\uff1a 1. \u5b8c\u6210\u8bba\u6587\u4e00\u7bc7\uff0c\u5e76\u53d1\u8868\u5728CEUS\u4e0a\u3002\u8fd9\u662f\u4e00\u7bc7\u63a2\u7d22\u57ce\u5e02\u529f\u80fd\u7ed3\u6784\u7684\u8bba\u6587\uff0c\u4e3b\u8981\u57fa\u4e8ePOI\u6570\u636e\uff0c\u7c7b\u6bd4\u5e76\u6539\u8fdb\u8bcd\u5411\u91cf\uff08\u8868\u793a\u5b66\u4e60\uff09\u7684\u65b9\u6cd5\uff0c\u63a2\u7d22\u57ce\u5e02\u529f\u80fd\u5206\u533a\uff0c\u65e8\u5728\u6316\u6398\u9690\u542b\u5728\u5730\u7406\u5927\u6570\u636e\u4e2d\u7684\u4e0e\u57ce\u5e02\u5c45\u6c11\u606f\u606f\u76f8\u5173\u7684\u4fe1\u606f\u3002\u8bcd\u5411\u91cf\u6216\u4e3b\u9898\u6a21\u578b\u7b49\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7684\u65b9\u6cd5\u5728\u57ce\u5e02\u529f\u80fd\u7814\u7a76\u4e2d\u8d8a\u6765\u8d8a\u53d7\u5230\u5b66\u8005\u7684\u6b22\u8fce\uff0c\u672c\u6b21\u7814\u7a76\u4ec5\u5728\u524d\u4eba\u7684\u57fa\u7840\u4e0a\u8fdb\u884c\u6df1\u5316\u3002\u8bba\u6587\u6700\u7ec8\u80fd\u591f\u53d1\u8868\u5e76\u5f97\u5230\u8ba4\u53ef\u5f53\u7136\u662f\u975e\u5e38\u5f00\u5fc3\u7684\uff0c\u4f46\u662f\u6211\u6df1\u77e5\u672c\u7bc7\u6587\u7ae0\u8fd8\u662f\u5b58\u5728\u5f88\u591a\u4e0d\u8db3\u7684\uff0c\u6709\u5f88\u591a\u9700\u8981\u6539\u8fdb\u7684\u5730\u65b9\uff0c\u5982\u6570\u636e\u6e90\u5355\u4e00\uff0c\u5bfc\u81f4\u7279\u5f81\u8868\u8fbe\u6709\u9650\uff0c\u4ee5\u53ca\u8bc4\u9605\u4eba\u63d0\u53ca\u7684\u571f\u5730\u5229\u7528\u590d\u6742\u6027\u7b49\u95ee\u9898\uff0c\u4e3a\u4e0b\u4e00\u6b65\u7814\u7a76\u63d0\u4f9b\u66f4\u6df1\u5c42\u6b21\u7684\u601d\u8003\u3002\u540c\u65f6\uff0c\u5728\u6587\u7ae0\u64b0\u5199\u4ee5\u53ca\u4e0e\u8bc4\u9605\u4eba\u8fa9\u8bba\u548c\u4ea4\u6d41\u7684\u8fc7\u7a0b\u4e2d\uff0c\u82f1\u8bed\u5199\u4f5c\u6c34\u5e73\u548c\u601d\u7ef4\u903b\u8f91\u80fd\u529b\u6709\u4e86\u8f83\u5927\u7684\u63d0\u5347\u3002\u7279\u522b\u662f\u8bc4\u9605\u8fc7\u7a0b\u4e2d\uff0c\u9047\u5230\u8bc4\u5ba1\u4eba\u7279\u522b\u5201\u94bb\u7684\u95ee\u9898\uff0c\u9996\u5148\u8981\u5b66\u4f1a\u63a7\u5236\u81ea\u5df1\u7684\u8d1f\u9762\u60c5\u7eea\uff0c\u8003\u8651\u8bc4\u9605\u4eba\u662f\u5982\u4f55\u770b\u5f85\u8fd9\u79cd\u95ee\u9898\uff0c\u5982\u82e5\u5bf9\u4e8e\u5b9e\u9a8c\u8bba\u8bc1\u4e0d\u8db3\u6216\u7f3a\u4e4f\u5bf9\u6bd4\u7b49\u6d89\u53ca\u5b9e\u9a8c\u76f8\u5173\u7684\u95ee\u9898\uff0c\u80fd\u8865\u5c31\u8865\uff0c\u5e76\u5f3a\u8c03\u8ba8\u8bba\u6587\u7ae0\u7684\u4fa7\u91cd\u70b9\u3002\u975eOA\u671f\u520a\u7684\u8bc4\u5ba1\u65f6\u671f\u6709\u4e9b\u957f\uff0c\u8981\u4fdd\u6301\u8010\u5fc3\uff0c\u597d\u7684\u7ed3\u679c\u80fd\u7ecf\u5f97\u8d77\u7b49\u5f85\u3002 2. \u51c6\u5907\u96c5\u601d\u8003\u8bd5\uff0c\u5e76\u572812\u6708\u521d\u8003\u8bd5\u3002\u5173\u4e8e\u96c5\u601d\u8003\u8bd5\u6216\u8bb8\u5df2\u7ecf\u201c\u84c4\u8c0b\u5df2\u4e45\u201d\u4e86\u5427\u3002\u4ece\u8bfb\u535a\u58eb\u5f00\u59cb\u6709\u201c\u51fa\u53bb\u8f6c\u8f6c\u201d\u7684\u5ff5\u5934\uff0c\u523018\u5e74\u51c6\u5907\u5c0f\u6bb5\u65f6\u95f4\u6700\u7ec8\u6ca1\u62a5\u540d\u8003\u8bd5\uff0c\u52302019\u5e749\u6708\u4efd\u6765\u65f6\u7684\u201c\u7cbe\u5fc3\u201d\u51c6\u5907\u3002\u4e09\u4e2a\u534a\u6708\u7684\u65f6\u95f4\uff0c\u6709\u5927\u534a\u90e8\u5206\u7684\u65f6\u95f4\u662f\u6295\u5165\u5230\u590d\u4e60\u4e2d\u7684\uff0c\u8fd9\u5bf9\u4e8e\u5f88\u591a\u201c\u8003\u9e2d\u201d\u6765\u8bf4\u5df2\u7ecf\u5f88\u5145\u8db3\u7684\u65f6\u95f4\u4e86\u3002\u4f46\u662f\u5bf9\u4e8e\u6211\u800c\u8a00\uff0c\u4ecd\u6ca1\u6709\u505a\u5f97\u5f88\u597d\u3002\u7ed3\u679c\u5e76\u4e0d\u7406\u60f3\u3002\u8003\u5b8c\u4e4b\u540e\u6709\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u90fd\u5728\u53cd\u601d\u3002\u6211\u89c9\u5f97\u662f\u6709\u591a\u65b9\u9762\u539f\u56e0\u7684\uff1a\u590d\u4e60\u65b9\u6cd5\u9519\u8bef\uff0c\u5bf9\u4e8e\u81ea\u5df1\u80fd\u529b\u7684\u8bc4\u4f30\u4e0d\u5230\u4f4d\u4ee5\u53ca\u60c5\u7eea\u5f71\u54cd\u3002\u82f1\u8bed\u66f4\u591a\u7684\u662f\u957f\u65f6\u95f4\u7684\u79ef\u7d2f\uff0c\u800c\u4e0d\u662f\u77ed\u77ed\u4e09\u4e2a\u6708\u5c31\u53ef\u4ee5\u7a81\u51fb\u5b8c\u6210\u7684\u3002\u901a\u8fc7\u6b64\u6b21\u8003\u8bd5\uff0c\u4e5f\u5bf9\u81ea\u5df1\u7684\u8bed\u8a00\u6c34\u5e73\u6709\u4e00\u4e2a\u6df1\u523b\u7684\u8ba4\u77e5\uff0c\u5173\u4e8e\u5199\u4f5c\uff0c\u5173\u4e8e\u8bcd\u6c47\u91cf\uff0c\u5173\u4e8e\u542c\u529b\uff0c\u4ee5\u53ca\u6700\u8ba9\u81ea\u5df1\u5934\u75bc\u7684\u201c\u513f\u7ae5\u53e3\u8bed\u201d\u3002\u4e0d\u8981\u53ea\u662f\u628a\u82f1\u8bed\u5b66\u4e60\u6302\u5728\u5634\u8fb9\u5427\uff0c\u4e0d\u8981\u7b49\u8981\u7528\u5230\u5728\u62fc\u547d\u7684\u8865\u5427\uff0c\u6bcf\u5929\u62ff\u51fa\u534a\u4e2a\u5c0f\u65f6\u751a\u81f3\u66f4\u591a\u7684\u65f6\u95f4\u53bb\u8bb0\u5355\u8bcd\u505a\u4e00\u4e9b\u65e5\u5e38\u7ffb\u8bd1\u3001\u5199\u4f5c\uff0c\u517b\u6210\u82f1\u8bed\u5b66\u4e60\u7684\u4e60\u60ef\uff0c\u65e5\u79ef\u6708\u7d2f\u603b\u4f1a\u89c1\u5230\u6548\u679c\u3002\u6b32\u901f\u5219\u4e0d\u8fbe\u3002 3. \u5730\u7406\u5927\u6570\u636e\u9879\u76ee\u8ddf\u8fdb\u3002\u4eca\u5e74\u9879\u76ee\u51fa\u5dee\u6b21\u6570\u4e0d\u7b97\u5c11\uff0c\u4ece\u5e74\u521d\u5728\u6b66\u5927\u7684\u8bfe\u9898\u603b\u7ed3\u62a5\u544a\uff0c\u5230\u5e74\u4e2d5\u30016\u6708\u4efd\u7684\u4e2d\u671f\u68c0\u67e5\uff0c\u6bcf\u6b21\u51fa\u5dee\u90fd\u4f7f\u6211\u5370\u8c61\u6df1\u523b\u3002\u9879\u76ee\u65b9\u5bf9\u4e8e\u6587\u6863\u548c\u5404\u79cd\u62a5\u544a\uff08\u5305\u62ec\u6708\u62a5\u3001\u8fdb\u5c55\u62a5\u544a\u7b49\uff09\u7684\u8981\u6c42\u8f83\u4e25\u683c\uff0c\u5bf9\u4e8e\u539f\u578b\u7cfb\u7edf\u7684\u8bbe\u8ba1\u548c\u4ee3\u7801\u7684\u7f16\u5199\u8981\u6c42\u4e5f\u5341\u5206\u89c4\u8303\uff0c\u4ee5\u53ca\u5404\u8bfe\u9898\u3001\u5b50\u8bfe\u9898\u4e4b\u95f4\u76f8\u4e92\u8054\u7cfb\u751a\u81f3\u5236\u7ea6\u3001\u76d1\u7763\uff0c\u90e8\u95e8\u548c\u8001\u5e08\u7684\u5206\u5de5\uff0c\u90fd\u4f7f\u6211\u9887\u6709\u611f\u89e6\u3002\u4ee5\u540e\u771f\u6b63\u8d70\u4e0a\u6559\u5e08\u7684\u5c97\u4f4d\u7684\u8bdd\uff0c\u63a5\u89e6\u57fa\u91d1\u3001\u8bfe\u9898\u751a\u81f3\u9879\u76ee\u53ea\u4f1a\u8d8a\u6765\u8d8a\u591a\u3002\u8d8a\u719f\u6089\u5927\u9879\u76ee\u7684\u6d41\u7a0b\uff0c\u7406\u89e3\u4ece\u601d\u8def\u3001\u5230\u7f16\u5199\u7533\u8bf7\u3001\u518d\u5230\u9879\u76ee\u7ba1\u7406\u548c\u8fdb\u5c55\u662f\u591a\u4e48\u4e0d\u6613\u3002\u5b66\u4f1a\u601d\u8003\uff0c\u4ece\u4e2d\u83b7\u5f97\u7ecf\u9a8c\u3002 \u89c4\u5212\uff1a\n1. \u5b8c\u6210\u81f3\u5c11\u4e24\u7bc7\u8bba\u6587\uff0c\u5176\u4e2d\u81f3\u5c11\u4e00\u7bc7\u8f83\u9ad8\u6c34\u5e73\u7684\u6587\u7ae0\u3002\u4e5f\u8bb8\u6709\u4e86\u4e00\u7bc7\u8bba\u6587\u4e3a\u57fa\u7840\uff0c\u6211\u4f1a\u66f4\u6709\u81ea\u4fe1\u3002\u56e0\u6b64\u4eca\u5e74\u7ed9\u81ea\u5df1\u4e24\u7bc7\u8bba\u6587\u7684\u76ee\u6807\u3002\u5f53\u7136\u8fd9\u4e2a\u76ee\u6807\u5e76\u4e0d\u662f\u7a7a\u7a74\u6765\u98ce\u3002\u8fd9\u4e0e\u76ee\u524d\u7684\u4e24\u4e2a\u601d\u8def\u6709\u5173\u8054\u3002\u7b2c\u4e00\u4e2a\u662f\u57fa\u4e8e\u8def\u7f51\u6316\u6398\u201c\u793e\u533a\u201d\uff0c\u5e76\u63a2\u7d22\u57fa\u4e8e\u201c\u793e\u533a\u201d\u8fdb\u884c\u57ce\u5e02\u533a\u57df\u611f\u77e5\u7684\u53ef\u80fd\u6027\u3002\u7b2c\u4e8c\u4e2a\u662f\u57fa\u4e8e\u8bcd\u5411\u91cf\u65b9\u6cd5\u7684\u591a\u6e90\u6570\u636e\u878d\u5408\uff0c\u540c\u6837\u5e94\u7528\u4e8e\u57ce\u5e02\u533a\u57df\u611f\u77e5\u3002\u76ee\u524d\u60f3\u6cd5\u4ecd\u7136\u4e0d\u6210\u719f\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u9605\u8bfb\u8bba\u6587\u8fdb\u884c\u7406\u8bba\u9a8c\u8bc1\uff0c\u5e76\u5b9e\u65bd\u76f8\u5173\u5b9e\u9a8c\u3002 2. \u65e5\u5e38\u82f1\u8bed\u5b66\u4e60\u3002\u5305\u62ec\u8bb0\u5355\u8bcd\uff0c\u6bcf\u65e5\u51e0\u53e5\u7684\u7ffb\u8bd1\u6216\u5199\u4f5c\u3002\u540c\u6837\u9700\u4fdd\u8bc1\u8bba\u6587\u9605\u8bfb\u7684\u6570\u91cf\uff0c\u5236\u5b9a\u76f8\u5173\u7684\u5b66\u4e60\u8ba1\u5212\u3002 3. CSC\u8054\u57f9\u3002\u719f\u77e5\u76f8\u5173\u65f6\u95f4\u8282\u70b9\u3002\u6307\u5b9a\u8054\u5408\u57f9\u517b\u5b66\u4e60\u8ba1\u5212\u3002\u505a\u597d\u53cc\u65b9\u5bfc\u5e08\u7684\u6c9f\u901a\u3002\u4ee5\u53ca\uff0c\u575a\u6301\uff01 \u505c\u6b62\u62b1\u6028\uff0c\u6539\u6389\u62d6\u5ef6\uff0c\u7f57\u5217\u95ee\u9898\uff0c\u9010\u4e00\u89e3\u51b3 ---- \u5bf9\u81ea\u5df1\u63a5\u4e0b\u6765\u5de5\u4f5c\u7684\u671f\u8bb8\u3002\u611f\u8c22\u5434\u8001\u5e08\u5728\u5173\u952e\u65f6\u523b\u7ed9\u4e0e\u7684\u6307\u5bfc\u548c\u83ab\u5927\u7684\u5e2e\u52a9\u3002\u613f\u65b0\u7684\u4e00\u5e74\uff0c\u53ef\u4ee5\u4e0d\u8d1f\u97f6\u534e\uff0c\u7825\u783a\u524d\u884c\u3002\n\u6b64\u81f4\u51ac\u5b81\u3002\n  ",
        "description": "",
        "id": 90,
        "section": "posts",
        "tags": [
            "\u90ae\u4ef6",
            "\u5b66\u671f\u603b\u7ed3",
            "\u89c4\u5212"
        ],
        "title": "2020-1-\u603b\u7ed3\u4e0e\u89c4\u5212\u90ae\u4ef6",
        "uri": "/posts/journals/2020-01-12-2020-1-%E6%80%BB%E7%BB%93%E4%B8%8E%E8%A7%84%E5%88%92%E9%82%AE%E4%BB%B6/"
    },
    {
        "content": " pathlib \u662f python3 \u975e\u5e38\u597d\u7528\u7684\u6587\u4ef6/\u6587\u4ef6\u5939\u64cd\u4f5c\u7684\u5e93\uff0c\u603b\u7ed3\u5e38\u7528\u7528\u6cd5\uff0c\u53c2\u8003\u81ea\rjianshu\n \u5e38\u7528\u64cd\u4f5c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29  from pathlib import Path p = Path() p = Path(r&#39;d:\\test\\tt.txt.bk&#39;) p.name # \u83b7\u53d6\u6587\u4ef6\u540d # tt.txt.bk p.stem # \u83b7\u53d6\u6587\u4ef6\u540d\u9664\u540e\u7f00\u7684\u90e8\u5206 # tt.txt p.suffix # \u6587\u4ef6\u540e\u7f00 # .bk p.suffixs # \u6587\u4ef6\u7684\u540e\u7f00\u4eec... # [&#39;.txt&#39;, &#39;.bk&#39;] p.parent # \u76f8\u5f53\u4e8edirnanme # WindowsPath(&#39;d:/test&#39;) p.parents # \u8fd4\u56de\u4e00\u4e2aiterable, \u5305\u542b\u6240\u6709\u7236\u76ee\u5f55 # &lt;WindowsPath.parents&gt; for i in p.parents: print(i) # d:\\test # d:\\ a.parts # \u5c06\u8def\u5f84\u901a\u8fc7\u5206\u9694\u7b26\u5206\u5272\u6210\u4e00\u4e2a\u5143\u7956 # (&#39;d:\\\\&#39;, &#39;test&#39;, &#39;tt.txt.bk&#39;) p = Path(p, &#39;tt.txt&#39;) # \u5b57\u7b26\u4e32\u62fc\u63a5 p.exists() # \u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728 p.is_file() # \u5224\u65ad\u662f\u5426\u662f\u6587\u4ef6 p.is_dir() # \u5224\u65ad\u662f\u5426\u662f\u76ee\u5f55   \u904d\u5386\u6587\u4ef6\u5939 1 2 3 4 5  p = Path(r&#39;d:\\test&#39;) # WindowsPath(&#39;d:/test&#39;) p.iterdir() # \u76f8\u5f53\u4e8eos.listdir p.glob(&#39;*&#39;) # \u76f8\u5f53\u4e8eos.listdir, \u4f46\u662f\u53ef\u4ee5\u6dfb\u52a0\u5339\u914d\u6761\u4ef6 p.rglob(&#39;*&#39;) # \u9012\u5f52\u904d\u5386   \u521b\u5efa\u6587\u4ef6\u5939 1 2 3 4 5  p = Path(r&#39;d:\\test\\tt\\dd&#39;) p.mkdir(exist_ok=True) # \u521b\u5efa\u6587\u4ef6\u76ee\u5f55(\u524d\u63d0\u662ftt\u76ee\u5f55\u5b58\u5728, \u5426\u5219\u4f1a\u62a5\u9519) # \u4e00\u822c\u6211\u4f1a\u4f7f\u7528\u4e0b\u9762\u8fd9\u79cd\u521b\u5efa\u65b9\u6cd5 p.mkdir((exist_ok=True, parents=True) # \u9012\u5f52\u521b\u5efa\u6587\u4ef6\u76ee\u5f55   ",
        "description": "",
        "id": 91,
        "section": "posts",
        "tags": [
            "Python",
            "pathlib",
            "\u6587\u4ef6/\u6587\u4ef6\u5939"
        ],
        "title": "Python\u5e93\uff1apathlib",
        "uri": "/posts/notes/72/"
    },
    {
        "content": " \u6574\u7406Python\u5e76\u884c\u5316\u5e38\u7528\u6280\u5de7\n \u5229\u7528joblib\u5b9e\u73b0\u591a\u8fdb\u7a0b/\u7ebf\u7a0b(\r\u53c2\u80031, \u5b98\u7f51\u6587\u6863, \u53c2\u80032) \u4e0emultiprocessing\u9700\u8981\u5c06\u6267\u884c\u8fd0\u7b97\u7684\u8bed\u53e5\u653e\u7f6e\u4e8e\u542b\u6709if name == &lsquo;main&rsquo;\uff1a\u7684\u811a\u672c\u6587\u4ef6\u4e2d\u4e0b\u4e0d\u540c\uff0cjoblib\u5c06\u591a\u8fdb\u7a0b\u7684\u5b9e\u73b0\u65b9\u5f0f\u5927\u5927\u7b80\u5316\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5728IPython\u4ea4\u4e92\u5f0f\u73af\u5883\u4e0b\u4e2d\u7075\u6d3b\u5730\u4f7f\u7528\u5b83\u3002\n\u5165\u95e8\u5b9e\u4f8b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  from joblib import Parallel, delayed, parallel_backend import numpy as np import time import datetime def job(i): start = datetime.datetime.now().strftime(&#39;%Y-%m-%d%H:%M:%S&#39;) time.sleep(5) end = datetime.datetime.now().strftime(&#39;%Y-%m-%d%H:%M:%S&#39;) return start, end if __name__ == &#34;main&#34;: with parallel_backend(&#39;threading&#39;, n_jobs=50): res = Parallel(verbose=1)(delayed(job)(j) for j in range(5))     \u7ed3\u679c\n  parallel_backend: threading\u4e3a\u7ebf\u7a0b\u65b9\u5f0f\uff0cmultiprocessing\u4e3a\u8fdb\u7a0b\u65b9\u5f0f\n  n_jobs\u63a7\u5236\u5e76\u884c\u8fdb\u7a0b\u7684\u6570\u91cf\uff0cverbose\u53c2\u6570\u63a7\u5236\u662f\u5426\u6253\u5370\u8fdb\u7a0b\u8fd0\u7b97\u8fc7\u7a0b\n  \u591a\u53c2\u6570\u65b9\u6848 1 2 3 4 5 6 7 8 9 10 11 12  def my_fun_2p(i, j): &#34;&#34;&#34; We define a simple function with two parameters. &#34;&#34;&#34; time.sleep(1) return math.sqrt(i**j) start = time.time() # n_jobs is the number of parallel jobs Parallel(n_jobs=2)(delayed(my_fun_2p)(i, j) for i in range(num) for j in range(j_num)) end = time.time() print(&#39;{:.4f}s&#39;.format(end-start))   \u4f7f\u7528 joblib \u5bf9 Pandas \u6570\u636e\u8fdb\u884c\u5e76\u884c\u5904\u7406(\r\u53c2\u80031) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  import pandas as pd from joblib import Parallel, delayed from tqdm import tqdm, tqdm_notebook tqdm_notebook().pandas() def double_func(data): return pow(data,2) def key_func(subset): subset[&#34;double&#34;] = subset[&#34;source&#34;].apply(double_func) data_grouped = data.groupby(data.index) results = Parallel(n_jobs=8)(delayed(key_func)(group) for name, group in tqdm(data_grouped)) data = pd.concat(results)    \u57fa\u672c\u539f\u7406\u5c31\u662f\u628a\u6574\u4e2a dataframe \u6839\u636e index\uff0c\u6bcf\u884c\u751f\u6210\u4e86\u4e00\u4e2a\u5b50\u6570\u636e\u96c6\uff0c\u800c\u628a\u6bcf\u4e2a\u5b50\u6570\u636e\u96c6\u4f5c\u4e3a\u5b50\u4efb\u52a1\u4f7f\u7528\u591a\u8fdb\u7a0b\u8fd0\u884c\uff0c\u6700\u7ec8\u751f\u6210 results \u662f\u591a\u8fdb\u7a0b\u8fd0\u884c\u751f\u6210\u7684\u7ed3\u679c\u7684 list\uff0c\u4f7f\u7528 concat \u91cd\u65b0\u7ec4\u5408\u5c31\u662f\u6211\u4eec\u6700\u7ec8\u60f3\u8981\u7684\u7ed3\u679c\u4e86\u3002 \u6211\u4eec\u751f\u6210\u7684 data_grouped \u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u4f7f\u7528 tqdm \u6765\u53ef\u89c6\u5316\u8fdb\u5ea6\u6761\u3002 \u53cb\u60c5\u63d0\u793a\uff0c\u5728\u6211\u81ea\u5df1\u4f7f\u7528\u7684\u65f6\u5019\u9047\u5230 bug \uff0c\u63d0\u793a\u65e0\u6cd5\u4ece Pandas \u5bfc\u5165 PanelGroupby \u7684\u9519\u8bef\u3002\u67e5\u4e86\u8bb8\u4e45\u624d\u53d1\u73b0\uff0c\u662f\u65b0\u7248 Pandas \u5220\u9664\u4e86PanelGroupby \u8fd9\u4e2a\u6a21\u5757\u3002\u89e3\u51b3\u529e\u6cd5\u5176\u5b9e\u5c31\u662f\u2026\u2026\u5347\u7ea7 tqdm\uff0c\u5728\u6700\u65b0\u7248\u5df2\u7ecf\u4fee\u590d\u4e86\u8fd9\u4e2a bug \u4e86\u3002  multiprocessing.map (\r\u53c2\u80031) \u7ebf\u7a0b\u4efb\u52a1\uff08IO \u5bc6\u96c6\u578b\u4efb\u52a1\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  import urllib2 from multiprocessing.dummy import Pool as ThreadPool urls = [ &#39;http://www.python.org&#39;, &#39;http://www.python.org/about/&#39;, &#39;http://www.onlamp.com/pub/a/python/2003/04/17/metaclasses.html&#39;, &#39;http://www.python.org/doc/&#39;, &#39;http://www.python.org/download/&#39;, &#39;http://www.python.org/getit/&#39;, &#39;http://www.python.org/community/&#39;, &#39;https://wiki.python.org/moin/&#39;, &#39;http://planet.python.org/&#39;, &#39;https://wiki.python.org/moin/LocalUserGroups&#39;, &#39;http://www.python.org/psf/&#39;, &#39;http://docs.python.org/devguide/&#39;, &#39;http://www.python.org/community/awards/&#39; # etc.. ] # Make the Pool of workers pool = ThreadPool(4) # Open the urls in their own threads # and return the results results = pool.map(urllib2.urlopen, urls) #close the pool and wait for the work to finish pool.close() pool.join()    \u591a\u7ebf\u7a0b\u5e38\u5e94\u7528\u5728\u7f51\u7edc\u4efb\u52a1\uff0c\u5982\u722c\u866b ThreadPool.map \u7b80\u5316\u5206\u7ec4\u64cd\u4f5c  \u8fdb\u7a0b\u4efb\u52a1\uff08CPU \u5bc6\u96c6\u578b\u4efb\u52a1\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  import os import PIL from multiprocessing import Pool from PIL import Image SIZE = (75,75) SAVE_DIRECTORY = &#39;thumbs&#39; def get_image_paths(folder): return (os.path.join(folder, f) for f in os.listdir(folder) if &#39;jpeg&#39; in f) def create_thumbnail(filename): im = Image.open(filename) im.thumbnail(SIZE, Image.ANTIALIAS) base, fname = os.path.split(filename) save_path = os.path.join(base, SAVE_DIRECTORY, fname) im.save(save_path) if __name__ == &#39;__main__&#39;: folder = os.path.abspath(&#39;11_18_2013_R000_IQM_Big_Sur_Mon__e10d1958e7b766c3e840&#39;) os.mkdir(os.path.join(folder, SAVE_DIRECTORY)) images = get_image_paths(folder) pool = Pool() pool.map(creat_thumbnail, images) pool.close() pool.join()   ",
        "description": "",
        "id": 92,
        "section": "posts",
        "tags": [
            "multiprocessing",
            "joblib",
            "\u5e76\u884c",
            "Pandas",
            "Python"
        ],
        "title": "Python\u591a\u7ebf\u7a0b/\u8fdb\u7a0b\u6280\u5de7",
        "uri": "/posts/notes/74/"
    },
    {
        "content": " \u603b\u7ed3tqdm\u5e93\uff0c\u8fdb\u5ea6\u6761\u663e\u793a\u3002\n te quiero demasiado\n\u57fa\u672c\u7528\u6cd5 1 2 3 4  from tqdm import tqdm for i in tqdm(range(10000)): ...   Manual 1 2 3 4 5 6  pbar = tqdm(total=100) for i in range(10): time.sleep(0.1) pbar.update(10) pbar.close()   Advanced 1 2 3 4 5 6 7 8 9 10 11 12  from tqdm import tqdm bar = tqdm(ncm_list) for ncm_item in bar: # print(ncm_item.stem) bar.set_description_str(desc=ncm_item.stem) dump(ncm_item) &#39;&#39;&#39; \u6548\u679c\uff1a \u52a8\u6001\u66f4\u65b0\u63cf\u8ff0\u90e8\u5206 &#39;&#39;&#39;   Pandas Integrate df.progress_apply\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  import pandas as pd import numpy as np from tqdm import tqdm df = pd.DataFrame(np.random.randint(0, 100, (100000, 6))) # Register `pandas.progress_apply` and `pandas.Series.map_apply` with `tqdm` # (can use `tqdm.gui.tqdm`, `tqdm.notebook.tqdm`, optional kwargs, etc.) tqdm.pandas(desc=&#34;my bar!&#34;) # Now you can use `progress_apply` instead of `apply` # and `progress_map` instead of `map` df.progress_apply(lambda x: x**2) # can also groupby: # df.groupby(0).progress_apply(lambda x: x**2)   Keras Integration 1 2 3 4 5 6  from tqdm.keras import TqdmCallback ... model.fit(..., verbose=0, callbacks=[TqdmCallback()])   IPython/Jupyter Integration 1 2 3 4 5 6 7 8  from tqdm.notebook import trange, tqdm from time import sleep for i in trange(3, desc=&#39;1st loop&#39;): for j in tqdm(range(100), desc=&#39;2nd loop&#39;, leave=False): sleep(0.01)   ",
        "description": "",
        "id": 93,
        "section": "posts",
        "tags": [
            "progressbar",
            "\u8fdb\u5ea6\u6761",
            "tqdm",
            "Python"
        ],
        "title": "Python\u5e93-tqdm-\u8fdb\u5ea6\u6761",
        "uri": "/posts/notes/73/"
    },
    {
        "content": " \u603b\u7ed3\u4e2a\u4eba\u4f7f\u7528\u4e2d\u5e38\u7528Pandas\u53ca\u6269\u5c55\u63d2\u4ef6\u4f7f\u7528\u6280\u5de7\n I/O pandas\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u538b\u7f29\u6587\u4ef6\uff0c\u540c\u6837\u5199\u53ef\u4ee5\u5199\u5165\u538b\u7f29\u6587\u4ef6 \r\u53c2\u8003\nYou can read directly from a compressed file, Or write to a compressed file.\nAlso supported: .gz, .bz2, .xz\nHDFStore \u5c3d\u53ef\u80fd\u7684\u907f\u514d\u8bfb\u53d6\u539f\u59cbcsv\uff0c\u4f7f\u7528hdf\u3001feather\u6216h5py\u683c\u5f0f\u6587\u4ef6\u52a0\u5feb\u6587\u4ef6\u8bfb\u53d6 (\r\u53c2\u80031, \u53c2\u80032)\nHDF5\uff08Hierarchical Data Formal\uff09\u662f\u7528\u4e8e\u5b58\u50a8\u5927\u89c4\u6a21\u6570\u503c\u6570\u636e\u7684\u8f83\u4e3a\u7406\u60f3\u7684\u5b58\u50a8\u683c\u5f0f\uff0c\u6587\u4ef6\u540e\u7f00\u540d\u4e3ah5\uff0c\u5b58\u50a8\u8bfb\u53d6\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u4e14\u53ef\u5728\u6587\u4ef6\u5185\u90e8\u6309\u7167\u660e\u786e\u7684\u5c42\u6b21\u5b58\u50a8\u6570\u636e\uff0c\u540c\u4e00\u4e2aHDF5\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u9ad8\u5ea6\u6574\u5408\u7684\u6587\u4ef6\u5939\uff0c\u5176\u5185\u90e8\u53ef\u5b58\u653e\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30  import pandas as pd import numpy as np # \u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u3001\u8bfb\u5165\u5df2\u5b58\u5728\u7684\u5bf9\u8c61 store = pd.HDFStore(&#39;demo.h5&#39;) # \u5bfc\u51fa\u5230\u5df2\u5b58\u5728\u7684h5\u6587\u4ef6\u4e2d\uff0c\u8fd9\u91cc\u9700\u8981\u6307\u5b9akey df_.to_hdf(path_or_buf=&#39;demo.h5&#39;,key=&#39;df_&#39;) s = pd.Series(np.random.randn(5), index=[&#34;a&#34;, &#34;b&#34;, &#34;c&#34;, &#34;d&#34;, &#34;e&#34;]) df = pd.DataFrame(np.random.randn(8, 3), columns=[&#34;A&#34;, &#34;B&#34;, &#34;C&#34;]) # \u5c06 Series \u6216 DataFrame \u5b58\u5165 store store[&#34;s&#34;], store[&#34;df&#34;] = s, df # \u67e5\u770b store \u4e2d\u6709\u54ea\u4e9b\u6570\u636e store.keys() # out: [&#39;/df&#39;, &#39;/s&#39;] # \u53d6\u51fa\u67d0\u4e00\u6570\u636e df = store[&#34;df&#34;] # \u5220\u9664store\u5bf9\u8c61\u4e2d\u6307\u5b9a\u6570\u636e del store[&#39;s&#39;] # \u5c06\u5f53\u524d\u7684store\u5bf9\u8c61\u6301\u4e45\u5316\u5230\u672c\u5730 store.close() # \u67e5\u770b\u8fde\u63a5\u72b6\u51b5 store.is_open   HDF5\u7528\u65f6\u4ec5\u4e3acsv\u76841/13\uff0c\u56e0\u6b64\u5728\u6d89\u53ca\u5230\u6570\u636e\u5b58\u50a8\u7279\u522b\u662f\u89c4\u6a21\u8f83\u5927\u7684\u6570\u636e\u65f6\uff0cHDF5\u662f\u4f60\u4e0d\u9519\u7684\u9009\u62e9\u3002\n\u8bfb\u53d6csv 1  one_piece_df = pd.read_csv(csv_path, header = 0, encoding=&#39;gbk&#39;, engine=&#39;python&#39;, error_bad_lines=False)    encoding: \u7f16\u7801\u95ee\u9898 engine: \u62a5\u9519- ParserError: Error tokenizing data. C error: EOF inside string starting at row 15946 error_bad_lines: \u5ffd\u7565\u6709\u9519\u8bef\u7684\u884c, \u8fd9\u4e2a\u7528\u5904\u6bd4\u8f83\u5927\uff0c\u6709\u5f88\u591a\u7c7b\u578b\u7684\u62a5\u9519\u90fd\u53ef\u4ee5\u89e3\u51b3\uff0c\u5efa\u8bae\u4e00\u822c\u60c5\u51b5\u4e0b\u52a0\u4e0a: Skipping line 15513: \u2019 \u2019 expected after \u2018&quot;\u2019; Skipping line 15546: unexpected end of data; ParserError: Expected 19 fields in line 212, saw 20field larger than field limit (131072)  \u4fdd\u5b58\u4e3ajson 1 2 3 4  # \u5efa\u8bae\u4fdd\u5b58\u65b9\u6cd5: parcels_info_df.to_json(&#39;ParcelsInfo.json&#39;, orient=&#39;index\u2019) # \u540c\u6837\u8bfb\u53d6\u65b9\u6cd5\uff1a pd.read_json(&#39;ParcelsInfo.json&#39;, orient=&#39;index\u2019)   \u5176\u4ed6\u4fdd\u5b58\u65b9\u6cd5\uff1a\n1 2  with open(&#39;./name.json&#39;, &#39;w&#39;, encoding=&#39;utf-8&#39;) as fp: json.dump(result_dict, fp, indent=4)   DataFrame and Dict: 1 2 3 4  # Dict 2 DataFrame: kmeans_result_df = pd.DataFrame.from_dict(kmeans_result_dict) # DataFrame 2 Dict: kmeans_result_dict = pd.DataFrame.to_dict(kmeans_result_df)   List of dict and DataFrame 1 2 3 4 5 6 7 8  # List of dict to DataFrame data_list = [{&#39;points&#39;: 50, &#39;time&#39;: &#39;5:00&#39;, &#39;year&#39;: 2010}, {&#39;points&#39;: 25, &#39;time&#39;: &#39;6:00&#39;, &#39;month&#39;: &#34;february&#34;}, {&#39;points&#39;:90, &#39;time&#39;: &#39;9:00&#39;, &#39;month&#39;: &#39;january&#39;}, {&#39;points_h1&#39;:20, &#39;month&#39;: &#39;june&#39;}] df = pd.DataFrame(data_list) # DataFrame to List of dict data_list = df.T.to_dict().values()   dict2nametuple 1 2 3 4 5 6 7 8 9 10 11 12 13  from collections import namedtuple args_dict = { &#39;no_cuda&#39;: False, &#39;fastmode&#39;: False, &#39;seed&#39;: 666, &#39;epochs&#39;: 500, &#39;lr&#39;: 0.01, &#39;weight_decay&#39;: 5e-4, &#39;hidden&#39;: 64, &#39;dropout&#39;: 0.5, } Args = namedtuple(&#39;Args&#39;, [_ for _ in args_dict.keys()]) args = Args(**(args_dict))   DataFrame\u5bfc\u51faMarkdown 1 2 3 4 5 6 7 8 9 10  from tabulate import tabulate df = DataFrame({ &#34;weekday&#34;: [&#34;monday&#34;, &#34;thursday&#34;, &#34;wednesday&#34;], &#34;temperature&#34;: [20, 30, 25], &#34;precipitation&#34;: [100, 200, 150], }).set_index(&#34;weekday&#34;) md = tabulate(df, tablefmt=&#34;pipe&#34;, headers=&#34;keys&#34;) print(md)   joblib 1 2 3 4 5 6 7  # \u4fdd\u5b58\u53d8\u91cf metrics_fp = Path(gensim_model_dir, &#39;metrics.dat&#39;) joblib.dump(value=metric_list, filename=str(metrics_fp)) # \u8f7d\u5165\u53d8\u91cf metrics_fp = Path(gensim_model_dir, &#39;metrics.dat&#39;) # metric_list = joblib.load(metrics_fp)   \u6570\u636e\u5e93\u4ea4\u4e92 postgresql\u4ea4\u4e92 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117  from sqlalchemy import create_engine from geoalchemy2 import Geometry, WKTElement import pandas as pd import geopandas as gpd &#39;&#39;&#39; Geopanda, pandas 2 postgresql postgis\u64cd\u4f5c\u5728\u5efa\u7acb\u6570\u636e\u5e93\u540e\u9700\u6dfb\u52a0postgis\u6269\u5c55\uff0c\u53ef\u5728pgAdmin\u4e2d\u65b0\u5efa\u6570\u636e\u5e93\u540e\u6dfb\u52a0 &#39;&#39;&#39; class Transit(object): def __init__(self, engine_string, dbschema): self.engine_string = engine_string self.dbschema = dbschema self.engine = self.connect() def connect(self): engine = create_engine( self.engine_string, use_batch_mode=True, connect_args={&#39;options&#39;: &#39;-csearch_path={}&#39;.format(self.dbschema)}) return engine def list_tables(self, ): return self.engine.table_names() def to_dataframe(self, table_name): df = pd.read_sql_table(table_name, self.engine) return df def to_geodataframe_by_query(self, query_str, geom_col): gdf = gpd.read_postgis(sql=query_str, con=self.engine, geom_col=geom_col) return gdf def to_geodataframe(self, table_name, geom_col): sql_str = &#34;select * from {}&#34;.format(table_name) gdf = self.to_geodataframe_by_query(self, sql_str, geom_col) return gdf def write_dataframe(self, df, table_name): df.to_sql(table_name, self.engine) def write_geodataframe(self, gdf, table_name, if_exists=&#39;replace&#39;, geometry_str=&#39;geometry&#39;): &#39;&#39;&#39; gdf: geopandas geodataframe table_name: if_exists: {\u2018fail\u2019, \u2018replace\u2019, \u2018append\u2019} Geometry: See :class:`geoalchemy2.types._GISType` for the list of arguments that can be passed to the constructor &#39;&#39;&#39; gdf.to_sql(name=table_name, con=self.engine, if_exists=if_exists, index=False, dtype={geometry_str: Geometry(&#39;POINT&#39;, srid=4326)}) if __name__ == &#34;__main__&#34;: # ----------------------- \u5b9a\u4e49\u6570\u636e\u5e93\u53c2\u6570 -------------------------# # follows django database settings format, replace with your own settings DATABASES = { &#39;db1&#39;: { &#39;NAME&#39;: &#39;postgis&#39;, &#39;USER&#39;: &#39;postgres&#39;, &#39;PASSWORD&#39;: &#39;123345678&#39;, &#39;HOST&#39;: &#39;localhost&#39;, &#39;PORT&#39;: 5432, }, } # choose the database to use db = DATABASES[&#39;db1&#39;] # construct an engine connection string engine_string = &#34;postgresql+psycopg2://{user}:{password}@{host}:{port}/{database}&#34;.format( user=db[&#39;USER&#39;], password=db[&#39;PASSWORD&#39;], host=db[&#39;HOST&#39;], port=db[&#39;PORT&#39;], database=db[&#39;NAME&#39;], ) # \u9009\u62e9\u7279\u5b9aschema\u4fdd\u5b58\uff08\u9ed8\u8ba4\u4fdd\u5b58\u5728public\uff09;public\u4e00\u5b9a\u8981\u52a0\u5728\u5c3e\u90e8\uff08\u4e0d\u7136geometry\u5199\u5165\u65f6\u4f1a\u62a5\u9519\uff09\uff0c\u9017\u53f7\u4e0d\u80fd\u6709\u7a7a\u683c dbschema = &#39;chongqing,public&#39; # ----------------------- \u5b9a\u4e49\u6570\u636e\u5e93\u53c2\u6570 -------------------------# # ----------------------- \u5217\u51fa\u8868 -------------------------# transit = Transit(engine_string, dbschema) transit.list_tables() # [] # ----------------------- \u5217\u51fa\u8868 -------------------------# # ----------------------- \u5199\u5165\u6570\u636e\u81f3postgresql -------------------------# gdf = gpd.read_file(&#39;./\u91cd\u5e86\u5e02.geojson&#39;) gdf[&#39;wgs_geometry&#39;] = gdf[&#39;geometry&#39;].apply(lambda x: WKTElement(x.wkt, srid=4326)) gdf.drop([&#39;geometry&#39;], axis=1, inplace=True) transit.write_geodataframe(gdf, table_name, &#39;append&#39;, geometry_str=&#39;wgs_geometry&#39;) #------ transit.write_dataframe(gdf[[&#39;adcode&#39;, &#39;name&#39;]], &#39;chongqing_attr&#39;) # ----------------------- \u5199\u5165\u6570\u636e\u81f3postgresql -------------------------# # ----------------------- \u4ecepostgresql\u8bfb\u51fa\u6570\u636e -------------------------# table_name, geom_col = &#39;chongqing&#39;, &#39;geometry&#39; gdf = transit.to_geodataframe(table_name,geom_col) gdf.plot() table_name = &#39;chongqing_attr&#39; df = transit.to_dataframe(table_name) # ----------------------- \u4ecepostgresql\u8bfb\u51fa\u6570\u636e -------------------------#   mongodb\u4ea4\u4e92 \u5c06 DataFrame \u4fdd\u5b58\u81f3 mongodb\n1  mongo.collection.insert(json.loads(df.T.to_json()).values())   to_sqlite \u6709\u65f6\u5019\u5927\u6279\u91cf\u7684df.query\u67e5\u8be2\u592a\u8017\u65f6\u95f4\u4e86\uff0c\u6ca1\u6709sql\u67e5\u8be2\u901f\u5ea6\u5feb\u3002\u56e0\u6b64\u60f3\u5230\u7684\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u628a\u67e5\u8be2\u76ee\u6807\u7684DataFrame\u5b58\u50a8\u5230sqlite\u6570\u636e\u5e93\uff0c\u7136\u540e\u4f7f\u7528sql\u8fdb\u884c\u67e5\u8be2\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  # pip install sqlalchemy from sqlalchemy import create_engine import os import geopandas as gpd import pandas from tqdm import tqdm data_root = &#34;../data&#34; nodes_fp = os.path.join(data_root, &#34;wh/wh.shp/nodes.shp&#34;) edges_fp = os.path.join(data_root, &#34;wh/wh.shp/edges.shp&#34;) edges_gdf = gpd.read_file(edges_fp) # Create an in-memory SQLite database. engine = create_engine(&#39;sqlite://&#39;, echo=False) edges_gdf[[&#39;fid&#39;, &#39;from&#39;, &#39;to&#39;]].to_sql(&#39;edges&#39;, con=engine, if_exists=&#39;replace&#39;) # \u67e5\u8be2edges\u4e2dfid\u4e3a1\uff0c2\u7684\u5143\u7d20\uff0c\u5e76\u53d6\u503cfrom\u548cto engine.execute(&#34;SELECT e.&#39;from&#39;, e.&#39;to&#39; FROM edges as e where e.&#39;fid&#39;in (1,2,3, &#39;&#39;)&#34;).fetchall()    df.to_sql; create_engine:\u5982\u679c\u60f3\u4fdd\u5b58\u5230\u672c\u5730\uff0csqlite://\u540e\u586b\u5165\u5730\u5740\u5373\u53ef\uff0c\u5982Windows\u8def\u5f84\uff1aengine = create_engine('sqlite:///C:\\\\sqlitedbs\\\\pois.db', echo=True)\u53calinux\u8def\u5f84\uff1aengine = create_engine('sqlite:////workspace/UrbanFunctionalRegionalization/20210702-wh/data/poi/pois.sqlite', echo=True) \u6b64\u5904\u8f6c\u6362DataFrame\u4e3a\u4e00\u4e2aSQLite\u6570\u636e\u5e93\uff0c\u653e\u5728\u5185\u5b58\u4e2d if_exists : {&lsquo;fail&rsquo;, &lsquo;replace&rsquo;, &lsquo;append&rsquo;}, default &lsquo;fail&rsquo;  fail: Raise a ValueError. replace: Drop the table before inserting new values. append: Insert new values to the existing table.   to_sql\u8fd8\u53ef\u4ee5\u901a\u8fc7dtype={&quot;A&quot;: Integer()}\u6765\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u9700\u5148\u5f15\u5165from sqlalchemy.types import Integer; sqlalchemy\u901a\u7528\u6570\u636e\u7c7b\u578b\ud83d\udca8sqlalchemy.types   \u6570\u636e\u5904\u7406 \u57fa\u7840\u64cd\u4f5c \u6570\u636e\u7b5b\u9009\uff08\u884c\u64cd\u4f5c\uff09 \u5728\u7b5b\u9009\u6570\u636e\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4e00\u822c\u7528df[\u6761\u4ef6]\u7684\u683c\u5f0f\uff0c\u5176\u4e2d\u7684\u6761\u4ef6\uff0c\u662f\u5bf9data\u6bcf\u4e00\u884c\u6570\u636e\u7684true\u548cfalse\u5e03\u5c14\u53d8\u91cf\u7684Series\n \u6761\u4ef6\uff1a\u4f8b\u5982\uff0c\u6211\u4eec\u60f3\u5f97\u5230\u8f66\u724c\u7167\u4e3a22271\u7684\u6240\u6709\u6570\u636e\u3002\u9996\u5148\u6211\u4eec\u8981\u83b7\u5f97\u4e00\u4e2a\u5e03\u5c14\u53d8\u91cf\u7684Series\uff0c\u8fd9\u4e2aSeries\u5bf9\u5e94\u7684\u662fdata\u7684\u6bcf\u4e00\u884c\uff0c\u5982\u679c\u8f66\u724c\u7167\u4e3a&quot;\u7ca4B4H2K8&quot;\u5219\u4e3atrue\uff0c\u4e0d\u662f\u5219\u4e3afalse\u3002\u8fd9\u6837\u5b50\u7684Series\u5f88\u5bb9\u6613\u83b7\u5f97\uff0c\u53ea\u9700\u8981df['VehicleNum']==22271 \u7b5b\u9009\u6570\u636e\uff1a  \u5355\u4e00\u6761\u4ef6df[df['VehicleNum']==22271] \u591a\u6761\u4ef6\uff1a  \u5e76\uff1adf[(df['popularity'] &gt; 3) &amp; (df['popularity'] &lt; 7)] \u6216\uff1adf[(df['popularity'] &lt; 3) | (df['popularity'] &gt; 7)]   \u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u884c\u53f7(\u7d22\u5f15)\uff1anp.where(df['VehicleNum']==22271) \u63d0\u53d6\u67d0\u4e00\u884c\u6570\u636e\uff1adf.iloc[32] \u63d0\u53d6popularity\u5217\u6700\u5927\u503c\u6240\u5728\u884c: df[df['popularity'] == df['popularity'].max()]   \u53cd\u5411\u7b5b\u9009\uff1adata[-(\u6761\u4ef6)]\uff0c\u4f8b\u5982: data[-(data['VehicleNum']==22271)] \u6dfb\u52a0\u4e00\u884c\u6570\u636e: df = df.append({'grammer':'Perl','popularity':6.6},ignore_index=True) \u53bb\u9664\u91cd\u590d\u884c\uff1a df.drop_duplicates(subset=None, keep='first', inplace=False)  subset : column label or sequence of labels, optional \u7528\u6765\u6307\u5b9a\u7279\u5b9a\u7684\u5217\uff0c\u9ed8\u8ba4\u6240\u6709\u5217 keep : {\u2018first\u2019, \u2018last\u2019, False}, default \u2018first\u2019 \u5220\u9664\u91cd\u590d\u9879\u5e76\u4fdd\u7559\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u9879 inplace : boolean, default False \u662f\u76f4\u63a5\u5728\u539f\u6765\u6570\u636e\u4e0a\u4fee\u6539\u8fd8\u662f\u4fdd\u7559\u4e00\u4e2a\u526f\u672c \u53c2\u8003: drop_duplicates   \u5c06\u6570\u636e\u6392\u5e8f,\u5e76\u628a\u6392\u5e8f\u540e\u7684\u6570\u636e\u8d4b\u503c\u7ed9\u539f\u6765\u7684\u6570\u636e\uff1a  1 2  df = df.sort_values(by = [&#39;VehicleNum&#39;,&#39;Stime&#39;], ascending = True) #ascending: True \u5347\u5e8f,False \u964d\u5e8f    \u904d\u5386\u884c: \u5982\u679c\u5fc5\u987b\u8981\u8981\u7528iterrows\uff0c\u53ef\u4ee5\u7528itertuples\u6765\u8fdb\u884c\u66ff\u6362\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0bitertuples\u90fd\u6bd4iterrows\u5feb\u5f88\u591a\u500d\u3002 1 2  for row in df.itertuples(): print(getattr(row, &#39;c1&#39;), getattr(row, &#39;c2&#39;))     \u83b7\u53d6/\u5220\u9664/\u5b9a\u4e49DataFrame\u7684\u67d0\u4e00\u5217\uff08\u5217\u64cd\u4f5c\uff09  \u83b7\u53d6\u5217&rsquo;Stime'\uff1adf['Stime']\u6216df.loc[:,'Stime'] \u5220\u9664\u5217&rsquo;Stime'\uff1adf.drop(['Stime'],axis=1) \u83b7\u53d6\u67d0\u4e00\u5217\u67d0\u4e00\u884c\u7684\u6570\u636e\uff1adf['Stime'].iloc[3] #\u83b7\u53d6Stime\u5217\u7684\u7b2c4\u884c\u6570\u636e \u5217\uff08Columns\uff09\u91cd\u547d\u540d\uff1adf.rename(columns={&quot;x&quot;: &quot;pu_x&quot;, &quot;y&quot;: &quot;pu_y&quot;}, inplace=True) \u67d0\u4e00\u5217\u7c7b\u578b\u8f6c\u6362\uff1adf['salary'].astype(np.float64) \u7d22\u5f15\uff1a \u91cd\u7f6e\u884c\u53f7\uff1adf.reset_index() \u8bbe\u7f6e\u7d22\u5f15\uff1adf.set_index('car_id') \u7edf\u8ba1\u51fa\u73b0\u9891\u7387/\u6b21\u6570\uff1a\u4f8b\u5982\uff0c \u67e5\u770b\u6bcf\u79cd\u5b66\u5386\u51fa\u73b0\u7684\u6b21\u6570\uff1adf.education.value_counts() \u67e5\u770beducation\u5217\u5171\u6709\u51e0\u79cd\u5b66\u5386\uff1adf.education.nunique()  \u67e5\u770bDataFrame\u57fa\u672c\u4fe1\u606f  \u67e5\u770b\u7d22\u5f15\u3001\u6570\u636e\u7c7b\u578b\u548c\u5185\u5b58\u4fe1\u606f\uff1adf.info() \u67e5\u770b\u6570\u503c\u578b\u5217\u7684\u6c47\u603b\u7edf\u8ba1\uff1a df.describe() \u67e5\u770bdf\u6240\u6709\u6570\u636e\u7684\u6700\u5c0f\u503c\u300125%\u5206\u4f4d\u6570\u3001\u4e2d\u4f4d\u6570\u300175%\u5206\u4f4d\u6570\u3001\u6700\u5927\u503c\uff1anp.percentile(df, q=[0, 25, 50, 75, 100]) EDA\u5206\u6790(\u6570\u636e\u53ef\u89c6\u5316): sweetviz Init:    1 2 3 4  import sweetviz as sz import pandas as pd df = pd.read_csv(&#39;train_set.csv&#39;, header=0) df1 = pd.read_csv(&#39;test_set.csv&#39;, header=0)   - \u7efc\u5408\u62a5\u544a:\u5e38\u89c1\u6570\u636e\u7279\u5f81\u62a5\u544a\uff0c [link](https://cdn.jsdelivr.net/gh/xunhs/image_host/assets/python/sweetviz/Advertising.html) ```python advert_report = sz.analyze(df) advert_report.show_html('Advertising.html') ``` - \u5bf9\u6bd4\u62a5\u544a:\u5982\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\u5bf9\u6bd4\uff0c [link](https://cdn.jsdelivr.net/gh/xunhs/image_host/assets/python/sweetviz/Comparing.html) ```python compare_report = sz.compare(df.drop('y', axis=1), df1) compare_report.show_html('Comparing.html') ```   Pandas\u57fa\u672c\u6570\u636e\u7c7b\u578bdtype\u53c2\u8003  \u7f3a\u5931\u503c  \u67e5\u770b\u6bcf\u5217\u6570\u636e\u7f3a\u5931\u503c\u60c5\u51b5\uff1adf.isnull().sum() \u63d0\u53d6\u65e5\u671f\u5217\u542b\u6709\u7a7a\u503c\u7684\u884c\uff1adf[df.datetime.isnull()] \u5220\u9664\u5b58\u5728\u7f3a\u5931\u503c\u7684\u884c\uff1adf.dropna(axis=0, how='any', inplace=True)  axis\uff1a0-\u884c\u64cd\u4f5c\uff08\u9ed8\u8ba4\uff09\uff0c1-\u5217\u64cd\u4f5c how\uff1aany-\u53ea\u8981\u6709\u7a7a\u503c\u5c31\u5220\u9664\uff08\u9ed8\u8ba4\uff09\uff0call-\u5168\u90e8\u4e3a\u7a7a\u503c\u624d\u5220\u9664    \u5173\u8054\u548c\u5408\u5e76  \u5408\u5e76concat\uff08\u8f74\u5411\u8fde\u63a5\uff09\uff08\u65e0\u9700\u952e\u503c\uff0c\u76f4\u63a5\u5408\u5e76\uff0cA\u548cB\u5177\u6709\u76f8\u540c\u7684\u7ed3\u6784\uff09  1 2 3  # pd.concat([A, B]) # \u6709[] pd.concat([A, B], axis=1) # \u5217\u4e4b\u95f4\u62fc\u63a5 pd.concat([A, B], axis=0) # \u884c\u4e4b\u95f4\u62fc\u63a5    \u5173\u8054merge\uff08\r\u6570\u636e\u5e93\u98ce\u683c\u7684\u5408\u5e76\uff09\uff08\u9700\u6307\u5b9a\u952e\u503c\uff0c\u4f9d\u7167\u952e\u503c\u5339\u914d\u5173\u7cfb\u8fde\u63a5\uff09  1 2  # pd.merge(A, B, left_on, right_on, how) # \u65e0[] pd.merge(A, B, left_on=&#39;airport_ref&#39;, right_on=&#39;id&#39;, how=&#39;inner&#39;)   query() \u53c2\u8003\r\u57fa\u4e8equery()\u7684\u9ad8\u6548\u67e5\u8be2\n\u793a\u4f8b \u627e\u51fa\u7c7b\u578b\u4e3aTV Show\u4e14\u56fd\u5bb6\u4e0d\u542b\u7f8e\u56fd\u7684Kids' TV\n\u5e38\u7528\u7279\u6027  \u76f4\u63a5\u89e3\u6790\u5b57\u6bb5\u540d\n\u5728\u4f7f\u7528query()\u65f6\u6211\u4eec\u5728\u4e0d\u9700\u8981\u91cd\u590d\u4e66\u5199\u6570\u636e\u6846\u540d\u79f0[\u5b57\u6bb5\u540d]\u8fd9\u6837\u7684\u5185\u5bb9\uff0c\u5b57\u6bb5\u540d\u4e5f\u76f4\u63a5\u53ef\u4ee5\u5f53\u4f5c\u53d8\u91cf\u4f7f\u7528\uff0c\u800c\u4e14\u4e0d\u540c\u6761\u4ef6\u4e4b\u95f4\u4e0d\u9700\u8981\u7528\u62ec\u53f7\u9694\u5f00\uff0c\u5728\u6761\u4ef6\u7e41\u6742\u7684\u65f6\u5019\u7b80\u5316\u4ee3\u7801\u7684\u6548\u679c\u66f4\u4e3a\u660e\u663e\u3002 \u94fe\u5f0f\u8868\u8fbe\u5f0f 1 2 3 4 5 6  demo = pd.DataFrame({ &#39;a&#39;: [5, 4, 3, 2, 1], &#39;b&#39;: [1, 2, 3, 4, 5] }) demo.query(&#34;a &lt;= b != 4&#34;)    \u652f\u6301in\u4e0enot in\u5224\u65ad: netflix.query(&quot;release_year in [2018, 2019]&quot;) \u5bf9\u5916\u90e8\u53d8\u91cf\u7684\u652f\u6301:query()\u8868\u8fbe\u5f0f\u8fd8\u652f\u6301\u4f7f\u7528\u5916\u90e8\u53d8\u91cf\uff0c\u53ea\u9700\u8981\u5728\u5916\u90e8\u53d8\u91cf\u524d\u52a0\u4e0a@\u7b26\u53f7\u5373\u53ef 1 2  years = [2018, 2019] netflix.query(&#34;release_year in @years&#34;)    \u5bf9\u5e38\u89c4\u8bed\u53e5\u7684\u652f\u6301: \u53ef\u4ee5\u76f4\u63a5\u89e3\u6790Python\u8bed\u53e5\uff0c\u6781\u5927\u5730\u81ea\u7531\u5ea6 1 2 3 4 5 6 7 8  def country_count(s): &#39;&#39;&#39; \u8ba1\u7b97\u6d89\u53ca\u56fd\u5bb6\u6570\u91cf &#39;&#39;&#39; return s.split(&#39;,&#39;).__len__() # \u627e\u51fa\u53d1\u884c\u5e74\u4efd\u57282018\u62162019\u5e74\u4e14\u5408\u4f5c\u56fd\u5bb6\u6570\u91cf\u8d85\u8fc75\u4e2a\u7684\u5267\u96c6 netflix.query(&#34;release_year.isin([2018, 2019]) and country.apply(@country_count) &gt; 5&#34;)    \u5bf9Index\u4e0eMultiIndex\u7684\u652f\u6301  apply() apply + lambda 1 2  data.gender.apply(lambda x:&#39;\u5973\u6027&#39; if x is &#39;F&#39; else &#39;\u7537\u6027&#39;) # \u7b49\u540c\u4e8e: data.gender.map({&#39;F&#39;: &#39;\u5973\u6027&#39;, &#39;M&#39;: &#39;\u7537\u6027&#39;})   apply\u8f93\u5165\u591a\u53c2 1 2 3 4 5  def _get_coordinates(row, points_df): return points_df[points_df.point_id.isin(row.traj_points)] .apply(lambda row: (row.x, row.y), axis=1).tolist() trajs_df[&#39;coordinates&#39;] = trajs_df.progress_apply(_get_coordinates, axis=1, args=(points_df,))    \u4f7f\u7528args\u8f93\u5165\u591a\u53c2\u6570 \u51fd\u6570\u53c2\u6570\u5217\u8868\u4e2d\uff0crow\u653e\u5728\u7b2c\u4e00\u4e2a\uff0c\u5176\u4ed6\u53c2\u6570\u5411\u540e\u5ef6\u7eed  apply \u8f93\u5165\u591a\u5217\u6570\u636e 1 2 3 4 5 6 7 8 9 10  def generate_descriptive_statement(year, name, gender, count): year, count = str(year), str(count) gender = &#39;\u5973\u6027&#39; if gender is &#39;F&#39; else &#39;\u7537\u6027&#39; return &#39;\u5728{}\u5e74\uff0c\u53eb\u505a{}\u6027\u522b\u4e3a{}\u7684\u65b0\u751f\u513f\u6709{}\u4e2a\u3002&#39;.format(year, name, gender, count) data.apply(lambda row:generate_descriptive_statement(row[&#39;year&#39;], row[&#39;name&#39;], row[&#39;gender&#39;], row[&#39;count&#39;]), axis = 1)    axis=1 \u5904\u7406\u591a\u4e2a\u503c\u65f6\u8981\u7ed9apply()\u6dfb\u52a0\u53c2\u6570axis=1 row['year'], row['gender'] \u76f4\u63a5\u7528\u5217\u540d\u5373\u53ef\uff08row.year, row.gender\u4e5f\u662f\u53ef\u4ee5\u7684\uff09  apply \u8f93\u51fa\u591a\u5217\u6570\u636e 1 2 3  # \u63d0\u53d6name\u5217\u4e2d\u7684\u9996\u5b57\u6bcd\u548c\u5269\u4f59\u90e8\u5206\u5b57\u6bcd _apply = data.apply(lambda row: (row[&#39;name&#39;][0], row[&#39;name&#39;][1:]), axis=1) a, b = zip(*list(_apply))    zip(*zipped)\u6765\u89e3\u5f00\u5143\u7ec4\u5e8f\u5217;\u540c\u6837\u5728\u51fd\u6570\u4f20\u53c2\u7684\u8fc7\u7a0b\u4e2d\uff0c**args\u4e5f\u53ef\u4ee5\u89e3\u5f00args\u5b57\u5178\u53d8\u6362\u53c2\u6570\u5f62\u5f0f\u3002  apply + swifter\u5e76\u884c  2020.9.5 Note: swifter.apply\u52a0\u901f\u6548\u679c\u5f88\u660e\u663e\uff1b\u8bfb\u53d6\u5927\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528modin.pandas\u8fdb\u884c\u8bfb\u53d6\uff0capply\u7b49\u64cd\u4f5c\u53ef\u4ee5\u4f7f\u7528swifter\u8fdb\u884c\u52a0\u901f\u3002;\u53e6swifter.apply\u7684\u51fd\u6570\u4e2d\u4e0d\u53ef\u5b9a\u4e49\rvectorized form\uff08\u5982if\u51fd\u6570\uff09\uff0c\u5426\u5219\u53ef\u80fd\u5bfc\u81f4\u52a0\u901f\u6548\u679c\u4e0d\u660e\u663e\u3002\n 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  import pandas as pd import swifter df = pd.DataFrame({&#39;x&#39;: [1, 2, 3, 4], &#39;y&#39;: [5, 6, 7, 8]}) # runs on single core df[&#39;x2&#39;] = df[&#39;x&#39;].apply(lambda x: x**2) # runs on multiple cores df[&#39;x2&#39;] = df[&#39;x&#39;].swifter.apply(lambda x: x**2) # use swifter apply on whole dataframe df[&#39;agg&#39;] = df.swifter.apply(lambda x: x.sum() - x.min()) # use swifter apply on specific columns df[&#39;outCol&#39;] = df[[&#39;inCol1&#39;, &#39;inCol2&#39;]].swifter.apply(my_func)   \u65f6\u95f4\u5904\u7406 \u53c2\u8003: pandas.pydata\n\u53e6\u89c1\rdatetime\u65f6\u95f4\u5904\u7406\nparse_dates \u5728 read_csv() \u65b9\u6cd5\u4e2d\uff0c\u901a\u8fc7 parse_dates \u53c2\u6570\u76f4\u63a5\u5c06\u67d0\u4e9b\u5217\u8f6c\u6362\u6210 datetime64 \u7c7b\u578b, index_col\u8bbe\u7f6e\u7d22\u5f15\n1  df1 = pd.read_csv(&#39;sample-salesv3.csv&#39;, parse_dates=[&#39;date&#39;], index_col=&#39;date&#39;)   to_datetime Timestamp(\u65f6\u95f4\u70b9) 1 2 3 4 5 6 7 8 9  # unix time2datetime pd.to_datetime(1490195805, unit=&#39;s&#39;) # =&gt; Timestamp(&#39;2017-03-22 15:16:45&#39;) # datetime str2Timestamp pd.to_datetime(&#34;2017-11-01 12:24&#34;) # or setting format pd.to_datetime(&#34;2017\u5e7411\u67081\u65e5 12\u65f624\u5206&#34;, format=&#39;%Y\u5e74%m\u6708%d\u65e5 %H\u65f6%M\u5206&#39;) #=&gt; Timestamp(&#39;2017-11-01 12:24:00&#39;)    (Attributes)[https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Timestamp.html]:  \u5e74\u6708\u65e5\uff08year, month, day\uff09 \u6642\u5206\u79d2\uff08hour, minute, second\uff09    DatetimeIndex(\u65f6\u95f4\u5e8f\u5217\u7d22\u5f15) 1 2  pd.to_datetime([1490195805.433, 1490195805.433502912], unit=&#39;s&#39;) #=&gt;DatetimeIndex([&#39;2017-03-22 15:16:45.433000088&#39;, &#39;2017-03-22 15:16:45.433502913&#39;], dtype=&#39;datetime64[ns]&#39;, freq=None)    (Attributes)[https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DatetimeIndex.html]:  \u5e74\u6708\u65e5\uff08year, month, day\uff09, \u6642\u5206\u79d2\uff08hour, minute, second\uff09   unix time\u5f62\u5f0f  1 2  pd.to_datetime([&#39;2017-03-22 15:16:45.433000088&#39;, &#39;2017-03-22 15:16:45.433502913&#39;]).astype(int) / 10**9 #=&gt; Float64Index([1490195805.433, 1490195805.433503], dtype=&#39;float64&#39;)   \u53c2\u8003: https://stackoverflow.com/questions/54313463/pandas-datetime-to-unix-timestamp-seconds\ndate_range Return a fixed frequency DatetimeIndex. \u53c2\u8003: pandas.date_range\n\u5e38\u7528\u53c2\u6570:  start: Left bound for generating dates. end: Right bound for generating dates. periods: Number of periods to generate. freq: Frequency strings can have multiples. \u53c2\u8003: timeseries-offset-aliases  D: calendar day frequency M: month end frequency Y: year end frequency H: hourly frequency T: minutely frequency S: secondly frequency Q: \u5b63\u5ea6    examples: 1 2 3 4 5 6 7 8 9 10 11  pd.date_range(start=&#39;1/1/2018&#39;, end=&#39;1/08/2018&#39;) #=&gt; DatetimeIndex([&#39;2018-01-01&#39;, &#39;2018-01-02&#39;, &#39;2018-01-03&#39;, &#39;2018-01-04&#39;,&#39;2018-01-05&#39;, &#39;2018-01-06&#39;, &#39;2018-01-07&#39;, &#39;2018-01-08&#39;],dtype=&#39;datetime64[ns]&#39;, freq=&#39;D&#39;) # \u5f00\u59cb\u4e3a2018.1.1, \u53d68\u4e2a\u65e5\u671f\uff0c\u9ed8\u8ba4\u95f4\u9694\u4e3a\u5929 pd.date_range(start=&#39;1/1/2018&#39;, periods=8) #=&gt; DatetimeIndex([&#39;2018-01-01&#39;, &#39;2018-01-02&#39;, &#39;2018-01-03&#39;, &#39;2018-01-04&#39;,&#39;2018-01-05&#39;, &#39;2018-01-06&#39;, &#39;2018-01-07&#39;, &#39;2018-01-08&#39;],dtype=&#39;datetime64[ns]&#39;, freq=&#39;D&#39;) # \u4e09\u4e2a\u6708\u4e3a\u95f4\u9694 pd.date_range(start=&#39;1/1/2018&#39;, periods=5, freq=&#39;3M&#39;) #=&gt; DatetimeIndex([&#39;2018-01-31&#39;, &#39;2018-04-30&#39;, &#39;2018-07-31&#39;, &#39;2018-10-31&#39;, &#39;2019-01-31&#39;], dtype=&#39;datetime64[ns]&#39;, freq=&#39;3M&#39;)   \u65e5\u671f\u68c0\u7d22 1 2 3 4 5 6 7 8 9 10 11 12 13 14  test_df = pd.DataFrame({&#39;data&#39;: range(1, 1000)}) test_df.index = pd.date_range(start=&#39;2020-1-1&#39;, end=&#39;2020-6-1&#39;, periods=test_df.shape[0]) # \u83b7\u53d62020\u5e74\u7684\u6570\u636e test_df[&#39;2020&#39;] # \u83b7\u53d62020\u5e745\u6708\u7684\u6570\u636e test_df[&#39;2020-5&#39;] # \u83b7\u53d62020\u5e745\u67081\u53f7\u7684\u6570\u636e test_df[&#39;2020-5-1&#39;] # \u83b7\u53d62020\u5e74\u4e00\u5b63\u5ea6(1,2,3\u6708)\u7684\u6570\u636e test_df[&#39;2020Q1&#39;] # \u83b7\u53d62020\u5e745\u67081\u53f7\u52302020\u5e745\u670830\u53f7\u7684\u6570\u636e test_df[&#39;2020-5-1&#39;:&#39;2020-5-30&#39;]   \u805a\u5408\u7c7b\u65b9\u6cd5 groupby() + agg() \u53c2\u8003\uff1ahttps://www.cnblogs.com/feffery/p/11468762.html\n\u8981\u8fdb\u884c\u5206\u7ec4\u8fd0\u7b97\u7b2c\u4e00\u6b65\u5f53\u7136\u5c31\u662f\u5206\u7ec4\uff0c\u5728pandas\u4e2d\u5bf9\u6570\u636e\u6846\u8fdb\u884c\u5206\u7ec4\u4f7f\u7528\u5230groupby()\u65b9\u6cd5\uff0c\u5176\u4e3b\u8981\u4f7f\u7528\u5230\u7684\u53c2\u6570\u4e3aby\uff0c\u8fd9\u4e2a\u53c2\u6570\u7528\u4e8e\u4f20\u5165\u5206\u7ec4\u4f9d\u636e\u7684\u53d8\u91cf\u540d\u79f0\uff0c\u5f53\u53d8\u91cf\u4e3a1\u4e2a\u65f6\u4f20\u5165\u540d\u79f0\u5b57\u7b26\u4e32\u5373\u53ef\uff0c\u5f53\u4e3a\u591a\u4e2a\u65f6\u4f20\u5165\u8fd9\u4e9b\u53d8\u91cf\u540d\u79f0\u5217\u8868\uff0cDataFrame\u5bf9\u8c61\u901a\u8fc7groupby()\u4e4b\u540e\u8fd4\u56de\u4e00\u4e2a\u751f\u6210\u5668\uff0c\u9700\u8981\u5c06\u5176\u5217\u8868\u5316\u624d\u80fd\u5f97\u5230\u9700\u8981\u7684\u5206\u7ec4\u540e\u7684\u5b50\u96c6\n1 2 3  group_df = trajs_with_id_df.groupby(by=[&#39;car_id&#39;])[[&#39;traj_id&#39;, &#39;traj_points&#39;]] groups = [group for group in group_df] groups[0]    output:\n \u6bcf\u4e00\u4e2a\u7ed3\u679c\u90fd\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4\uff0c\u5143\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u5bf9\u5e94\u8fd9\u4e2a\u5206\u7ec4\u7ed3\u679c\u7684\u5206\u7ec4\u7ec4\u5408\u65b9\u5f0f\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u5206\u7ec4\u51fa\u7684\u5b50\u96c6\u6570\u636e\u6846  1  groups = data_df.groupby(by=[&#39;assigned_c&#39;, &#39;osmid&#39;])[[&#39;x&#39;, &#39;y&#39;]].max().reset_index(drop=False)    by=[&lsquo;assigned_c&rsquo;, &lsquo;osmid&rsquo;],\u5206\u7ec4\u7684\u7ec4\u5408\u65b9\u5f0f [[&lsquo;x&rsquo;, &lsquo;y&rsquo;]]\u5206\u7ec4\u540e\u53d6\u51fax\u548cy\u5217\u8fdb\u884c\u540e\u7eed\u64cd\u4f5c max() \u6839\u636e\u5206\u7ec4\u5bf9x\u548cy\u5217\u53d6\u6700\u5927\u503c reset_index(drop=False) \u91cd\u7f6e\u7d22\u5f15\uff0c\u4fbf\u4e8e\u663e\u793a\u548c\u53d6\u503c; drop: \u662f\u5426\u4e22\u6389\u539f\u7d22\u5f15  1 2 3  agg_df = data_df.groupby(by=[&#39;assigned_c&#39;]).agg({&#39;x&#39;: [&#39;mean&#39;, &#39;max&#39;, &#39;min&#39;, &#39;mean&#39;, &#39;std&#39;]}) .reset_index(drop=False)    agg() \u5373aggregate\uff0c\u805a\u5408\uff1b\u4f20\u5165\u5b57\u5178\uff1a\u64cd\u4f5c\u5217\u4e3akey\u548c\u76f8\u5173\u64cd\u4f5c\u4e3avalue  1 2 3 4 5  agg_df = data_df.groupby(by=[&#39;assigned_c&#39;]).agg(mean_x=pd.NamedAgg(column=&#39;x&#39;, aggfunc=&#39;mean&#39;), max_x=pd.NamedAgg(column=&#39;x&#39;, aggfunc=&#39;max&#39;), min_x=pd.NamedAgg(column=&#39;x&#39;, aggfunc=&#39;min&#39;),) .reset_index(drop=False)    \u4f7f\u7528pd.NamedAgg()\u6765\u4e3a\u805a\u5408\u540e\u7684\u6bcf\u4e00\u5217\u8d4b\u4e88\u65b0\u7684\u540d\u5b57  \u5f02\u5e38\u8c03\u8bd5 \u5ffd\u7565warning\u5168\u5c40\u8bbe\u7f6e 1 2  import warnings warnings.filterwarnings(&#39;ignore&#39;)   \u7f16\u7801\u9519\u8bef\uff08illegal multibyte sequence\uff09 1 2 3 4 5  def get_df(file_path): poi_df = None with open(file_path, encoding=&#39;gb2312&#39;, errors=&#39;ignore&#39;) as fp: poi_df = pd.read_csv(fp, header=0) return poi_df   \u663e\u793a\u8bbe\u7f6e  \u53d6\u6d88\u79d1\u5b66\u8ba1\u6570\u6cd5\u663e\u793a\n\u53c2\u8003\uff1ahttps://blog.csdn.net/chenpe32cp/article/details/87883420\n\u79d1\u5b66\u8ba1\u6570\u6cd5\u7684\u663e\u793a\u5f88\u96be\u9605\u8bfb\u3002\u53d6\u6d88\u79d1\u5b66\u8ba1\u6570\u6cd5\u663e\u793a\uff0c\u4fdd\u7559\u5c0f\u6570\u540e\u4e24\u4f4d\u3002  1 2 3 4 5 6  # \u5168\u5c40\u8bbe\u7f6e pd.set_option(&#39;display.float_format&#39;,lambda x : &#39;%.2f&#39; % x) # \u6216 # \u5355\u4e2aDataFrame\u751f\u6548 df = pd.DataFrame(np.random.random(10)**10, columns=[&#39;data&#39;]) df.round(3)    \u663e\u793a\u6240\u6709\u5217\u6216\u6240\u6709\u884c\n\u53c2\u8003\uff1ahttps://blog.csdn.net/qq_42648305/article/details/89640714  1 2  pd.options.display.max_columns = None pd.options.display.max_rows = None   Geopandas I/O \u53c2\u8003\uff1ahttps://geopandas.org/io.html#writing-spatial-data\n \u652f\u6301\u7684\u683c\u5f0f\uff1a  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  import fiona fiona.supported_drivers {&#39;AeronavFAA&#39;: &#39;r&#39;, &#39;ARCGEN&#39;: &#39;r&#39;, &#39;BNA&#39;: &#39;rw&#39;, &#39;DXF&#39;: &#39;rw&#39;, &#39;CSV&#39;: &#39;raw&#39;, &#39;OpenFileGDB&#39;: &#39;r&#39;, &#39;ESRIJSON&#39;: &#39;r&#39;, &#39;ESRI Shapefile&#39;: &#39;raw&#39;, &#39;FlatGeobuf&#39;: &#39;rw&#39;, &#39;GeoJSON&#39;: &#39;raw&#39;, &#39;GeoJSONSeq&#39;: &#39;rw&#39;, &#39;GPKG&#39;: &#39;raw&#39;, &#39;GML&#39;: &#39;rw&#39;, &#39;OGR_GMT&#39;: &#39;rw&#39;, &#39;GPX&#39;: &#39;rw&#39;, &#39;GPSTrackMaker&#39;: &#39;rw&#39;, &#39;Idrisi&#39;: &#39;r&#39;, &#39;MapInfo File&#39;: &#39;raw&#39;, &#39;DGN&#39;: &#39;raw&#39;, &#39;OGR_PDS&#39;: &#39;r&#39;, &#39;S57&#39;: &#39;r&#39;, &#39;SEGY&#39;: &#39;r&#39;, &#39;SUA&#39;: &#39;r&#39;, &#39;TopoJSON&#39;: &#39;r&#39;}    Read Data  read_file  1 2 3 4  geopandas.read_file(fp) # gdb or gpkg&#39;s layer gdb_fp = &#39;/workspace/UrbanFunctionalRegionalization/map_doc/regionalization.gdb&#39; thiessen_gdf = gpd.geopandas.read_file(gdb_fp, layer=&#39;thiessen_cliped&#39;)    Write Data\nFor a full list of supported formats, type import fiona; fiona.supported_drivers  Writing to Shapefile  1  countries_gdf.to_file(&#34;countries.shp&#34;)    Writing to GeoJSON file  1  countries_gdf.to_file(&#34;countries.geojson&#34;, driver=&#39;GeoJSON&#39;)    Writing to GeoJSON string  1  countries_gdf.to_json()    Writing to GeoPackage 1 2  countries_gdf.to_file(&#34;package.gpkg&#34;, layer=&#39;countries&#39;, driver=&#34;GPKG&#34;) cities_gdf.to_file(&#34;package.gpkg&#34;, layer=&#39;cities&#39;, driver=&#34;GPKG&#34;)     DataFrame2GeoDataFrame set_geometry  set_geometry  1  trajs_gpd_df = trajs_df.set_geometry(&#39;line_geo&#39;)    \u5728\u521d\u59cb\u5316GeoDataFrame\u65f6\u5b9a\u4e49geometry  1 2 3  from shapely.geometry import Point, LineString geometry = [Point(), Point(), ...] or [LineString([p1, p2, ...]), ...] or ... gpd.GeoDataFrame(df, geometry=[])   \u7a7a\u95f4\u8fde\u63a5/Spatial Join \u53c2\u8003\uff1ahttps://blog.csdn.net/qq_28360131/article/details/81165168\nshaply\u5305\u7684vectorized\u5305\u542b\u7740\u4e00\u4e9b\u5bf9\u67e5\u8be2\u7684\u4f18\u5316\uff0c\u901a\u8fc7shaply\u548cgeopandas\u4e00\u8d77\u534f\u4f5c\u53ef\u4ee5\u8fbe\u5230\u8f83\u597d\u7684\u4f18\u5316\u6548\u679c\u3002\n1 2 3 4 5 6 7  import shapely.vectorized as sv point_df = point_df[[&#39;id&#39;, &#39;lon&#39;, &#39;lat&#39;]] for row in ploy_gdf.itertuples(): geometry, area_id = getattr(row, &#34;geometry&#34;), getattr(row, &#34;area_id&#34;) point_df.loc[sv.contains(geometry, x=point_df.lon, y=point_df.lat), &#34;AreaID&#34;] = area_id    point_df      id lon lat datetime area_id     0 0 116.41 39.9084 2012-11-02 00:25:03 94   1 1 116.583 40.0793 2012-11-02 01:25:41 nan   2 2 116.34 39.9567 2012-11-02 02:06:14 145   3 3 116.343 39.9126 2012-11-02 02:19:51 86   4 4 116.334 39.906 2012-11-02 02:26:55 82    ",
        "description": "",
        "id": 94,
        "section": "posts",
        "tags": [
            "Python",
            "Pandas",
            "GeoPandas",
            "\u4f18\u5316"
        ],
        "title": "Pandas/Geopandas Tricks",
        "uri": "/posts/notes/pandas-geopandas-tricks/"
    },
    {
        "content": " \u5229\u7ef4\u4e9a\u7684\u6770\u6d1b\u7279\u3002\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u5468\u5e74\u7eaa\u5ff5\",\rartist: \"\u9ed1\u5462\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E5%91%A8%E5%B9%B4%E7%BA%AA%E5%BF%B5%20-%20%E9%BB%91%E5%91%A2-d32c46-Ag.mp3\",\rcover: \"https://p2.music.126.net/eBzMyDnXINAWf4DFqBQlUw==/109951163782094761.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E5%91%A8%E5%B9%B4%E7%BA%AA%E5%BF%B5-%E9%BB%91%E5%91%A2-51d812-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2020.1.1 \u591a\u559c\u4e50\uff0c\u5e38\u5b89\u5b81 2020.1.2 keras\u8dd1\u4e00\u4e2a\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b\uff08\u591a\u5206\u7c7b\uff09\u7684\u95ee\u9898\uff0c\u4e0d\u80fd\u4e00\u4e0a\u6765\u5c31\u7528\u590d\u6742\u6a21\u578b\uff08TextCNN\uff09\u3002\u5148\u4ece\u7b80\u5355\u7684\u6a21\u578b\uff08Embedding + \u4e24\u5c42Dense \u6548\u679c\u5c31\u5f88\u597d\uff09\u5f00\u59cb\uff0c\u590d\u6742\u6a21\u578b\u5bb9\u6613\u8fc7\u62df\u5408\uff0c\u4e14\u8bad\u7ec3\u901f\u5ea6\u6162\uff0c\u6709\u4e00\u4e2abaseline\u540e\u518d\u53bb\u8dd1\u5176\u4ed6\u6a21\u578b\uff0c\u50cfCNN\u554a\uff0cRNN\u4e4b\u7c7b\u7684\uff1b \u8fd8\u6709\u5c31\u662f\u5148\u628a\u6570\u636e\u9884\u5904\u7406\u597d\u3002 2020.1.3 \u6bcf\u65e5\u4e00\u53e5\u60f3\u5230\u8bcd\u7a77\u3002 2020.1.4 \u5947\u4e86\u602a\u4e86\u5947\uff0c\u5947\u4e86\u602a\u4e86\u602a\u3002 2020.1.5 \u6b62\u4e8e\u5507\u9f7f\uff0c\u63a9\u4e8e\u5c81\u6708\u3002 2020.1.6 \u6b63\u5982\u591c\u7a7a\u6ca1\u6709\u661f\u661f\u548c\u6708\u4eae\u65e0\u6cd5\u5b8c\u6574\uff0c\u6ca1\u6709\u4f60\uff0c\u6211\u7684\u751f\u547d\u4e5f\u65e0\u6cd5\u5b8c\u6574\u3002 2020.1.7 \u6b32\u901f\u5219\u4e0d\u8fbe\u3002 2020.1.8 \u4e0d\u662f\u6240\u6709\u7684\u4e8b\u60c5\u90fd\u6709\u610f\u4e49\u7684\uff0c\u80fd\u591f\u505a\u4e9b\u65e0\u804a\u7684\u4e8b\u60c5\u6709\u65f6\u5019\u4e5f\u662f\u4e00\u79cd\u5e78\u798f\u3002 2020.1.9 \u9752\u9752\u5b50\u887f\uff0c\u60a0\u60a0\u6211\u5fc3\u3002 2020.1.10 \u771f\u7684\u8981\u953b\u70bc\u8ba1\u5212\u4e86\u3002\u8eab\u4f53\u603b\u89c9\u5f97\u6709\u4e0d\u8212\u670d\u7684\u5730\u65b9\uff0c\u800c\u4e14\u7cbe\u529b\u4e5f\u8d8a\u6765\u8d8a\u5dee\u3002 2020.1.11 \u665a\u4e0a\u6d3b\u52a8\uff0c\u6e38\u620f\u73a9\u7684\u5f88\u5f00\u5fc3\uff0c\u8138\u76ae\u90fd\u7b11\u7684\u75bc\u4e86\u3002 2020.1.12 \u5728\u51ac\u5929\u9047\u89c1\u4f60\uff0c\u51db\u51ac\u6563\u5c3d\uff0c\u661f\u6cb3\u957f\u660e\u3002 2020.1.13 \u6ca7\u6d77\u6708\u660e\u73e0\u6709\u6cea\uff0c\u84dd\u7530\u65e5\u6696\u7389\u751f\u70df\u3002 2020.1.14 \u6b64\u60c5\u53ef\u5f85\u6210\u8ffd\u5fc6\uff0c\u53ea\u662f\u5f53\u65f6\u5df2\u60d8\u7136\u3002 2020.1.15 \u7ec8\u4e8e\u8fd9\u4e2a\u51ac\u5929\u4e0b\u4e86\u7b2c\u4e00\u573a\u96ea\u3002 2020.1.16 \u63a8\u8350icat.cc\u7684\u4ee3\u7406\uff0c\u5b66\u6821\u7a33\u5b9a\u3001\u901f\u5ea6\u8fd8\u53ef\u4ee5\u3002 2020.1.17 \u56de\u5bb6\uff0c\u5047\u671f\u5f00\u59cb\u3002 2020.1.18 \u4eca\u5929\u662f\u50ac\u5a5a\u7684\uff08\u7b2c\uff09\u4e00\u5929\u3002 2020.1.19 The most difficult thing in life is to know yourself. 2020.1.20 \u65f6\u95f4\u6ca1\u6709\u7b49\u6211\uff0c\u662f\u4f60\u5fd8\u4e86\u5e26\u6211\u8d70\uff0c\u6211\u5de6\u624b\u662f\u8fc7\u76ee\u4e0d\u5fd8\u7684\u8424\u706b\uff0c\u53f3\u624b\u662f\u5341\u5e74\u4e00\u4e2a\u6f2b\u957f\u7684\u6253\u5750\u3002 2020.1.21 \u6cf1\u6cf1\u5927\u56fd\uff0c\u5dcd\u5dcd\u534e\u590f\u3002 2020.1.22 \u6101\u80a0\u8bd5\u9152\u665a\u6765\u8fdf\u3002\u8fe2\u8fe2\u9704\u6c49\u7ec8\u65e0\u8ba1\u3002\u753b\u697c\u4e91\u96e8\uff0c\u826f\u5bb5\u5c91\u5bc2\uff0c\u4e00\u68a6\u65ad\u5c18\u6ce5\u3002 2020.1.23 \u542c\u95fb\u8fdc\u65b9\u6709\u4f60\uff0c\u52a8\u8eab\u8dcb\u6d89\u5343\u91cc\u3002\u6211\u5439\u8fc7\u4f60\u5439\u8fc7\u7684\u98ce\uff0c\u8fd9\u7b97\u4e0d\u7b97\u76f8\u62e5\u3002\u6211\u8e0f\u8fc7\u4f60\u8d70\u8fc7\u7684\u8def\uff0c\u8fd9\u7b97\u4e0d\u7b97\u76f8\u9022\u3002 2020.1.24 \u9664\u5915\u3002\u613f\u5e73\u5b89\u987a\u9042\u3002 2020.1.25 \u5229\u7ef4\u4e9a\u7684\u6770\u6d1b\u7279\u3002\u5b8c\u6210\u4e86\u5deb\u5e083\u7684\u4e3b\u7ebf\u5267\u60c5\u3002\u603b\u89c9\u5f97\u5267\u60c5\u7ed3\u675f\u7684\u6709\u4e9b\u7a81\u7136\uff0c\u53ef\u80fd\u4e5f\u662f\u56e0\u4e3a\u60f3\u5c3d\u5feb\u7ed3\u675f\u4e3b\u7ebf\u7684\u539f\u56e0\u5427\u3002\u611f\u60c5\u65b9\u9762\u9009\u62e9\u4e86\u7279\u8389\u4e1d\uff0c\u53f6\u5948\u6cd5\u53bb\u4e86\u5317\u65b9\u3002\u8fd8\u662f\u5f88\u559c\u6b22\u8fd9\u4e2a\u6e38\u620f\u7684\u3002\u4ee3\u5165\u611f\u5f88\u5f3a\u3002 2020.1.26 \u65b0\u578b\u51a0\u72b6\u75c5\u6bd2\u5f15\u8d77\u7684\u80ba\u708e\u592a\u5389\u5bb3\u4e86\u3002\u5f97\u76ca\u4e8e\u4e92\u8054\u7f51\u3001\u5fae\u535a\u548c\u5fae\u4fe1\u7b49\u666e\u53ca\uff0c\u4fe1\u606f\u7684\u4f20\u64ad\u5341\u5206\u8fc5\u901f\uff0c\u603b\u89c9\u5f97\u4eba\u4eec\u7684\u6050\u614c\u8fdc\u5927\u4e8e\u75c5\u60c5\u5b9e\u9645\u3002\u5e0c\u671b\u75c5\u60c5\u80fd\u591f\u5c3d\u5feb\u5f97\u5230\u63a7\u5236\uff0c\u5927\u5bb6\u90fd\u80fd\u591f\u76f8\u5b89\u65e0\u4e8b\u3002 2020.1.27 \u88ab\u8bba\u6587\u7684\u65b9\u6cd5\u90e8\u5206\u96be\u4f4f\u4e86\u3002\u60f3\u4e0d\u901a\u3002 2020.1.28 \u7814\u4fee\u8ba1\u5212\u3002 2020.1.29 \u5c0f\u4e8b\u7f3a\u5c11\u575a\u6301\u3002 2020.1.30 \u4e16\u4e0a\u6ca1\u6709\u7e41\u7410\u7684\u4e8b\uff0c\u53ea\u6709\u6015\u9ebb\u70e6\u7684\u4eba\u3002 2020.1.31 \u7814\u4fee\u8ba1\u5212\u521d\u7a3f\u3002   ",
        "description": "",
        "id": 95,
        "section": "posts",
        "tags": [
            "\u65b0\u95fb\u4e3b\u9898\u5206\u7c7b",
            "\u953b\u70bc",
            "\u610f\u4e49",
            "\u8054\u6b22\u6d3b\u52a8",
            "\u4ee3\u7406",
            "\u56de\u5bb6",
            "\u6625\u8282",
            "\u5deb\u5e083",
            "\u601d\u8003",
            "\u65b0\u51a0\u80ba\u708e",
            "\u7814\u4fee\u8ba1\u5212"
        ],
        "title": "2020-1",
        "uri": "/posts/journals/99/"
    },
    {
        "content": "\r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u94a2\u7434\u300a\u5728\u6cd5\u56fd\u7684\u5341\u4e09\u5929\u300b13 jours en France / Piano Solo - MayPiano\",\rartist: \"MayPiano\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs/image_host@master/media/13%20jours%20en%20France%20%20-%20MayPiano.mp3\",\rcover: \"https://p2.music.126.net/nDJjassfWvhd2dXNFHVcxA==/109951163826479895.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%BA%AF%E9%9F%B3%E4%B9%90-%E6%97%A0%E6%AD%8C%E8%AF%8D-3ca159-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  \u6536\u96c6\u4e00\u767e\u53e5\u8bd7\u8bcd\u3002\n  \u82e5\u4f3c\u6708\u8f6e\u7ec8\u768e\u6d01\uff0c\u4e0d\u8f9e\u51b0\u96ea\u4e3a\u537f\u70ed\u3002 \u65e2\u89c1\u541b\u5b50\uff0c\u4e91\u80e1\u4e0d\u559c\uff1f \u76f8\u601d\u76f8\u89c1\u77e5\u4f55\u65e5\uff1f\u6b64\u65f6\u6b64\u591c\u96be\u4e3a\u60c5\u3002 \u76c8\u76c8\u4e00\u6c34\u95f4\uff0c\u8109\u8109\u4e0d\u5f97\u8bed\u3002 \u613f\u541b\u591a\u91c7\u64b7\uff0c\u6b64\u7269\u6700\u76f8\u601d\u3002 \u957f\u76f8\u601d\u516e\u957f\u76f8\u5fc6\uff0c\u77ed\u76f8\u601d\u516e\u65e0\u7a77\u6781\u3002 \u53ea\u7f18\u611f\u541b\u4e00\u56de\u987e\uff0c\u4f7f\u6211\u601d\u541b\u671d\u4e0e\u66ae\u3002 \u66fe\u7ecf\u6ca7\u6d77\u96be\u4e3a\u6c34\uff0c\u9664\u5374\u5deb\u5c71\u4e0d\u662f\u4e91\u3002 \u6b64\u5fc3\u7eb5\u6709\u5343\u5343\u7ed3\uff0c\u8fd8\u72ec\u7cfb\uff0c\u4e00\u4eba\u610f\u3002 \u5728\u5929\u613f\u4f5c\u6bd4\u7ffc\u9e1f\uff0c\u5728\u5730\u613f\u4e3a\u8fde\u7406\u679d\u3002 \u73b2\u73d1\u9ab0\u5b50\u5b89\u7ea2\u8c46\uff0c\u5165\u9aa8\u76f8\u601d\u77e5\u4e0d\u77e5\u3002 \u53d6\u6b21\u4e1b\u4e2d\u61d2\u56de\u987e\uff0c\u534a\u7f18\u4fee\u9053\u534a\u7f18\u541b\u3002 \u8a00\u5ff5\u541b\u5b50\uff0c\u6e29\u5176\u5982\u7389\u3002\u5728\u5176\u677f\u5c4b\uff0c\u4e71\u6211\u5fc3\u66f2\u3002 \u4e16\u95f4\u5b89\u5f97\u4e24\u5168\u6cd5\uff0c\u4e0d\u8d1f\u5982\u6765\u4e0d\u8d1f\u537f\u3002 \u5fc3\u4e4e\u7231\u77e3\uff0c\u7455\u4e0d\u8c13\u77e3\u3002\u4e2d\u5fc3\u85cf\u4e4b\uff0c\u4f55\u65e5\u5fd8\u4e4b\u3002 \u5c71\u6709\u6728\u516e\u6728\u6709\u679d\uff0c\u5fc3\u60a6\u541b\u516e\u541b\u4e0d\u77e5\u3002 \u8d4c\u4e66\u6d88\u5f97\u6cfc\u8336\u9999\uff0c\u5f53\u65f6\u53ea\u9053\u662f\u5bfb\u5e38\u3002 \u6211\u4f4f\u957f\u6c5f\u5934\uff0c\u541b\u4f4f\u957f\u6c5f\u5c3e\uff0c\u65e5\u65e5\u601d\u541b\u4e0d\u89c1\u541b\uff0c\u5171\u996e\u957f\u6c5f\u6c34\u3002 \u76f8\u89c1\u4ea6\u65e0\u4e8b\uff0c\u522b\u540e\u5e38\u5fc6\u541b\u3002 \u91c7\u83b2\u5357\u5858\u79cb,\u83b2\u82b1\u8fc7\u4eba\u5934\u3002\u4f4e\u5934\u5f04\u83b2\u5b50,\u83b2\u5b50\u6e05\u5982\u6c34\u3002 \u601d\u541b\u4ee4\u4eba\u8001\uff0c\u5c81\u6708\u5ffd\u5df2\u665a\u3002 \u6b64\u60c5\u65e0\u8ba1\u53ef\u6d88\u9664\uff0c\u624d\u4e0b\u7709\u5934\uff0c\u5374\u4e0a\u5fc3\u5934\u3002 \u76f8\u9022\u60c5\u4fbf\u6df1\uff0c\u6068\u4e0d\u76f8\u9022\u65e9\u3002 \u5986\u7f62\u4f4e\u58f0\u95ee\u592b\u5a7f\uff0c\u753b\u7709\u6df1\u6d45\u5165\u65f6\u65e0\u3002 \u6708\u4e0a\u67f3\u68a2\u5934\uff0c\u4eba\u7ea6\u9ec4\u660f\u540e\u3002 \u6843\u4e4b\u592d\u592d\uff0c\u707c\u707c\u5176\u534e\u3002\u4e4b\u5b50\u4e8e\u5f52\uff0c\u5b9c\u5176\u5ba4\u5bb6\u3002 \u4f55\u5f53\u5171\u526a\u897f\u7a97\u70db\uff0c\u5374\u8bdd\u5df4\u5c71\u591c\u96e8\u65f6\u3002 \u4eba\u975e\u6728\u77f3\u7686\u6709\u60c5\uff0c\u4e0d\u5982\u4e0d\u9047\u503e\u57ce\u8272\u3002 \u751f\u5f53\u590d\u6765\u5f52\uff0c\u6b7b\u5f53\u957f\u76f8\u601d\u3002 \u53bb\u5c81\u76f8\u601d\u89c1\u5728\u8eab\uff0c\u90a3\u5e74\u6625\uff0c\u9664\u5374\u82b1\u5f00\u4e0d\u662f\u771f\u3002 \u90ce\u9a91\u7af9\u9a6c\u6765\uff0c\u7ed5\u5e8a\u5f04\u9752\u6885\u3002 \u601d\u541b\u4ee4\u4eba\u8001\uff0c\u8f69\u8f66\u4f55\u6765\u8fdf\u3002 \u4f46\u662f\u76f8\u601d\u83ab\u76f8\u8d1f\uff0c\u7261\u4e39\u4ead\u4e0a\u4e09\u751f\u8def\u3002 \u843d\u82b1\u65f6\u8282\u4e0d\u9022\u541b\uff0c\u7a7a\u637b\u7a7a\u679d\u7a7a\u501a\u95e8\u3002 \u6b64\u60c5\u53ef\u5f85\u6210\u8ffd\u5fc6\uff1f\u53ea\u662f\u5f53\u65f6\u5df2\u60d8\u7136\u3002 \u6709\u4e00\u7f8e\u4eba\u516e\uff0c\u89c1\u4e4b\u4e0d\u5fd8\u3002\u4e00\u65e5\u4e0d\u89c1\u516e\uff0c\u601d\u4e4b\u5982\u72c2\u3002 \u541b\u5bb6\u4f55\u5904\u4f4f\uff0c\u59be\u4f4f\u5728\u6a2a\u5858\u3002\u505c\u8239\u6682\u501f\u95ee\uff0c\u6216\u6050\u662f\u540c\u4e61\u3002 \u6625\u98ce\u5341\u91cc\u626c\u5dde\u8def\uff0c\u5377\u4e0a\u73e0\u5e18\u603b\u4e0d\u5982\u3002 \u6211\u6b32\u4e0e\u541b\u76f8\u77e5\uff0c\u957f\u547d\u65e0\u7edd\u8870\u3002 \u6795\u524d\u53d1\u5c3d\u5343\u822c\u613f\uff0c\u8981\u4f11\u4e14\u5f85\u9752\u5c71\u70c2\u3002 \u6e3a\u4e07\u91cc\u5c42\u4e91\uff0c\u5343\u5c71\u66ae\u96ea\uff0c\u53ea\u5f71\u5411\u8c01\u53bb\uff1f \u4e00\u65e5\u4e0d\u89c1\uff0c\u5982\u4e09\u6708\u516e\u3002 \u9022\u90ce\u6b32\u8bed\u4f4e\u5934\u7b11\uff0c\u78a7\u7389\u6414\u5934\u843d\u6c34\u4e2d\u3002 \u5b9c\u8a00\u996e\u9152\uff0c\u4e0e\u5b50\u5055\u8001\u3002\u7434\u745f\u5728\u5fa1\uff0c\u83ab\u4e0d\u9759\u597d\u3002 \u5341\u5e74\u751f\u6b7b\u4e24\u832b\u832b\uff0c\u4e0d\u601d\u91cf\uff0c\u81ea\u96be\u5fd8\u3002 \u6709\u7f8e\u4e00\u4eba\uff0c\u6e05\u626c\u5a49\u516e\u3002\u9082\u9005\u76f8\u9047\uff0c\u9002\u6211\u613f\u516e\u3002 \u5341\u5e74\u9752\u9e1f\u97f3\u5c18\u65ad\uff0c\u5f80\u4e8b\u4e0d\u80dc\u601d\u3002 \u5c71\u6709\u6276\u82cf\uff0c\u96b0\u6709\u8377\u534e\u3002\u4e0d\u89c1\u5b50\u90fd\uff0c\u4e43\u89c1\u72c2\u4e14\u3002 \u7fd8\u7fd8\u9519\u85aa\uff0c\u8a00\u5208\u5176\u695a\uff1b\u4e4b\u5b50\u4e8e\u5f52\uff0c\u8a00\u79e3\u5176\u9a6c\u3002 \u8457\u4ee5\u957f\u76f8\u601d\uff0c\u7f18\u4ee5\u7ed3\u4e0d\u89e3\u3002 \u80cc\u706f\u548c\u6708\u5c31\u82b1\u9634\uff0c\u5df2\u662f\u5341\u5e74\u8e2a\u8ff9\u5341\u5e74\u5fc3\u3002 \u91c7\u4e4b\u6b32\u9057\u8c01\uff1f\u6240\u601d\u5728\u8fdc\u9053\u3002 \u5357\u98ce\u77e5\u6211\u610f\uff0c\u5439\u68a6\u5230\u897f\u6d32\u3002 \u4eba\u8a00\u4eba\u6709\u613f\uff0c\u613f\u81f3\u5929\u5fc5\u6210\u3002\u613f\u4f5c\u8fdc\u65b9\u517d\uff0c\u6b65\u6b65\u6bd4\u80a9\u884c\u3002\u613f\u4f5c\u6df1\u5c71\u6728\uff0c\u679d\u679d\u8fde\u7406\u751f\u3002 \u4f17\u91cc\u5bfb\u4ed6\u5343\u767e\u5ea6\u3002\u84e6\u7136\u56de\u9996\uff0c\u90a3\u4eba\u5374\u5728\u706f\u706b\u9611\u73ca\u5904\u3002 \u91cd\u613f\u90ce\u4e3a\u82b1\u5e95\u6d6a\u3002\u65e0\u9694\u969c\u3002\u968f\u98ce\u9010\u96e8\u957f\u5f80\u6765\u3002 \u53ea\u613f\u541b\u5fc3\u4f3c\u6211\u5fc3\uff0c\u5b9a\u4e0d\u8d1f\u76f8\u601d\u610f\u3002 \u6d77\u68e0\u5f00\u540e\uff0c\u671b\u5230\u5982\u4eca\u3002 \u5e73\u751f\u4e0d\u4f1a\u76f8\u601d\uff0c\u624d\u4f1a\u76f8\u601d\uff0c\u4fbf\u5bb3\u76f8\u601d\u3002 \u8bc1\u5019\u6765\u65f6\uff0c\u6b63\u662f\u4f55\u65f6\uff1f\u706f\u4e30\u660f\u65f6\uff0c\u6708\u4f34\u660e\u65f6\u3002 \u6eaf\u6d04\u4ece\u4e4b\uff0c\u9053\u963b\u4e14\u957f\u3002\u6eaf\u6d04\u4ece\u4e4b\uff0c\u5b9b\u5728\u6c34\u4e2d\u592e\u3002 \u6c85\u6709\u82b7\u516e\u6fa7\u6709\u5170,\u601d\u516c\u5b50\u516e\u672a\u6562\u8a00\u3002 \u7f8e\u4eba\u8d60\u6211\u7434\u7405\u7395\uff0c\u4f55\u4ee5\u62a5\u4e4b\u53cc\u7389\u76d8\u3002 \u5218\u90ce\u5df2\u6068\u84ec\u5c71\u8fdc\uff0c\u66f4\u9694\u84ec\u5c71\u4e00\u4e07\u91cd\uff01 \u4e0d\u582a\u76c8\u624b\u8d60\uff0c\u8fd8\u5bdd\u68a6\u4f73\u671f\u3002 \u6625\u98ce\u6b63\u6fb9\u8361,\u66ae\u96e8\u6765\u4f55\u8fdf\u3002 \u591c\u591c\u76f8\u601d\u66f4\u6f0f\u6b8b\uff0c\u4f24\u5fc3\u660e\u6708\u51ed\u9611\u5e72\uff0c\u60f3\u541b\u601d\u6211\u9526\u88d8\u5bd2\u3002 \u534a\u7f9e\u8fd8\u534a\u559c\uff0c\u6b32\u53bb\u53c8\u4f9d\u4f9d\u3002\u89c9\u6765\u4e4b\u662f\u68a6\uff0c\u4e0d\u80dc\u60b2\u3002 \u7ea2\u8c46\u4e0d\u582a\u770b\uff0c\u6ee1\u773c\u76f8\u601d\u6cea\u3002 \u6628\u591c\u661f\u8fb0\u6628\u591c\u98ce\uff0c\u753b\u697c\u897f\u7554\u6842\u5802\u4e1c\u3002 \u821e\u4f4e\u6768\u67f3\u697c\u5fc3\u6708\uff0c\u6b4c\u5c3d\u6843\u82b1\u6247\u5e95\u98ce\u3002 \u671b\u65ad\u4e91\u884c\u65e0\u53bb\u5904\u3002\u68a6\u56de\u660e\u6708\u751f\u6625\u6d66\u3002 \u591c\u6708\u4e00\u5e18\u5e7d\u68a6\uff0c\u6625\u98ce\u5341\u91cc\u67d4\u60c5\u3002 \u643a\u624b\u770b\u82b1\u6df1\u5f84\uff0c\u6276\u80a9\u5f85\u6708\u659c\u5eca\u3002 \u91d1\u98ce\u7389\u9732\u4e00\u76f8\u9022\uff0c\u4fbf\u80dc\u5374\u3001\u4eba\u95f4\u65e0\u6570\u3002 \u4ece\u522b\u540e\uff0c\u5fc6\u76f8\u9022\u3002\u51e0\u56de\u9b42\u68a6\u4e0e\u541b\u540c\u3002 \u8f6f\u98ce\u5439\u904d\u7a97\u7eb1\uff0c\u5fc3\u671f\u4fbf\u9694\u5929\u6daf\u3002\u4ece\u6b64\u4f24\u6625\u4f24\u522b\uff0c\u9ec4\u660f\u53ea\u5bf9\u68a8\u82b1\u3002 \u82b1\u660e\u6708\u6697\u7b3c\u8f7b\u96fe\uff0c\u4eca\u9704\u597d\u5411\u90ce\u8fb9\u53bb\u3002 \u5a07\u75f4\u4e0d\u6015\u4eba\u731c\uff0c\u548c\u8863\u7761\u5012\u4eba\u6000\u3002 \u6613\u6c42\u65e0\u4ef7\u5b9d\uff0c\u96be\u5f97\u6709\u5fc3\u90ce\u3002 \u552f\u6709\u6f5c\u79bb\u4e0e\u6697\u522b\uff0c\u5f7c\u6b64\u7518\u5fc3\u65e0\u540e\u671f\u3002 \u8bc6\u5c3d\u5343\u5343\u4e07\u4e07\u4eba\uff0c\u7ec8\u4e0d\u4f3c\u3001\u4f0a\u5bb6\u597d\u3002 \u82e5\u662f\u524d\u751f\u672a\u6709\u7f18\uff0c\u5f85\u91cd\u7ed3\u3001\u6765\u751f\u613f\u3002 \u5fc6\u6765\u4f55\u4e8b\u6700\u9500\u9b42\uff0c\u7b2c\u4e00\u6298\u679d\u82b1\u6837\u753b\u7f57\u88d9\u3002 \u613f\u6211\u5982\u661f\u541b\u5982\u6708\uff0c\u591c\u591c\u6d41\u5149\u661f\u768e\u6d01\u3002 \u4eba\u5982\u98ce\u540e\u5165\u6c5f\u4e91\uff0c\u60c5\u4f3c\u96e8\u4f59\u9ecf\u5730\u7d6e\u3002 \u82e5\u95ee\u95f2\u60c5\u90fd\u51e0\u8bb8\uff1f\u4e00\u5ddd\u70df\u8349\uff0c\u6ee1\u57ce\u98ce\u7d6e\uff0c\u6885\u5b50\u9ec4\u65f6\u96e8\u3002 \u591a\u60c5\u53ea\u6709\u6625\u5ead\u6708\uff0c\u72b9\u4e3a\u79bb\u4eba\u7167\u843d\u82b1\u3002 \u522b\u6765\u534a\u5c81\u97f3\u4e66\u7edd\uff0c\u4e00\u5bf8\u79bb\u80a0\u5343\u4e07\u7ed3\u3002 \u660e\u6708\u4e0d\u8c19\u79bb\u6068\u82e6\uff0c\u659c\u5149\u5230\u6653\u7a7f\u6731\u6237\u3002 \u9e3f\u96c1\u5728\u4e91\u9c7c\u5728\u6c34\uff0c\u60c6\u6005\u6b64\u60c5\u96be\u5bc4\u3002 \u6068\u541b\u4e0d\u4f3c\u6c5f\u697c\u6708\uff0c\u5357\u5317\u4e1c\u897f\uff0c\u5357\u5317\u4e1c\u897f\uff0c\u53ea\u6709\u76f8\u968f\u65e0\u522b\u79bb\u3002 \u8bb8\u662f\u4eca\u751f\u7f18\u672a\u4e86\uff0c\u8fd8\u4ece\u68a6\u91cc\u8bb0\u660e\u7738\u3002 \u8001\u6765\u591a\u5065\u5fd8\uff0c\u552f\u4e0d\u5fd8\u76f8\u601d\u3002 \u4e1c\u8fb9\u65e5\u51fa\u897f\u8fb9\u96e8\uff0c\u9053\u662f\u65e0\u6674\u5374\u6709\u6674\u3002 \u6362\u6211\u5fc3\u4e3a\u4f60\u5fc3\uff0c\u59cb\u77e5\u76f8\u5fc6\u6df1\u3002 \u76f8\u601d\u6811\u5e95\u8bf4\u76f8\u601d\uff0c\u601d\u90ce\u6068\u90ce\u90ce\u4e0d\u77e5\u3002 \u76f4\u9053\u76f8\u601d\u65e0\u76ca\uff0c\u672a\u59a8\u60c6\u6005\u662f\u6e05\u72c2\u3002 \u98ce\u6708\u5165\u6211\u76f8\u601d\u5c40\uff0c\u600e\u582a\u76f8\u601d\u672a\u76f8\u8bb8\u3002 \u6625\u98ce\u5bb4\uff0c\u7eff\u9152\u4e00\u676f\u6b4c\u4e00\u904d\uff0c\u518d\u62dc\u9648\u4e09\u613f\uff1a\u4e00\u613f\u90ce\u541b\u5343\u5c81\uff0c\u4e8c\u613f\u59be\u8eab\u957f\u5065\uff0c\u4e09\u613f\u5982\u540c\u6881\u4e0a\u71d5\uff0c\u5c81\u5c81\u957f\u76f8\u89c1\u3002  ",
        "description": "",
        "id": 97,
        "section": "posts",
        "tags": [
            "\u8bd7\u8bcd"
        ],
        "title": "100\u53e5\u60c5\u8bd7",
        "uri": "/posts/journals/104/"
    },
    {
        "content": " \u901a\u8fc7\u8bba\u6587\u9605\u8bfb\uff0c\u603b\u7ed3\u5e38\u7528\u5199\u4f5c\u8fc7\u7a0b\u4e2d\u7684\u8bcd\u8bed\u7ec4\u5408\u3001\u53e5\u578b\u53e5\u5f0f\u7b49\n \u5355\u8bcd/\u77ed\u8bed  \u636e\u6211\u6240\u77e5  to the best of our knowledge   \u53e6\u5916\uff0c\u53e6\u4e00\u65b9\u9762  additionally   \u5177\u4f53\u800c\u8a00\uff0c\u66f4\u786e\u5207\u7684\u8bf4\uff08\u8bb2\uff09  Specifically to be more precise   \u7b80\u8a00\u4e4b  in simple terms   \u91cd\u8981\u7684\uff1b\u663e\u8457\u7684\uff0c\u6709\u610f\u4e49\u7684  play an import role in Be of great importance in terms of sth Have a significant influence on sth pronounced   \u5982\u56fe\u6240\u793a\uff0c\u8868\u4e2d\u663e\u793a  as depicted in Fig. 1, &hellip; as illustrated/depicted in Figure 3, we find that ,,, Figure 4 shows that &hellip; Figure 6 maps the clustering results &hellip; In Figure 6, &hellip;   \u80fd\u591f&hellip;; \u4f7f&hellip;\u6210\u4e3a\u53ef\u80fd  be capable of doing sth enable. e.x., High spatial resolution (HSR) remote sensing images enable computation-based urban land use detection. (\u9ad8\u5206\u9065\u611f\u5f71\u50cf\u4f7f\u57fa\u4e8e\u8ba1\u7b97\u7684\u57ce\u5e02\u571f\u5730\u5229\u7528\u76d1\u6d4b\u6210\u4e3a\u53ef\u80fd\u3002)   \u4f8b\u5982  for example for instance taking sth as an example   \u901a\u5e38\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b;\u76f4\u89c2\u4e0a\u8bf4\uff1b  in most cases Intuitively, \u76f4\u89c2\u4e0a\u8bf4(\u662f\u4e00\u79cd\u63a8\u65ad\u7684\u8bf4\u6cd5\uff0c\u7528\u7684\u65f6\u5019\u8981\u865a\u62df\u8bed\u6c14\uff0c\u6700\u540e\u540e\u9762\u5728\u4e3e\u4e00\u4e2a\u4f8b\u5b50): Intuitively, the predictability of a place characteristic should be higher when choosing more appropriate connection measures. For example, the connection between places via taxi origin.   \u503e\u5411\u4e8e&hellip;  be inclined to do sth   \u901a\u8fc7&hellip;\u6765\u5b9e\u73b0  This was implemented by doing sth/ using &hellip;   \u56e0\u6b64\uff0c\u4ece\u800c\uff0c\u6240\u4ee5  accordingly: We have a different background, a different history. Accordingly, we have the right to different futures. hence: We suspect they are trying to hide something, hence the need for an independent inquiry. thus: We do not own the building. Thus, it would be impossible for us to make any major changes to it. Therefore   \u540c\u6837\u5730\uff1b\u4e0e\u6b64\u540c\u65f6\uff0c\u5728\u6b64\u671f\u95f4  similarly meanwhile   \u6362\u53e5\u8bdd\u8bb2\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e8b\u5b9e\u4e0a  in other words indeed This is(\u4e5f\u5c31\u662f\u8bf4): That is, if we consider the movement&hellip; as a matter of fact   \u5927\u91cf\u7684\uff0c\u5e7f\u6cdb\u7684\uff0c\u4f17\u591a\u7684  a wide spectrum of \uff08\u4e00\u7cfb\u5217\u7684\uff09 a broad range of \uff08\u5927\u8303\u56f4\u7684\uff09 a variety of \uff08\u5404\u79cd\u5404\u6837\u7684\uff09 extensive \uff08\u5e7f\u6cdb\u7684\uff0c\u5927\u91cf\u7684\uff09   \u66f4\u591a\u7684,\u6b64\u5916, \u53e6\u4e00\u65b9\u9762; \u76f8\u53cd  Furthermore/ further, on the contrary in contrast   \u5229\u7528\uff0c\u4f7f\u7528  employ a new time-series social media dataset utilize apply a &hellip; based method to ..   \u968f\u540e\uff0c\u63a5\u4e0b\u6765\uff1b\u4e0b\u4e00\u6b65  We subsequently apply a &hellip;   \u4f20\u7edf\u7684/\u5e38\u89c1\u7684  conventional methods   \u5f00\u6e90\u7684\uff0c\u53ef\u7528\u7684  available open source   \u6700\u65b0\u7684  state-of-the-art   \u5728&hellip;\u9886\u57df  in the field of &hellip;   \u5f00\u521b\u6027\uff08\u6709\u521b\u610f\u7684\uff09\u7684\u5de5\u4f5c  seminal work   \u8d8a&hellip;, \u8d8a&hellip;;\u6bd4\u8f83\u7ea7  A greater (lower) DTW distance suggests a more pronounced difference between two time series. A higher value of F indicates a larger number of POIs in the ith category at the location of building i. A greater positive value(\u6b63\u503c) of s suggests a better assignment for the building object i.   \u7279\u522b\u7684\uff0c\u5c24\u5176\u662f  In particular   \u6d41\u7a0b\u56fe  Workflow diagram   \u4e0e&hellip;\u4e00\u81f4\uff0c\u4e0e&hellip;\u5bf9\u5e94; \u5f15\u8d77\u5171\u9e23  This corresponds to a high level of mixed land use. This resonates with (\u5171\u9e23) the typical work/leisure activity patterns during the weekdays.   \u5c31\u8fd9\u4e00\u70b9\u800c\u8a00\uff0c\u5728\u8fd9\u4e00\u65b9\u9762  in this regard   \u7cbe\u7ec6\u5c3a\u5ea6\uff1b\u9ad8\u5206\u8fa8\u7387  fine-grained (very) fine-scale   \u57fa\u4e8e\u6b64  considering this fact following this idea on the basis of taxi-trip data from Shanghai (\u57fa\u4e8e..\u6570\u636e\uff0c\u4ee3\u66ff based on)   \u8fc4\u4eca\u4e3a\u6b62  to date   \u4e3a\u4e86\u660e\u786e/\u7a81\u51fa\uff08\u5f3a\u8c03\uff09\uff08\u8fd9\u4e2a\uff09\u95ee\u9898  To address this issue   (\u4ee5\u5f80\u7814\u7a76)\u5e7f\u6cdb\u4f7f\u7528/\u5e38\u7528/\u901a\u7528/\u6d41\u7a0b\u7684\u65b9\u6cd5\uff1b  Calculating the proportions of POI types inside each area is a commonly used method to achieve this goal. We adopt the TF-IDF method, which has been widely used in information retrieval and text-based recommender systems. Among these methods, k-medoids with DTW distance has emerged as a popular method for time-series data clustering.   \u7b49\u7b49\uff1b\u7b49\u5176\u4ed6  Urban AOI can reveal useful information for city planners, transportation analysis, and location-based service providers to plan new business, extend existing infrastructure , and so forth.   \u53ef\u884c\u6027  The objective of this study was to investigate the feasibility of(\u8c03\u67e5/\u7814\u7a76&hellip;\u7684\u53ef\u884c\u6027) incorporating place connections to predict place characteristics. To explore the utility of employing both remote and social sensing data in the estimation of population at fine scales   \u672c\u8eab per se  This work also relates to a different stream of research, which focuses not on data quality per se, but on an assessment of the similarity of POI obtained from different datasets for the purposes of conflation or data fusion.   \u771f\u5b9e\u573a\u666f  in real-world scenarios    Abstract Refer: Abstract Formula\n  General and Specific Background (~1 sentence each). Introduce the area of science that you will be speaking about and the state of knowledge in that area. Start broad in the general background, then narrow in on the relevant topic that will be pursued in the paper. If you use jargon, be sure to very briefly define it.\n  Knowledge Gap (~1 sentence). Now that you\u2019ve stated what is already known, state what is not known. What specific question is your work attempting to answer?\n  \u201cHere we show\u2026\u201d (~1 sentence). State your general experimental approach and the answer to the question which you just posed in the \u201cKnowledge Gap\u201d section.\n  Experimental Approach &amp; Results (~1-3 sentences). Provide a high-level description of your most important methods and results. How did you get to the conclusion that you stated in the \u201cHere we show\u2026\u201d section?\n  Implications (~1 sentence). Describe how your findings influence our understanding of the relevant field and/or their implications for future studies.\n  \u6458\u53e5 \u9648\u8ff0\u7814\u7a76\u70b9\u91cd\u8981\u6027/\u7814\u7a76\u96be\u70b9\uff0c\u88ab\u5e7f\u6cdb\u7814\u7a76\uff0c\u5907\u53d7\u5173\u6ce8\uff1b\u6570\u636e\u63cf\u8ff0  \u4e00\u76f4\u4ee5\u6765\u4e00\u4e2a\u91cd\u8981\u7684\u7814\u7a76\u95ee\u9898, \u6301\u7eed\u88ab\u5173\u6ce8\uff0c\u4e00\u76f4\u4ee5\u6765\u90fd\u662f\u4e00\u4e2a\u6709\u4e89\u8bae\u7684\u8bdd\u9898\uff0c\uff08\u56e0\u4e3a&hellip;\u5728&hellip;\u9886\u57df/\u7814\u7a76\u4e2d\u6709\u91cd\u8981\u610f\u4e49\uff09  Delineating urban functional areas is one of the long lasting questions in urban studies and planning. Land use and land cover classification through remote sensing imagery is a fundamental research topic in remote sensing community. Recently, numerous in-depth discussions have been conducted to classify urban land use via POIs. Over the past 50 years, there has been continued and sustained interest in developing &hellip; for solving the &hellip; problem, as this problem is applied in a wide variety of areas including .. and &hellip; Therefore, the effective detection of urban land use patterns, which are significant for formulating effective urban planning policies, has been a controversial issue in recent studies. Many studies are in an effort to improve the pedestrian environment and pedestrian has become the subject of increasing attention among planners, engineers and public health officials. An understanding of what environment factors control or influence the value of D and its spatial variation is one of the central themes in geomorphology and hydrology. is of considerable conceptual and practical interests as the question is intimately related to the problem of assessing the risk of damage and degradation of landscape and the designing of measures to reduce such damage. In the last decade, the contradiction between (\u65e5\u76ca\u589e\u957f\u7684\u77db\u76fe) the housing demand from residents and high housing prices has become a top issue in the economy and livelihood of China, especially in metropolitan cities such as Beijing, Shanghai, and Shenzhen. [\u5373\u4f7f\u53d6\u7684\u4e00\u4e9b\u6210\u5c31\uff0c\u4f46&hellip;\u4ecd\u662f\u4e00\u9879\u8270\u96be\u7684\u4efb\u52a1] Although significant progress has been achieved, deriving high-resolution urban land use maps from satellite images is still a difficult task. [\u5728\u8fd9\u79cd\u65b0\u7684\u80cc\u666f\u4e0b\uff0c&hellip;\u95ee\u9898\u53d8\u5f97\u8d8a\u6765\u8d8a\u663e\u8457] In these newer contexts, then, the typical problem size for regionalization algorithms is increasing dramatically.   \u4f17\u6e90\u6280\u672f/\u57fa\u4e8e\u4e2a\u4f53\u7684\u5730\u7406\u5927\u6570\u636e\u5e26\u6765\u7684\u9645\u9047;\u89c1\u8bc1\u4e86&hellip;\u7684\u5feb\u901f\u53d1\u5c55\uff1b\u3002\u3002\u3002\u6570\u636e\u6210\u4e3a\u3002\u3002\u3002\u7814\u7a76\u7684\u65b0\u7684\u6570\u636e\u6e90\uff1b \u3002\u3002\u4e3a\u3002\u3002\u3002\u7684\u7814\u7a76\u5e26\u6765\u7075\u611f\uff1b\u5927\u6570\u636e\uff1b\u6df1\u5ea6\u5b66\u4e60\u6280\u672f  The emergence of big data and volunteered geographic information (VGI), along with state-of-the-art computing and analyzing techniques, provides new opportunities for capturing and depicting human mobility and perceptions of places. Previous studies indicated that urban functional zones have a close relation to the regions formed by the city road network, and exploring this relation from the community perspective will undoubtedly bring new insights.(\u4e3a\u3002\u3002\u3002\u7684\u7814\u7a76\u5e26\u6765\u7075\u611f) (\u4f34\u968f\u7740&hellip;\u7684\u52bf\u5934) As the momentum to generate more geo-enriched movement data at large volumes, high frequencies and for longer durations continues, this is a timely and significant achievement towards movement data science The proliferation of crowdsourcing technology(\u4f17\u6e90\u6280\u672f) and the emergence of individual-level big geospatial data(\u4e2a\u4f53\u7b49\u7ea7\u7684\u5730\u7406\u5927\u6570\u636e) bring unprecedented opportunities for researchers to better understand the physical and socioeconomic environment of urban regions. In 2020, with the COVID-19 pandemic, we witness a change in the way large mobility data are shared and how access to geo-enriched mobility data is streamlined through data dashboards. (\u89c1\u8bc1\u4e86\u5927\u578b\u79fb\u52a8\u6570\u636e\u5171\u4eab\u65b9\u5f0f\u7684\u53d8\u5316\uff0c\u4ee5\u53ca\u5982\u4f55\u901a\u8fc7\u6570\u636e\u4eea\u8868\u76d8\u7b80\u5316\u5bf9\u5730\u7406\u4e30\u5bcc\u7684\u79fb\u52a8\u6570\u636e\u7684\u8bbf\u95ee) Enabled by the ubiquitous generation of geo-referenced tracking data, there has been a recent surge in map construction algorithms coming from different computer science domains. The last five decades have witnessed the fast development of remote sensing techniques, of which a major objective is to reveal the physical characteristics of the Earth&rsquo;s surface, such as land cover features. In recent years, the proliferation of crowdsourcing technology has enhanced the ability to collect a massive amount of images to represent the physical setting of place and to predict human perceptual responses of images. More recently, spatially referenced social media data emerged as a new data source for studying socioeconomic dynamics in the cities, such as human mobility, travel behaviors, and urban land use. These numerous street-level images (\u6570\u636e) not only scale up the size and scope of the related research but also provide new perspectives and dimensions for formalizing the concept of place. This data source lays the foundation (\u5960\u5b9a\u4e86\u57fa\u7840) of new approaches to observe, perceive and understand the urban environment. New sources of data such as &lsquo;big data&rsquo; and computational analytics have stimulated innovative pesestrian oriented research. Benefiting from the multi-level and multi-sourced big geospatial data, research efforts have been made to approximate spatio-temporal urban mobility patterns using Global Positioning System data , smart card records, mobile positioning data, etc. Over the years, the rapid development of map services and volunteered geographic information (VGI) has provided a massive amount of geo-tagged images. With wide applications of wireless communication, global position system (GPS), pervasive computing technology, and WEB 2.0, big data on (spatial behavior ) can reveal (human mobility patterns) at very refined temporal and spatial resolutions and thus sense the socioeconomic environments in an urban system. Recently, the development of network science (Cohen and Havlin 2010, Estrada 2012) and the creation of a large number of large-scale datasets have promoted research on road networks. \u5927\u6570\u636e\u53ca\u5927\u6570\u636e\u6280\u672f\u5728\u67d0\u4e9b\u9886\u57df\u5438\u5f15\u529b\u5e7f\u6cdb\uff0c\u6bd4\u5982\u67d0\u4e9b\u671f\u520a\u5f00\u653e\u4e13\u520a\u7b49\u7b49 Within the past decade, however, big data and big data analytics have begun to attract attention in the field of transport studies. Thus, for instance, several journals, such as Transportation Research Part C and Travel Behaviour and Society have devoted special issues to the topic. These recent studies have shown that big-data approaches make it possible to explore the spatial distribution of commuting burdens over a large geographical area.   \u5177\u6709\u91cd\u8981\u610f\u4e49, \u5177\u6709\u91cd\u8981\u4f5c\u7528\uff0c\u5728\u3002\u3002\u3002\u4e2d\u8d77\u5230\u91cd\u8981\u4f5c\u7528  Sensing the spatial structures of urban land use quickly and identifying urban function structures accurately are of great significance in formulating effective policies and regulations for urban planning. Land use and land cover are extremely important geospatial features and play important roles in many fields such as environmental monitoring, urban planning and government management. Urban land use information plays an important role in urban management, government policy-making, and population activity monitoring. Extensive evidence has revealed that street greenery (sth), as a quality-of-life component, is important for oxygen production, pollutant absorption, and urban heat island effect mitigation. Measuring the human sense of place can potentially enrich place semantics(\u4e30\u5bcc\u573a\u666f\u8bed\u4e49), which will further help researchers understand the underlying urban heterogeneity patterns(\u7406\u89e3\u6f5c\u5728\u7684\u57ce\u5e02\u5f02\u8d28\u6027\u6a21\u5f0f) and reveal the impacts of urban function(\u63ed\u9732\u57ce\u5e02\u529f\u80fd\u7684\u5f71\u54cd).   \u9610\u8ff0\u8be5\u7814\u7a76\u6709\u4f17\u591a\u5e94\u7528\u9886\u57df\uff0c\u5e76\u4e3e\u4f8b  Regionalization is essentially a special form of clustering in geographic data analysis (Haining et al. 1994) that has a wide and diverse range of application domains, such as ecological patterns (Kupfer et al. 2012), medical regions (Harner and Slater 1980, Koylu et al. 2018), hydrology (Peterson et al. 2015) and city structure (Walsh and Pozdnoukhov 2011). Learning how to gather knowledge about physical settings and the visual information of a place that affects the experience of observers has long been of interest to a wide variety of fields, such as&hellip; Understanding intra-urban human mobility patterns is crucial in addressing many real-world challenges, such as discovering functional urban zones that characterize the physical and social characters of a city (Austwick et al. 2013, Yuan et al. 2015, Liu et al. 2015, 2016), understanding road usage patterns for traffic prediction and congestion mitigation (Wang et al. 2012), modeling the spatial transmission of infectious diseases to improve epidemic control and intervention (Tizzoni et al. 2014), and assisting in the rapid evacuation of affected populations during calamitous events, such as earthquakes or terrorist attacks (Bengtsson et al. 2011). [from wenwen Li, https://www.tandfonline.com/doi/full/10.1080/13658816.2020.1712401] Urban AOI have great meanings in multiple application domains. For tourists, AOI highlight the interesting zones within a city, and can therefore be used to support trip planning of travelers. For city planners, AOI reveal the regions which receive high exposure among the general public. Accordingly, these regions could be assigned higher priorities when there are only limited resources for urban planning projects, such as city beautification (Espuche et al., 1991, Gandy, 2006). Since AOI are often visited by a large number of people, transportation analysts can examine these regions to understand traffic flows and human mobility patterns (Batty, 2007, Yuan and Raubal, 2012). In addition, information service providers can display targeted information based on AOI (e.g., highlighting the hotels within the AOI of a city)    \u73b0\u6709\u7814\u7a76\u8005\u505a\u4e86\u54ea\u4e9b\u4e8b\u60c5\uff1b\u65b9\u6cd5\u5206\u7c7b\uff1b\u65b9\u6cd5\u63cf\u8ff0\uff1b\u65b9\u6cd5\u603b\u7ed3\uff1b\u65b9\u6cd5\u6bd4\u8f83  \u5728\u3002\u3002\u3002\u65b9\u9762\uff0c\u73b0\u6709\u7814\u7a76\u8005\u505a\u4e86\u3002\u3002\u3002\u7684\u5927\u91cf\u7684\u52aa\u529b/\u5c1d\u8bd5/\u7814\u7a76\u3002  Research efforts have been made to formalize a place in terms of two aspects(\u5728\u4e24\u4e2a\u65b9\u9762\u505a\u51fa\u4e86\u5de5\u4f5c): &hellip; [\u5f53\u524d&hellip;\u7684\u7814\u7a76\u4e3b\u8981\u5206\u4e3a\u4e24\u4e2a\u65b9\u9762] Current trajectory privacy protection studies focus on two research streams. One is the differential privacy approach to grouping and mixing the trajectories from different users so that the identification of individual trajectory data is converted into a k-anonymity problem. For example, &hellip; Another research stream is (\u53e6\u8d77\u4e00\u884c) called geo-masking, which blurs the locations of original trajectory data by utilizing perturbation on the spatial dimension so that the original locations can be hidden or modified while spatial patterns may not be significantly affected. For example, &hellip; Attempts have also been made to delineate urban functional areas using social media data. For instance &hellip; Benefiting from the multi-level and multi-sourced big geospatial data, research efforts have been made to approximate spatio-temporal urban mobility patterns using Global Positioning System data , smart card records, mobile positioning data, etc. Researchers have employed street view images to reconstruct 3-dimensional urban models, to explore urban morphologies by mapping the distribution of image locations, and to analysze the visual elements of an urban space in terms of human perception, urban greenery, urban land use, and the sky view factor. Previous studies into the factors controlling the value of D have resulted in a large body of literature. The literature advanced by other urban planners and geographers has also demonstrated the importance of streets and the necessity of taking them as the elementary unit from various perspectives.(\u4ece\u591a\u79cd\u89c6\u89d2\u800c\u8a00&hellip;\u4e4b\u91cd\u8981)   \u5217\u4e3e\u73b0\u6709\u5de5\u4f5c  Several stands of status quo work \uff08\u5de5\u4f5c\u73b0\u72b6\uff09can be identified. At the &hellip; level, &hellip; At the &hellip; level. Considerable research in recent years has demonstrated the advantages of this new data source in monitoring neighborhood changes, calculating the sky view factor, quantifying neighborhood types, discovering distinct place features, and measuring perceptions. On this basis, two major categories of methods were developed to quantify biophysical compositions in an urban area. The first category is machine learning methods, including A, B and C. With these machine learning methods, biophysical composition information is derived by establishing an empirical relationship with various spectral and spatial characteristics extracted from remote sensing imagery. The second category is spectral unmixing techniques. + spectral unmixing techniques \u7684\u4e00\u53e5\u8bdd\u4ecb\u7ecd. (\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u8bb2\u4ee5\u4e0a\u7684\u4e0d\u8db3\u4e86) A common thread that ties together previous works in modeling urban mobility is their focus on the driving force of mobility. (\u4ee5\u5f80\u7814\u7a76\u7684\u5173\u6ce8\u70b9) Previous works &hellip; (\u65b9\u6cd5\u5206\u7c7b) From the trajectory**-based perspectives**, **there are three main approaches to** route planning **based on** big taxi trajectory path algorithm. The first approach is&hellip; The second approach &hellip; Drivers' experience is essential for finding satisfactoy routes for users of navigation systems, which need to take both real-time traffic conditions (e.g., consestion) and the driving preference of users into account. For the former, &hellip; The latter &hellip; [\u9891\u7e41\u5e94\u7528\uff0c\u5728&hellip;\u4e2d\u6d41\u884c\u5f00\u6765] Pixel-based image classification methods using spectral and/or textural properties are frequently applied to extract urban land use information. Recently, per-field and object-based classification methods have gained popularity in deriving land uses from the satellite images because per-field classification methods can better describe the function of urban areas and serve the needs of urban planning   &hellip;\u65b9\u6cd5\u53d6\u5f97\u5de8\u5927\u6210\u529f/\u5f88\u591a\u7814\u7a76\u9a8c\u8bc1\u4e86\u8be5\u65b9\u6cd5\u7684\u6709\u6548\u6027/\u53ef\u9760\u6027  In addition, great progress has been made on recent advance of computer vision technique for recognizing the image content by deep learning, which has attracted much attention and achieved great success in multiple fields due to its powerful ability in automatic image feature learning and representation. Due to its powerful ability in automatic image feature learning and representation, DCNN model has attracted much attention and achieved great success in multiple fields, including speech recognition, natural language processing, and visual object detection. Overall, the standard HPM has been proved effective and achieved great success in considerable fields and empirical studies, from real estate economy, urban planning, to policy making. Many in-depth discussions suggest that multi-social media data have great potential to reveal urban land use patterns. Previous studies indicated that mean filtering is an effective social media data preprocessing method to reduce the data size and computational demands without much information loss [\u5957\u8def\u5f88\u68d2] The emergence of deep learning has advanced many research fields, including image recognition, time series classification, and etc. They have also greatly boosted the development of remote sensing. Significant improvements have been made in many tasks, such as hyperspectral image analysis, image scene classification, semantic labeling, object detection, and image retrieval. The major advantages of deep learning approaches are the powerful abilities to automatically learn high-level features from large amount of data, which are vital to bridge the gap between different data modalities at feature level. Therefore, deep learning-based fusion methods are very potential to integrate the multi-source and multimodal remote and social sensing data. (From https://doi.org/10.1016/j.isprsjprs.2020.02.014) [\u540c\u6837\u5e94\u7528\u4e8e\u5176\u4ed6\u9886\u57df] Despite the tremendous success in image recognition, convolutional neural networks have recently also been used in time series analysis and shown superior performances.   \u65b9\u6cd5\u6bd4\u8f83  The DTW distance is found to be more robust to time-series data clustering than other conventional measures such as the Euclidian distance. \uff08\u65b9\u6cd5\u6bd4\u8f83\uff0c \u3002\u3002\u3002\u6bd4\u3002\u3002\u3002\u66f4\u7a33\u5065\uff0c\u66f4\u597d\uff09 Clustering time-series data is more difficult than the clustering of non-sequential data, as (\u56e0\u4e3a) the order of element in the time-series need to be considered when measuring the similarity between data samples.(\u65b9\u6cd5\u6bd4\u8f83.\u4e0e&hellip;\u76f8\u6bd4\uff0c\u66f4\u52a0\u56f0\u96be\uff0c\u96be\u70b9) A comparison is further conducted between the proposed method and some state-of-the-art topic models \u6211\u4eec\u7684\u65b9\u6cd5\u4f18\u4e8e\u57fa\u7ebf\u6807\u51c6 Our method outperformed baseline methods in a case study using Shanghai taxi trip data. (\u4f18\u4e8e) We find that, regarding(\u5c31&hellip;\u800c\u8a00) understanding the urban physical environment, the visual features learned in our designed street classification task largely outperformed the visual feature learned in the ImageNet object detection task.   review \u603b\u7ed3\uff0c\u65b9\u6cd5\u603b\u7ed3  As is evident from the above review, there is abundant research regarding the travel behaviors of public bicycle users, which provides the basis for research into free-float bicycle sharing. (\u4ece\u4e0a\u9762\u7684\u8bc4\u8bba\u53ef\u4ee5\u660e\u663e\u770b\u51fa\uff0c\u5927\u91cf\u7684\u7814\u7a76\u3002\u3002\u3002) Although both per-pixel and sub-pixel analyses have been employed for analyzing urban environments with different degrees of success. these methods are always considered as complicated(\u590d\u6742\u96be\u61c2), computationally intensive(\u8ba1\u7b97\u5bc6\u96c6), and sometimes subjective(\u4e3b\u89c2). especially when applied to a large geographic area (\u8bf4\u522b\u4eba\u7684\u4e0d\u8db3\u8981\u52a0\u5f15\u7528). + \u63a5\u4e0b\u6765\u8981\u4e3e\u4f8b\u8bf4\u660e\u4eba\u5bb6\u7684\u4e3a\u5565\u4e0d\u8db3 (\u8fd9\u4e9b\u65b9\u6cd5\u901a\u5e38\u88ab\u8ba4\u4e3a\u662f\u590d\u6742\u96be\u61c2\u7684/\u8ba1\u7b97\u590d\u6742/\u5e26\u6709\u4e3b\u89c2\u8272\u5f69\u7684\u3002\u3002\u3002)    \u76ee\u524d\u7814\u7a76\u73b0\u72b6\u7684\u4e0d\u8db3\u70b9;\u96be\u70b9\uff1b\u76f8\u6bd4\u672c\u6587\u4e2d\u65b9\u6cd5\u7684\u4f18\u52bf\uff1b\u4eae\u70b9;\u53d7\u9650\uff0c\u9650\u5236  (\u96be\u70b9\u3002\u3002\u4ecd\u662f\u5f85\u89e3\u51b3\u7684\u95ee\u9898); \u9648\u8ff0\u7814\u7a76\u70b9\u7684\u96be\u70b9  \u4ecd\u662f\u5f85\u89e3\u51b3\u7684\u95ee\u9898 However, it remains an unsolved problem despite numerous previous attempts to address it. \u76ee\u524d\uff0c\u5bf9\u4e8e\u7814\u7a76\u8005\u4eec\u800c\u8a00\uff0c\u56de\u7b54\u8bf8\u5982&hellip;\u7684\u95ee\u9898\u4ecd\u7136\u662f\u56f0\u96be\u7684 Correspondingly, for planners, it is also difficult to accurately answer questions such as \u2018where the quality of the physical environment is the most dilapidated in the city that regeneration should be given first consideration\u2019 and \u2018in fast urbanising cities, how is the city appearance changing. \u867d\u7136&hellip;\u5df2\u7ecf\u6709\u4e86\u4e00\u4e9b\u7814\u7a76\uff0c\u4f46\u4ecd\u662f\u4e0d\u8db3\u591f\u7684\uff0c\u5176\u6f5c\u529b\u6709\u5f85\u88ab\u6316\u6398\u3002 Although some researchers have focused on studying road network structure from community perspective, community studies in road networks are still insufficient, and their potential remains to be tapped. \uff08\u4ecd\uff09\u9700\u8981\u8fdb\u4e00\u6b65/\u6df1\u5165\u7684\u7814\u7a76\u3002Accordingly (\u76f8\u5e94\u5730), the application of spatial-pattern features for functional-zone segmentation needs further studies. \u4e4b\u524d\u7684\u65b9\u6cd5\u4e0d\u9002\u7528\uff0c\u56e0\u6b64\u9700\u8981\u8fdb\u4e00\u6b65/\u6df1\u5165\u7684\u7814\u7a76 Accordingly (\u56e0\u6b64), neither method is applicable to the evaluation of functional-zone segmentations, thus a novel evaluation method should be further developed. While researchers have devoted considerable attention to spatial inequities in commuting burdens, this work has until recently been characterized by certain shortcomings.   \u7814\u7a76\u4e3b\u8981\u96c6\u4e2d\u5728&hellip;\uff0c\u5173\u4e8e&hellip;\u7684\u7814\u7a76/\u8bc1\u636e\u662f\u4e0d\u8db3\u7684  \u7814\u7a76\u4e3b\u8981\u96c6\u4e2d\u5728&hellip;\uff0c\u5173\u4e8e&hellip;\u7684\u8bc1\u636e\u662f\u4e0d\u8db3\u7684 However, studies have focused mainly on cycling as a sole transportation mode, and evidence for bicycle-transit integration is scarce. although bicycle-transit integration has attracted some research attention in developed countries, evidence from developing countries remains scarce. \u4ecd\u6709\u63d0\u5347\u7684\u7a7a\u95f4 Although many methods have been proposed for discovering urban functional zones, there is still space for improvement. &hellip;\u5173\u8054\u7684\u8bc1\u636e\u662f\u4e0d\u8db3\u7684 The evidence for the association between urban greenness and cycling behaviors is inconclusive \u5f88\u5c11\u6709\u7814\u7a76\u5728&hellip;\u5f00\u5c55, \u5f88\u5c11\u6709\u7814\u7a76\u5728\u56fd\u5185\u5f00\u5c55 In addition, few studies have been conducted in developing countries, such as China, which enjoyed the reputation of cycling nation until the late 1990s and witness a big comeback of cycling in the last several years. &hellip;\u7684\u7814\u7a76\u662f\u4e0d\u5145\u8db3\u7684 Although some researchers have focused on studying road network structure from the community perspective, community studies in road networks are still insufficient, and their potential remains to be tapped. \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u4ec5\u6709\u5c11\u91cf\u6587\u732e\u652f\u6491\u8be5\u8bba\u70b9 To date, the discussion regarding which urban design attributes lead to better cities or higher property values has largely been theoretical, supported quantitatively by only a few handful of studies. \u867d\u7136\u6709\u5f3a\u70c8\u7684\u8054\u7cfb\uff0c\u4f46\u662f\u4ecd\u7f3a\u5c11\u7814\u7a76\u3001\u8ba1\u7b97\u5de5\u5177\u548c\u6570\u636e\u80fd\u591f&hellip; Despite the strong link between urban design attributes and economic value, there is a clear lack of research, computational tools and data that can be used to discover these attributes and inform urban planning policies [\u5728\u4ee5\u5f80\u7684\u7814\u7a76\u4e2d, &hellip;\u6ca1\u6709\u88ab\u5145\u5206\u8003\u8651\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd&hellip;] In previous studies, the hierarchical correspondence and interaction between urban landscape and human activities have not been given full consideration in the cognition of urban functional zones, which would influence the accuracy and interpretability of the results. Therefore, a hierarchical fusion method considering urban landscape and human activity patterns based on multi\u2010source data is proposed in this article.   \u7814\u7a76\u53d7\u9650&hellip;;\u4e0d\u80fd\u591f&hellip;;\u6ca1\u6709\u8003\u8651\u5230  \u867d\u7136\u8fdb\u884c\u8fc7\u5927\u91cf\u7684\u7814\u7a76\uff0c\u4f46\u662f\u4ecd\u53d7\u9650\u4e8e\u6570\u636e\u7684\u83b7\u53d6\u548c\u5de5\u5177\u7684\u4f7f\u7528 Although several attempts have been made (\u5f15\u7528) to analyze the physical appearance of an urban space by photos, the research scale and throughput have been limited by the accessibility of qualified data and the appropriate tools to process it. \u53ef\u80fd\u65e0\u6cd5\u5168\u9762\u5730\u63cf\u8ff0&hellip; The traditional HPM may not fully characterize the human settlement comprehensively. \u4ee5\u524d\u7684\u7814\u7a76\u4e3b\u8981&hellip;\uff0c\u56e0\u6b64\u9020\u6210\u4e86\u4f7f\u4eba\u4e0d\u4fe1\u670d\u7684\u7ed3\u8bba However, previous studies mainly used overhead-view greenspace indicators such as park area or NDVI to assess greenspace exposure, thus leading to inconsistent findings. \u7531\u4e8e\u7f3a\u5c11\u6709\u6548\u7684\u8bc4\u4ef7\u6307\u6807\u548c\u6570\u636e\uff0c&hellip;\u6ca1\u6709\u88ab\u5e7f\u6cdb\u5730\u8003\u8651\u5728\u5185\u3002all of these place-based aspects have not been examined extensively due to the absence of effective metrics and data. \u6bd4\u8f83\u59d4\u5a49\uff0c\u901a\u5e38\u7814\u7a76\u4eba\u5458\u5e76\u4e0d\u80fd\u786e\u4fe1\u3002\u3002\u3002\u662f\u5408\u9002\u7684 In most cases, however, the researcher cannot be certain that the connections used in the study are appropriate. \u8bb2\u8fd9\u4e2a\u6570\u636e/\u5de5\u5177\u6ca1\u6709\u80fd\u529b&hellip;(\u63d0\u53d6\u8fd9\u7c7b\u7279\u5f81) Although remote sesing data can to a certain extent capture utban and suburban landscape and infrastructure(e.g., buildings and street networks), remote sensors have limited capability to extract socioeconomic attributes and human dynamics such as movements and daily activities. \u56e0\u4e3a\u8981\u624b\u5de5\u5904\u7406\u4fe1\u606f\uff0c\u56e0\u6b64\u53d7\u9650\u4e0e\u5927\u89c4\u6a21\u7684\u5e94\u7528 Current stduies, however, are still limited and subjecetive with regard to the use of Google Street View and other sources for environment audits or pedestrian counts bacause of the manual information extraction and compilation, especially for large areas. &hellip;\u7684\u5c1d\u8bd5\u4e5f\u5e76\u4e0d\u80fd\u5145\u5206\u7684\u62df\u5408\u590d\u6742\u7684\u672c\u8d28 Attempts to simplify the knowledge of relevant contexts as predefined mathematical functions cannot adequately model its complex nature. \u8fd9\u4e2a\u6a21\u578b/\u65b9\u6cd5\u662f&hellip;\u7684\u7ecf\u5178\u6a21\u578b/\u65b9\u6cd5\uff0c\u4f46\u662f\u4ecd\u7136\u4e0d\u80fd\u591f&hellip; This network abstraction model is the classic method of road network processing in traffic simulation and urban modeling, but it is incapable of revealing the latent network structure and mode. \u4ee5\u5f80\u7814\u7a76\u8d8b\u5411\u4e8e&hellip;\uff0c\u800c\u6ca1\u6709\u5145\u5206\u8003\u8651\u5230&hellip; Primarily based on node centrality analysis, these works tend to treat and evaluate the road nodes and segments independently, without considering the relationship between road segments. \u5ffd\u7565&hellip;\uff0c\u4f7f\u67d0\u4e9b\u7814\u7a76\u9677\u5165\u74f6\u9888 The ignorance of spatial interaction information makes related research encounter a bottleneck on improving classification accuracy. \u8fd9\u4e9b\u5c40\u9650\u6027\u81f4\u4f7f\u4eba\u4eec\u547c\u5401\u2014\u2014\u4e3a\u7814\u7a76\u548c\u5e94\u7528\u7684\u751f\u6001\u533a\u57df\u7684\u53d1\u5c55\u63d0\u4f9b\u66f4\u6709\u529b\u7684\u79d1\u5b66\u4f9d\u636e. These previously recognized limitations have led to calls for a stronger scientific basis for development of ecological regions for both research and application. \u7136\u800c\uff0c\u5173\u4e8e\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u7684\u6700\u4f73\u65b9\u6cd5\u7684\u4e00\u81f4\u610f\u89c1\u4e00\u76f4\u96be\u4ee5\u8fbe\u6210\uff0c\u73b0\u6709\u7684\u6587\u732e\u4ee5\u4f20\u7edf\u7684\u8c03\u67e5\u65b9\u6cd5\u4e3a\u4e3b\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u5bb9\u6613\u56e0\u6837\u672c\u91cf\u5c0f\u800c\u53d7\u5230\u6279\u8bc4\uff0c\u7279\u522b\u662f\u5728\u5bf9\u5927\u57ce\u5e02\u7684\u7814\u7a76\u4e2d\u4f7f\u7528\u3002Agreement on the best approach for addressing this problem has been elusive, however, and the existing literature is dominated by traditional survey approaches, which are liable to criticism for small sample sizes, especially when used in studies of megacities   \u4f20\u7edf\u65b9\u6cd5\u8d39\u65f6\u8d39\u529b  \u53d7\u9650\u4e8e\u91d1\u94b1\uff0c\u65f6\u95f4\uff0c\u6570\u636e\u7cbe\u5ea6\u548c\u4e3b\u89c2\u80fd\u52a8\u6027 The significant limitation of current pedestrian count method is mainly on cost, time, data accuracy, and subjectivity. Because of the limitations of data sources, analytic tools, and computation capabilities , these studies had limited development, with most studies relating to city structures focused on urban morphology. Travel-behavior studies experienced a low period during the 1990s for the same reason. \u76f8\u6bd4\u4e8e\u4f20\u7edf\u7814\u7a76 The rapid development of location-based services and technologies facilitates the attainment of big geospatial data and provides more accurate, plentiful and effective information of human interactions in places, compared with traditional survey data. Determining how green our streets are has always been difficult given the time and money consumed using conventional methods. \u95ee\u5377\u8c03\u67e5\uff0c\u91c7\u8bbf Previous studies were conducted by the traditional data collection methods(\u4f20\u7edf\u7684\u6570\u636e\u6536\u96c6\u65b9\u6cd5), such as interviews and questionnaires(\u95ee\u5377\u8c03\u67e5\uff0c\u91c7\u8bbf), which are laborious, costly and time-consuming(\u8d39\u65f6\u8d39\u529b). \u4f20\u7edf\u65b9\u6cd5\u8d39\u65f6\u8d39\u529b\uff0c\u5e94\u5f53\u51fa\u73b0\u65b0\u7684\u8303\u5f0f\u6765\u6307\u5bfc most studies rely on in-person assessments or field observations to collect data about built environment characteristics. Such conventional data collection approaches have several challenges, including high labour intensity, long update period, restriction to small-scale geographic areas, etc. (Golder and Macy 2011; Seresinhe, Preis, and Moat 2015; Lu 2019). New paradigms should be proposed to solve these problems and guide studies on sensing the urban physical environment (Rathore et al. 2016; Janowicz et al. 2019). \u4f20\u7edf\u65b9\u6cd5\u52a3\u52bf\u8be6\u7ec6\u63cf\u8ff0 Traditional studies for environmental health research usually employ self-reports and questionnaires, field surveys, and secondary sources to characterize built environments at element level and at scene level, respectively. Questionnaires and self-reports are arguably the most commonly used sources. With these sources, investigators may ask respondents to evalu- ate different aspects of neighbourhood attributes . For field observations, researchers are asked to record and describe their urban environment audits by walking or driving around the study areas with pre-defined survey forms (Gull\u00f3n et al. 2015; Lawlor et al. 2003; Takano, Nakamura, and Watanabe 2002). Secondary sources refer to those pre-defined environmental measures based on spatial analysis and modelling such as spatial accessibility measures (Pliakas et al. 2017; Leslie and Cerin 2008). All three approaches have their strengths and limitations. Questionnaires are the most commonly used method. It might be affected by people\u2019s biases while field-audits are more objective. But both methods are costly, labour-intensive and time-consuming when conducting research with a large sample size or over large regions. Secondary sources might not characterize neighbourhoods in sufficient detail, and might be limited to specific types of environmental exposures (Pliakas et al. 2017). - [Yuhao Kang, A review of urban physical environment sensing using street view imagery in public health studies] \u4f20\u7edf\u8c03\u67e5\u6570\u636e\u52a3\u52bf\uff1a\u8d35\u3001\u77ed\u65f6\u6548\u3001\u4e0d\u5177\u4ee3\u8868\u6027 Notwithstanding the fact that travel survey or diary data are often sufficient to create a detailed picture of travellers\u2019 socioeconomic characteristics, the obvious disadvantages of such data include the expense involved in collection, the inability of such data to reveal real-time travel behaviour over a long period, and the small and therefore non-representative nature of the populations sampled in travel surveys\u2014disadvantages that are particularly problematic for studies of megacities.   \u4e0e\u73b0\u5b58\u7814\u7a76\u76f8\u6bd4&hellip;\uff0c \u6211\u4eec\u7684\u65b9\u6cd5\u3002\u3002\u3002\u5177\u6709\u7684\u4f18\u52bf  Comparing with existing studies that delineate urban functional areas with social media data, our method has the following advantages. \u4e0e\u4ee5\u5f80\u7814\u7a76\u4e0d\u540c\uff0c\u6211\u4eec\u7684\u7814\u7a76\u4fa7\u91cd\u3002\u3002\u3002We differ from these previous approaches in multiple ways. First, &hellip; Secondly, &hellip; Third, &hellip; \u8be5\u65b9\u6cd5\u80fd\u591f&hellip;,\u56e0\u6b64\u9002\u5408&hellip;\uff0c\u4e00\u822c\u7528\u4e8e\u4ecb\u7ecd\u5b8c\u65b9\u6cd5\u505a\u4e00\u53e5\u603b\u7ed3 This powerful technique is able to capture both the longrange and short-range relationships through its neural network weights. Clearly, it is suitable for modeling a graph of connected places. Building on recent studies with manual collection of pedestrian counts, our study contributes in three ways. Comparing with conventional types of social media data, the new dataset employed in this study offers a unique advantage (\u72ec\u7279\u7684\u4f18\u52bf)- the ability to capture the inherent heterogeneity even within the same urban function types. \u8ba1\u7b97\u66f4\u52a0\u9ad8\u6548 The DTW distance based k-medoid method in our study is computationally more efficient than previous methods used to delineate urban function areas, such as the family of probabilistic topic models.   \u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u901a\u8fc7\u3002\u3002\u3002\u7684\u65b9\u5f0f\u63d0\u5347  \u4e0d\u9700\u8981\u4eba\u5de5\u5e72\u9884\uff0c\u51cf\u5c11\u8ba1\u7b97\u6210\u672c This method can be implemented without much human intervention (e.g., input prior information or restructuring procedures), and has a much lower computational cost.    \u672c\u6587\u505a\u4e86\u54ea\u4e9b\u4e8b\u60c5\uff1b\u91c7\u7528&hellip;\u7684\u65b9\u6cd5\uff1b\u672c\u6587\u76ee\u7684/\u76ee\u6807\u5728\u4e8e&hellip;\uff1b\u5b9e\u9a8c/\u7b97\u6cd5/\u6a21\u578b\u9a8c\u8bc1\u65b9\u6cd5\uff1b\u8be6\u60c5\u8bf7\u770b&hellip;;  \u672c\u6587\u5173\u6ce8\u70b9/\u76ee\u6807/\u76ee\u7684\u5728\u4e8e\uff1b\u4fa7\u91cd  \u672c\u6587\u5173\u6ce8\u70b9 Of particular interest in this article is the spatiotemporal modeling of local nonstationary process. Specifically, an extension of GWR, GWTR is developed in order to account for local effects in both space and time. \u5f3a\u8c03\u6f5c\u529b We focus on highlighting the potential role of computer vision in understanding urban systems related to the built environment. \u6c47\u603b/\u89c4\u5212\u7814\u7a76\u95ee\u9898\uff1a  \u672c\u6587\u5f3a\u8c03\u4ee5\u4e0b\u51e0\u4e2a\u95ee\u9898 This article address the following three questions: (1)&hellip; (2)&hellip; (3)&hellip; \u672c\u6587\u5173\u6ce8\u95ee\u9898 Two research questions (RQ) will be investigated in this work. RQ 1: &hellip; RQ 2: &hellip; \u6ca1\u6709&hellip;\u7684\u6df1\u5ea6\u7814\u7a76\uff0c\u8fd9\u4e9b\u95ee\u9898\u5f88\u96be\u88ab\u89e3\u7b54 Comparing to these findings, how do the mobility patterns differ in bike-sharing trips from regular cycling activities? Will bike-sharing trips always follow shortest paths? How does road characteristics influence bike-sharing users\u2019 route choice? Without the proper use and mining of bike-sharing trajectory data, these questions can hardly be thoroughly exploited.   \u5f52\u7eb3\u603b\u7ed3\u4e0a\u8ff0\u8bba\u6587\uff0c\u672c\u6587\u7684\u4e3b\u8981\u76ee\u7684\u662f&hellip; Drawing upon (\u5f52\u7eb3\u603b\u7ed3) the review of place formalization and new methods in deep learning, the purpose of this study is to formalize the concept of place in terms of locale \u2013 the physical appearance of place. \u672c\u6587\u76ee\u7684&hellip; Our goal in this paper is to explore this possibility in terms of the physical quality of the urban environment. \u672c\u6587\u76ee\u7684&hellip; The aim of this study is to explore issues involved in the use of Google Street View (\u66ff\u6362\u6570\u636e\u6e90) to examine outdoor food and beverage advertising (\u4e3b\u9898\u5e94\u7528). \u672c\u6587\u7684\u76ee\u7684\u662f\u7814\u7a76&hellip;\u7684\u53ef\u884c\u6027 The objective of this study was to investigate the feasibility of incorporating place connections to predict place characteristics.   \u8fd9\u4e0d\u662f\u672c\u6587\u5173\u6ce8\u7684\u91cd\u70b9  This work also relates to a different stream of research, which focuses not on data quality per se, but on an assessment of the similarity of POI obtained from different datasets for the purposes of conflation or data fusion. However, improving the accuracy on certain data set is not our focus.   \u5ef6\u7eed/\u6269\u5c55\u7814\u7a76  \u6211\u4eec\u5ef6\u7eed/\u6269\u5c55\u4e86&hellip;\u7684\u7814\u7a76 We expand and complement a recent paper on such comparison by Dao and Thill (\u5f15\u7528).   \u6b65\u9aa4\u63cf\u8ff0  We started with going through Google Map, Google Street View, and APIs to develop an algorithm for downloading images and transforming images for the automatic detection. A Matlab toolkit was used to detect pedestrian in the second step and the last step validated the detection results. These steps were reported in three subsections below. The proposed framework for visualizing and exploring POI configurations of urban regions on POI-type semantic space is composed of three steps, as shown in Fig. 2. Step 1: &hellip; Step 2: &hellip; Step 3&hellip; This study can be divided into the following steps: 1. Establish an urban road network model using the processed OSM roads. 2. 3. The flow chart of the study is shown in Figure 4. [\u5e38\u89c1\u7528\u4e8e Methodology \u7b2c\u4e00\u6bb5] The framework is composed of four stages, namely data collection, feature construction, model training, and mapping and analysis (Fig. X).   \u7528\u4e8e discussion \u90e8\u5206\u7b2c\u4e00\u6bb5\u8bdd\uff08\u4ee5\u4e0b\u5217\u4e3e\u4e00\u4e9b\u503c\u5f97\u8ba8\u8bba\u7684\u8bba\u70b9\uff09 Some meaningful points are summarized below. First, &hellip; Second, &hellip; Then, &hellip; Finally, &hellip; \u6a21\u578b\u7684\u6709\u6548\u6027\u548c\u4f18\u52bf\u901a\u8fc7&hellip;\u6765\u9a8c\u8bc1  \u5927\u89c4\u6a21\u7684\u771f\u5b9e\u7684\u51fa\u79df\u8f66\u6570\u636e The effectiveness and strength of our algorithms are validated by experiments on a very large volume of real taxi trajectories in an urban road network.   \u51fa\u4e8e&hellip;\u7684\u76ee\u7684,\u4e3a\u4e86&hellip;\u7684\u76ee\u7684;\u6211\u4eec\u8fdb\u884c\u4e86&hellip;\u5b9e\u9a8c\u6216\u5c1d\u8bd5&hellip;  \u8fdb\u884c\u4e86\u4e00\u7cfb\u5217\u7684\u5c1d\u8bd5\u548c\u52aa\u529b A few trials are performed to determine an appropriate value for the number of clusters (k) in our case study. \u672c\u6587\u5c1d\u8bd5\u8fdb\u884c&hellip;\u7684\u7814\u7a76 this study attempts to combine NTL images, taxi trajectory data (a kind of popular social sensing data) and census data to spatialize population by using Shanghai as the study area. \u6211\u4eec\u8bbe\u8ba1\u4e86\u4e09\u7ec4\u5b9e\u9a8c &hellip;Three scenarios were designed to consider different connection types. \u5bf9\u6bd4\u5b9e\u9a8c A series of comparative experiments revealed the influence of place connections on predicting place characteristics. \u51fa\u4e8e\u5bf9\u6bd4\u7684\u76ee\u7684 For comparison purpose, similar experiments are performed using &hellip; method. \u4e3a\u4e86\u4f7f\u8bfb\u8005\u66f4\u52a0\u6e05\u6670\u7684\u4e86\u89e3\u672c\u6587\u4e2d\u63d0\u53ca\u7684\u65b9\u6cd5 For a better understanding of our method, we illustrate the calculation of the DTW distance with an example that &hellip;   (\u5f53\u53c2\u8003\u522b\u4eba\u4f7f\u7528\u8fc7\u7684\u65b9\u6cd5\u65f6\u5019&hellip;) \u76f8\u4f3c\u7684\u65b9\u6cd5\u540c\u6837\u5e94\u7528\u5728\u3002\u3002\u3002\u9886\u57df/\u7814\u7a76  Similar averaging methods are frequently adopted in studies invloving time-series data with clear periodictiy. \u8be6\u60c5\u8bf7\u770b/\u89c1 The similar taxi trip dateset and street view image dateset have been used in previous works; detailed descriptions can be found in XX. \u4e0e\u3002\u3002\u3002\u7814\u7a76\u7c7b\u4f3c  Our work is similar to that of Ewing and Handy in that we also aim to model the expert judgements on the qualities of urban environment based on very basic attributes. However\uff08\u6536\uff09, the proposed big data-based machine learning method can be more automatic and labour saving.   To deal with the skewed distribution of the house prices, we discretize the house price values into 10 levels and formulate the training as a 10-category classification task. A similar strategy was adopted in Zhang et al. (2019). \u57fa\u4e8e\u540c\u6837\u7684\u601d\u60f3/\u60f3\u6cd5 We embrace the idea of distributional semantics in geographic space and explore the similarity and relatedness of place types using different latent representations with augmented spatial contexts. As suggested by studies from urban planning and geography, we select 600m as the distance threshold for our distance analysis, which is suitable to represent the preferred coverage of human physical activity by walking.   \u8be6\u60c5\u8bf7\u89c1/\u53c2\u8003\u539f\u8457  Dollar (2015), Dollar et al. (2014) provide detailed information on the detection method and the toolkit. For further details regarding Neighborhoods for Active Kids methodology, please refer to Oliveret al. (2016). The details of how to train a GCNN model can be found in the Appendix detailed descriptions can be found in XX.   \u53d7\u3002\u3002\u3002\u7684\u542f\u53d1\uff0c\u672c\u6587\u5047\u8bbe/\u5de5\u4f5c\u3002\u3002\u3002 Inspired by the evidence that the urban mobility is highly relevant to urban land use and urban physical environment, our method assumes that the streetscape depicted in street-level imagery reflects urban functions and that urban activities in streets of similar functions present similar temporal patterns. \u4ece\u8fd9\u79cd\u89d2\u5ea6\u6765\u8bb2 Compared to other data sources such as land use or land cover data, social sensing data has a great capability for delineating people\u2019s movements\uff08\u80cc\u666f\uff09. In this light, it is worthwhile using it to improve the accuracy of population estimation, given the fact that using NTL data alone may overestimate population in some specific areas due to excessive high light radiance. As suggested by Castells (1996), cities can be linked through many relations, such as politics, culture, economy, and technology. Inspired by these exploratory studies / prior studies, temporal activity variations have been widely used to infer land uses of places. To encourage spatial smoothness in the output image , we follow prior work on feature inversion [6,20] and super- resolution [48,49] and make use of total variation regularizer . \u6570\u636e\u7b80\u4ecb(\u7528\u4e8e\u56fe\u8868\u7684\u6807\u9898) Data schema of taxi GPS records \u5f53\u591a\u5143\u6570\u636e\u65f6\u95f4/\u5e74\u4efd\u4e0d\u4e00\u81f4\u65f6 Although the WorldView-3 images and the vector data were obtained at different times, there were few changes in land-use boundaries during these two years, and the potential influence of differences between these times is limited and can be ignored. \u4f7f\u7528&hellip;\u7684\u6982\u5ff5\u6765\u6307\u4ee3&hellip; We adopt the notion semantic relatedness from the previous GIScience literature (Ballatore et al., 2014, Hecht and Raubal 2008, Hecht et al. 2012), and use it to refer to the city relatedness under different semantic topics. &hellip;\u5177\u6709\u4f18\u52bf There are several advantages in using news articles for extracting semantic relatedness between cities. \u6570\u636e\u3001\u4ee3\u7801\u5f00\u6e90\u3001\u516c\u5f00\uff1b\u65b9\u4fbf\u83b7\u53d6  news articles are information sources that can be accessed relatively easily (Taylor 1997, Beaverstock et al. 2000). This feature can help remedy the data deficiency in city network research (Smith and Timberlake 1995, Short et al. 1996). [\u7b80\u5355\u8bf4\u4e00\u4e0b\u5e94\u7528 \u8865\u5200] With a news article dataset, we can use the proposed computational framework to study the relatedness of a large number of cities in a timespan of multiple decades. Our R code is publicly available on GitHub for download and can be modified for individual research needs (github \u5730\u5740).    \u6587\u7ae0/\u5b9e\u9a8c\u8868\u660e\uff0c\u770b\u56fe\u8868\u660e; \u7ed3\u8bba\u63cf\u8ff0\u53ca\u5206\u6790  The results show that the proposed methods effectively&hellip;\uff08\u7ed3\u679c\u8868\u660e\u8be5\u65b9\u6cd5\u80fd\u591f\u6709\u6548\u7684\u3002\u3002\u3002\uff09  The results support our hypothesis that &hellip;(\u7ed3\u679c\u6709\u6548\u5730\u652f\u6491\u4e86\u6211\u4eec\u7684\u5047\u8bbe) they indicate that sth is appropriate for&hellip;\uff08\u7ed3\u679c\u8868\u660e\u8be5\u65b9\u6cd5\u9002\u5408\u3002\u3002\u3002\uff09 This method reveals (that)&hellip;\uff08\u8be5\u65b9\u6cd5\u8868\u660e\u3002\u3002\u3002\uff09 Fig. 2(b) shows (that)&hellip; (\u56fe 2\uff0cb \u663e\u793a\u3002\u3002\u3002) The study/it observed that &hellip; The study concludes that &hellip; Experimental results evince that&hellip;\uff08\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff09 Experimental results evince that the proposed algorithm performs significantly better than the well-known A* algorithm. The reliability tests results based on pedestrian information collected from over 200 street segments in Buffalo, NY, Washington, D.C., and Boston, MA respectively suggested that the image detection method used in this study are capable of determining the presence of pedestrian with a reasonable level of accuracy. Computational results demonstrate that &hellip;\uff08\u8ba1\u7b97\u7ed3\u679c\u8868\u660e\uff09 \u5b9e\u9a8c\u7ed3\u679c\u5982\u4e0b The results showed the following. (1)..(2).. \u7ed3\u679c\u65e0\u6cd5\u89e3\u91ca The reason for this phenomenon still needs further research. \u8be5\u7ed3\u679c\u5c06\u5728\u540e\u7eed&hellip;\u8be6\u7ec6\u8ba8\u8bba&hellip;, which will be discussed in detail in Section 4.   \u53c2\u6570\u8bbe\u5b9a  \u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\uff1aUnless specified otherwise, we used default parameters in open source tools in baseline methods.   \u7f57\u5217\u672f\u8bed (terminology)   Throughout the paper, we use the vocabulary network or CNN to describe a network architecture, such as VGG; and use the vocabulary model to describe a trained network, or a fusion of many trained networks. One specific network may generate many models because it can be trained in different ways. We also use street view, ground view, and ground-level to describe terrestrial images that were taken from ground-level, and aerial view, overhead, and nadir view to describe remote sensing images acquired by airborne or spaceborne sensors.   \u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u6846\u67b6\u4ecb\u7ecd  [\u5982\u56fe] The architecture of the proposed 1-d SPP-Net is presented in Fig. 2b. [\u7531\u51e0\u90e8\u5206\u7ec4\u6210] The network is composed of three major parts, i.e. five 1-d convolutional layers (each layer is closely followed by batch normalization and ReLU activation), one 1-d SPP layer, and two fully connected layers. [\u4e0d\u540c\u5c42\u7684\u7279\u70b9/\u53c2\u6570] The convolutional layers use kernel size of 24, 24, 7, 7, and 3, with stride of 1, 24, 1, 7, and 1, and padding of 12, 12, 3, 3, and 1, respectively. The output of the convolutional layers is then fed into the 1-d SPP layer to obtain fixed-length representation, which is further processed by the fully connected layers. The final output 256-d features are exploited as extracted TS features. [\u4e0d\u540c\u5c42\u7684\u4f5c\u7528] The convolutional layers can extract short-term time-series features, by stacking them, the patterns with long-term dependencies can be captured in higher layers. The 1-d SPP layer and fully connected layers can further aggregate and condense the convolutional features to higher level semantic features.   \u8bad\u7ec3\u6570\u636e\u914d\u7f6e/ground-truth data  To train the proposed model, we utilize the continuously collected taxi trajectories in a Chinese city and calculate the congestion indices for all road intersections based on traffic speed and volume as the ground-truth data.    \u6587\u7ae0\u8d21\u732e\uff1b\u610f\u4e49\uff1b\u6587\u7ae0\u603b\u7ed3\uff0c\u4ece\u7ed3\u679c/\u7ed3\u8bba\u51fa\u53d1  \u63d0\u4f9b\u65b0\u89d2\u5ea6\u3001\u89c6\u754c&hellip;  Via a series of basic statistic and correlation analyses, the street scene ontology and street visual descriptor can provide new perspectives for understanding the characteristics of an urban area. Section 4.3 presents a correlation analysis between scene content and space syntax indicators that offer insight into the potential relationship between street\u2019s visual appearance and a road network structure.   \u672c\u6587\u6240\u505a\u5de5\u4f5c\u6240\u5728\uff0c\u81f4\u529b\u4e8e\uff1b\u6587\u7ae0\u8d21\u732e  This study seeks to contribute to the literature in three ways. First, it models the relationship between A and B by C. Second, the study develops a systematical and integral route planning algorithm framework using big taxi trajectory data. The framework has two distinctive/significant features. (1)&hellip;(2)&hellip;Thrid, the study analyzes the contribution of A to representing taxi drivers' experience through numerical experiments. This work makes a contribution by enhancing the understanding of human perceptions of places in a large-scale urban environment in an automatic and efficient way by using machine learning and street-level imagery. This study enriches place-based GIS research and provides a human-centric perspective for urban planning and LBS applications. (\u5f3a\u5316\u4e86&hellip;\u65b9\u6cd5\u3001\u6280\u672f\u5728&hellip;\u65b9\u9762\u7684\u5e94\u7528)Our analysis advances the use of spatiotemporal clustering techniques in urban and geographical studies. \uff08\u636e\u6211\u4eec\u6240\u77e5\uff09\u8fc8\u51fa\u7b2c\u4e00\u6b65 This study explores their characteristics as cognitive places with human spatial cognition and perception on urban environments being considered, which to our knowledge, is the first attempt. \uff08\u9002\u7528\u4e8e\uff0c\u8bb2\u8ff0\u672c\u6587\u63d0\u51fa\u7684\u6a21\u578b/\u65b9\u6cd5\u7684\u9002\u7528\u6027\uff09  The model and methods developed in the study are also applicable to other types of movement trajectories for extracting the experience of different types of drivers (e.g., private vehicles or truck drivers) and for understanding their driving behavior. The methods provided in this study are also suitable for analysis of other cities with similar data sources.   (\u63d0\u4f9b\u4e00\u79cd\u5f00\u7bb1\u5373\u7528\u7684\u5de5\u5177)This work provides a ready-to-use computational tool for extracting visual concepts and high-level visual knowledge of a streetscape to facilitate studies using street-level imagery. (\u5b58\u5728\u5de8\u5927\u7684\u80fd\u529b/\u6f5c\u529b) A series of quantitative analyses demonstrates the ability and great potential of the framework for investigating the connections between place and other socioeconomic factors.   \u7ed3\u8bba\u5177\u6709\u5b9e\u7528\u4ef7\u503c\uff0c\u5341\u5206\u91cd\u8981  From this perspective, this result is of practical importance in identifying the real role and function of a street based on its visual appearance and in further informing traffic and transportation planning.   \u53ef\u590d\u73b0\u6027  This method allows large scale and consistent objective measures of visual enclosure that can be done reproducibly and universally applicable with readily available Google Street View imagery in many countries around the world to help test their association with walking behaviors.   \u4e3a\u4e86\u6ee1\u8db3&hellip;\u7684\u9700\u6c42\uff08\u4e00\u822c\u524d\u9762\u4f1a\u8bba\u8ff0\u8be5 need\uff09  To help fill the need for adaptable and flexible methods for creating regions, we apply a newly published computer science clustering algorithm that creates customized ecological regions, test its use for macrosystems ecology research, and make it available in an online repository    \u63d0\u51fa\u5021\u8bae  To this end, what we suggest in this study is that urban planning practices should attach importance to &ldquo;cognitive place&rdquo; and &ldquo;cognitive distance&rdquo;, which load human experiences and perceptions toward the environments. This is also coincident with the ultimate goal of urban planning, urban design, and smart-city construction, i.e., making better human societies and improving human lives.  Remainder of this paper  The remainder of the paper is organized as follows. Section 2 reviews the related literature on house price modeling and the understanding of human sense of place with big data and deep learning. In Section 3, we introduce the proposed framework of characterizing human settlement from a place perspective and the P-HPM model. In Section 4, we describe the datasets used in this research, including online house information, locational amenities, human mobility patterns, and perceptual rating metrics extracted from street-view images. Section 5 introduces the methods, including the factor analysis, spatial autoregressive model and geographically weighted regression (GWR). Section 6 presents the results of house price prediction in Boston and Los Angeles. We then discuss broad implications, policy making takeaways for urban planning, and limitation of this work and suggestions for future work on place-based housing price modeling in Section 7. Finally, we conclude this work in Section 8. The remainder of this paper is organized as follows. In Section 2, the literature on place formalization and those studies using street-level images are briefly reviewed. Section 3 introduces the proposed locale representation framework, including the street scene ontology and with a series of analyses using the street visual descriptor being conducted. The case study shows that the visual appearance of streets is highly correlated with the spatial structure of street network. In Section 5, we draw some conclusions and discuss future work.  Limitations/Future Works  The limitations of this work should also be discussed and paid more attention in future work. First&hellip;Second&hellip; The limitation and potential improvement of the proposed method is also discussed. Future works are anticipated to (\u9884\u8ba1\u4eca\u540e\u7684\u5de5\u4f5c\u5c06\u91cd\u70b9\u5173\u6ce8) address regions with inconsistent physical environment conditions to traffic flows by focusing on the regions with a larger residual in the predictions. \u6ca1\u6709\u9a8c\u8bc1\uff08ground truth\uff09The main limitation of this study may be that there is no ground truth to quantitatively verify the accuracy of our delineated cognitive boundaries, but we make efforts to guarantee the effectiveness of the derived results by assuring the quality of the data and rationality of the approach. Moreover, the analysis toward the characteristics of POI weights in Section 3.1 can also indirectly demonstrate the reasonability of the results. (\u867d\u7136\u6ca1\u6709 ground truth \u4f46\u662f\u6211\u4eec\u786e\u4fdd\u6570\u636e\u548c\u65b9\u6cd5\uff0c\u5e76\u4e14 3.1 \u7684\u7ed3\u679c\u4e5f\u80fd\u591f\u95f4\u63a5\u5730\u8868\u660e\u65b9\u6cd5\u7684\u53ef\u9760\u6027) However, further research is required to bridge the gap between CMA for human and animal movement towards an integrated science of movement. (\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u7814\u7a76\uff0c\u4ee5\u5f25\u5408\u4eba\u7c7b\u548c\u52a8\u7269\u8fd0\u52a8\u7684 CMA \u4e4b\u95f4\u7684\u5dee\u8ddd\uff0c\u5b9e\u73b0\u8fd0\u52a8\u7684\u7efc\u5408\u79d1\u5b66) In addition, visualization still remains a key challenge in the dissemination and communication of patterns and knowledge of movement, especially when dealing with large and long-term movement data sets. \uff08\u88ab\u5ffd\u7565\uff09Data quality and privacy challenges as well as uncertainty in data, analytics, and modeling have been largely overlooked in the CMA literature so far.  (\u8be5\u7814\u7a76\u4ec5\u4ec5\u4f5c\u4e3a&hellip;\u7684\u5f00\u59cb) Furthermore, we would like to regard this research as a beginning of detecting the spatial interaction communities based on mobile phone datasets. Further research is required to understand the causal relations and semantics of these communities if more detailed land-use or socio-economic data are available.    Acknowledgments  We thank the two anonymous reviewers for their critical and constructive reviews of the paper, which helped to improve its quality.  \u6bd4\u8f83\u597d\u7684\u6bb5\u843d\u6a21\u677f Introduction  \u63a8\u8350 Yang \u7684 Introduction \u5199\u4f5c\uff0cRefer: https://dx.doi.org/10.1080/13658816.2019.1700510 Introduction \u7b2c\u4e00\u6bb5(\u5f15\u5165\u8bdd\u9898,\u4f60\u5f97\u8bf4\u4f60\u505a\u7684\u7814\u7a76\u6709\u610f\u4e49\u5427)  The mining of information hidden in urban and regional road networks has a longestablished history in the fields of traffic geography, land use planning, and economic geography (Porta et al. 2006). In an era of unprecedented global urbanization, the continuous improvement of the urban road system also sustains immense social mobility pressures (Batty 2008) and plays a vital role in urban development (Wang et al. 2012). As the artificial corridor in the urban landscape, the road network is the framework of urban development and an intrinsic factor of urban space expansion. Hence, the exploration of the road network structure not only helps to interpret the topology of the road network but also contributes to the understanding of the organization and spatial distribution of the urban system (Wang et al. 2011, Levinson and Moreno 2012). \u89e3\u6790\uff1a\u4e00\u6bb5\u4e00\u53e5\u8bdd\uff0c\u4e00\u53e5\u8bdd\u81f3\u5c11\u4e00\u5f15\u7528\uff1b\u7814\u7a76\u8bdd\u9898\u5386\u53f2\u60a0\u4e45=&gt;\u76ee\u524d\u8be5\u8bdd\u9898\u4e5f\u662f\u70ed\u70b9=&gt;(\u8def\u7f51)\u7684\u91cd\u8981\u89d2\u8272=&gt;\u7814\u7a76(\u8def\u7f51)\u7684\u610f\u4e49(\u4e0d\u4f46)(\u800c\u4e14) (From Yao yao, https://doi.org/10.1080/13658816.2019.1584806) The rapid increase in private car ownership aggravates metropolitan traffic congestion, thereby causing a series of issues, such as air pollution, high energy consumption, and accidents (Ding, Wang, Liu, Zhang, &amp; Jiawen Yang, 2017) [\u79c1\u5bb6\u8f66\u4fdd\u6709\u91cf\u7684\u5feb\u901f\u589e\u957f\u52a0\u5267\u4ea4\u901a\u62e5\u5835\uff0c\u540c\u65f6\u9020\u6210\u4e86\u4e00\u7cfb\u5217\u7684\u95ee\u9898]. A possible countermeasure to alleviate the aforementioned negative impacts is to prioritize public transportation (Chakour &amp; Eluru, 2016) [\u7f13\u89e3\u4ee5\u4e0a\u95ee\u9898\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u7b56\u7565\u662f\u63d0\u9ad8\u516c\u5171\u4ea4\u901a\u7684\u5730\u4f4d\u3002\u5f15\u51fa\u81ea\u5df1\u505a\u7684\u8fd9\u6837\u7814\u7a76\u7684\u610f\u4e49]. Transit authorities aim to optimize public transportation planning and improve service quality to achieve the goal of promoting public transit systems, and ultimately, increase the attractiveness of public transit [\u63d0\u9ad8\u516c\u5171\u4ea4\u901a\u5730\u4f4d\u7684\u76ee\u7684\u65e8\u5728&hellip;\u5c31\u8bf4\u5b83\u6709\u4ec0\u4e48\u597d\u5904\u561b]. In particular, identifying the key determinants that affect transit ridership and analyzing the spatial and temporal evolution of influences is crucial (Taylor &amp; Fink, 2003) [\u5728\u8fd9\u5176\u4e2d\uff0c\u8bc6\u522b\u5173\u952e\u56e0\u5b50\u5c24\u4e3a\u91cd\u8981\uff01\u5f15\u5230\u81ea\u5df1\u7684\u7814\u7a76\u70b9]. A thorough understanding of the factors that influence transit ridership can enable transit authorities to efficiently allocate the limited resources for the deployment of transit service and to develop additional targeted policies for pricing and investments [\u7ee7\u4e0a\u4e00\u53e5\u8865\u5200\uff0c\u6211\u4eec\u505a\u7684\u8fd9\u4e2a\u7814\u7a76\u70b9\u554a\u80fd\u5e72\u561b\u3002\u3002\u80fd\u5e72\u561b\u3002\u3002].   Introduction\u65b9\u6cd5\u5f15\u5165\u6bb5\uff08\u5c31\u662f\u8bf4\u4f60\u8fd9\u7bc7\u8bba\u6587\u5f15\u5165\u4e86&hellip;\u7684\u65b9\u6cd5\uff0c\u7ecf\u5178\u7684\u4e09\u6bb5\u8bba  Recently, there has been a surge of interest in graph convolutional neural networks (GCNNs) for learning graph-structured data where the range of connection varies (Bruna et al. 2014)\u8be5\u65b9\u6cd5\u76ee\u524d\u4f7f\u7528\u5f88\u5e7f\u6cdb. To effectively process the connection information, GCNNs generally follow an aggregation scheme where each node aggregates characteristics of its neighbors to learn a deep representation of the contextual information (Defferrard, Bresson, and Vandergheynst 2016).\u4e00\u53e5\u8bdd\u4ecb\u7ecd\u8be5\u65b9\u6cd5: \u662f\u4ec0\u4e48\u3001\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898 This powerful technique is able to capture both the longrange and short-range relationships through its neural network weights. Clearly, it is suitable for modeling a graph of connected places.\u603b\u4e4b\uff0c\u8be5\u65b9\u6cd5\u7528\u5728\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898\u4e0a\u662f\u9002\u5408\u7684(From Di Zhu, https://www.tandfonline.com/doi/full/10.1080/24694452.2019.1694403)   Introduction \u8bb2\u6570\u636e  \u5927\u6570\u636e+\u65b9\u6cd5=&gt;\u65b0\u673a\u9047\uff1aThe emergence of big data and volunteered geographic information (VGI) (Goodchild, 2007), along with state-of-the-art computing and analyzing techniques, provides new opportunities for capturing and depicting human mobility and perceptions of places. \u5927\u6570\u636e+\u65b9\u6cd5=&gt;\u65b0\u673a\u9047 Various types of data sources have been used in understanding human dynamics. For example, by the utilization of taxi GPS data (Tang et al., 2015; Zhu et al., 2017), cell phone data (Gao, 2015; Kang et al., 2010; Peng et al., 2019; Ratti et al., 2006; Xu et al., 2015), and geotagged social media posts (Hu &amp; Wang, 2020; Jurdak et al., 2015), researchers are able to capture fine-scale spatiotemporal human movement patterns at different places. Such information contribute to the global sense of place (Bissell, 2021), and can potentially reveal socioeconomic environment, such as land use type (Pei et al., 2014), commuting patterns (Yang et al., 2015), and urban vibrancy (Jia et al., 2019). \u5f88\u591a\u6570\u636e\u5df2\u7ecf\u88ab\u6210\u529f\u5e94\u7528+\u4e3e\u4f8b\uff0c\u5f97\u5230\u67d0\u79cd\u4fe1\u606f/\u77e5\u8bc6\uff0c\u8fd9\u79cd\u4fe1\u606f/\u77e5\u8bc6\u7684\u4f5c\u7528+\u4e3e\u4f8b\u3002 Regarding human perceptions of places, abundant datasets about geo-tagged photos and street-view images, along with advanced machine learning techniques provide opportunities to obtain a more complete view about how people feel about the world through the analysis of their expressions, sentiments and emotions (Hu et al., 2019; Kang et al., 2019), and perceptions from the visual sceneries (Zhang et al., 2020; Zhou et al., 2014). \u8fd9\u91cc\u805a\u7126\u5230\u4f60\u7684\u7814\u7a76\u4e3b\u9898\uff0c\u4f60\u8981\u7528\u5230\u7684\u7814\u7a76\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u80fd\u5e72\u5565 The proliferation of the above-mentioned researches reveals the significance of embedding place-based human-environment interactions in solving socioeconomic problems and in planning for livable cities from a combination of humanistic perspective and using computational approaches. \u610f\u4e49 (From https://doi.org/10.1016/j.cities.2021.103333/) Crowdsourced data (such as POIs, check-in data, and taxi trajectory data) collected by various sensors have led the related studies into a new stage. These data sources contain abundant semantic information of human activity patterns and urban land use functions. Researchers have tried various data, such as POIs, mobile phone location records, GPS trajectories, and check-in data, to discover urban functional zones. Since different kinds of data can reflect different characteristics of urban functional zones, it is essential to integrate multi-source data to improve the accuracy of recognition of functional zones. In the literature, DRoF\u2014proposed by Yuan, Zheng, and Xie (2012)\u2014is one of the most representative methods. They used both POIs and GPS trajectories to discover the functions of each region with a topic-based inference model. Similarly, Wang, Gu, Dou, and Qiao (2018) used POIs and trajectory data to recognize urban functional zones based on spatial semantics and interactions between regions. Some researchers also tried to integrated remote sensing images and crowdsourced data (such as POIs and check-in data) to identify the land use functions of fine-grained zones using supervised classification. (From https://doi.org/10.1111/tgis.12642)   Introduction \u6700\u540e\u4e00\u6bb5\uff0c\u6982\u62ec\u603b\u8ff0  To this end, we propose a conceptual framework which characterizes human settlement from a place perspective by highlighting people&rsquo;s sense of place and human dynamics. \u6211\u4eec\u63d0\u51fa\u4e00\u4e2a\u6846\u67b6\u3002\u6ce8\u610fhighlight\u7a81\u51fa/\u51dd\u7ec3\u4eae\u70b9 A place-oriented hedonic pricing model (P-HPM) that follows the conceptual framework is introduced. The P-HPM extends the traditional HPM by involving the notion of place from two aspects: human mobilities at places and human perceptions of places. More specifically, we take the hourly number of people&rsquo;s visits to a place as a descriptor of human mobilities, and the perceptual rating scores of a place&rsquo;s physical appearance captured in street-view images as a proxy of human perceptions. \u6a21\u578b\u7ec6\u8282\uff1a\u5f15\u5165\u4e00\u79cd\u6a21\u578b\uff08\u6b64\u5904\u533a\u5206\u6846\u67b6\u548c\u6a21\u578b\u7684\u533a\u522b\uff09+\u6a21\u578b\u4ece&hellip;\u65b9\u9762\u8fdb\u884c\u4e86\u6269\u5c55+\u5177\u4f53\u7684\u5b9e\u9a8c\u7ec6\u8282\uff08\u8f85\u52a9\u8bba\u8ff0\uff09 The contribution of this research is threefold: First, we propose a conceptual framework for human settlement value assessment from a place perspective, discuss how human mobilities and perceptions matter for determining house price modeling. Second, we introduce the P-HPM for modeling the house prices not only from static and objective perspectives of a property, but also by formulating dynamic human movement patterns and subjective human perceptions of places based on multi-source big geo-data and advanced machine learning approaches. Third, we compare the HPM and P-HPM to explore the impacts of place-related variables to illustrate how these determinants affect house prices and their spatial stationarities to the house prices. \u51dd\u7ec3\u672c\u6587\u7684\u8d21\u732e\uff0c\u6ce8\u610f\u8fd9\u90e8\u5206\u548c\u4e0a\u9762\u6846\u67b6\u7684\u8bba\u8ff0\u90e8\u5206\u7684\u533a\u522b\u6240\u5728 Our research provides humanistic insights into integrating place in human settlement value investigation. Such perspectives may benefit other fields of study not limited to urban planning, geography, and urban economics. \u4ef7\u503c\u610f\u4e49\u6240\u5728\uff1a\u672c\u7814\u7a76\u63d0\u4f9b\u4e00\u79cd\u89c1\u89e3+\u8fd9\u79cd\u89c1\u89e3\u5bf9&hellip;\u6709\u5229 (From https://doi.org/10.1016/j.cities.2021.103333/) This research introduces the use of GCNNs to model connected places where each place is represented as a node, place haracteristics are the node features to be computed, and place connections are represented as the graph edges.\u672c\u7814\u7a76\u5f15\u5165\u4e00\u79cd\u65b9\u6cd5\u53bb&hellip;,\u8fd9\u91cc\u8fd9\u4e2a where \u7528\u7684\u5f88\u597d The graph convolution can effectively learn from the graph structures and node features to understand the place characteristics in a geographic context.\u8fd9\u4e2a\u65b9\u6cd5\u597d\u554a\uff0c\u80fd\u5e72\u5565\u5e72\u5565\uff0c\u5176\u5b9e\u5c31\u662f\u4e0a\u4e00\u53e5\u5206\u5f00\u5199\uff0c\u5982\u679c\u592a\u957f\u4e86\u770b\u7740\u96be\u53d7 The objective of this study was to investigate the feasibility of incorporating place connections to predict place characteristics.\u672c\u6587\u7684\u76ee\u6807\u554a In a case study of the Beijing metropolitan area, we took advantage of GCNNs in formalizing, reasoning, and understanding places.\u8fd9\u91cc\u8bf4 case study \u5728\u54ea\u91cc Three scenarios were designed to consider different connection types. A series of comparative experiments revealed the influence of place connections on predicting place characteristics.\u9648\u8ff0\u5bf9\u6bd4\u5b9e\u9a8c\u7684(From Di Zhu, https://www.tandfonline.com/doi/full/10.1080/24694452.2019.1694403) In this study, via identified communities in the city road network, we propose a novel way to link the urban roads with the urban space and urban functional zones \u5148\u603b\u7684\u8bf4\u4e00\u4e0b\uff0c\u901a\u8fc7\u4ec0\u4e48\uff0c\u8fd9\u7bc7\u6587\u7ae0\u63d0\u51fa\u4e86\u4ec0\u4e48\u53bb\u89e3\u51b3\u4ec0\u4e48\u6837\u7684\u95ee\u9898. Specifically, based on the urban road network model constructed with OpenStreetMap road data, the Infomap community detection method is employed to detect the hierarchical communities and analyze their spatial distribution at different levels. In addition, points-of-interest (POI) data and their indicators are used to reveal the land use and functional area density, the mixing degree and the enrichment status of the community-based network, exploring the relations between communities within road network and urban functional zone distributions \u4ece Specifically \u5230\u7ed3\u5c3e\u90fd\u662f\u8bb2\uff0c\u4f60\u65b9\u6cd5\u5440\u7684\u6b65\u9aa4\u6216\u8005\u6846\u67b6\u5440\u5305\u542b\u54ea\u4e9b\u90e8\u5206.(From Yao yao, https://doi.org/10.1080/13658816.2019.1584806) In summary, the four technical issues referred to above are critical to extracting functional zones, but they have yet to be resolved \u672a\u89e3\u51b3\u7684\u95ee\u9898. This study aims to determine the solutions to the four issues, and extract functional zones from VHR satellite images \u672c\u6587\u505a\u4e86\u4ec0\u4e48. Four contributions are made in this research \u603b\u7ed3\u8d21\u732e\u70b9: (1) spatial-pattern features characterizing local spatial patterns of objects are proposed and used for functional-zone segmentation; (2) a geoscene segmentation method is first proposed to delineate functional zones at multiple scales; (3) two parameters, i.e., scale and the weight of spatial-pattern features, as well as their impacts on segmentation results are evaluated and reviewed; and (4) the proposed methods are used to map functional zones for three cities and compare their functional structures. The four contributions are novel and crucial to urban functional-zone analysis \u8fd9\u51e0\u4e2a\u8d21\u732e\u5bf9&hellip;\u5f88\u91cd\u8981. To the best of our knowledge, this study is the first work on automatic functional-zone segmentation \u5c31\u6211\u4eec\u6240\u77e5\uff0c\u6211\u4eec\u662f\u7b2c\u4e00\u4e2a. (From Zhang Xiuyuan, https://doi.org/10.3390/rs10020281)   \u8bb2\u7814\u7a76\u7684\u5e94\u7528\uff08\u5bf9\u4e8e\u5404\u884c\u5404\u4e1a\u7684\u4eba\u90fd\u6709\u7528\uff0c\u5176\u5b9e\u6bd4\u8f83\u5957\u8bdd\uff0c\u7528\u7684\u65f6\u5019\u591a\u4e3e\u4f8b\u5b50\uff0c\u5199\u5177\u4f53\u4e00\u70b9\uff0c\u592a\u62bd\u8c61\u4e86\u96be\u8ba9\u4eba\u4fe1\u670d\uff09  Urban AOI have great meanings in multiple application domains. For tourists, AOI highlight the interesting zones within a city, and can therefore be used to support trip planning of travelers. For city planners, AOI reveal the regions which receive high exposure among the general public. Accordingly, these regions could be assigned higher priorities when there are only limited resources for urban planning projects, such as city beautification (Espuche et al., 1991, Gandy, 2006). Since AOI are often visited by a large number of people, transportation analysts can examine these regions to understand traffic flows and human mobility patterns (Batty, 2007, Yuan and Raubal, 2012). In addition, information service providers can display targeted information based on AOI (e.g., highlighting the hotels within the AOI of a city). (From Hu yingjie, https://www.sciencedirect.com/science/article/pii/S0198971515300120)   \u8bb2\u6570\u636e/\u65b9\u6cd5\u7684\u4f18\u52bf\uff0c\u9002\u7528\u4e8e\u8be5\u7814\u7a76  Among the many types of social media data, geotagged Flickr photos possess a high suitability for exploring urban AOI. One major advantage of Flickr data is that they reflect the interest of people towards locations. + (\u89e3\u91ca) In addition, the openness of the Flickr API allows the retrieval of publicly available data throughout the world and since the year of 2004. + (\u89e3\u91ca) Besides, existing research shows that a major proportion of Flickr photos were taken in urban areas, and this gives Flickr data one more advantage for studying urban AOI. + (\u89e3\u91ca) (From Hu yingjie, Introduction \u90e8\u5206\u7b2c 5 \u6bb5\uff0c https://www.sciencedirect.com/science/article/pii/S0198971515300120) Finally, instead of focusing on one particular component (e.g., extracting textual tags), we propose a coherent framework which connects data processing, AOI generating, tag and photo summarizing, and knowledge discovery.    Study Area, Data Description, Method  \u6570\u636e\u63cf\u8ff0  \u884c\u653f\u533a\u5212\uff1aThe administrative boundary data used in this study was derived from the Database of Global Administrative Areas (GADM) (\rhttps://www.gadm.org/). After projection transformation and topology checking, the administrative division data of different scales are used in the preprocessing, calculation and analysis of other experimental data.(From Yao yao, https://doi.org/10.1080/13658816.2019.1584806) OSM\uff1a The primary dataset for this study is the road data obtained from OSM, which was acquired in January 2018 (\rhttps://www.openstreetmap.org). OSM is an open source map provider that aims to provide users with free and easily accessible digital map resources (Haklay 2010) and is considered to be the most successful and prevailing volunteered geographic information (VGI) at this stage (Fan et al. 2014). The accuracy of the positioning and the topological relationship of the OSM roads in the study area is exceptionally high (Yao et al. 2018). In addition to the fundamental spatial information such as latitude and longitude, the road data obtained from the OSM contains additional attribute information, including road type, maximum travel speed, and one-way streets, which contribute to preprocessing and establishing the road network. After preprocessing operations, such as simplification, merging, and topology inspection, 81,377 roads and 60,756 nodes were extracted (Figure 2).(From Yao yao, https://doi.org/10.1080/13658816.2019.1584806) \u7814\u7a76\u57ce\u5e02\uff1aData used in this study have been retrieved using Flickr&rsquo;s public API. Six cities from six different countries have been selected for this work, which are: New York City (NYC), London, Paris, Shanghai, Mumbai, and Dubai. The first three cities are generally recognized as well-developed cities, while the second three cities have experienced fast development in the past 10 years. We deliberately choose these two groups in order to examine the difference in the growth patterns of their AOI. The data retrieval was performed in July 2014, and we retrieved all publicly available and geotagged Flickr data from June 2004 to June 2014 in order to study the AOI growth patterns in the past 10 years. The data for each city were retrieved using a bounding box containing the city&rsquo;s administrative boundary. trajectory\uff1aThis dataset contains 102,361 trips made by 16,887 Mobike users on 79,062 bicycles in August 2016. Each trip consisted of data fields, including trip ID, bike ID, user ID, trip start time and end time, longitude and latitude for origin and destination, and GPS tracking along the trajectory. The spatial resolution of the GPS tracks is ~100 m and the temporal resolution is approximately 30 s. To discover the driving force behind different short-trip transportation patterns at both the individual and group level, land-use data and the locations of bus stops, road and bike lane networks, metro lines and stations were all collected for the study area. Road network data were acquired from OpenStreetMap, while the rest of the data were crawled automatically from Gaode Map, similar to Google Map, in China.   \u65b9\u6cd5\u63cf\u8ff0\u90e8\u5206  Based on the theory and method of complex graph theory, this study aims to describe the structure of the road network in Guangzhou quantitatively. We explore the community formed by the urban roads at different levels and identify the functional areas from a community perspective. This study can be divided into the following steps: 1. Establish an urban road network model using the processed OSM roads. 2. Divide the road network model into multilevel communities based on the Infomap method. 3. Depict the functional density, mixed and enrichment degree of each community with Gaode POIs. The flow chart of the study is shown in Figure 4.(From Yao yao, https://doi.org/10.1080/13658816.2019.1584806)   \u7ed3\u8bba\u63cf\u8ff0/\u5206\u6790  (\u6a21\u578b\u7cbe\u5ea6/\u9884\u6d4b\u7ed3\u679c)As we can see from the Fig. 6, high and reliable accuracy were achieved in predicting the six perceptual indicators.\uff08\u5168\u5c40\u603b\u7ed3\uff09 The accuracies of the different indicators varied. (\u4e0d\u540c\u6307\u6807\u7684\u7cbe\u5ea6\u4e0d\u540c\u3002\u8868\u793a\u5dee\u5f02\u7684\u8868\u8ff0\u65b9\u5f0f) For instance(\u4e3e\u4f8b\u8bf4\u660e), the accuracy of safe, beautiful, and wealth were slightly higher than that of depressing, boring and lively\uff08\u4e3e\u4f8b\u7ed3\u8bba\u4e00\uff09. This result might be caused by variances in how people understand these concept\uff08\u7ed3\u8bba\u5206\u6790\uff09; \uff08\u8fdb\u4e00\u6b65\u89e3\u91ca\u7ed3\u8bba\u5206\u6790\uff09their knowledge might tend to be relatively consistent with\u201cwhat is the beautiful scene\u201dbut inconsistent with\u201cwhat is the depressing scene\u201d. Another reason might be insufficient data collection for the latter three dimensions\uff08\u53e6\u4e00\u4e2a\u7ed3\u8bba\u5206\u6790\uff09. In addition\uff08\u6b64\u5916\uff09, the average accuracy decreased as the bandwidth of the sample gap narrowed (smaller\u03b4)\uff08\u4e3e\u4f8b\u7ed3\u8bba\u4e8c\uff09, indicating that human preference was comparatively unstable for normal scenes.    ",
        "description": "",
        "id": 98,
        "section": "posts",
        "tags": [
            "\u8bba\u6587\u9605\u8bfb",
            "\u5355\u8bcd",
            "\u77ed\u8bed",
            "\u5199\u4f5c",
            "\u601d\u8def",
            "\u6a21\u677f",
            "\u603b\u7ed3"
        ],
        "title": "\u8bba\u6587\u5199\u4f5c\u6458\u6284-\u53e5\u578b\u53e5\u5f0f",
        "uri": "/posts/notes/91/"
    },
    {
        "content": " \u8bba\u6587\u5ba1\u9605\u8fc7\u7a0b\u4e2d\uff0c\u4e0ereviewers\u7b54\u8fa9\u5e38\u7528\u53e5\u578b\u53e5\u5f0f\u6574\u7406\u3002\n \u5ba1\u8bc4\u4e2d\u5e38\u51fa\u73b0\u7684\u8bcd\u7ec4\uff1a state of art (SoA) \u8be5\u8bfe\u9898\u7684\u56fd\u5185\u5916\u7814\u7a76\u73b0\u72b6\nrespecting the comments of the referee \u4f5c\u4e3a\u5bf9\u540c\u5ba1\u7684\u56de\u5e94\nIn response to the comment \u4f5c\u4e3a\u5bf9\u8bc4\u5ba1\u610f\u89c1\u7684\u54cd\u5e94\nTo the best of the authors' knowledge \u636e\u6211\u4eec\u6240\u77e5\n\u8bba\u8fa9\u610f\u89c1\uff1a \u5b66\u672f\u8bba\u6587\u7684\u5199\u4f5c\u672c\u8eab\u5c31\u662f\u5728\u6279\u8bc4\u4e0e\u4fee\u6539\u4e2d\u63d0\u9ad8\uff0c\u4e14\u8fd9\u4e00\u8fc7\u7a0b\u5e76\u975e\u4e00\u5e06\u98ce\u987a\uff0c\u5f53\u6709\u8bc4\u5ba1\u8005\u5bf9\u4f60\u7684\u7814\u7a76\u6210\u679c\u6301\u6000\u7591\u751a\u81f3\u5426\u5b9a\u6001\u5ea6\u65f6\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u8be5\u7814\u7a76\u6210\u679c\u6beb\u65e0\u4ef7\u503c\u3002\u4f46\u662f\uff0c\u6211\u4eec\u9700\u8981\u6b63\u9762\u4e14\u8be6\u7ec6\u5730\u56de\u590d\u8fd9\u7c7b\u8bc4\u5ba1\u610f\u89c1\u3002\u523b\u610f\u56de\u907f\u8d1f\u9762\u7684\u8bc4\u5ba1\u610f\u89c1\u4f1a\u4f7f\u7f16\u8f91\u8ba4\u4e3a\u8bba\u6587\u786e\u5b9e\u6709\u4e0d\u8db3\u4e4b\u5904\u3002\n\u7b54\u590d\u4fe1\u4e00\u822c\u53ef\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff1a\u5bf9\u7f16\u8f91\u548c\u8bc4\u5ba1\u8005\u5904\u7406\u8bba\u6587\u8868\u793a\u611f\u8c22\uff1b\u5bf9\u7b54\u590d\u548c\u4fee\u6539\u8fdb\u884c\u6982\u8981\u6027\u7684\u8bf4\u660e\uff1b\u9488\u5bf9\u6bcf\u4e00\u4f4d\u8bc4\u5ba1\u8005\u8fdb\u884c\u4e00\u4e00\u5bf9\u5e94\u7684\u7b54\u590d\u3002\n\u529f\u80fd\u53e5\u5f0f\u6574\u7406 \u81f4\u8c22   We (the authors) sincerely thank Referee 1 for the time and effort given to our manuscript and raising such a constructive suggestion.\n  We thank again the referee for raising such a constructive suggestion.\n  We thank again the referee for his/her frank recognition given to our manuscript, in addition to his/her time and effort spent in reviewing our manuscript.\n  We thank the referee for raising such a suggestion which improves further the presentation and quality of the manuscript.\n  We also thank the referee sincerely for the inspirations from the comment.\n  Thank the referee sincerely for the important discussions, which have greatly imporved the quality of our manuscript.\n  \u6dfb\u52a0\u5185\u5bb9 Respecting the comments of the referee, the following Remark 1 has been added in the revised manuscript.\nRemark 1. &ldquo;The general procedure of the discre&hellip;&rdquo;\nAs suggested, the formulations of such seven discrete-time models are listed in Table 3 of the Revision Information letter (i.e., Table 1 of the revised manuscript).\n\u5220\u9664 As suggested by referee, the revised manuscript has been shortened from 15 pages to 13 pages; specifically speaking, similar figures associated with Example 1 have been omitted, and some expressions or statements for constructing the discrete-time ZNN models and GNN model have been simplified.\n\u66f4\u65b0 \u66f4\u65b0\u5185\u5bb9 We have updated the\u00a0literature survey in the new manuscript according to the suggestion of the editor. Specifically, nine recent related papers from ITS (i.e., references [4] through [6], [10] through [15] in the new manuscript) have been added in Introduction, and reference [6] in original manuscript has been removed (in the new manuscript).\n\u4fee\u6539\u56fe\u7247/\u56fe\u8868: As suggested, the corresponding Fig.13 and 14 have been revised according to the format of Figs.1.\n\u5217\u4e3e\u4fee\u6539 The formulations of other multiple-poiunt discrete-time ZNN-K nideks by exploiting diffenrent multiple-point numerical differentiation formulas, torgether with that of the ZNN-L model, are listed in Table 1 of the Revision Information letter (i.e., Table 4 in the revised manuscript) for readers' convenience. Note that &hellip;\nIn response to the comment, some challenges of developing the discrete-time Zhang neural networks for the time-varying problems solving are listed as follows.\n  In the solving process of time-varying problems&hellip;\n  In the solving process of time-varying problems&hellip;\n  Two example of time-varying quadratic minimization in the original manuscript are investigated and illustrated, which substantiate well the effectiveness of the proposed methods/models.\n\u9648\u8ff0\u89c2\u70b9   \u636e\u6211\u4eec\u6240\u77e5\uff0c\u76ee\u524d\u6ca1\u6709: To the best of the authors' knowledge, there is almost no literature dealing with time-varying quadratic minimization via discrete-time neural networks at present stage.\n  reviewer\u662f\u4e0d\u662f\u8bef\u89e3\u6211\u4eec\u7684\u8868\u8ff0\u4e86: After reading the referee&rsquo;s comments, we think that the referee may have misunderstood the essence of the time-varying problems solving, and we want to address the concern as follows.\n  \u7b80\u5355\u660e\u4e86\u662f\u6700\u597d\u7684: In the authors' opinion, simplicity is beauty. As Occam&rsquo;s razor suggests, when we have two competing theories that achieve the same efficacy, the simpler one is the better. Therefore, being simple, direct and straightforward is actually the advantage of this work on the condition of achieving excellent results, and it is thus easy for readers to understand and use the discrete-time ZNN models proposed in the manuscript.\n  \u5e0c\u671b\u4e0a\u8ff0\u7684\u89e3\u91ca\u80fd\u591f\u8ba9\u60a8\u6ee1\u610f: In summary, we sincerely hope that the above explanations can help the referee understand better the time-varying problems solving. We also thank the referee sincerely for the inspirations from the comment.\n  \u5e0c\u671b\u4e0a\u8ff0\u89e3\u91ca\u80fd\u591f\u6d88\u9664\u60a8\u7684\u987e\u8651: Finally, we hope that our response can address the referee' concerns.\n  \u5982\u679c\u60a8\u80fd\u76f4\u63a5\u544a\u8bc9\u6211\u4eec\uff0c\u8bf7\u60a8\u76f4\u8bf4\u5427\n In addition, if he/she has other better specific discretization methods, please feel free to tell us to try. **This may be another good direction for us to extend the research. ** It will be much helpful if the referee can directly tell us the existing state of arts of conversion of a continuous-time system that he/she thinks. Respecting the comments of the referee, the multiple-point numerical differentiation formulas [40], [41] are investigated further to convert the continuous-time ZNN model to discrete-time ZNN models, which has been added in the revised manuscript, i.e., the Appendix.    \u7b54\u590d\u6a21\u677f \u7b54\u590d1:We/The authors thank the editor very much for giving us such inspiring advice. \u3010\u5f00\u5934\u611f\u8c22\u3011\nWe have updated the literature survey in the new manuscript according to the suggestion of the editor. \u3010\u6211\u4eec\u505a\u7684\u4fee\u6539\u3011\u3010\u5f15\u7528\u65b9\u9762\u7684\u4fee\u6539\uff08\u6dfb\u52a0\uff0c\u5220\u9664\u5f15\u7528\uff09\u3011\nSpecifically, nine recent related papers from ITS (i.e., references [4] through [6], [10] through [15] in the new manuscript) have been added in Introduction, and reference [6] in original manuscript has been removed (in the new manuscript).\u3010\u8bf4\u660e\u5177\u4f53\u4fee\u6539\u3011\nFinally, the authors would like to say thanks again sincerely to the editor for his time and effort spent in reviewing the manuscript, as well as many constructive comments which have imporved much further the presentation and quality of this manuscript.\u3010\u7ed3\u5c3e\u611f\u8c22\u3011\n\u7b54\u590d2:First of all, we (the authors) would like to express our sincere gratitude to the editors and anonymous referees for their time, effort and recognition given to our manuscript ITS-0491. Specifically, &ldquo;The problem studied in the paper is very interesting&hellip; &quot; (Referee 1); &ldquo;*In my opinion, the work is ****good ****and the contribution of the paper is *significant&rdquo; (Referee 2).\n\u3010\u9996\u5148\u611f\u8c22review\u7684\u8bc4\u8bba\uff0c\u5e76\u5217\u4e3e\u8bc4\u8bba\u7684\u8bdd\u3011\nSecondly, we gratefully point out that the editors' and referees' comments and suggestions have really constructively helped us improve further the quality and presentation of this manuscript. In light of such inspiring comments and suggestions, we have revised the original manuscript duly and carefully, with main revisions listed as follows.\n  As the response to the comments of Referee 1, the multiple-point numerical differentiation formulas (given by newly-cited references [40], [41] in the revised manuscript) have been investigated to convert the continuous-time system to the discrete-time system (please see the Appendix in the revised manuscript). Moreover, a rebot-manipulator motion planning example (i.e., Example 3) has been added to Section VII for further verifying the effectiveness of the proposed methods/models.\n  As suggested by Referee 2, Remark 1 about the general differences between the continuous-time ZNN model and discrete-time ZNN models has been added to Section III. In addition, newly-cited references [40] through [42] in the revised manuscript are mentionede in Remark 1. Moreover, Remark 2 about the procedure of the combinede discrete-time ZNN-BFGS method/models for solving the time-varying quadratic-minimization problem has been added to S ection V.\n  As suggested by Referee 4, Figs.13 and 14 have been revised duly according to the format of Figs.1, 4, 5, 6 and 7. In addition, the formulations of the discrete-time ZNN, ZNN-BFGS and GNN models have been listed in Table 1 in Section VII.\n  Thirdly, with many thanks to the editors and referees, we would like to address their comments as follows. \u3010\u518d\u6b21\u611f\u8c22\uff0c\u5e76\u5206referee\u5206\u522b\u56de\u7b54comments\u3011\nResponse to Comment of (Assistant) Editor\nWe (the authors) sincerely thank the Assistant Editor for the constructive suggestions. As pointed out above, we have carefully addressed all comments of the referees and have imporved greatly the presentation and quality of the manuscript. So, also thank the referees for the comments. Moreover, we have read, checked and revised the whole manuscript carefully for many times.\nFinally, we would like to say thanks again sincerely to the editors and anonymous referees for their time and effort spent in handling our manuscrpt, as well as providing us many constructive comments for imporving very much the presentation and quality of this manuscript.\nAuthor&rsquo;s ResponseDear Editor:\nWe would like to thank you and reviewers for providing valuable feedback on our paper. We have made all changes according to the comments and are resubmitting the attached revised manuscript, \u201cProfitable Taxi Travel Route Recommendation based on Big Taxi Trajectory Data\u201d (Ref. No.: T-ITS-18-04-0314) for consideration of publication in IEEE Transactions on Intelligent Transportation Systems.\nOur response letter is uploaded to the system, the attached letter presents our responses to the feedback and comments. The original comments are in italics, and our responses are in boldface following each comment. If you have any questions, please do not hesitate to contact us.\nSincerely,\nBoting Qu, Wenxin Yang, Ge Cui and Xin Wang\n",
        "description": "",
        "id": 99,
        "section": "posts",
        "tags": [
            "review",
            "\u8bba\u8fa9",
            "\u8bba\u6587"
        ],
        "title": "\u8bba\u6587\u5ba1\u8bc4\u8bba\u8fa9",
        "uri": "/posts/notes/92/"
    },
    {
        "content": " \u96c5\u601d\u8003\u8bd5\u3002\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u4e0d\u8981\u8bf4\u8bdd\",\rartist: \"\u9648\u5955\u8fc5\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E4%B8%8D%E8%A6%81%E8%AF%B4%E8%AF%9D-993ff5-Ag.mp3\",\rcover: \"https://p2.music.126.net/p1JcPibtmiokhWF-sov7qA==/109951165361483972.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E4%B8%8D%E8%A6%81%E8%AF%B4%E8%AF%9D-%E9%99%88%E5%A5%95%E8%BF%85-7a06f5-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2019.12.1 Threre are must somethings I can do for you. 2019.12.2 1) \u4e0b\u5468\u4e00\u53e3\u8bed\u8003\u8bd5\u3002 2) \u6709\u7684\u65f6\u5019\u603b\u4ee5\u4e3a\u65b0\u7684\u751f\u6d3b\u3001\u65b0\u7684\u73af\u5883\u3001\u65b0\u7684\u4e3b\u9898\u53ef\u4ee5\u6539\u53d8\u81ea\u5df1\u3002\u5176\u5b9e\u4e0d\u8fc7\u662f\u4e2a\u501f\u53e3\u3002 2019.12.3 We don&rsquo;t build the lives we want by saving time, we build the lives we want, and then time saves itself. 2019.12.4 MELANCHOLY 2019.12.5 I guess it&rsquo;s ok. I mean, it&rsquo;s not something I particularly enjoy doing it, but I also don&rsquo;t mind doing that. 2019.12.6 Sadness is not a kind of good excuse. Be stronger! 2019.12.7 \u5feb\u4e50\u7684\u6839\u672c\u6240\u5728\u662f\u4fdd\u6301\u6b32\u671b\u4e0e\u80fd\u529b\u7684\u5e73\u8861\u3002 2019.12.8 \u4eba\u751f\u7684\u6bcf\u4e00\u6b21\u7ecf\u5386\u6216\u8bb8\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u7136\u4e0d\u4f1a\u6709\u4e4b\u540e\u53d1\u751f\u7684\u4ee4\u4eba\u5370\u8c61\u6df1\u523b\u7684\u4e8b\u60c5\uff0c\u4e0d\u662f\u4e48\u3002 2019.12.9 \u53e3\u8bed\u8003\u5b8c\u4e86\u3002\u867d\u7136\u611f\u89c9\u7ed3\u679c\u6ca1\u90a3\u4e48\u597d\uff0c\u4e5f\u6ca1\u4ec0\u4e48\u9057\u61be\u3002\u6211\u5c3d\u529b\u4e86\uff0c\u800c\u4e14\u6211\u89c9\u5f97\u6c34\u5e73\u4e4b\u5185\uff0c\u8868\u73b0\u8fd8\u597d\uff0c\u5e0c\u671b\u8003\u5b98\u7ed9\u70b9\u8868\u60c5\u5206\u5427 2019.12.10 \u6211\u53ef\u80fd\u662f\u574f\u4e86\u773c\u775b\uff0c\u95ed\u4e0a\u773c\u4ecd\u5e38\u5e38\u770b\u89c1\u4f60\u5728\u8fd9\u91cc\u6253\u8f6c\uff0c\u6628\u65e5\u91cd\u73b0\u3002 2019.12.11 \u4f60\u7684\u8116\u5b50\u597d\u53ef\u7231\uff0c\u4e0a\u9762\u9876\u7740\u4e00\u4e2a\u732a\u8111\u888b\u3002\u200b\u200b\u200b 2019.12.12 \u4f60\u7684\u773c\u7738\u5982\u661f \u56de\u9996\u662f\u6f47\u6f47\u66ae\u96e8 2019.12.13 \u76f8\u89c1\u65f6\u96be\u522b\u4ea6\u96be \u4e1c\u98ce\u65e0\u529b\u767e\u82b1\u6b8b 2019.12.14 you have my word. 2019.12.15 \u603b\u6709\u4e9b\u60ca\u5947\u7684\u9645\u9047 \u6bd4\u65b9\u8bf4\u5f53\u6211\u9047\u89c1\u4f60 2019.12.16 1)\u628a\u6211\u5f53\u505a\u4e00\u68f5\u6811\u5427\u30022)\u7f8e\u98df\u4e0e\u7231\u4e0d\u53ef\u8f9c\u8d1f\u3002 2019.12.17 \u8ba9\u4f60\u77ed\u6682\u5feb\u4e50\u7684\u4e1c\u897f\u901a\u5e38\u4f1a\u7ed9\u4f60\u5e26\u6765\u957f\u671f\u7684\u75db\u82e6\u3002 2019.12.18 Mean Shift\u5747\u503c\u6f02\u79fb 2019.12.19 \u8bef\u6740 2019.12.20 \u83ab\u8fc7\u4e8e\u4f60\u4e0d\u5728\u6211\u8eab\u8fb9 \u6211\u5374\u611f\u540c\u8eab\u53d7 2019.12.21 \u8bb0\u5fc6\u662f\u76f8\u89c1\u7684\u4e00\u79cd\u65b9\u5f0f 2019.12.22 \u805a\u7126 2019.12.23 \u4e00\u76f4\u5f88\u5b89\u9759 2019.12.24 Merry Christmas. 2019.12.25 1) \u6ca1\u6709\u4ec0\u4e48\u4e1c\u897f\u53ef\u4ee5\u7528\u6765\u6000\u5ff5\u4f60\uff0c\u6000\u5ff5\u5f80\u65e5; 2) \u867d\u7136\u6ca1\u8fc7\uff0c\u603b\u6bd4\u7f3a\u5e2d\u7684\u597d\u5427 2019.12.26 \u6c89\u4e0b\u5fc3\uff0c\u6162\u6162\u6765 2019.12.27 \u6b22\u4e50\u8c37\uff0c\u8fc7\u5c71\u8f66\uff0c\u8df3\u697c\u673a 2019.12.28 \u53c8\u505a\u4e86\u4e00\u904d\u7537\u7235\u7684\u4efb\u52a1\u3002\u6700\u521d\u662f\u5f88\u6297\u62d2\u505a\u4e3b\u7ebf\uff0c\u628a\u652f\u7ebf\u505a\u5b8c\u4e86\uff0c\u7136\u540e\u505a\u4e3b\u7ebf\uff0c\u6700\u540e\u6740\u4e86\u6811\u5fc3\uff0c\u7537\u7235\u6ca1\u6709\u6b7b\uff0c\u5b89\u5a1c\u4e5f\u6ca1\u6709\u6b7b\uff0c\u7537\u7235\u5e26\u7740\u592b\u4eba\u53bb\u5bfb\u533b\u3002\u53cd\u53cd\u590d\u590d\uff0c\u60f3\u7740\u968f\u5fc3\u5728\u505a\u4e00\u6b21\u4efb\u52a1\u5427\uff0c\u4e0d\u60f3\u5728\u7ea0\u7ed3\u4e8e\u8c01\u8be5\u4e0d\u8be5\u6b7b\u7684\u95ee\u9898\u3002\u4e8c\u5468\u76ee\u3002\u9047\u5230\u6700\u7ea0\u7ed3\u7684\u4efb\u52a1&mdash;-\u5bb6\u5bb6\u6709\u672c\u96be\u5ff5\u7684\u7ecf\u3002 2019.12.29 \u4f60\u6653\u5f97\u7684\u5427\u3002\u6709\u65f6\u5019\u66f4\u591a\u7684\u662f\u65e0\u8bdd\u53ef\u8bf4\u3002 2019.12.30 \u4e8c\u5468\u76ee\u7684\u5deb\u5e083\uff0c\u5f88\u591a\u4efb\u52a1\u611f\u89c9\u505a\u8fc7\uff0c\u53c8\u611f\u89c9\u6ca1\u505a\u8fc7\u3002 2019.12.31 \u8de8\u5e74\uff0c2019\u5e74\u7ed3\u675f\u4e86\u3002   2019.12.31 \u8de8\u5e74_\u6821\u957f\u8bb2\u8bdd_\u5f18\u96c5\u5802\n",
        "description": "",
        "id": 100,
        "section": "posts",
        "tags": [
            "\u53e3\u8bed\u8003\u8bd5",
            "\u7ed3\u675f",
            "\u5deb\u5e083",
            "\u8003\u8bd5",
            "\u6b22\u4e50\u8c37",
            "\u8de8\u5e74"
        ],
        "title": "2019-12",
        "uri": "/posts/journals/100/"
    },
    {
        "content": " \u96c5\u601d\u5c0f\u4f5c\u6587\uff0c\u5e38\u7528\u8868\u8ff0\u603b\u7ed3\n \u5f00\u5934\u63cf\u8ff0 \u7c7b\u578b  chart/graph table  \u6539\u5199\u9898\u76ee  the graph shows the changes in &hellip; / the graph shows how &hellip; changed/varied .  The charts shows the changes in the performance of boys and girls in different subjects in 1996 and 2002. The charts shows how the performance of boys and girls in different courses changed in 1996 and 2002. show\u7684\u66ff\u6362\uff1athe table shows/reveals/indicates/suggests sth.   The charts compare sb/ sth in terms of sth.   The chart compares five major cities in terms of the changes in the cost of an average house over a period of 13 years.   The chart presents/provides infromation/data about sth.  \u63cf\u8ff0\u8d8b\u52bf \u4e0a\u5347\u3001\u589e\u52a0 (increase/rise/climb)  sth (on average) increase twofold/threefold (in the past five years). , with the figure rising more than eight fold &hellip; the percentage of sth more than double/tripe(d) (from 5% to 18% in 2002) The proportion increases sightly (\u7a0d\u5fae) to 25 units The amount of coal consumed climbs to 30% in 2030 Nuclear power consumption saw a steady increase to around 30% in 2005. the amount of sth increased significantly(\u660e\u663e\u589e\u52a0) (from 20 to 36 in Australia).  \u4e0b\u964d\u3001\u51cf\u5c11 (decrease/decline/drop)  the proportion of sth drop(ped) (from 40% to 34%) The proportion falls steeply (\u6025\u5267) to 2 units there was a dramatic decline in the percentage of sth (from 28% to 5%). the figures for sth declined (in both countries to 2 units).  \u5bf9\u6bd4\u8d8b\u52bf/(\u4e24\u8005)\u5c55\u73b0\u51fa\u7684\u8d8b\u52bf  saw a different/same trend  (\u4e0d\u540c/\u76f8\u540c\u7684\u8d8b\u52bf)  The proportion of sth saw a different trend in these two countries, increasing sightly (\u7a0d\u5fae) to 25 units in France but falling steeply (\u6025\u5267) to 2 units in Australia.   the gap between A and B widen/narrow   The gap between these two fuels is likely to widen. (\u5dee\u8ddd\u9010\u6e10\u6269\u5927) The gap between these two proportions narrows as students get older. (\u5dee\u8ddd\u9010\u6e10\u7f29\u5c0f)    \u8d8b\u52bf\u7a33\u5b9a\u6027  \u4e0d\u7a33\u5b9a\uff0c\u6ce2\u52a8  volatile (adj.)  The price was volatile, ranging from $20 to $40.   \u6301\u5e73\u3001\u4e0d\u53d8\uff0c\u57fa\u672c\u7a33\u5b9a  the percentage of sth did not change remarkably (16% in 2002 and 19% in 1982) remain stable at 30%  Other fuel sources are less significant.    \u63cf\u8ff0\u6570\u91cf \u8868\u8ff0\u6700\u503c/\u91cd\u8981\u6027  adj.: important/primary/principal n. : consideration/cause/reason sth was the most important consideration (in both years) \u6700\u9ad8 sth was the primary cause of sth. \u6700\u4e3b\u8981\u7684\u56e0\u7d20 sth was the principal reason for sth in sw. \u6700\u4e3b\u8981\u7684\u539f\u56e0 sth had the largest proportion of sth (at 23%). (\u6bd4\u4f8b\u6700\u5927) sth had become the third most common reason for sth. \u7b2c\u4e09\u9ad8 British&rsquo;s crime rate peaked at 9% or so(\u5de6\u53f3) in 1999. The figure for women rose steadily and reached a peak of 53.3% for those aged 45-54, while the proportion of men fell to the lowest point at 39.5% for those aged 35-44.  \u6bd4\u8f83\u3001\u6b21\u7ea7\u91cd\u8981\u6027  sth was much more/less important (in France)(\u6bd4\u8f83\u91cd\u8981\u3001\u6ca1\u90a3\u4e48\u91cd\u8981)  \u63cf\u8ff0\u5360\u6bd4  A and B were responsible for 30% and 28% of sth respectively, while the remaining 7% was attributed to sth. , with around 35% of sth, compared with 3.3% in Europe. , reaching 50% in 2030 (\u9ad8\u8fbe&hellip;). the percentage of sth did not change remarkably (16% in 2002 and 19% in 1982) This age group will also make up with the largest proportion of Italy&rsquo;s population in 2050. make up with a minor/major proportion of &hellip;  \u53ea\u3001\u4ec5\u4ec5\u3001\u5c11\u91cf  sth were chosen by only 2% (and 3% respectively in this years)  \u5e38\u7528\u603b\u7ed3  Overall, Australia and France relied on different fuel sources. While coal and hydro power were important in Australia, nuclear power dominated France&rsquo;s energy sector. (\u603b\u7ed3\u4e24\u8005\u91cd\u8981\u6027\u4e0d\u540c) Overall, sth was the main problem worldwide in terms of land degradation. Europe had a higher proportion of degraded land than other two areas.  \u57fa\u672c\u53e5\u578b therebe  there was a dramatic decline in the percentage of sth (from 28% to 5%).  while  A and B were responsible for 30% and 28% of sth respectively, while the remaining 7% was attributed to sth.  \u6bd4\u8f83\u7ea7  Europe had a higher proportion of degraded land than other two areas.  \u4e00\u4e9b\u540d\u8bcd \u6570\u636e\u3001\u6570\u5b57  figure/data  the figures for sth declined (in both countries to 2 units). the figure for New York showed a similar pattern,&hellip;    \u6bd4\u4f8b/\u767e\u5206\u6bd4/\u5360\u6bd4  percentage  the percentage of sth more than double/tripe from 5% to 18% in 2002   proportion  The proportion (of sth) increases sightly to 25 units    \u65f6\u95f4\u8868\u8fbe  from 1990 to 2002 during a/the period of 13 years \u4e00\u6bb5\u65f6\u95f4 at the beginning of \u524d\u671f by the middle of \u4e2d\u671f by the end of \u540e\u671f   \u5e74\u9f84\u7684\u8868\u8fbe  aged&hellip;  people aged under 24 \u591a\u5c11\u5c81\u4ee5\u4e0b people aged 30-39 / people aged between 30 and 39 \u591a\u5c11\u5c81\u4e4b\u95f4 people aged over 50 \u591a\u5c11\u5c81\u4ee5\u4e0a   &hellip;year-old  under-24-year-old people 30-39-year-old people over-50-year-old people   \u968f\u7740\u5e74\u9f84\u7684\u589e\u957f  with age(\u5355\u6570), &hellip; as students get older    ",
        "description": "",
        "id": 101,
        "section": "posts",
        "tags": [
            "\u96c5\u601d",
            "\u4f5c\u6587"
        ],
        "title": "\u56fe\u8868\u7c7b\u4f5c\u6587\uff1a\u63cf\u8ff0\u6027\u8bed\u53e5\u603b\u7ed3",
        "uri": "/posts/notes/86/"
    },
    {
        "content": " \u7f51\u4e0a\uff08\u77e5\u4e4e\uff09\u6458\u5f55\u57fa\u7840\u8bed\u6cd5\u3002\n   \u53e5\u5b50\u7ed3\u6784   \u5b66\u4e60\u8bcd\u6027/\u8bcd\u7c7b\uff08\u82f1\u8bed\u5355\u8bcd\u6839\u636e\u5728\u53e5\u4e2d\u7684\u529f\u7528\uff0c\u5206\u4e3a\u5341\u5927\u7c7b\uff09\u53c2\u8003  \u540d\u8bcd noun n. \u5f62\u5bb9\u8bcd adjective adj. \u52a8\u8bcd verb v. \u51a0\u8bcd article art. \u4f8b\u5982 a the \u8fde\u8bcd conjunction conj. \u4f8b\u5982 and  fanboys + and yet + and so \u89c1\u4e0b\u6587\u4ece\u53e5.\u590d\u5408\u53e5\u90e8\u5206 \u8be6\u89e3   \u4ee3\u8bcd pronoun pron. \u4f8b\u5982 you  \u4eba\u79f0\u4ee3\u8bcd\uff1a  \u4e3b\u683c\uff1aI\u6211\uff0cyou\u4f60\uff0che\u4ed6\uff0cshe\u5979\uff0cthey\u4ed6\u4eec\uff0c we\u6211\u4eec \u5bbe\u683c\uff1ame\u6211\uff0c you\u4f60\uff0c him\u4ed6\uff0c her\u5979\uff0c them\u4ed6\u4eec\uff0c us\u6211\u4eec    \u7269\u4e3b\u4ee3\u8bcd\uff1a   \u5f62\u5bb9\u8bcd\u6027\u7269\u4e3b\u4ee3\u8bcd\uff1amy\u6211\u7684\uff0c his\u4ed6\u7684\uff0c your\u4f60\u7684\uff08your\u4f60\u4eec\u7684\uff09\uff0c their\u4ed6\u4eec\u7684\uff0c hers\u5979\u7684  \u540d\u8bcd\u8bcd\u6027\u7269\u4e3b\u4ee3\u8bcd\uff1amine his yours hers theirs ours    \u6307\u793a\u4ee3\u8bcd\uff1a this\u8fd9\uff0c that\u90a3\uff0c these\u8fd9\u4e9b\uff0c those \u90a3\u4e9b   \u53cd\u8eab\u4ee3\u8bcd\uff1amyself\u6211\u81ea\u5df1\uff0c himself\u4ed6\u81ea\u5df1\uff0c themselves\u4ed6\u4eec\u81ea\u5df1\uff0c yourself\u4f60(\u4eec)\u81ea\u5df1\uff0cherself\u5979\u81ea\u5df1    \u7591\u95ee\u4ee3\u8bcd\uff1awho\u8c01\uff0c what\u4ec0\u4e48\uff0c which\u54ea\u4e2a   \u4e0d\u5b9a\u4ee3\u8bcd\uff1asome\u4e00\u4e9b\uff0c many\u8bb8\u591a\uff0c both\u4e24\u4e2a\u3001\u4e24\u4e2a\u90fd\uff0c any\u8bb8\u591a   \u5173\u7cfb\u4ee3\u8bcd\uff1awhich\u2026\u2026\u7684\u7269\uff0c who\u2026\u2026\u7684\u4eba\uff0c that\u2026\u2026\u7684\u4eba\u6216\u7269\uff0c who\u8c01\uff0c that\u5f15\u5bfc\u5b9a\u8bed\u4ece\u53e5  \u76f8\u4e92\u4ee3\u8bcd\uff1aeach other \u4e92\u76f8\uff0c one another\u4e92\u76f8  \u8fde\u63a5\u4ee3\u8bcd\uff1a who,whom,whose,what,which,whatever,whichever,whoever,whomever   \u66ff\u4ee3\u8bcd\uff1aone\uff08\u5355\u6570\uff09\uff0cones\uff08\u590d\u6570\uff09   \u526f\u8bcd adverb adv. \u6570\u8bcd numeral num. \u4f8b\u5982 three  \u57fa\u6570\u8bcd\uff1a\u57fa\u6570\u8bcd\u8868\u793a\u6570\u91cf\u7684\u591a\u5c11\u3002\u5982\u00a0one,two,three,four\u2026\u2026 \u5e8f\u6570\u8bcd\uff1a\u5e8f\u6570\u8bcd\u8868\u793a\u6392\u5217\u7684\u987a\u5e8f\u3002\u5982\u00a0first---1st;second---2nd;\u3000third-3rd; thirty-first---31st   \u4ecb\u8bcd preposition prep. \u4f8b\u5982 at \u611f\u53f9\u8bcd interjection interj. \u4f8b\u5982 oh   \u5b66\u4e60\u5355\u53e5\u548c\u4ece\u53e5  \u4e3b/\u8c13/\u5bbe  The emissions /from vehicles and planes /can cause /air pollution.   \u4e3b/\u8c13/\u5bbe/\u5bbe\u8865  Modern technology /has allowed /rich people /to accumulate wealth more easily.   \u4e3b/\u8c13/\u95f4\u5bbe/\u76f4\u5bbe  Computer technology /gives /people /opportunities /to communicate with each other.   \u4e3b/\u88ab\u52a8\u8bed\u6001  Those serious offenders /should be sent to prison.   \u4e3b/\u4e0d\u53ca\u7269\u52a8\u8bcd  The tuition fee /has been rising.   \u4e3b/\u7cfb/\u8868  Working long hours /has become /the norm in companies. She /is /lovely.   there be\u53e5\u578b  There are /many job applicants /competing the limited positions. (&lt;==Many job applicants are competing the limited positions)   it \u5145\u5f53\u5f62\u5f0f\u4e3b\u8bed\u6216\u8005\u5bbe\u8bed  It /would be /difficult /to create a happy, prosperous society.   \u72b6\u8bed\u4ece\u53e5  People in some countries /have to face /a long prison term /if they commit crimes.   \u540d\u8bcd\u6027\u4ece\u53e5  Some people /argue /that harsh punishments can help deter crime.   \u5b9a\u8bed\u4ece\u53e5 \u53c2\u8003  \u5728\u4e00\u4e2a\u590d\u5408\u53e5\u4e2d\uff0c\u8ddf\u5728\u4e3b\u53e5\u540e\u4fee\u9970\u67d0\u4e00\u540d\u8bcd\u6216\u4ee3\u8bcd\uff08\u7edf\u79f0\u4e3a\u5148\u884c\u8bcd\uff09\u7684\u4ece\u53e5\u53eb\u505a\u5b9a\u8bed\u4ece\u53e5(The Attributive Clause).\u88ab\u5b9a\u8bed\u4ece\u53e5\u6240\u4fee\u9970\u7684\u8bcd\u53eb\u505a\u5148\u884c\u8bcd(Antecedent).\u5b9a\u8bed\u4ece\u53e5\u901a\u5e38\u8ddf\u5728\u5148\u884c\u8bcd\u4e4b\u540e,\u7531\u5173\u7cfb\u8bcd(Relatives)\u5f15\u51fa.\u56e0\u6b64,\u5b9a\u8bed\u4ece\u53e5\u53c8\u53ef\u79f0\u4e3a\u5173\u7cfb\u5206\u53e5. \u5b9a\u8bed\u4ece\u53e5\u4e3b\u8981\u5206\u4e3a\u975e\u9650\u5236\u6027\u5b9a\u8bed\u4ece\u53e5\u548c\u9650\u5236\u6027\u5b9a\u8bed\u4ece\u53e5\u3002 Tax reductions /are /beneficial to those /who live on a tight budget.        \u4ece\u53e5  \u95ee\u9898\u6f84\u6e05\uff1a\u4f55\u8c13\u4ece\u53e5  \u4ece\u9898\u2f6c\u7684\u6b63\u2f42\u53ef\u4ee5\u770b\u51fa\u6765\u9898\u4e3b\u95ee\u7684\u662f\u540d\u8bcd\u6027\u4ece\u53e5\u3001\u5f62\u5bb9\u8bcd\u6027\u4ece\u53e5\uff08\u5b9a\u8bed\u4ece\u53e5\uff09\u3001\u526f\u8bcd\u6027\u4ece\u53e5\uff08\u72b6\u8bed\u4ece\u53e5\uff09\u4e09\u7c7b\u590d\u6742\u53e5\u4ece\u53e5\uff0c\u4f46\u662f\u4ece\u53e5\u7684\u6982\u5ff5\u4e0d\u2f4c\u5982\u6b64\u3002\u82f1\u8bed\u4e2d\u7684\u4ece\u53e5\u6982\u5ff5\u5305\u62ec\uff1a  \u590d\u5408\u53e5\uff08compound sentence\uff09\uff0c\u5e38\u79f0\u4e3a\u5e76\u5217\u53e5\uff0c\u6307\u7684\u662f\u2f64\u8fde\u8bcd\u8fde\u63a5\u591a\u4e2a\u7b80\u5355\u53e5\u7ec4\u6210\u7684\u53e5\u2f26\u3002 \u590d\u6742\u53e5\uff08complex sentence\uff09\uff0c\u4e5f\u79f0\u4e3a\u4ece\u53e5\u3001\u4e3b\u4ece\u590d\u5408\u53e5\uff0c\u2f64\u4ee3\u8bcd\u3001\u526f\u8bcd\u3001\u8fde\u8bcd\u628a\u2f00\u4e2a\u7b80\u5355\u53e5\u4f5c\u4e3a\u53e6\u5916\u2f00\u4e2a\u7b80\u5355\u53e5\u7684\u4ece\u5c5e\u6210\u5206\u7684\u53e5\u2f26    \u4e24\u70b9\u8bf4\u660e  \u4e0a\u2faf\u8fd9\u4e24\u79cd\u662f\u4e13\u4e1a\u8bed\u6cd5\u7684\u8bf4\u6cd5\uff0c\u2f7d\u2f00\u822c\u6211\u4eec\u8bf4\u7684\u590d\u6742\u53e5\u5176\u5b9e\u6307\u7684\u662f\u2f50\u8f83\u96be\u2f50\u8f83\u590d\u6742\u7684\u53e5\u2f26\uff0c\u53ef\u80fd\u662f\u7b80\u5355\u53e5\u3001\u590d\u5408\u53e5\u6216\u8005\u590d\u5408\u53e5\u3002\u8981\u5b66\u597d\u8bed\u6cd5\uff0c\u2fb8\u5148\u5c31\u8981\u51c6\u786e\u5b9a\u4e49\u8fd9\u4e9b\u540d\u8bcd\uff0c\u4e0d\u7136\u4f1a\u6df7\uff0c\u5f88\u591a\u4e89\u8bba\u4e5f\u662f\u4ece\u6b64\u2f7d\u6765\u3002  \u590d\u5408\u53e5\u548c\u590d\u6742\u53e5\u8fd8\u53ef\u4ee5\u878d\u5408\u4e3a\u590d\u5408\u590d\u6742\u53e5\uff0c\u4e5f\u79f0\u4e3a\u5e76\u5217\u590d\u6742\u53e5\uff0c\u4e0d\u8fc7\u7406\u89e3\u4e86\u590d\u5408\u53e5\u548c\u590d\u6742\u53e5\uff0c\u5c31\u4e0d\u2f64\u5355\u72ec\u8ba8\u8bba.     \u603b\u8d77\uff1a\u4ece\u53e5\u7684\u2f00\u822c\u7ed3\u6784  \u4ece\u4e0a\u2faf\u7684\u590d\u5408\u53e5\u548c\u590d\u6742\u53e5\u7684\u5b9a\u4e49\u5c31\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u4ece\u53e5\u90fd\u662f\u4e24\u4e2a\u53e5\u2f26\u8fde\u63a5\u8d77\u6765\uff0c\u4ee3\u8bcd\u3001\u526f\u8bcd\u3001\u8fde\u8bcd\uff0c\u90fd\u7b3c\u7edf\u5730\u79f0\u4e3a\u5f15\u5bfc\u8bcd\uff0c\u6240\u4ee5\u4ece\u53e5\u7684\u2f00\u822c\u7ed3\u6784\u662f\uff1a  \u7b80\u5355\u53e51 + \u5f15\u5bfc\u8bcd + \u7b80\u5355\u53e52 \u5173\u952e\u70b9\u5728\u5f15\u5bfc\u8bcd\u4e0a\uff0c\u5206\u8ff0\u5982\u4e0b\uff1a  \u590d\u5408\u53e5\u7684\u5f15\u5bfc\u8bcd\uff1a\u8fde\u8bcd \u590d\u6742\u53e5\u7684\u5f15\u5bfc\u8bcd\uff1a\u4ee3\u8bcd\u3001\u526f\u8bcd\u3001\u8fde\u8bcd   \u6839\u636e\u5f15\u5bfc\u8bcd\u80fd\u591f\u8fde\u63a5\u7684\u53e5\u2f26\u7684\u5b8c\u6574\u6027\uff08\u5373\u5b8c\u6574\u53e5\u2f26\u4e0e\u4e0d\u5b8c\u6574\u53e5\u53e5\u2f26\uff09\uff0c\u5f15\u5bfc\u8bcd\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\uff1a  \u4ee3\u8bcd + \u4e0d\u5b8c\u6574\u53e5\u2f26 \u526f\u8bcd/\u8fde\u8bcd + \u5b8c\u6574\u53e5\u2f26   \u4ece\u7b80\u5355\u53e52\u5224\u65ad\u53e5\u5b50\u662f\u5426\u5b8c\u6574\uff0c\u4ece\u800c\u5224\u65ad\u5f15\u5bfc\u8bcd\u8bcd\u6027\uff0c\u901a\u8fc7\u5f15\u5bfc\u8bcd\u8bcd\u6027\u53c8\u53ef\u5224\u65ad\u4ece\u53e5\u7c7b\u578b     \u590d\u5408\u53e5  \u590d\u5408\u53e5 = \u7b80\u5355\u53e51 + \u5e76\u5217\u8fde\u8bcd + \u7b80\u5355\u53e52 \u2f7d\u5e76\u5217\u8fde\u8bcd\u6781\u5176\u7b80\u5355\uff0c\u5373fanboys + and yet + and so\uff0cfanboys\u5373\u4e0b\u5217\u8fde\u8bcd\u7684\u2fb8\u5b57\u2e9f\u7f29\u5199  for: I'd better take an umbrella, for it is going to rain. and: He is so handsome and the princess is willing to marry him. nor(\u4e5f\u4e0d): The city is not beautiful, nor is it clean. (\u8fd9\u4e2a\u57ce\u5e02\u4e0d\u6f02\u4eae\uff0c\u4e5f\u4e0d\u5e72\u51c0) but: I like action movies but she doesn\u02bct like them. or: Take the chance, or you will regret. yet: She walked slowly into the hall and at once noticed that all the room doors were open, yet following her regular practice she had shut them before going out. (\u5979\u6162\u6162\u5730\u8d70\u8fdb\u5927\u5385\uff0c\u7acb\u523b\u6ce8\u610f\u5230\u6240\u6709\u623f\u95f4\u7684\u95e8\u90fd\u6253\u5f00\u4e86\uff0c\u4f46\u662f\u5728\u5979\u7ecf\u5e38\u7ec3\u4e60\u4e4b\u540e\uff0c\u5979\u5728\u5916\u51fa\u524d\u5173\u4e0a\u4e86\u5b83\u4eec\u3002) and yet: She walked slowly into the hall and at once noticed that all the room doors were open, and yet following her regular practice she had shut them before going out. so: It is hard for energetic, quick-minded people to waste time, so they are often tempted to finish a job before setting out to keep an appointment. (\u7cbe\u529b\u5145\u6c9b\uff0c\u601d\u7ef4\u654f\u6377\u7684\u4eba\u5f88\u96be\u6d6a\u8d39\u65f6\u95f4\uff0c\u6240\u4ee5\u4ed6\u4eec\u7ecf\u5e38\u60f3\u5728\u5b8c\u6210\u5de5\u4f5c\u4e4b\u524d\u505a\u597d\u9884\u7ea6\u3002) and so: It is hard for energetic, quick-minded people to waste time, and so they are often tempted to finish a job before setting out to keep an appointment.   \u4e09\u70b9\u8bf4\u660e\uff1a  and yet\u548cand so\u662f\u53ef\u4ee5\u5408\u5e76\u7684\u4e24\u4e2a\u8fde\u8bcd\uff0c\u5176\u4ed6\u8fde\u8bcd\u53ea\u80fd\u2f64\u2f00\u4e2a\uff08\u2f50\u5982and or\u5c31\u4e0d\u5bf9\uff0cand but\u4e5f\u4e0d\u5bf9\uff0c\u5f53\u7136and/or\u53e6\u5f53\u522b\u8bba\u3002 and therefore\u3001and thus\u7b49\u5e76\u4e0d\u662f\u8fde\u8bcd\u5408\u2f64\uff0c\u56e0\u4e3atherefore/thus\u662f\u526f\u8bcd\uff0c\u6240\u4ee5\u5728and therefore+ \u7b80\u5355\u53e52\u4e2d\uff0ctherefore\u53ea\u662f\u526f\u8bcd\u505a\u72b6\u8bed\u3002 \u5e38\u2ec5\u4f2a\u8fde\u8bcd(\u526f\u8bcd)\uff1a  therefore however moreover/furthermore nonetheless/nevertheless (\u5c3d\u7ba1\u5982\u6b64)  Our defeat was expected but it is disappointing nevertheless. (\u6211\u4eec\u7684\u5931\u8d25\u662f\u610f\u6599\u4e2d\u7684\u4e8b\uff0c\u5c3d\u7ba1\u5982\u6b64\uff0c\u8fd8\u662f\u4ee4\u4eba\u5931\u671b\u3002)   notwithstanding (\u867d\u7136\uff0c\u5c3d\u7ba1)  Notwithstanding some major financial problems, the school has had a successful year. (\u867d\u7136\u6709\u4e9b\u91cd\u5927\u7684\u7ecf\u8d39\u95ee\u9898\uff0c\u8fd9\u6240\u5b66\u6821\u4e00\u5e74\u6765\u8fd8\u662f\u5f88\u6210\u529f\u3002)   then   \u9519\u8bef\u2f64\u6cd5  \u53e5\u2f261, however, \u53e5\u2f262. \uff08\u6ce8\uff1a\u4f60\u628a\u526f\u8bcd\u653e\u5728\u4e2d\u95f4\uff0c\u5c31\u5206\u4e0d\u6e05\u662f\u4fee\u9970\u53e5\u5b501\u8fd8\u662f\u53e5\u5b502\u7684\u4e86\uff09    \u6b63\u786e\u2f64\u6cd5  \u53e5\u2f261. However, \u53e5\u2f262. \u53e5\u2f261; however, \u53e5\u2f262. \u53e5\u2f261. \u53e5\u2f262\u7b2c\u2f00\u90e8\u5206, however, \u53e5\u2f262\u5269\u4f59\u90e8\u5206. \u53e5\u2f261. \u53e5\u2f262, however.       \u590d\u6742\u53e5  \u590d\u6742\u53e5 = \u4e3b\u53e5 + \u4ece\u53e5 = \u7b80\u5355\u53e51 + \u5f15\u5bfc\u8bcd + \u7b80\u5355\u53e52\uff08\u5212\u7ebf\u90e8\u5206\u5373\u662f\u4ece\u53e5\uff09 \u590d\u6742\u53e5\u5206\u4e09\u7c7b\u516d\u79cd\uff1a  \u8bcd\u6027-\u4ece\u53e5(\u6309\u8bcd\u6027)-\u5178\u578b\u6210\u5206-\u4ece\u53e5(\u6309\u8bed\u6cd5\u6210\u5206) \u540d\u8bcd-\u540d\u8bcd\u6027\u4ece\u53e5-\u4e3b\u8bed-\u4e3b\u8bed\u4ece\u53e5 \u540d\u8bcd-\u540d\u8bcd\u6027\u4ece\u53e5-\u5bbe\u8bed-\u5bbe\u8bed\u4ece\u53e5 \u540d\u8bcd-\u540d\u8bcd\u6027\u4ece\u53e5-\u8868\u8bed-\u8868\u8bed\u4ece\u53e5 \u540d\u8bcd-\u540d\u8bcd\u6027\u4ece\u53e5-\u540c\u4f4d\u8bed-\u540c\u4f4d\u8bed\u4ece\u53e5 \u5f62\u5bb9\u8bcd-\u5f62\u5bb9\u8bcd\u6027\u4ece\u53e5-\u5b9a\u8bed-\u5b9a\u8bed\u4ece\u53e5 \u526f\u8bcd-\u526f\u8bcd\u6027\u4ece\u53e5-\u72b6\u8bed-\u72b6\u8bed\u4ece\u53e5   \u540d\u8bcd\u6027\u4ece\u53e5  \u56db\u7c7b\uff1a  \u540d\u8bcd\u6027\u4ece\u53e5-\u8bed\u6cd5\u89e3\u91ca \u4e3b\u8bed\u4ece\u53e5-\u4ece\u53e5\u505a\u4e3b\u8bed \u5bbe\u8bed\u4ece\u53e5/\u8868\u8bed\u4ece\u53e5-\u4ece\u53e5\u505a\u5bbe\u8bed/\u8868\u8bed \u540c\u4f4d\u8bed\u4ece\u53e5-\u8ddf\u5728\u62bd\u8c61\u540d\u8bcd\u540e\u8bf4\u660e\u5176\u5177\u4f53\u5185\u5bb9   \u540d\u8bcd\u6027\u4ece\u53e5\u7684\u2f00\u822c\u89c4\u5f8b\u662f\u5206\u4e24\u7c7b\uff1a  that/whether/if + \u5b8c\u6574\u53e5\u2f26 \u7279\u6b8a\u7591\u95ee\u8bcd\u7684\u9648\u8ff0\u8bed\u5e8f   \u5148\u8bb2\u4e3b\u8bed/\u5bbe\u8bed/\u8868\u8bed\u4ece\u53e5\uff1a  that/ whether/ if + \u5b8c\u6574\u53e5\u2f26\uff08\u6ce8\u610f\u8fd9\u2fa5\u7684that\u662f\u8fde\u8bcd\uff09  That you are right is a lie. I believe (that) you are right. It is not that you lied to me; it is that you do not regret it at all now. I don\u02bct know whether/ if he is trustworthy.   \u7279\u6b8a\u7591\u95ee\u53e5\u7684\u9648\u8ff0\u8bed  what: What he wants to tell us is not clear. whatever: Whatever he does is not my concern. which: It is still unknown which team will win the match. whichever: I don\u02bct care whichever team will win the match. who: Who will win the match is still unknown. whoever: Whoever leaves the room last ought to turn off the lights. whom: I don\u02bct know whom he gave that ring to. whomever: I don\u02bct care whomever he gave that ring to.  where: Where the English evening will be held has not yet been announced. wherever: Wherever the English evening will be held is not my business. when: I hate it when they speak with their mouths full of food.\uff08it\u662f\u5f62\u5f0f\u5bbe\u8bed) whenever: Whenever they speak with their mouths full of food is a pain for me. whose: Please tell me whose umbrella this is. whosever: Whosever umbrella this is is not my business.  how: It is known to us how he became a writer. however: However he became a writer is his own secret.  why: I still don\u02bct understand why he chose to betray me.     \u518d\u8bb2\u540c\u4f4d\u8bed\u4ece\u53e5  \u540c\u4f4d\u8bed\u4ece\u53e5 = \u62bd\u8c61\u540d\u8bcd + \u4e3b/\u5bbe/\u8868\u4ece\u53e5 =\u62bd\u8c61\u540d\u8bcd + \u5f15\u5bfc\u8bcd + \u540c\u4f4d\u53e5 \u62bd\u8c61\u540d\u8bcd\u6982\u62ec\u540c\u4f4d\u53e5\uff0c\u540c\u4f4d\u53e5\u89e3\u91ca\u62bd\u8c61\u540d\u8bcd \u62bd\u8c61\u540d\u8bcd\uff1afact/ idea/ news/ information/ order/ belief/ advice/ suggestion \u5f15\u5bfc\u8bcdthat\uff08\u6ce8\u610f\u8fd9\u2fa5\u7684that\u662f\u8fde\u8bcd\uff09  The girls were surprised at the fact that ocean ships can sail up the Great Lakes. The idea that you can do this work well without thinking is quite wrong. There was a suggestion that Brown should be dropped from the team. He grabbed his suitcase and gave the impression that he was boarding the Tokyo plane.(\u4ed6\u6293\u8d77\u4ed6\u7684\u624b\u63d0\u7bb1\uff0c\u7ed9\u4eba\u7684\u5370\u8c61\u662f\uff0c\u4ed6\u767b\u4e0a\u98de\u5f80\u4e1c\u4eac\u7684\u98de\u673a\u3002) The thought came to him that maybe the enemy had fled the city.   \u5f15\u5bfc\u8bcdwhether  The question whether we should call in a specialist was answered by the family doctor.   \u7279\u6b8a\u7591\u95ee\u8bcd\u5f15\u5bfc\u8bcdwhat/ who/ whom/ whose/ when/ where/ how/ why  I have no idea what size she wears. The question who will take his place is still not clear. We haven\u02bct yet settled the question where we are going to spend our summer vacation.       \u5f62\u5bb9\u8bcd\u6027\u4ece\u53e5  \u5373\u5b9a\u8bed\u4ece\u53e5\uff0c\u5f15\u5bfc\u8bcd\u5728\u56fd\u5185\u7684\u8bed\u6cd5\u6559\u80b2\u4e2d\u5e38\u79f0\u4e3a\u5173\u7cfb\u8bcd\uff0c\u5206\u4e24\u7c7b\uff1a\u5173\u7cfb\u4ee3\u8bcd\u548c\u5173\u7cfb\u526f\u8bcd \u5173\u7cfb\u4ee3\u8bcdthat/ which/ who/ whom/ whose + \u4e0d\u5b8c\u6574\u53e5\u2f26  It\u02bcs the only one that I\u02bcve left. (\u8fd9\u662f\u6211\u5269\u4e0b\u7684\u552f\u4e00\u4e00\u4ef6\u4e1c\u897f) He is the man whom/that I saw yesterday. Is he the man who/that wants to see you? They rushed over to help the man whose car had broken down.    \u5173\u7cfb\u526f\u8bcdwhen/ where/ why + \u5b8c\u6574\u53e5\u2f26  There are occasions when (on which) one must yield. Beijing is the place where (in which) I was born. Is this the reason why (for which) he refused our offer?   \u9650\u5b9a\u6027\u4e0e\u975e\u9650\u5b9a\u6027\u5b9a\u8bed\u4ece\u53e5  \u9650\u5b9a\u6027\u5b9a\u8bed\u4ece\u53e5: \u9650\u5b9a\u4fee\u9970\uff0c\u5220\u9664\u540e\u610f\u601d\u53d8\u5316\u8f83\u5927\uff1b \u975e\u9650\u5b9a\u6027\u5b9a\u8bed\u4ece\u53e5\uff1a\u6709\u9017\u53f7\uff0c\u8865\u5145\u8bf4\u660e These courses are not approprite for children, who have learning difficulties. (\u975e\u9650\u5b9a\uff0c\u610f\u5473\u7740\u4e16\u754c\u4e0a\u7684\u5c0f\u5b69\u90fd\u6709\u5b66\u4e60\u56f0\u96be\u3002) These courses are not approprite for children who have learning difficulties.(\u8fd9\u4e9b\u8bfe\u7a0b\u4e0d\u9002\u5408\u90a3\u4e9b\u5b66\u4e60\u56f0\u96be\u7684\u5c0f\u5b69\u3002)     \u526f\u8bcd\u6027\u4ece\u53e5  \u5373\u72b6\u8bed\u4ece\u53e5\uff0c\u72b6\u8bed\u4ece\u53e5\u7684\u5f15\u5bfc\u8bcd\u53ea\u6709\u526f\u8bcd\u548c\u8fde\u8bcd\uff0c\u6240\u4ee5\u53ea\u80fd\u5f15\u5bfc\u5b8c\u6574\u53e5\u2f26\uff0c\u2f00\u822c\u6309\u610f\u4e49\u5206\u4e3a9\u7c7b  \u65f6\u95f4\uff1aWhen the dry desert ends, the green grass grows. (\u5f53\u5e72\u71e5\u7684\u6c99\u6f20\u7ed3\u675f\u65f6\uff0c\u7eff\u8349\u751f\u957f\u3002) \u5730\u70b9\uff1aWhere there is a will, there is a way. \u539f\u56e0\uff1aCollecting provides relaxation for leisure hours, as just looking at one\u02bcs treasures is always a joy. \u2f6c\u7684\uff1aSuch a plan should be carried out so that the goal of education could be better met.\uff08\u6ce8\u610f\u8fd9\u2fa5\u7684that\u662f\u8fde\u8bcd\uff09 \u7ed3\u679c\uff1aYouth is so wonderful that it is a crime to waste it.\uff08\u6ce8\u610f\u8fd9\u2fa5\u7684that\u662f\u8fde\u8bcd\uff09 \u00a0\u6761\u4ef6:\u00a0If the economy still develops at present way, the environment will be getting worse and worse. \u8ba9\u6b65\uff1aAlthough advertisements are never without disadvantages, their advantages carry more weight. \u2f50\u8f83\uff1aThe more we study, the better we understand life. (The + \u2f50\u8f83\u7ea7\u2026, the + \u2f50\u8f83\u7ea7\u2026)  \u2f45\u5f0f\uff1aIf we cannot do as we would, we must do as we can.       \u7ed3\u8bba  \u53bb\u9664\u4e0a\u2faf\u6240\u6709\u7684\u4f8b\u2f26\uff0c\u53ef\u4ee5\u770b\u5f97\u51fa\u6765\u4ece\u53e5\uff0c\u4e0d\u8bba\u662f\u590d\u5408\u53e5\u8fd8\u662f\u590d\u6742\u53e5\u90fd\u662f\u6781\u5176\u7b80\u5355\u7684\uff0c\u4e0d\u8fc7\u672c\u2f08\u4e5f\u662f\u5728\u82f1\u8bed\u4e13\u4e1a\u7684\u4e09\u5e74\u7ea7\u624d\u5b8c\u5168\u7406\u89e3\u900f\u5f7b\uff0c\u4e4b\u524d\u603b\u662f\u88ab\u2f7c\u5e08\u7ed9\u8bb2\u6655\u4e86\uff0c\u6240\u4ee5\u2f00\u4e2a\u597d\u2f7c\u5e08\u662f\u591a\u4e48\u91cd\u8981\u554a\uff0c\u2f50\u5982\u6211\uff08hahah\uff09\u3002\u7ed3\u8bba\u5982\u4e0b\uff1a  \u4ece\u53e5 = \u590d\u5408\u53e5/\u590d\u6742\u53e5 \u4e3b\u53e5 + \u4ece\u53e5 = \u7b80\u5355\u53e51\u505a\u4e3b\u53e5 + \u5f15\u5bfc\u8bcd + \u7b80\u5355\u53e52\uff08\u5212\u7ebf\u90e8\u5206\u5373\u4ece\u53e5\uff09 \u590d\u5408\u53e5 = \u7b80\u5355\u53e51 + \u5e76\u5217\u8fde\u8bcd + \u7b80\u5355\u53e52  \u5e76\u5217\u8fde\u8bcd\u53ea\u6709\u4e03\u4e2a\uff1afanboys\uff0cand yet\u3001and so\u53ef\u4ee5\u5408\u2f64   \u590d\u6742\u53e5 = \u7b80\u5355\u53e51 + \u5f15\u5bfc\u8bcd + \u7b80\u5355\u53e52  \u4ee3\u8bcd\u5f15\u5bfc\u8bcd + \u4e0d\u5b8c\u6574\u53e5\u2f26 \u526f\u8bcd/\u8fde\u8bcd\u5f15\u5bfc\u8bcd + \u5b8c\u6574\u53e5\u2f26   \u540d\u8bcd\u6027\u4ece\u53e5\u6709\u4e24\u7c7b\uff1a  that/whether/if + \u5b8c\u6574\u53e5\u2f26 \u7279\u6b8a\u7591\u95ee\u8bcd\u7684\u9648\u8ff0\u8bed\u2f53   \u5f62\u5bb9\u8bcd\u6027\u4ece\u53e5\u6709\u4e24\u7c7b\uff1a  \u5173\u7cfb\u4ee3\u8bcd + \u4e0d\u5b8c\u6574\u53e5\u2f26 \u5173\u7cfb\u526f\u8bcd + \u5b8c\u6574\u53e5\u2f26   \u72b6\u8bed\u4ece\u53e5\u53ea\u6709\u2f00\u7c7b\uff1a\u526f\u8bcd/\u8fde\u8bcd + \u5b8c\u6574\u53e5\u2f26      \u6bd4\u8f83\u7ea7   ",
        "description": "",
        "id": 102,
        "section": "posts",
        "tags": [
            "\u8bed\u6cd5"
        ],
        "title": "Grammar Learning",
        "uri": "/posts/notes/80/"
    },
    {
        "content": " 2019\u5e74\uff0c\u590f\u672b\u79cb\u521d\uff0c\u5199\u7ed9\u5929\u7a7a\n\u732e\u7ed9\u6000\u62b1\u68a6\u60f3\u7684\u6211\u4eec\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u8ffd\u68a6\u8d64\u5b50\u5fc3 - GALA\",\rartist: \"GALA\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E8%BF%BD%E6%A2%A6%E8%B5%A4%E5%AD%90%E5%BF%83%20-%20GALA-4a5db0-Ag.mp3\",\rcover: \"https://p1.music.126.net/XDncptlBJ4_LN3hLBx-8aw==/19061133579343591.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E8%BF%BD%E6%A2%A6%E8%B5%A4%E5%AD%90%E5%BF%83-GALA-f35a3e-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r ",
        "description": "",
        "id": 103,
        "section": "posts",
        "tags": [
            "\u76f8\u518c",
            "\u5929\u7a7a"
        ],
        "title": "\u5199\u7ed9\u5929\u7a7a\u7684\u60c5\u4e66",
        "uri": "/posts/journals/85/"
    },
    {
        "content": " \u53c2\u8003\u987e\u5bb6\u5317\u96c5\u601d\u4f5c\u6587\u5199\u4f5c\uff0c\u5bf9\u5927\u4f5c\u6587\u4e2d\u5e38\u7528\u8868\u8fbe\u8fdb\u884c\u6574\u7406\u3002\n \u9aa8\u67b6 \u8bba\u8ff0\u7c7b   discuss both views and give your own opinion\n  \u7b2c\u4e00\u6bb5\uff1a\n \u7b2c\u4e00\u53e5\uff1a\u6539\u5199\u9898\u76ee \u7b2c\u4e8c\u53e5\uff1a\u8868\u660e\u81ea\u5df1\u7684\u89c2\u70b9\uff1aI would argue that it would have an adverse/desirable impact on sth.    \u7b2c\u4e8c\u6bb5\uff1a\n \u7b2c\u4e00\u53e5\uff1aSome people are strong advocates of sth because sth. \u7b2c\u4e8c\u53e5\uff1a\u89e3\u91ca \u7b2c\u4e09\u53e5\uff1a\u4e3e\u4f8b\uff0cfor example    \u7b2c\u4e09\u6bb5\uff1a\n Opponents, however, argue that sth. \u7b2c\u4e8c\u53e5\uff1a\u89e3\u91ca \u7b2c\u4e09\u53e5\uff1a\u4e3e\u4f8b\uff0cfor example    \u7b2c\u56db\u6bb5\uff1a\n In my view, sth. \u7b2c\u4e8c\u53e5\uff1a\u89e3\u91ca \u7b2c\u4e09\u53e5\uff1a\u4e3e\u4f8b\uff0cfor example    \u62a5\u544a\u7c7b   Why has this happened and how to address this issue?\n  \u7b2c\u4e00\u6bb5\n \u7b2c\u4e00\u53e5\uff1a\u6539\u5199\u9898\u76ee \u7b2c\u4e8c\u53e5\uff1aIt is important to understand why this () has developed and how to reverse this trend.    \u7b2c\u4e8c\u6bb5\n \u7b2c\u4e00\u53e5\uff1a\u7b2c\u4e00\u4e2a\u539f\u56e0 \u89e3\u91ca \u4e3e\u4f8b    \u7b2c\u4e09\u6bb5\n \u7b2c\u4e00\u53e5: Another reason is that (people lack environmental awareness)(\u4eba\u4eec\u7f3a\u4e4f**\u7684\u610f\u8bc6)\uff08\u60f3\u4e0d\u51fa\u6765\u53ef\u4ee5\u4f5c\u4e3a\u539f\u56e0\uff09 \u89e3\u91ca \u4e3e\u4f8b    \u7b2c\u56db\u6bb5\n As + sth is pervasive (&hellip;\u7684\u95ee\u9898\u662f\u5e7f\u6cdb\u7684), it is important to take some measures to mitigate this problem. The first one is to raise environmental awareness, educating people to change the ways (&hellip;)(\u589e\u5f3a\u610f\u8bc6\uff0c\u5bf9\u5e94\u4e0a\u6587\u63d0\u5230\u7684\u610f\u8bc6\u95ee\u9898). Governments can also enforce some laws to deter people from doing sth/encourage people to do sth(\u7acb\u6cd5\u89d2\u5ea6). + (\u6700\u597d\u4e3e\u4e00\u4e2a\u4f8b\u5b50)    \u7b2c\u4e94\u6bb5\n To summarise\uff0c+ \u95ee\u9898 + \u65b9\u6cd5(\u4e24\u53e5\u8bdd)    \u79ef\u6781\u4f5c\u7528\u7c7b \uff08Positive\uff09   \u63d0\u9ad8\u793e\u4f1a\u6280\u80fd\uff0c\u4ee5\u540e\u6709\u66f4\u591a\u7684\u4eba\u8109\u53ef\u7528\n improve social skills, they also have more personal resources to draw up in the future    \u63d0\u9ad8\u4eba\u9645\u4ea4\u5f80\u80fd\u529b\u548c\u5de5\u4f5c\u80fd\u529b\n improve their interpersonal skills and job skills    \u63d0\u9ad8\u81ea\u5df1\u7684\u7d20\u8d28\n develop some positive qualities    \u63d0\u9ad8\u4ed6\u4eec\u7684\u4fe1\u5fc3\u548c\u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b\n boost their confidence and improve their problem-solving abilities    \u63d0\u9ad8\u4eba\u4eec\u7684\u5de5\u4f5c\u524d\u666f\n improve people&rsquo;s job prospects (\u901a\u5e38\u7528\u590d\u6570)    \u63d0\u9ad8\u4eba\u4eec\u7684\u751f\u6d3b\u6c34\u5e73\uff08\u4eba\u4eec\u751f\u6d3b\u66f4\u597d\uff09\n improve people&rsquo;s living standards    \u63d0\u9ad8\uff08\u589e\u52a0\uff09\u4ed6\u4eec\u7684\u6536\u5165\uff08\u56e0\u6b64\u4ed6\u4eec\u53ef\u4ee5\u8d2d\u4e70\u5927\u91cf\u7684\u4ea7\u54c1/\u63d0\u9ad8\u8d2d\u4e70\u529b\uff09\n increase their income/wealth, and can afford many products    \u5f00\u62d3\u4eba\u7684\u601d\u7ef4\uff0c\u63d0\u9ad8\u4eba\u7684\u601d\u8fa8\u80fd\u529b\n broaden people&rsquo;s minds and improve critical thinking skills    \u589e\u52a0\u77e5\u8bc6\uff0c\u5f00\u9614\u89c6\u91ce\n expand knowledge and broaden horizons (knowledge\u4e3a\u5355\u6570\uff0chorizons\u4e3a\u590d\u6570)    \u589e\u52a0\u5bf9\u4e0d\u540c\u56fd\u5bb6\u7684\u4e86\u89e3\uff0c\u83b7\u5f97\u66f4\u591a\u5c31\u4e1a\u673a\u4f1a\n have a better understanding of (these countries) and explore more career opportunities    \u4eba\u4eec\u53ef\u4ee5\u66f4\u52a0\u5065\u5eb7\uff0c\u533b\u7597\u7cfb\u7edf\u7684\u538b\u529b\u4f1a\u51cf\u5c11\n improve the well-being of people and ease the pressure on the medical system    \u4eba\u4eec\u53ef\u4ee5\u8fc7\u66f4\u597d\u7684\u751f\u6d3b\uff0c\u4e5f\u53ef\u4ee5\u83b7\u5f97\u6210\u5c31\u611f\n improve their living standards and gain a sense of accomplishment    \u4e3a\u5bb6\u4eba\u63d0\u4f9b\u4e00\u4e2a\u76f8\u4e92\u4ea4\u6d41\u3001\u76f8\u4e92\u7406\u89e3\u7684\u673a\u4f1a\n provide family members with opportunities to communicate with each other and improve mutual understanding    \u6709\u52a9\u4e8e\u6211\u4eec\u5efa\u7acb\u8d77\u4e00\u4e2a\u5173\u7cfb\u7d27\u5bc6\u7684\u793e\u4f1a\n it can help create a closely-knit community    \u521b\u9020\u4e00\u4e2a\u5927\u5bb6\u53ef\u4ee5\u548c\u8c10\u751f\u6d3b\u7684\u793e\u4f1a\n create a society where people can live in harmony    \u6709\u5229\u4e8e\u793e\u4f1a\u53d1\u5c55\n contribute to social progress    \u63a5\u89e6\u827a\u672f\u8ba9\u6211\u4eec\u51cf\u5c11\u538b\u529b\uff0c\u4e5f\u4f1a\u8ba9\u6211\u4eec\u5fc3\u60c5\u66f4\u597d\u3002\n Exposure to artworks can reduce our pressure and put us in a good mood.    \u51cf\u5c11\uff08\u822a\u7a7a\u4e1a\u7684\uff09\u73af\u5883\u5f71\u54cd\n can help reduce the environmental impact of (the airline industry)    \u566a\u58f0\u6c61\u67d3\u3001\u73af\u5883\u7834\u574f\u4f1a\u5f97\u5230\u6539\u5584\n problems (related to sth), including noise pollution and the environmental destruction (caused by sth), will also be mitigated.    \u51cf\u5c11\uff08\u7a7a\u822a\uff09\u4ea7\u751f\u7684\u73af\u5883\u538b\u529b\n make effort to reduce the strain of (the whole industry) on the environment    \u8ba9\u6211\u4eec\u7684\u751f\u6d3b\u65b9\u5f0f\u66f4\u52a0\u73af\u4fdd\n make our lifestyles more sustainable    \u589e\u52a0\u5bf9\u4e0d\u540c\u79d1\u76ee\u7684\u4e86\u89e3\n allow them to gain an insight into different subjects    \u6210\u4e3a\u67d0\u4e2a\u884c\u4e1a\u7684\u4e13\u4e1a\u4eba\u58eb\uff08\u7cbe\u901a/\u719f\u6089\u67d0\u4e2a\u884c\u4e1a\u7684\u4e13\u4e1a\u77e5\u8bc6\uff09\n build expertise in their majors    \u6446\u8131\u8d2b\u56f0\n break the cycle of poverty    \u51cf\u5c11\u8d2b\u5bcc\u5dee\u8ddd\uff0c\u5efa\u7acb\u4e00\u4e2a\u516c\u5e73\u7684\u793e\u4f1a\n close the gap between haves and have-nots and help build a fair society    \u8d1f\u9762\u4f5c\u7528\u7c7b \uff08Negative\uff09   \u7ea6\u675f\u4e2a\u4eba\u81ea\u7531\n restrict our freedom    \u9650\u5236\uff08\u67d0\u4eba\u7684\uff09\u60f3\u8c61\u529b\n stifle (/\u02c8sta\u026afl/) one&rsquo;s creativitiy and not able to solve problems in different ways    \u4eba\u4eec\u5982\u679c\u4e0d\u9075\u5b88\u9053\u5fb7\u51c6\u5219\u548c\u793e\u4f1a\u89c4\u8303\uff0c\u4eba\u548c\u4eba\u4e4b\u95f4\u5c31\u4f1a\u7f3a\u4e4f\u5c0a\u91cd\u548c\u4fe1\u4efb\n If people do not follow moral principles and conform to social norms, they will not be able to develop a respectful and trusting relationship.    \u5f71\u54cd\u4ed6\u4eec\u7684\u5b66\u4e60\uff08\u6210\u7ee9\uff09\uff0c\u800c\u4e0d\u662f\u63d0\u5347\u4ed6\u4eec\u7684\u6210\u7ee9\n have an adverse impact on their grades, rather than improve their academic performance    \u5bf9\u4e8e\u4ee5\u540e\u5bf9\u5bb6\u5ead\u751f\u6d3b\u7684\u6001\u5ea6\u6709\u5f71\u54cd\n affect their attitude towards family life    \u4e0d\u4ec5\u5a01\u80c1\u4eba\u4eec\u7684\u5065\u5eb7\uff0c \u4e5f\u4f1a\u7834\u574f\u996e\u98df\u6587\u5316\u548c\u793e\u4f1a\u5173\u7cfb\n not only pose a threat to people&rsquo;s health but also to our cuisine culture and social relationships    \u793e\u4f1a\u5c06\u6ca1\u6709\u79e9\u5e8f\uff0c\u7ecf\u6d4e\u5f88\u96be\u53d1\u5c55\n a country would be in chaos and the economy would collapse    \u4ea4\u901a\u4e8b\u6545\u5c31\u4f1a\u589e\u52a0\uff0c\u4ea4\u901a\u5835\u585e\u4e5f\u4f1a\u6210\u4e3a\u95ee\u9898\n traffic accidents will increase and traffic congestion will become a problem    \u7ecf\u6d4e\u5c06\u4f1a\u53d7\u5230\u5f71\u54cd\n a country will suffer economically    \u793e\u4f1a\u5c06\u4f1a\u7f3a\u4e4f\u51dd\u805a\u529b\n social cohesion ( /ko\u028a\u02c8hi\u02d0\u0292n/ ) will be under threat.    \u5f71\u54cd/\u51cf\u5c11\u751f\u4ea7\u529b\n reduce productivity    \uff08\u751a\u81f3\uff09\u963b\u788d\u793e\u4f1a\u53d1\u5c55\n even hinder social progress    \u5bfc\u81f4\u80fd\u6e90\u6d88\u8017\uff0c\u4ea7\u751f\u5783\u573e\u6c61\u67d3\n lead to energy consumption and cause waste as well as pollution    \u5bf9\u73af\u5883\u4f1a\u6709\u5f88\u5927\u7684\u4f24\u5bb3\n have a destructive effect on the environment    \u5f71\u54cd\u516c\u53f8\u7684\u6548\u7387\u548c\u76c8\u5229\n influence companies' productivity and profitability    \u5f71\u54cd\u7ecf\u6d4e\n have an adverse effect on the economic development    \u884c\u4e3a\u7c7b \uff08Behaviour\uff09  \u61c2\u5f97\u5c0a\u91cd\u8001\u5e08\uff0c\u548c\u540c\u5b66\u548c\u7766\u76f8\u5904  learn how to respect teachers and get along well with classmates   \u89c4\u8303\u4eba\u4eec\u7684\u884c\u4e3a  regulate people&rsquo;s behaviour (\u4e00\u822c\u7528\u5355\u6570)   \u53d1\u73b0\u5546\u673a\uff0c\u8d5a\u53d6\u5229\u6da6  discover business opportunities and earn profits   \u53bb\u57ce\u5e02\u4e0a\u5b66\u548c\u627e\u5de5\u4f5c  go to the cities in search of educational and employment opportunities   \u72af\u7f6a v  commit crimes   \u7f3a\u5c11/\u63d0\u9ad8\u73af\u5883\u610f\u8bc6  lack/raise environmental awareness   \u4f20\u64ad\uff08\u5173\u4e8e&hellip;\u7684\uff09\u77e5\u8bc6  disseminate the knowledge of (how to &hellip;)   \u9881\u5e03\u6cd5\u5f8b\uff08\u53bb\u6291\u5236&hellip;\u7684\u884c\u4e3a\uff09  enforce some laws to deter (people) from &hellip;   \u6539\u53d8\u751f\u6d3b\u65b9\u5f0f  change their lifestyles   \u8868\u8fbe\u60f3\u6cd5\uff0c\u7406\u89e3\u522b\u4eba\u7684\u8bdd  express their views and understand the thoughts of other people   \u5e94\u5bf9&hellip;\u52a0\u4ee5\u9650\u5236\uff0c\u800c\u4e0d\u662f\u9f13\u52b1  should impose restriction on sth, rather than endorse this habit   \u88ab\u4f4e\u4f30  undervalue   \u5145\u5206\u5229\u7528  make good use of sth   \u5bf9\u4ed6\u4eec\u7684\u884c\u4e3a\u8d1f\u8d23\uff0c\u4ece\u5c0f\u5851\u9020\u597d\u7684\u884c\u4e3a  hold sb. accountable for behaviour and help them develop good behaviour patterns   \u5728\u804c\u4e1a\u751f\u6daf\u4e2d\u83b7\u5f97\u6210\u529f  achieve success in their careers   \u4fdd\u6301\u826f\u597d\u7684\u5173\u7cfb  maintain a good relationship with sb./governments   \u77e5\u9053/\u4e86\u89e3\u5bb6\u4eba\u7684\u8fd1\u51b5  keep up to date with family issues/news   \u4e0e\u670b\u53cb\u5408\u79df\uff08\u516c\u5bd3\uff09  share a flat with friends   \u5f88\u597d\u7684\u5e94\u5bf9\u5de5\u4f5c\u4e0a\u7684\u4e8b\u60c5  can handle many matters easily in the workplace   \u5c06\u4e8b\u60c5\u6253\u7406\u5f97\u4e95\u4e95\u6709\u6761  keep everything organized   \u5165\u72f1\uff0c\u51fa\u72f1\uff0c\u518d\u72af\u7f6a  sentence to prison, release, reoffend   \u63d0\u4f9b\u6559\u80b2\u548c\u6280\u80fd\u57f9\u8bad\u6765\u63d0\u9ad8\u72af\u7f6a\u4eba\u5458\u7684\u4e2a\u4eba\u6280\u80fd\u548c\u5de5\u4f5c\u80fd\u529b  provide educational opportunities and vocational training for them, improving their interpersonal skills and job skills   \u4e00\u8d77\u505a\u751f\u610f\uff0c\u8ba8\u8bba\u600e\u6837\u5f00\u516c\u53f8\uff0c\u600e\u6837\u8fdb\u53e3\u4ea7\u54c1  conduct business together, discusss how to operate a company and import products   \u5206\u4eab\u77e5\u8bc6\u548c\u60f3\u6cd5\uff0c\u751a\u81f3\u4e00\u8d77\u5408\u4f5c\u53bb\u505a\uff08\u5b8c\u6210\uff09\u9879\u76ee  share knowledge and ideas or even cooperate to complete projects in different areas   \u7528\u79ef\u6781\u7684\u773c\u5149\u53bb\u770b\u5f85  sth can be viewed in a postive light    \u73b0\u8c61\u7c7b \uff08Phenomenon\uff09  \u4eba\u4eec\u73b0\u5728\u90fd\u5f88\u5fd9\uff0c\u538b\u529b\u5f88\u5927\uff0c\u7279\u522b\u90a3\u4e9b\u751f\u6d3b\u5728\u5927\u57ce\u5e02\u7684\u6253\u5de5\u65cf  Many people, especially working people living in large cities, lead a hectic life and feel stressed   \u57ce\u5e02\u4eba\u53e3\u6bd4\u8f83\u5bc6\u96c6\uff0c\u5de5\u4f5c\u673a\u4f1a\u6bd4\u8f83\u591a\uff0c\u4eba\u4eec\u53ef\u4ee5\u83b7\u5f97\u8f83\u9ad8\u7684\u6536\u5165  Cities are more densely populated and there are more job opportunities available, so people may earn more money.   \u8fd9\u662f\u4e00\u4e2a\u4ee4\u4eba\u62c5\u5fc3\u7684\u8d8b\u52bf \uff08\u53ef\u505a\u4ece\u53e5\u6765\u4fee\u9970\uff09  This is a worrying trend.   \u4e86\u89e3\u8fd9\u4e2a\u95ee\u9898\u4e3a\u4ec0\u4e48\u53d1\u751f\u548c\u5982\u4f55\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u662f\u91cd\u8981\u7684\u3002  It is important to understand why this issue (\u5177\u4f53\u7684\u95ee\u9898) has developed and how to reverse this trend.   \u4eba\u6570\u589e\u52a0  the number of (senior workers) increases    \u5e38\u7528\u5173\u952e\u8bcd/\u77ed\u8bed \uff08Key Words\uff09   \u6280\u672f\u9769\u65b0/\u521b\u65b0\n technological innovations    \u6587\u5316\u591a\u6837\u6027\n cultural diversity(\u5355\u6570)    \u5bb6\u7528\u7535\u5668\n household/home appliances    \uff08\u5b66\u79d1\u7684\uff09\u6982\u5ff5\u548c\u539f\u5219\n concepts and principles    \u80fd\u529b/\u6280\u80fd\n abilities  \u5438\u6536\u4fe1\u606f\u548c\u5904\u7406\u5de5\u4f5c\u7684\u80fd\u529b the ability to absorb information and complete work \u89e3\u51b3\u95ee\u9898\u7684\u80fd\u529b problem-solving abilities   skills  \u751f\u6d3b\u6280\u80fd (\u505a\u5bb6\u52a1\uff0c\u7406\u8d22\uff0c\u4e0e\u820d\u53cb\u76f8\u5904) life skills (doing housekeeping, managing finances and getting along with flatmates) \u4ea4\u9645\u80fd\u529b\u548c\u5de5\u4f5c\u80fd\u529b interpersonal skills and job skills \u601d\u8fa8\u80fd\u529b critical thinking skills      \u9762\u5bf9\uff08&hellip;\u95ee\u9898\uff09\n in the face of (problems)    \u793e\u4f1a\u5173\u7cfb\u7f51\n social network (where we can receive information, share ideas and gain access to resources)    \u662f\u81f3\u5173\u91cd\u8981\u7684\n play a vital role in be vitally important (to sth)    \u5404\u79cd\u6d3b\u52a8 (\u53bb\u5065\u8eab\uff0c\u542c\u8bb2\u5ea7\uff0c\u517c\u804c)\n a great variety of activities (going to gym, attending lectures and doing part-time jobs)    \u7f6a\u72af\n offenders criminals those who commit crimes    \u719f\u7ec3\uff0c\u7cbe\u901a\n master (\u901a\u7528\uff0c\u719f\u6089) build expertise in \uff08\u4e13\u4e1a\u7cbe\u901a\uff09    \u5e38\u7528\u8fde\u63a5\u8bcd/\u77ed\u8bed \uff08Conjunction\uff09   \u8868\u5f15\u8a00\n in general (\u901a\u5e38)(\u4e0d\u8981\u7528generally speaking\uff0c\u975e\u4e66\u9762\u8bed\u8868\u8fbe) in most cases    \u8868\u7ed3\u679c\uff0c\u56e0\u6b64\n , so + &hellip; and therefore + &hellip; , thereby + ing &hellip; , and this is why + &hellip;    \u5f15\u8d77\u5e76\u5217\u7684\u89c2\u70b9\n \u6b64\u5916  moreover, + &hellip; (\u9002\u5408\u653e\u5728\u6bb5\u843d\u4e2d\u95f4\uff0c\u8fde\u63a5\u4e24\u4e2a\u4f8b\u5b50) in addition, + &hellip; (\u9002\u5408\u653e\u5728\u6bb5\u843d\u524d\u8868\u793a\u201c\u6b64\u5916\uff0c\u53e6\u5916\u201d\u7684\u610f\u601d)   \u540c\u65f6  , while + &hellip;      \u89c2\u70b9\u6392\u5217\n firstly/first of all secondly thirdly    \u8f6c\u6298\n however in/by contrast \uff08\u76f8\u53cd\u7684\u662f\uff09 meanwhile (\u7136\u800c) \u5c3d\u7ba1 \uff08\r\u8bed\u6cd5\u7cd6\uff09  although/even though + \uff08a subject and a verb\uff09 despite/ in spite of + (a noun, gerund (-ing form of a verb) or a pronoun)      \u4e3e\u4f8b\n for example for instance    \u5f62\u5bb9\u4eba \uff08All kinds of folks\uff09  \u6709\u91ce\u5fc3\u7684\u3001\u7cbe\u529b\u5145\u6c9b\u7684\u3001\u52e4\u594b\u7684\u548c\u6709\u521b\u9020\u529b\u7684\u5e74\u8f7b\u4eba  young people who are ambitious, energetic, hardworking and creative   \u4e00\u4e2a\u4e50\u89c2\u3001\u52e4\u594b\u3001\u79ef\u6781\u3001\u5584\u4e8e\u4e0e\u4eba\u4ea4\u5f80\u7684\u4eba  an optimistic, hardworking and sociable person   \u60a3\u6709\u80a5\u80d6\u75c7\u7684\u4eba  people who suffer from obesity   \u7406\u667a\u7684\u4eba  a rational person   \u72af\u8f7b\u5fae\u7f6a\u884c\u7684\u4eba  those who commit minor crimes   \u9075\u7eaa\u5b88\u6cd5\u7684\u516c\u6c11  law-abiding citizens    \u66ff\u6362\u8bcd   bad\n dreadful adverse    people\n folks individuals    many\n a host of    some\n quite a few    in my view\n from my own perspective    more and more\n increasing(ly)    helpful\n beneficial rewarding    necessary\n indispensable    important\n crucial    cause\n give rise to lead to result in    pay attention to\n pour attention into    poor\n underdeveloped    show\n demonstrate manifest    dangerous\n hazardous    difficult\n formidable    ",
        "description": "",
        "id": 104,
        "section": "posts",
        "tags": [
            "\u4f5c\u6587",
            "\u96c5\u601d"
        ],
        "title": "English Writing \u5e38\u7528\u8868\u8fbe\u6574\u7406",
        "uri": "/posts/notes/81/"
    },
    {
        "content": " Better than nothing.\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u4eca\u591c\u7684\u98ce - \u7a0b\u54cd\",\rartist: \"\u7a0b\u54cd\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E4%BB%8A%E5%A4%9C%E7%9A%84%E9%A3%8E%20-%20%E7%A8%8B%E5%93%8D-a558ba-Ag.mp3\",\rcover: \"https://p1.music.126.net/Zq4BZ0nOHF3I3ckd2icYEw==/109951164364334724.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E4%BB%8A%E5%A4%9C%E7%9A%84%E9%A3%8E-%E7%A8%8B%E5%93%8D-df0bec-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  2019.11.1 \u4e0d\u662f\u6240\u6709\u7684\u9c7c\u90fd\u4f1a\u751f\u6d3b\u5728\u540c\u4e00\u7247\u6d77\u91cc\u3002 2019.11.2 \u77e5\u803b\u800c\u540e\u52c7\u3002 2019.11.3 \u4e07\u4e8b\u5f00\u5934\u96be\u3002 2019.11.4 1\uff09\u53e3\u8154\u6e83\u75a1\uff0c\u5f20\u53e3\u5c31\u75bc\u30022\uff09\u201c\u6211\u611f\u89c9\u6ca1\u6709\u4ee5\u524d\u5feb\u4e50\u4e86\u3002\u201d 2019.11.5 1\uff09\u4eca\u5929\u7ec8\u4e8e\u628a\u4e8c\u4fee\u63d0\u4ea4\u4e86\u3002\u5e0c\u671b\u8bba\u6587\u63a5\u4e0b\u6765\u53ef\u4ee5\u987a\u5229\u4e00\u4e9b\u30022\uff09\u6709\u7684\u4eba\u5f00\u5fc3\uff0c\u6709\u7684\u4eba\u4f1a\u5931\u843d\u3002\u4f46\u662f\u5f53\u77e5\u9053\u8eab\u8fb9\u7684\u4eba\u6709\u5f00\u5fc3\u7684\u4e8b\u60c5\u65f6\uff0c\u6211\u4e5f\u4f1a\u6709\u4e9b\u6b23\u6170\u3002\u8bc1\u660e\u5f00\u5fc3\u662f\u4f1a\u4f20\u67d3\u7684\u3002 2019.11.6 1\uff09\u4f60\u559c\u6b22\u7684\uff0c\u548c\u5927\u591a\u6570\u4eba\u559c\u6b22\u7684\uff0c\u8fd8\u662f\u6709\u5f88\u591a\u5dee\u8ddd\u7684\u3002\u8fd9\u53ef\u80fd\u662f\u5f88\u591a\u4eba\u6536\u655b\u7684\u539f\u56e0\u5427\u3002\u6bd5\u7adf\u4e0d\u8868\u9732\uff0c\u5c31\u4e0d\u4f1a\u5c55\u73b0\u5dee\u8ddd\uff0c\u4e5f\u5c31\u5c11\u6709\u77db\u76fe\u3001\u4e0d\u89e3\u548c\u53cd\u9a73\u30022\uff09\u770b\u4f5c\u6587\u89e3\u6790\uff0c\u4ed6\uff08\u987e\u5bb6\u5317\uff09\u8bb2\u7684\u4e00\u4e9b\u601d\u8def\u7740\u5b9e\u5f88\u6709\u542f\u53d1\u6027\u3002 \u539f\u6587\uff1a\u89e3\u51b3\uff08\u6587\u7ae0\u8df3\u8dc3\uff09\u95ee\u9898\u7684\u4e24\u4e2a\u65b9\u6cd5\uff1a\u591a\u60f3\u539f\u56e0\uff0c\u57f9\u517b\u6279\u5224\u6027\u601d\u7ef4\uff1b\u591a\u601d\u8003\u7ed3\u679c\uff0c\u601d\u8003\u67d0\u4ef6\u4e8b\u5bf9\u6211\u4eec\u6709\u4ec0\u4e48\u5f71\u54cd\u3002 \u770b\u66b4\u529b\u7535\u5f71=&gt;\u5e74\u8f7b\u4eba\u4f1a\u6a21\u4eff\uff0c\u4f1a\u4fbf\u66b4\u529b\u3002\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u5e74\u8f7b\u4eba\u4f1a\u6a21\u4eff\uff1f\uff08Why\uff09\u662f\u4e0d\u662f\u5927\u591a\u6570\u4eba\u90fd\u4f1a\u6a21\u4eff\uff1f\uff08Who\uff09\u5e74\u8f7b\u4eba\u5982\u4f55\u6a21\u4eff\uff1f\uff08How\uff09 \u5e74\u8f7b\u4eba\u6a21\u4eff\u7684\u539f\u56e0\u53ef\u80fd\u662f\u7535\u5f71\u91cc\u9762\u7684\u66b4\u529b\u5f80\u5f80\u662f\u4e00\u4e9b\u660e\u661f\u89d2\u8272\u5b9e\u65bd\u7684\uff0c\u6240\u4ee5\u5e74\u8f7b\u4eba\u53ef\u80fd\u89c9\u5f97\u66b4\u529b\u662f\u9b45\u529b\u7684\u8868\u73b0\uff0c\u800c\u7535\u5f71\u91cc\u9762\u7684\u66b4\u529b\u4e5f\u662f\u89e3\u51b3\u95ee\u9898\u7684\u4e00\u79cd\u624b\u6bb5\uff0c\u5e74\u8f7b\u4eba\u4ee5\u4e3a\u901a\u8fc7\u66b4\u529b\u4e5f\u53ef\u4ee5\u89e3\u51b3\u751f\u6d3b\u4e2d\u7684\u95ee\u9898\u30023\uff09I heard,I study,I know,I come,I explore,I see,I think, I understand, I love. 2019.11.7 \u591c\u66f2\u3002 2019.11.8 \u4f46\u884c\u597d\u4e8b\uff0c\u83ab\u95ee\u524d\u7a0b\u3002 2019.11.9 \u671f\u520a\u4e2d\u4e86\uff0c\u5f00\u5fc3\u7684\u4e0d\u5f97\u4e86\u3002 2019.11.10 \u6210\u719f\u4e0d\u5c31\u662f\u5b66\u4f1a\u6210\u5168\u3002 2019.11.11 \u78e8\u5200\u4e0d\u8bef\u780d\u67f4\u5de5\u3002 2019.11.12 \u5927\u5bb6\u90fd\u5728\u52aa\u529b\uff0c\u800c\u4f60\u5374\u603b\u662f\u6bd4\u522b\u4eba\u5148\u611f\u89c9\u7d2f\u3002\u8fd8\u662f\u57fa\u7840\u4e0d\u597d\u554a\u3002 2019.11.13 \u603b\u4e4b\uff0c\u4f60\u52aa\u529b\u5c31\u597d\u5566\uff0c\u5269\u4e0b\u7684\u4ea4\u7ed9\u65f6\u95f4\uff0c\u539f\u6765\u6709\u5f88\u591a\u4eba\u5728\u5e2e\u4f60\u3002 2019.11.14 \u6211\u559c\u6b22\u590f\u5929\u7684\u96e8\uff0c\u96e8\u540e\u7684\u5149\uff0c\u548c\u4efb\u4f55\u65f6\u5019\u7684\u4f60\u3002 2019.11.15 1) \u6ca1\u6709\u4eba\u9001\u53ef\u4ee5\u7528\u6765\u88c5\u70b9; 2) \u597d\u4e45\u6ca1\u6709\u542c\u540e\u6447\u4e86\u3002\u542c\u542c\u540e\u6447\u7ed9\u81ea\u5df1\u9547\u5b9a\u5242\u3002 2019.11.16 \u505a\u4e0d\u5230\u5168\u529b\u4ee5\u8d74\u3002 2019.11.17 \u5996\u98ce\u554a \u771f\u662f\u5996\u98ce 2019.11.18 \u6ee1\u6000\u671f\u5f85\uff0c\u5374\u53c8\u602f\u6b65\u4e0d\u524d 2019.11.19 \u76f8\u9022\u4f55\u5fc5\u66fe\u76f8\u8bc6\u3002 2019.11.20 \u6211\u91ce\u86ee\u751f\u957f\u6ca1\u80fd\u6210\u4e3a\u81ea\u5df1\u7684\u6708\u4eae \u80fd\u9047\u89c1\u4f60 \u662f\u94f6\u6cb3\u8d60\u6211\u7684\u7cd6 \u5929\u4e0a\u6709\u884c\u4e91 \u4eba\u5728\u82b8\u9601\u91cc \u6b38\u4e43\u4e00\u58f0\u5c71\u6c34\u7eff \u4ed6\u4eec\u8bf4 \u9752\u5c71\u662f\u5426\u59a9\u5a9a \u8fd8\u9700\u770b\u9752\u5c71\u662f\u8c01 \u53ef\u6211\u6447\u5934 \u6211\u89c1\u4f17\u751f\u7686\u8349\u6728 \u552f\u4f60\u707c\u707c\u662f\u9752\u5c71 2019.11.21 \u7b80\u5355\u70b9 2019.11.22 1) \u4f60\u5fc5\u987b\u4e3a\u4f60\u7684\u61d2\u60f0\u8d1f\u8d23\u3002 2) \u7559\u5b66\u6700\u5927\u7684\u610f\u4e49\uff0c\u4e0d\u662f\u770b\u5343\u5e06\u89c8\u4e07\u7269\uff0c\u800c\u662f\u5728\u8def\u4e0a\u53d1\u73b0\u4e8b\u4e8b\u672a\u5fc5\u5982\u4f60\u610f\uff0c\u4eba\u4eba\u672a\u5fc5\u5982\u4f60\u60f3\uff0c\u4e8e\u662f\u5f00\u59cb\u5b66\u4f1a\u63a5\u53d7\u548c\u4eab\u53d7\u632b\u6298\u53ca\u4e0d\u786e\u5b9a\u6027\u3002\u5fc3\u5883\u4e8e\u662f\u8c41\u7136\uff0c\u5fc3\u80f8\u4e8e\u662f\u5f00\u9614\uff0c\u4e8e\u662f\u5f00\u59cb\u653e\u4e0b\u7ea0\u7ed3\u4e0e\u504f\u6267\uff0c\u627e\u5230\u4e00\u4e2a\u968f\u9047\u800c\u5b89\u7684\u81ea\u5df1\uff0c\u7136\u540e\u5e26\u7740\u4e00\u4e2a\u5d2d\u65b0\u7684\u81ea\u5df1\u56de\u5230\u90a3\u4e2a\u719f\u6089\u7684\u5bb6\u3002 2019.11.23 1) \u5e7b\u542c\u3002 2) Better than nothing~ 2019.11.24 1\uff09\u89e3\u51b3\u95ee\u9898\uff0c\u6700\u91cd\u8981\u7684\u662f\u8981\u53bb\u601d\u8003\u5e03\u5c40\uff0c\u5982\u4f55\u6539\u53d8\u73b0\u5728\u548c\u672a\u6765\u3002\u8fc7\u53bb\u5f0f\u65e0\u6cd5\u6539\u53d8\u7684\uff0c\u65e0\u8bba\u4f60\u4e50\u89c2\u4e5f\u597d\uff0c\u60b2\u89c2\u4e5f\u597d\uff0c\u6124\u6012\u4e5f\u597d\uff0c\u5c0f\u9648\u4e5f\u597d\uff0c\u65e0\u8bba\u4f60\u505a\u6216\u8005\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u8fc7\u53bb\u90fd\u662f\u65e0\u6cd5\u6539\u53d8\u7684\u30022\uff09\u5996\u98ce\u53c8\u6765\u4e86\uff0c\u800c\u4e14\u8d8a\u6f14\u8d8a\u70c8\u4e86\u30023\uff09\u8d8a\u60f3\u8d8a\u6025\uff0c\u8d8a\u6025\u8d8a\u6d88\u6781\u3002\u8fd9\u4e9b\u90fd\u6ca1\u6709\uff0c\u6bcf\u5929\u8fdb\u6b65\u4e00\u4e9b\uff0c\u575a\u6301\u4f4f\uff0c\u4f1a\u597d\u7684\u3002 2019.11.25 \u6628\u5929\u56e0\u4e3a\u8fd8\u6709\u51e0\u5929\u5c31\u8981\u53e3\u8bed\u6d4b\u8bd5\u800c\u7126\u8651\u7684\u7761\u4e0d\u7740\u89c9\u3002\u4eca\u5929\u53c8\u542csection2\u542c\u529b\u9519\u8bef\u7387\u98d9\u5347\u800c\u611f\u5230\u65e0\u836f\u53ef\u6551\u3002\u6211\u89c9\u5f97\u6211\u53ef\u4ee5\u653e\u5f03\u96c5\u601d\u4e86\u3002\u4e0d\u597d\u610f\u601d\uff0c\u6211\u521a\u624d\u60f3\u6253IELTS\u7684\uff0c\u4f46\u662f\u6211\u5fd8\u8bb0\u600e\u4e48\u62fc\u5199\u4e86\u3002 2019.11.26 \u6210\u719f\u7684\u4eba\u4e00\u4e2a\u6807\u5fd7\u5c31\u662f\u653e\u5f03\u6539\u53d8\u522b\u4eba\uff0c\u8f6c\u800c\u6539\u53d8\u81ea\u5df1\uff0c\u8fd9\u4e2a\u6539\u53d8\u4e0d\u662f\u8ba9\u81ea\u5df1\u53d8\u5f97\u6ca1\u6709\u539f\u5219\uff0c\u4e0d\u662f\u8ba9\u81ea\u5df1\u8c01\u90fd\u559c\u6b22\uff0c\u66f4\u4e0d\u662f\u8ba9\u81ea\u5df1\u6210\u4e3a\u4e00\u4e2a\u4eba\u4e91\u4ea6\u4e91\u7684\u4eba\u3002\u800c\u662f\u8981\u653e\u5f03\u6539\u53d8\u522b\u4eba\u7684\u5e7b\u60f3\uff0c\u4e13\u6ce8\u4e8e\u81ea\u5df1\u7684\u8fdb\u6b65\uff0c\u4e13\u6ce8\u4e8e\u81ea\u5df1\u7684\u5b66\u4e1a\u6216\u4e8b\u4e1a\uff0c\u5f53\u4f60\u81ea\u5df1\u66f4\u5f3a\u5927\u7684\u65f6\u5019\uff0c\u4f60\u4f1a\u5438\u5f15\u5230\u66f4\u4f18\u79c0\u7684\u4eba\uff0c\u522b\u4eba\u4e3a\u4e86\u548c\u4f60\u5728\u4e00\u8d77\u4f1a\u81ea\u5df1\u6539\u53d8\u81ea\u5df1\uff0c\u4e0d\u7528\u4f60\u518d\u53bb\u6539\u53d8\u4e86 2019.11.27 \u4e0d\u8981\u7126\u8651\u554a\uff0c\u4e0d\u7ba1\u65f6\u95f4\u6709\u591a\u7d27\u6025\u3002\u5c31\u7b97\u662f\u660e\u5929\u8003\u8bd5\uff0c\u505a\u597d\u4eca\u5929\u5c31\u597d\u4e86\u3002\u6bcf\u5929\u90fd\u6709\u4e00\u70b9\u8fdb\u6b65\uff0c\u8fc7\u5f97\u5145\u5b9e\u5373\u53ef\u3002 2019.11.28 \u4f11\u5bf9\u6545\u4eba\u601d\u6545\u56fd\uff0c\u4e14\u5c06\u65b0\u706b\u8bd5\u65b0\u8336\u3002\u8bd7\u9152\u8d81\u5e74\u534e\u3002\u2014\u2014\u82cf\u8f7c 2019.11.29 \u4eca\u5929\u771f\u7684\u662f\u767e\u822c\u4e0d\u60f3\u770b\u82f1\u8bed\u3002 2019.11.30 \u6d77\u5e95\u635e\u3002\u95f9\u809a\u5b50\u3002\u5361\u5bbe+\u4e2d\u56fd\u822a\u5929\u8054\u540d\u7fbd\u7ed2\u670d  ",
        "description": "",
        "id": 105,
        "section": "posts",
        "tags": [
            "\u8fc7\u7a0b",
            "IELTS"
        ],
        "title": "2019-11",
        "uri": "/posts/journals/101/"
    },
    {
        "content": " \u6458\u6284\u81ea-\u70ed\u5e26\u6c7d\u6c34\u00b7\u65b0\u6d6a\u5fae\u535a\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u591a\u4f59\u7684\u89e3\u91ca - \u8bb8\u5d69\",\rartist: \"\u8bb8\u5d69\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E5%A4%9A%E4%BD%99%E7%9A%84%E8%A7%A3%E9%87%8A%20-%20%E8%AE%B8%E5%B5%A9-aee706-Ag.mp3\",\rcover: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E5%A4%9A%E4%BD%99%E7%9A%84%E8%A7%A3%E9%87%8A%20-%20%E8%AE%B8%E5%B5%A9-aee706-Ag.mp3\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E5%A4%9A%E4%BD%99%E7%9A%84%E8%A7%A3%E9%87%8A-%E8%AE%B8%E5%B5%A9-226314-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r  \u5929\u7a7a\u4e0d\u518d\u843d\u4e0b\u96e8\u6c34\uff0c\u773c\u6cea\u901a\u8fc7\u7a7a\u6c14\u4f20\u64ad\uff0c\u65e0\u8bba\u7231\u4e0d\u7231\u60dc\u7fbd\u6bdb\uff0c\u9e1f\u513f\u90fd\u98de\u4e0d\u51fa\u5305\u56f4\u5708\u3002\u6211\u60f3\u4f60\u6211\u60f3\u89c1\u4f60\uff0c\u4f46\u6211\u529b\u4e0d\u80fd\u53ca\u3002\u6211\u53ef\u4ee5\u4e3a\u4f60\u653b\u5360\u4e00\u4e2a\u65e0\u7ebf\u7535\u53f0\uff0c\u6211\u53ef\u4ee5\u4e3a\u4f60\u634f\u9020\u660e\u65e5\u7684\u5929\u6674\uff0c\u4f46\u6211\u6ca1\u6cd5\u505c\u6b62\u4f60\u7684\u54ed\u6ce3\u3002\u5929\u7a7a\u4e0d\u518d\u843d\u4e0b\u96e8\u6c34\uff0c\u5730\u9762\u53ea\u88ab\u6cea\u6c34\u6253\u6e7f\u3002\u542c\u8bf4\u660e\u5929\u4f1a\u66f4\u597d\uff0c\u6211\u542c\u5230\u6709\u4eba\u54ed\u7740\u8fd9\u4e48\u64ad\u62a5\u3002 \u200b\u200b\u200b \u200b\u200b\u200b\u200b \u4ee5\u4e3a\u4eba\u7c7b\u5b5c\u5b5c\u4e0d\u5026\u94bb\u7814\u79d1\u6280\uff0c\u5ef6\u5c55\u624b\u81c2\uff0c\u662f\u7528\u6765\u63a2\u7d22\u672a\u77e5\u7684\u661f\u7403\u3002\u5076\u7136\u53c8\u4f1a\u60ca\u9192\uff0c\u89c9\u5f97\u8fd9\u53ea\u4e0d\u8fc7\u662f\u7528\u6765\u514b\u670d\u81ea\u5df1\u7684\u4e0d\u5b8c\u7f8e\u3002 \u200b\u200b\u200b\u200b \u6211\u4eec\u6401\u6d45\u5728\u65cb\u8f6c\u6728\u9a6c\u7684\u53f0\u9636\u4e0a\uff0c\u591c\u6e38\u573a\u7684\u9713\u8679\u4e0b\uff0c\u6b22\u5feb\u800c\u4e0d\u77e5\u6240\u8c13\u7684\u5e7f\u64ad\u91cc\uff0c\u82cf\u6253\u6c34\u751c\u751c\u7684\u6c14\u6ce1\u62e5\u7c07\u6211\u4eec\u4e0a\u5929\uff0c\u5a01\u58eb\u5fcc\u7684\u6728\u6876\u9999\u6d41\u8fde\u5728\u4f60\u7684\u5507\u8fb9\uff0c\u611a\u8822\u7684\u9152\u9b3c\u901a\u8fc7\u9152\u7cbe\u6682\u65f6\u56de\u9b42\u4eba\u95f4\u3002 \u4ece\u6765\u6ca1\u6709\u559c\u6b22\u8fc7\u4f60\uff0c\u4ece\u672a\u6267\u8ff7\u4e8e\u4f60\u7684\u624b\u5fc3\uff0c\u6ca1\u6709\u8981\u540c\u4f60\u6570\u5c3d\u661f\u661f\u7684\u51b3\u5fc3\uff0c\u66f4\u4e0d\u63d0\u90a3\u79cd\u8981\u548c\u4f60\u5171\u4e00\u573a\u53f0\u98ce\u7684\u8ff7\u60c5\u3002\u6ca1\u6709\u5e7b\u60f3\u8fc7\u548c\u4f60\u9505\u7897\u74e2\u76c6\u7684\u58f0\u97f3\uff0c\u6ca1\u6709\u671f\u5f85\u8fc7\u4f60\u8d56\u5e8a\u4e0d\u8d77\u7684\u98ce\u60c5\u3002\u6ca1\u6709\u4f60\u7684\u65f6\u5019\uff0c\u6211\u5145\u6c9b\u9c9c\u8273\uff0c\u4ece\u672a\u56e0\u4f60\u67af\u840e\uff0c\u4ece\u672a\u68a6\u5ff5\u4f60\u540d\u5b57\uff0c\u65f6\u81f3\u4eca\u65e5\uff0c\u6211\u4ece\u672a\u7231\u4f60\u3002 -\u81f3\u611a\u4eba\u8282 \u5929\u7a7a\u4e0d\u518d\u843d\u4e0b\u96e8\u6c34\uff0c\u773c\u6cea\u901a\u8fc7\u7a7a\u6c14\u4f20\u64ad\uff0c\u65e0\u8bba\u7231\u4e0d\u7231\u60dc\u7fbd\u6bdb\uff0c\u9e1f\u513f\u90fd\u98de\u4e0d\u51fa\u5305\u56f4\u5708\u3002\u6211\u60f3\u4f60\u6211\u60f3\u89c1\u4f60\uff0c\u4f46\u6211\u529b\u4e0d\u80fd\u53ca\u3002\u6211\u53ef\u4ee5\u4e3a\u4f60\u653b\u5360\u4e00\u4e2a\u65e0\u7ebf\u7535\u53f0\uff0c\u6211\u53ef\u4ee5\u4e3a\u4f60\u634f\u9020\u660e\u65e5\u7684\u5929\u6674\uff0c\u4f46\u6211\u6ca1\u6cd5\u505c\u6b62\u4f60\u7684\u54ed\u6ce3\u3002\u5929\u7a7a\u4e0d\u518d\u843d\u4e0b\u96e8\u6c34\uff0c\u5730\u9762\u53ea\u88ab\u6cea\u6c34\u6253\u6e7f\u3002\u542c\u8bf4\u660e\u5929\u4f1a\u66f4\u597d\uff0c\u6211\u542c\u5230\u6709\u4eba\u54ed\u7740\u8fd9\u4e48\u64ad\u62a5\u3002 \u200b \u5176\u5b9e\u6211\u662f\u4e2a\u53cd\u5723\u8bde\u60c5\u7ed3\u7684\u4eba\uff0c\u5723\u8bde\u5e3d\u6216\u8005\u5723\u8bde\u6811\uff0c\u6211\u5168\u90fd\u6ca1\u62e5\u6709\u8fc7\uff0c\u53ea\u6709\u95e8\u5e97\u91cc\u201c\u5168\u573a\u4e94\u6298\u5168\u573a\u4e94\u6298\u201d\u7684\u5587\u53ed\u58f0\u97f3\uff0c\u914d\u4e0a\u4e00\u9996Jingle bells \u5411\u6211\u515c\u552e\u5ec9\u4ef7\u7684\u8282\u65e5\u6c14\u606f\u3002\u6211\u7684\u670b\u53cb\u7334\u54e5\u71d5\u59d0\u65e0\u7591\u52a0\u91cd\u4e86\u6211\u8fd9\u79cd\u60c5\u7ed3\uff0c\u5982\u679c\u5723\u8bde\u662f\u4e00\u573a\u7535\u5f71\uff0c\u4ed6\u4eec\u5c31\u662f\u6839\u672c\u4e0d\u5173\u5fc3\u7535\u5f71\u5185\u5bb9\u7684\u89c2\u5f71\u60c5\u4fa3\uff0c\u6211\u5219\u626e\u6f14\u5728\u4ed6\u4eec\u4e2d\u95f4\uff0c\u963b\u788d\u4ed6\u4eec\u63a5\u543b\u7684\u7206\u7c73\u82b1\uff0c\u4f46\u4ed6\u4eec\u504f\u504f\u8981\u70b9\u6211\uff0c\u6b21\u6b21\u90fd\u70b9\u6211\u3002\u4ee5\u81f3\u4e8e\u5e38\u53bb\u7684\u9152\u5427\u7684\u8001\u677f\uff0c\u90fd\u7ba1\u6211\u4eec\u8fd9\u4e2a\u56e2\u4f53\u53eb\u505a\u201c\u4e00\u5bb6\u4e09\u53e3\u201d\u3002\u201c\u73b0\u5728\u4f60\u4eec\u90fd\u5df2\u7ecf\u957f\u5927\u4e86\u201d\u6211\u5477\u4e86\u4e00\u53e3\u9152\u201c\u5723\u8bde\u8282\u80fd\u4e0d\u80fd\u653e\u4f60\u4eec\u7238\u7238\u4e00\u5929\u5047\u201d\u3002\u542c\u5230\u8fd9\u79cd\u8bdd\uff0c\u522b\u7684\u670b\u53cb\u53c8\u8d77\u54c4\uff0c\u8bf4\u660e\u660e\u6211\u624d\u662f\u513f\u5b50\uff0c\u4f46\u4ed6\u4fe9\u8fd9\u5bf9\u72d7\u7537\u5973\u5c31\u53ea\u987e\u7740\u7b11\uff0c\u5f80\u676f\u91cc\u6ce8\u9152\u3002\u4e8e\u662f\u6211\u51b3\u5b9a\u4eca\u5929\u8fd8\u662f\u518d\u7559\u4e00\u4e0b\uff0c\u7559\u7ed9\u8fd9\u4e9b\u7eb5\u5bb9\u6211\u7684\u5144\u5f1f\u670b\u53cb\u4eec\u3002\u6bd5\u7adf\u5723\u8bde\u5bf9\u6211\u610f\u4e49\u5b9e\u5728\u5be1\u6de1\uff0c\u6211\u6ca1\u6709\u5728\u69f2\u5bc4\u751f\u4e0b\u63a5\u8fc7\u543b\uff0c\u6ca1\u6709\u53bb\u8fc7\u6377\u514b\uff0c\u6ca1\u89c1\u8fc7\u5973\u5b69\u628a\u978b\u5b50\u629b\u5230\u7a7a\u4e2d\uff0c\u671f\u5f85\u5ac1\u7ed9\u8c01\u3002\u6211\u6ca1\u6709\u6ee1\u5fc3\u671f\u5f85\u5730\u62c6\u8fc7\u5723\u8bde\u793c\u7269\uff0c\u4e5f\u6ca1\u6709\u5fc3\u4eea\u7684\u82f9\u679c\u5728\u8fd9\u5929\u6253\u6765\u7535\u8bdd\uff0c\u8bf4\u8981\u966a\u6211\u8fc7\u3002\u65e0\u4eba\u4e0e\u5171\u7684\u5723\u8bde\uff0c\u6211\u4e5f\u51b3\u5b9a\u518d\u7559\u5927\u5bb6\u4e00\u4e0b\u3002\u6211\u7a81\u7136\u60f3\u8d77\u5723\u8bde\u966a\u5927\u5bb6\u7684\u6700\u540e\u4e00\u652f\u70df\uff0c\u90a3\u4e2a\u548c\u5927\u5bb6\u6324\u5728\u5c4b\u6a90\u4e0b\uff0c\u5206\u7740\u62bd\u7684\u6700\u540e\u4e00\u652f\u70df\u3002\u70df\u5934\u590d\u6697\u590d\u4eae\uff0c\u597d\u50cf\u4e00\u9897\u7279\u522b\u7684\u7ea2\u661f\u661f\uff0c\u7136\u540e\u6211\u4eec\u4e00\u9f50\u62ac\u5934\u770b\uff0c\u53d1\u73b0\u5f97\u5929\u4e0a\u7684\u661f\u661f\u5206\u5f00\u5f97\u592a\u5bc2\u5bde\uff0c\u751a\u81f3\u4e0d\u5982\u6211\u4eec\u624b\u4e2d\u7684\u8fd9\u4e00\u9897\u3002\u6211\u4e5f\u6253\u7b97\u518d\u7b49\u4f60\u4e00\u4e0b\uff0c\u6211\u4f1a\u591a\u529d\u529d\u8fd9\u4e9b\u8282\u65e5\uff0c\u8ba9\u51dd\u7ed3\u7684\u5723\u8bde\u7b49\u4f60\u4e00\u4e0b\uff0c\u7efd\u653e\u7684\u65b0\u5e74\u7b49\u4f60\u4e00\u4e0b\uff0c\u65e9\u5f00\u7684\u6625\u7b49\u4f60\u4e00\u4e0b\uff0c\u8ba9\u6211\u6709\u673a\u4f1a\u540c\u4f60\u4e00\u8d77\u770b\u82b1\uff0c\u72c2\u70ed\u7684\u590f\u7b49\u4f60\u4e00\u4e0b\uff0c\u6211\u624d\u80fd\u53bb\u8d85\u5e02\u966a\u6311\u4e00\u53ea\u897f\u74dc\u3002\u5be1\u60c5\u7684\u6b4c\u4f11\u5531\uff0c\u671f\u671b2019\u7684\u5723\u8bde\u80fd\u665a\u70b9\u6253\u70ca\uff0c\u7ed9\u6211\u4f60\u7684\u6697\u53f7\uff0c\u8ba9\u6211\u53ef\u4ee5\u548c\u4f60\u4e00\u8d77\u53c2\u4e0e\u5723\u8bde\u540e\u591c\u573a\u3002\u5176\u5b9e\uff0c\u6211\u6700\u540e\u660e\u767d\u4e86\uff0c\u6211\u6ca1\u90a3\u4e48\u8ba8\u538c\u8282\u65e5\uff0c\u6211\u53ea\u662f\u8ba8\u538c\u6ca1\u6709\u4f60\u3002 \u5de7\u514b\u529b\u4f1a\u53d8\u751c\uff0c\u5564\u9152\u4e5f\u4f1a\u53d8\u5f97\u6e05\u723d\u8d77\u6765\u3002\u6f6e\u6c50\u4e0d\u4f1a\uff0c\u6f6e\u6c50\u4e0d\u5728\u4e4e\u4f60\uff0c\u5b83\u662f\u53cd\u590d\u7740\uff0c\u63b3\u8d70\u4e00\u90e8\u5206\u4f60\u53c8\u8fd8\u7ed9\u4f60\u3002\u6ca1\u8c01\u662f\u65e0\u60c5\u7684\u52a8\u7269\uff0c\u6211\u4eec\u90fd\u662f\u611f\u6027\u7684\u591a\u7c73\u8bfa\u724c\uff0c\u8dcc\u5012\u4e86\u81ea\u5df1\u722c\u4e0d\u8d77\u6765\u3002\u6d6a\u82b1\u7b11\u6d6a\u5b50\u591a\u60c5\uff0c\u6bcf\u6bcf\u649e\u6b7b\u5728\u5cb8\uff0c\u5b66\u4e0d\u61c2\u5927\u6d77\u3002 \u56de\u5fc6\u662f\u4e00\u79cd\u4e3b\u89c2\u7684\u5448\u73b0\u3002\u5f53\u7136\uff0c\u6211\u4e0d\u662f\u8bf4\u771f\u5b9e\u5b58\u5728\u7684\u697c\u5b87\uff0c\u8857\u9053\uff0c\u6216\u662f\u4f60\u5e38\u53bb\u7684\u90a3\u5bb6\u4fbf\u5229\u5e97\u4f1a\u5728\u56de\u5fc6\u91cc\u6d88\u5931\uff0c\u6211\u662f\u8bf4\uff0c\u5728\u56de\u5fc6\u4e2d\u7684\u8bc4\u4ef7\u90fd\u5145\u6ee1\u504f\u89c1\uff0c\u597d\u5435\u7684\u8857\u9053\u4e5f\u4f1a\u56e0\u4e3a\u8eab\u8fb9\u7684\u4eba\u53d8\u5f97\u5177\u6709\u70df\u706b\u5473\uff0c\u96be\u996e\u7684\u9152\u6c34\uff0c\u73b0\u5728\u60f3\u8d77\u6765\u7adf\u7136\u4f1a\u60f3\u518d\u996e\u4e00\u904d\u3002\u6211\u4e0d\u8ba4\u4e3a\u8fd9\u662f\u4e00\u79cd\u6b3a\u9a97\uff0c\u53cd\u800c\u4f1a\u89c9\u5f97\u8fd9\u662f\u4eba\u7c7b\u4ec5\u6709\u7684\uff0c\u53ef\u4f5c\u7528\u4e8e\u81ea\u5df1\u56de\u5fc6\u7684\u9b54\u6cd5\u3002\u300e\u6211\u89c9\u5f97\u8fd9\u6bb5\u8bb0\u5fc6\u503c\u5f97\u4e00\u7247\u9540\u91d1\u7684\u665a\u971e\u300f\u3002\u4e8e\u662f\uff0c\u5373\u4fbf\u662f\u661f\u661f\u6ee1\u843d\u7684\u5348\u591c\uff0c\u592a\u9633\u4e5f\u91cd\u65b0\u4e0a\u73ed\uff0c\u6d12\u843d\u91d1\u5149\u3002\u6211\u6ca1\u6709\u66f4\u591a\u7684\u5962\u4f88\u5ff5\u5934\uff0c\u53ea\u662f\u60f3\u8ba9\u4f60\u5728\u60f3\u8d77\u6211\u7684\u65f6\u5019\uff0c\u89c9\u5f97\u8bb0\u5fc6\u91cc\u5be1\u60c5\u7684\u4e91\u6735\u4e5f\u548c\u68c9\u82b1\u7cd6\u4e00\u822c\u5f88\u7f8e\u5473\u3002 \u662f\u4f60\u628a\u8272\u5f69\u6253\u5728\u4e86\u6211\u7684\u773c\u7738\uff0c\u4e5f\u662f\u4f60\u628a\u98d3\u98ce\u79cd\u5728\u4e86\u6211\u7684\u5fc3\u8154\uff0c\u662f\u4f60\u5b9a\u4e49\u4e86\u6211\u4ef2\u590f\u591c\u7684\u5473\u9053\uff0c\u8ba9\u5b83\u6c38\u8fdc\u9644\u7740\u4e0a\u4f60\u7684\u9999\u3002\u4e5f\u662f\u4f60\uff0c\u53ea\u6709\u4f60\u80fd\u6d88\u795b\u6211\u7684\u5fc3\u614c\uff0c\u8fd9\u5c31\u50cf\u6211\u5bb6\u697c\u4e0b\u7684\u4fbf\u5229\u5e97\u62db\u724c\u706f\uff0c\u80dc\u8fc7\u4e86\u4e1c\u5347\u897f\u6c89\u7684\u65e5\u6708\uff0c\u4e8c\u5341\u56db\u5c0f\u65f6\uff0c\u4f60\u90fd\u5728\u6211\u7684\u4e16\u754c\u91cc\u53d1\u4eae\u3002 \u4fa5\u5e78\u83b7\u5f97\u4e00\u4e2a\u5348\u591c\uff0c\u624d\u53d1\u73b0\u7a97\u5916\u6709\u7ea2\u8272\u7684\u5149\uff0c\u65f6\u95f4\u53d8\u5b89\u9759\uff0c\u53ea\u5269\u4e0b\u7a7a\u8c03\u53f9\u606f\u548c\u6708\u4eae\u7a7f\u8fc7\u4e91\u6735\u7684\u58f0\u97f3\u3002\u6ca1\u6709\u4fe1\u4ef0\u7684\u4eba\uff1b\u5fd8\u8bb0\u7406\u60f3\u7684\u4eba\uff1b\u5fd8\u70b9\u9999\u70df\u7684\u4eba\u548c\u5931\u53bb\u9152\u91cf\u7684\u4eba\uff0c\u5728\u8fd9\u4e2a\u573a\u666f\u4e0b\uff0c\u88ab\u63c9\u6210\u4e00\u4e2a\u4eba\uff0c\u4e00\u4e2a\u7a81\u7136\u60f3\u8d77\u4f60\u7684\u4eba\u3002 \u6211\u60f3\u4f60\uff0c\u60f3\u548c\u4f60\u8d64\u88f8\u7684\u62e5\u62b1\u5728\u4e00\u8d77\uff0c\u611f\u53d7\u5f7c\u6b64\u5fc3\u7387\u548c\u547c\u5438\uff0c\u98de\u5411\u9ed1\u591c\u8fb9\u9645\u3002\u6211\u60f3\u7f20\u7ed5\u7740\u4f60\u8513\u751f\u4e8e\u4f60\uff0c\u4e0d\u7559\u4e0b\u4e00\u4e1d\u6beb\u7684\u7a7a\u9699\uff0c\u548c\u4f60\u4e00\u8d77\u7ff1\u7fd4\u4ece\u5c71\u5dc5\u5230\u8c37\u5e95\uff0c\u63a2\u7d22\u90a3\u4e9b\u4e0d\u4e3a\u4eba\u77e5\u7684\u79d8\u5bc6\uff0c\u50cf\u6b63\u8981\u5f00\u82b1\u7684\u679d\u6860\u548c\u521d\u751f\u7684\u7fbd\u7ffc\u3002\u6b8b\u70db\u89e3\u8863\uff0c\u6d45\u8fce\u6df1\u9012\uff0c\u5deb\u5c71\u4e91\u96e8\uff0c\u5728\u4f60\u7684\u8eab\u4f53\u91cc\u649e\u51fb\u51fa\u65e0\u6570\u4e2a\u81ea\u5df1\uff0c\u7136\u540e\u4e00\u8d77\u9762\u7ea2\u8033\u8d64\u7684\u5a07\u5598\u547c\u5438\u3002 \u8870\u8001\u6709\u4e00\u79cd\u7ec8\u6781\u610f\u4e49\u4e0a\u7684\u597d\u5904\uff0c\u6211\u4e0d\u5fc5\u518d\u300e\u4ec0\u4e48\u90fd\u8981\u4e86\u300f\u3002\u5378\u4e0b\u957f\u9ad8\u7684\u4f7f\u547d\uff0c\u4e0d\u518d\u903c\u81ea\u5df1\u559d\u4ec0\u4e48\u725b\u5976\uff0c\u800c\u6709\u5173\u5b87\u822a\u5458\u7684\u68a6\uff0c\u548cMJ\u7684\u6708\u7403\u6f2b\u6b65\uff0c\u6211\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u7559\u7ed9\u4e0d\u8fd1\u89c6\u7684\u5b69\u5b50\u4ee5\u53ca\u56db\u80a2\u534f\u8c03\u7684\u670b\u53cb\u3002\u540c\u65f6\u6211\u4e5f\u4e0d\u5fc5\u90a3\u4e48\u60f3\u4f60\u4e86\uff0c\u867d\u7136\u4ecd\u5bc4\u9001\u51fa\u4e86\u5927\u91cf\u7684\u7231\uff0c\u4f46\u4e0d\u518d\u90a3\u4e48\u5f3a\u6c42\u5b83\u4eec\u56de\u6765\uff0c\u6211\u4ecd\u65e7\u6bcf\u5929\u641c\u67e5\u90ae\u7bb1\uff0c\u4f46\u90a3\u53ea\u662f\u4e60\u60ef\uff0c\u6211\u5f00\u59cb\u628a\u98ce\u5f52\u8fd8\u7ed9\u98ce\uff0c\u628a\u5927\u6d77\u5f52\u8fd8\u7ed9\u5927\u6d77\uff0c\u628a\u81ea\u5df1\u5f52\u8fd8\u7ed9\u7a7a\u65e0\u4e00\u4eba\u7684\u5c71\u5ce6\u3002 \u4e0d\u8981\u614c\uff0c\u6211\u4eec\u6709\u5f88\u591a\u5e94\u5bf9\u65b9\u6cd5\u3002\u5982\u679c\u6253\u788e\u73bb\u7483\u676f\uff0c\u653e\u5fc3\uff0c\u6a71\u67dc\u91cc\u6709\u5907\u7528\u7684\u5f88\u591a\u53ea\u3002\u5982\u679c\u5f04\u7cdf\u4e00\u573a\u8003\u8bd5\uff0c\u6211\u4eec\u53ef\u4ee5\u5c11\u7761\u4e00\u4e9b\uff0c\u7136\u540e\u7b49\u5f85\u4e0b\u6b21\u3002\u5c31\u7b97\u662f\u611f\u5192\u53d1\u70e7\u5fc3\u60c5\u591a\u4e91\uff0c\u522b\u6025\uff0c\u533b\u9662\u6709\u836f\uff0c\u4eba\u95f4\u6709\u9152\u3002\u642d\u914d\u51fa\u7ec4\u5408\u62f3\u4e00\u5957\uff0c\u8fd9\u662f\u5f88\u591a\u4e8b\u7684\u89e3\u51b3\u4e4b\u9053\u3002\u4f46\u5982\u679c\u7a81\u7136\u60f3\u4f60\uff0c\u8fd9\u4ef6\u4e8b\uff0c\u6211\u6682\u65f6\u8fd8\u6ca1\u6709\u627e\u5230\u529e\u6cd5\u3002 \u4eca\u5929\u4e0b\u73ed\uff0c\u4e0d\u60f3\u90a3\u4e48\u5feb\u56de\u5bb6\uff0c\u529e\u516c\u5ba4\u7a97\u53e3\u70b9\u6839\u70df\u770b\u697c\u4e0b\u7684\u884c\u8f66\u9053\u3002\u5927\u6279\u91cf\u7684\u8f6e\u80ce\u78be\u8fc7\u6c34\u6ce5\u8def\uff0c\u4e0d\u77e5\u9053\u4ed6\u4eec\u8981\u53bb\u54ea\u91cc\u3002\u7406\u8bba\u4e0a\uff0c\u8fd9\u6761\u8def\u7684\u5c3d\u5934\u662f\u5927\u6d77\uff0c\u53ef\u5927\u6d77\u7684\u5c3d\u5934\u662f\u54ea\u91cc\u5462\uff1f\u5c3d\u5934\u7684\u5c3d\u5934\u53c8\u662f\u54ea\u91cc\u5462\uff1f\u5982\u679c\u8fd9\u53ea\u662f\u4e00\u573a\u6298\u8fd4\u7684\u884c\u7a0b\uff0c\u6211\u4eec\u6700\u540e\u53c8\u4f1a\u53bb\u54ea\u91cc\u5462\u3002\u53ef\u80fd\u6211\u54ea\u91cc\u90fd\u6ca1\u6709\u53bb\uff0c\u6211\u53ea\u662f\u5728\u6cb9\u8868\u544a\u8b66\u4e4b\u524d\u7b49\u5f85\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u3002\u65e9\u665a\u9ad8\u5cf0\u5c06\u4eba\u7c7b\u5305\u56f4\uff0c\u8c37\u4e2d\u7684\u5c45\u6c11\u4e0d\u77e5\u56db\u5b63\uff0c\u4e0d\u6653\u5f97\u4e16\u4e0a\u6709\u6d77\uff0c\u6ca1\u6709\u671b\u89c1\u8fc7\u5c71\u4e0b\u7684\u704c\u6728\u8349\u76ae\uff0c\u56e0\u6b64\u4e5f\u7b97\u4e0d\u5f97\u767b\u8fc7\u5c71\u3002 \u5403\u4e86\u51c9\u98ce\uff0c\u611f\u5192\u4e09\u65e5\u3002\u8eba\u5728\u5e8a\u4e0a\u5669\u68a6\u63a5\u8e35\u9020\u8bbf\u3002\u6211\u518d\u6b21\u60f3\u8d77\u90a3\u4e2a\u91d1\u8272\u7684\u5348\u540e\uff0c\u77ed\u6682\u5730\u4f11\u61a9\uff0c\u6885\u5b50\u7684\u6c41\u6c34\u6ef4\u5728\u6211\u7684\u8138\u4e0a\uff0c\u6811\u53f6\u628a\u98ce\u62e6\u505c\uff0c\u9e3d\u5b50\u5728\u6211\u80f8\u53e3\u6253\u8f6c\uff0c\u4e00\u5343\u4e07\u53ea\u7fbd\u6bdb\u55b7\u5c04\u800c\u51fa\uff0c\u53c8\u5168\u60ac\u505c\u5728\u6211\u5fc3\u4e0a\u3002\u6765\u4e0d\u53ca\u5f00\u53e3\uff0c\u6709\u5173\u4f60\u7684\u5ff5\u5934\uff0c\u88ab\u4fee\u9970\u4e86\u6210\u4e86\u6d45\u7761\u7684\u68a6\u5453\uff0c\u559d\u591a\u7684\u7d6e\u8bed\uff0c\u653e\u7a7a\u65f6\u7684\u7709\u89d2\u3002\u6211\u5168\u7136\u5df2\u628a\u65f6\u95f4\u5fd8\u8bb0\uff0c\u4f46\u56de\u5934\uff0c\u53c8\u597d\u4f3c\u5b83\u4ece\u6765\u6ca1\u8d70\u3002 \u603b\u6709\u4e00\u5929\u98de\u8239\u4f1a\u767b\u9646\u706b\u661f\uff0c\u7535\u78c1\u6ce2\u80fd\u8fd0\u8f93\u601d\u5ff5\uff0c\u7231\u53ef\u4ee5\u88ab\u89c2\u6d4b\u88ab\u6597\u91cf\uff0c\u53d8\u6210\u533b\u751f\u624b\u4e2d\u7684\u5904\u65b9\u836f\u3002\u5728\u8fd9\u4e00\u5929\u6765\u4e34\u4e4b\u524d\uff0c\u79d1\u5b66\u7684\u4fe1\u5f92\u6c38\u8fdc\u90fd\u6ca1\u6cd5\u8bc1\u660e\u4eba\u7c7b\u5df2\u7ecf\u5728\u9519\u8bef\u7684\u65b9\u5411\u8fdb\u5316\u5f97\u592a\u4e45\u3002\u53ea\u662f\u4efb\u624b\u4e2d\u7684\u5c0f\u73ab\u7470\u53cd\u590d\u67af\u840e\uff0c\u5bc4\u60c5\u4e0b\u4e00\u4e2a\u5b87\u5b99\u3002 \u6700\u8fd1\u53d1\u73b0\u6211\u7684\u8bb0\u5fc6\u529b\u5f00\u59cb\u663e\u8457\u6d88\u9000\u3002\u6d88\u9000\u5f97\u5e45\u5ea6\u4e4b\u5927\uff0c\u4e00\u5ea6\u8ba9\u6211\u4ee5\u4e3a\u6211\u4ee5\u524d\u7684\u8bb0\u5fc6\u529b\u662f\u4e00\u79cd\u8d85\u80fd\u529b\u3002\u6211\u5f00\u59cb\u53ea\u80fd\u8fc7\u4e00\u4e9b\u6982\u62ec\u6027\u7684\u751f\u6d3b\uff0c\u8fc7\u53bb\u7684\u51e0\u4e2a\u6708\u53d8\u5f97\u50cf\u8001\u65e7\u7684\u80f6\u7247\uff0c\u5145\u65a5\u7740\u5149\u5f71\uff0c\u8ff7\u79bb\u4ee5\u53ca\u4e0d\u786e\u5b9a\u6027\uff0c\u7ffb\u52a8\u4ed6\u4eec\u7684\u65f6\u5019\uff0c\u50cf\u662f\u5728\u62e7\u4e00\u53ea\u7f50\u5934\u3002\u6211\u5f00\u59cb\u5199\u4e00\u4e9b\u65e5\u8bb0\uff0c\u7167\u7740\u5361\u592b\u5361\u90a3\u4e2a\u5957\u8def\u5199\uff0c\u7ed3\u679c\u73b0\u5728\u770b\u6765\uff0c\u66f4\u50cf\u662f\u5931\u53bb\u8bed\u8a00\u80fd\u529b\u7684\u83f2\u8328\u6770\u62c9\u5fb7\uff0c\u53ea\u5269\u9152\u7cbe\u3002\u53ef\u601c\u7684\u662f\uff0c\u5373\u4fbf\u662f\u9152\u7cbe\uff0c\u6211\u4e5f\u8bb0\u4e0d\u592a\u6e05\u4e86\uff0c\u533b\u9662\u5012\u662f\u7ed9\u4e86\u6211\u4e00\u4efd\u8102\u80aa\u809d\u62a5\u544a\uff0c\u8bc1\u660e\u6211\u7684\u809d\u810f\u751a\u81f3\u6bd4\u6211\u8bb0\u5f97\u66f4\u6e05\u3002\u559d\u591a\u4e86\uff0c\u559d\u591a\u7684\u6b21\u6570\u592a\u591a\u4e86\uff0c\u559d\u591a\u4e86\u603b\u89c9\u5f97\u4e0d\u662f\u6211\u81ea\u5df1\u5931\u5fc6\uff0c\u662f\u6211\u5728\u641e\u4e00\u4e2a\u81ea\u6211\u7684\u5b9a\u671f\u8bb0\u5fc6\u6e05\u9664\uff0c\u514d\u5f97\u5bf9\u672a\u6765\u5931\u53bb\u5174\u8da3\u3002 \u6211\u628a\u5bb6\u642c\u5230\u4e86\u6ee8\u6d77\u5927\u9053\uff0c\u9633\u5149\u8fc7\u5269\uff0c\u4e0d\u5f97\u4e0d\u6cbf\u9014\u6d3e\u53d1\u3002\u6709\u6b21\u6211\u51fa\u95e8\u6ca1\u5e3d\u5b50\uff0c\u4e00\u4e0b\u5348\u7ed9\u6211\u70eb\u5f97\u8138\u7ea2\uff0c\u50cf\u662f\u4e3a\u6211\u7684\u5927\u610f\u8f7b\u654c\u800c\u7f9e\u6127\u3002\u6d77\u98ce\u4e5f\u5f88\u76ae\uff0c\u4e0d\u5e26\u6765\u964d\u6e29\u4e5f\u4e0d\u5e26\u6765\u98ce\u60c5\uff0c\u53ea\u662f\u4e00\u4e2a\u52b2\u547c\u547c\u547c\u547c\u3002\u6211\u6bcf\u6b21\u62bd\u70df\u8981\u5c4f\u606f\u542c\u98ce\uff0c\u53d1\u73b0\u5b83\u6709\u4e9b\u529b\u7aed\u7684\u65f6\u5019\uff0c\u8d81\u5b83\u4e0d\u6ce8\u610f\uff0c\u731b\u706b\u70e7\u70df\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u552f\u4e00\u7684\u56f0\u6270\u662f\u5206\u4e0d\u6e05\u6930\u5b50\u548c\u68d5\u6988\u6811\u3002 \u5047\u5982\u7167\u76f8\u8fd9\u4ef6\u4e8b\uff0c\u6ca1\u6709\u5b58\u5728\u8fc7\u4e16\u754c\u4e0a\u3002\u666f\u70b9\u9644\u8fd1\u90fd\u662f20\u4e00\u5f20\u7684\u73b0\u573a\u901f\u5199\u753b\u5bb6\u3002Ins\u98ce\u53d8\u6210\u4e00\u79cd\u82b1\u4f53\u7684\u624b\u5199\u4fe1\u4ef6\uff0c\u6295\u9012\u6240\u6709\u8ba2\u9605\u4f60\u7684\u89c2\u4f17\u3002\u4f60\u5931\u604b\u540e\uff0c\u4e0d\u518d\u4f1a\u6709\u7ffb\u770b\u76f8\u518c\u7a81\u7136\u96be\u8fc7\u7684\u65f6\u5019\uff0c\u9664\u975e\u4f60\u628a\u4f60\u7684\u4e00\u751f\u4e34\u6479\uff0c\u505a\u6210\u753b\u5eca\u4f9b\u6e38\u4eba\u5f9c\u5f89\u3002\u4f46\u82e5\u662f\u6709\u5929\u4f60\u4e0d\u5c0f\u5fc3\u5fd8\u4e86\uff0c\u4e5f\u4e0d\u518d\u4f1a\u6709\u4e00\u5f20\u7167\u7247\u505c\u7559\u5728\u6545\u4e8b\u53d1\u751f\u7684\u90a3\u5929\u4e0d\u80af\u8d70\uff0c\u66ff\u4f60\u4e00\u76f4\u8bb0\u5f97\u3002 \u6e7f\u5783\u573e\u7bb1\u91cc\u8eba\u7740\u4e00\u675f\u9c9c\u82b1\uff0c\u771f\u60c5\u5361\u7247\u88ab\u4e22\u5728\u4e86\u53ef\u56de\u6536\u7269\u91cc\uff0c\u4e00\u540c\u88ab\u8c22\u7edd\u7684\u5fc3\u7b97\u662f\u4ec0\u4e48\u5783\u573e\uff0c\u7b97\u4e86\uff0c\u670b\u53cb\uff0c\u6295\u9012\u4e0d\u81f3\u7684\u7231\u6211\u4eec\u90fd\u6709\u6bd2\u6709\u5bb3\uff0c\u54b1\u4eec\u8d70\u5427\uff0c\u8c01\u4f1a\u4e3a\u5783\u573e\u5206\u7c7b\u4f24\u5fc3\u3002 \u7ec8\u65e5\u4e0e\u4f60\u4f34\u6e38\uff0c\u6298\u8fd4\u5728\u95e8\u53e3\u5c0f\u516c\u56ed\uff0c\u540e\u5c71\u4e71\u5f84\uff0c\u51b7\u6c14\u4e0d\u8db3\u7684\u7535\u5f71\u9662\u4e4b\u95f4\u3002\u90a3\u65f6\u5019\u4e0d\u6653\u5f97\u51b0\u5c9b\u9664\u4e86\u51b0\u5757\u8fd8\u6709\u8010\u5bd2\u677e\u67cf\uff0c\u4e0d\u77e5\u9053\u590f\u5b63\u7684\u70df\u706b\u5927\u4f1a\u7684\u5b58\u5728\uff0c\u4e16\u754c\u88ab\u6211\u770b\u5f97\u5f88\u5c0f\uff0c\u4f60\u8bf4\u4f60\u60f3\u53bb\u5361\u8428\u5e03\u5170\u5361\uff0c\u6211\u8bf4\u8bf7\u5e26\u6211\u8d70\uff0c\u90a3\u65f6\u6211\u5f00\u59cb\u76f8\u4fe1\u4eba\u4f1a\u5931\u53bb\u65c5\u884c\u7684\u6982\u5ff5\uff0c\u7f6e\u4e07\u7269\u4e8e\u4e0d\u987e\uff0c\u53ea\u60f3\u59cb\u7ec8\u4f34\u5728\u4f60\u7684\u8eab\u8fb9\uff0c\u628a\u8fd9\u5f53\u4f5c\u552f\u4e00\u5b87\u5b99\u3002 \u200b\u200b\u200b\u200b \u6709\u65f6\u5019\u6211\u8fd8\u662f\u613f\u610f\u76f8\u4fe1\u4eba\u7c7b\u5934\u9876\u4e0a\u662f\u6709\u795e\u7684\uff0c\u6a2a\u4e98\u7740\u5e26\u6709\u6076\u610f\u7684\u795e\uff0c\u8fd9\u6837\u60f3\u7684\u8bdd\uff0c\u96be\u71ac\u7684\u5206\u5206\u79d2\u79d2\u548c\u7a81\u5982\u5176\u6765\u7684\u7834\u4e8b\u6211\u90fd\u53ef\u4ee5\u602a\u7f6a\u7ed9\u547d\u8fd0\u7684\u6349\u5f04\u4e0e\u73a9\u7b11\u3002\u6700\u6015\u7684\u662f\u8fd9\u4e00\u5207\u90fd\u662f\u968f\u673a\uff0c\u6df7\u6c8c\uff0c\u65e0\u5e8f\u7684\uff0c\u6ca1\u6709\u795e\u60e9\u7f5a\u4f60\uff0c\u6ca1\u6709\u4eba\u5728\u4e4e\u4f60\uff0c\u4eba\u53ea\u662f\u672c\u80fd\u5730\u5760\u843d\u3002 \u200b\u200b\u200b\u200b \u4f60\u542c\u597d\u4e86\uff0c\u4ece\u4eca\u5929\u8d77\uff0c\u6211\u4fe9\u8981\u505a\u7edd\u547d\u7684\u5077\u730e\u8005\uff0c\u4e0d\u7a00\u7f55\u51b0\u5ddd\u4f01\u9e45\uff0c\u77a7\u4e0d\u8d77\u6c99\u6f20\u9a86\u9a7c\uff1b\u62f3\u6253\u5965\u7279\u66fc\uff0c\u811a\u8e22\u5c0f\u602a\u517d\uff0c\u70b9\u71c3\u4ec5\u6709\u7684\u591c\u8272\uff0c\u7167\u4eae\u4f60\u6211\u4e00\u65e0\u6240\u6709\uff0c\u9664\u4e86\u4f60\u7684\u6e29\u67d4\u3002\u8ba9\u6211\u4eec\u52fe\u80a9\u642d\u80cc\uff0c\u5728\u5348\u591c\u7a7a\u65f7\u7684\u6cf3\u6c60\u5564\u9152\u70e7\u70e4\uff0c\u79f0\u738b\u79f0\u9738\u3002\u590f\u98ce\u5439\u6765\uff0c\u4f60\u7684\u53d1\u68a2\u5728\u6211\u5fc3\u6ce2\u56de\u8f6c\uff0c\u6253\u7ed3\u3002\u6b64\u65f6\uff0c\u5730\u7403\u7a7a\u6709\u4e94\u4ebf\u5e73\u65b9\u5343\u7c73\uff0c\u4e0d\u5982\u4f60\u6211\u6b64\u65f6\u4e00\u9685\u4e00\u6b65\u3002 \u671f\u5f85\u8870\u8001\uff0c\u671f\u5f85\u81ea\u6211\u63a5\u53d7\uff0c\u671f\u5f85\u8377\u5c14\u8499\u4e0b\u964d\uff0c\u671f\u5f85\u4e0d\u7528\u518d\u8bb2\u6211\u600e\u4e48\u68a6\u89c1\u8c01\uff0c\u671f\u5f85\u8fdc\u5c71\u661f\u8fb0\u548c\u5b87\u5b99\uff0c\u6211\u5565\u90fd\u5c1d\u8bd5\u8fc7\u4e0d\u5c11\uff0c\u6390\u6307\u4e00\u7b97\u6211\u547d\u4e2d\u72af\u5e74\u5c11\uff0c\u73b0\u5728\u4e00\u5fc3\u5bc4\u60c5\u4e07\u80fd\u7684\u65f6\u95f4\uff0c\u671f\u5f85\u5b83\u9a9f\u4e86\u6211\uff0c\u8d64\u6761\u6761\u5e94\u8be5\u4f1a\u81ea\u5728\u4e0d\u5c11\u3002 \u200b\u200b\u200b \u5047\u5982\u3001\u5982\u679c\u3001\u4f1a\u4e0d\u4f1a\uff0c\u8fd9\u6837\u7684\u865a\u62df\u8bed\u6c14\u6c38\u8fdc\u8ba9\u4eba\u60f3\u6389\u5934\u53d1\u3002\u8003\u8651\u4e86\u4e00\u4e0b\uff0c\u5047\u5982\u4e16\u754c\u4e0a\u9152\u7cbe\u90fd\u88ab\u7981\u6b62\uff0c\u5982\u679c\u6708\u5149\u548c\u4f60\u90fd\u4e0d\u518d\u6551\u6211\uff0c\u6211\u4ecd\u4f1a\u7559\u5728\u8fd9\u91cc\u3002\u5c31\u7b97\u660e\u5929\u4f60\u8981\u65e9\u8d77\u79bb\u53bb\uff0c\u6211\u4e5f\u4f1a\u7559\u5728\u8fd9\u91cc\u3002\u5c31\u7b97\u6212\u65ad\u53cd\u5e94\u60c5\u4e0d\u81ea\u7981\uff0c\u6211\u4e5f\u4f1a\u7559\u5728\u8fd9\u91cc\u3002\u5373\u4f7f\u6ca1\u6709\u9152\u7cbe\u548c\u6708\u4eae\uff0c\u6211\u4e5f\u53ef\u4ee5\u4e07\u4e08\u971e\u5149\u5730\u7559\u5728\u8fd9\u91cc\uff0c\u6e05\u9192\u5730\u7559\u5728\u8fd9\u91cc\u3002 \u200b\u200b\u200b\u200b \u4e16\u95f4\u4e07\u822c\u7f8e\u597d\u4e88\u6211\u7686\u4e0d\u914d\u3002\u6211\u4e0d\u914d\u51fa\u73b0\u5728\u6613\u4e8e\u4fdd\u7559\u7684\u5f71\u50cf\u91cc\uff0c\u4e0d\u914d\u88ab\u5f52\u7eb3\u5230\u4ed6\u4eba\u53e3\u4e2d\u7684\u672a\u6765\u91cc\u3002\u6211\u662f\u524d\u594f\u91cc\u7684\u4e00\u4e2a\u97f3\uff0c\u6e21\u53e3\u4e0a\u7684\u4e00\u6bb5\u6728\uff0c\u9001\u4f60\u4e00\u7a0b\u9001\u4f60\u4e00\u7a0b\uff0c\u6211\u6c38\u8fdc\u5728\u4f60\u4e0d\u56de\u5934\u7684\u666f\u8272\u91cc\uff0c\u6c38\u8fdc\u4e0d\u7b49\u4f60\u3002 \u200b \u7761\u4e86\u4e00\u5929\u88ab\u96e8\u58f0\u6320\u9192\uff0c\u5fd8\u5173\u7684\u97f3\u54cd\u8fd8\u5728\u7ef5\u7ef5\u5531\u4e00\u652f\u60c5\u6b4c\uff0c\u6b22\u8fce\u6765\u5230\u4e00\u4e2a\u56db\u4e0b\u65e0\u4eba\u7684\u5468\u5929\u591c\u665a\uff0c\u6ca1\u6709\u607c\u4eba\u7684\u5608\u6742\uff0c\u4e5f\u6ca1\u6709\u51b0\u5757\u5728\u676f\u4e2d\u788e\u88c2\u7684\u58f0\u97f3\uff0c\u53cd\u5012\u6e05\u9192\uff0c\u53cd\u5012\u4e13\u60c5\u3002\u4e16\u754c\u662f\u5f88\u5435\u6ca1\u9519\uff0c\u53ef\u4f46\u51e1\u6709\u4e00\u4e2a\u8fd9\u6837\u65e0\u4eba\u6253\u6405\u7684\u591c\u665a\uff0c\u5c31\u80fd\u8f7b\u6613\u5730\u53d1\u73b0\uff0c\u4f60\u59cb\u7ec8\u88ab\u6211\u6302\u5728\u5fc3\u5934\u3002 \u200b\u200b\u200b\u200b \u8d8a\u662f\u4e71\u4e86\u65b9\u5bf8\u8d8a\u662f\u8981\u4e0d\u52a8\u58f0\u8272\u3002 \u200b\u200b\u200b\u200b \u6625\u6709\u72c2\u82b1\u79cb\u6709\u6708\uff0c\u51b7\u98ce\u51e0\u5ea6\u5165\u51ac\u96ea\uff0c\u53ea\u6709\u590f\u5929\uff0c\u590f\u5929\u662f\u7231\u4eba\u7684\u5e86\u5178\uff0c\u590f\u5929\u662f\u5c11\u5973\u7684\u796d\u7940\uff0c\u590f\u5929\u4ece\u4f60\u88f8\u9732\u7684\u9501\u9aa8\u548c\u6d01\u767d\u7684\u811a\u8e1d\u5165\u573a\u3002\u6211\u6ca1\u6709\u82b1\u6708\u98ce\u96ea\uff0c\u552f\u6709\u8ba9\u68d5\u6988\u9633\u4f1e\u4e3a\u4f60\u6682\u501f\u836b\u51c9\uff0c\u7761\u83b2\u81c2\u5f2f\u4f34\u4f60\u4e00\u591c\u597d\u7720\uff0c\u6211\u4e00\u4ecb\u51e1\u4eba\u5eb8\u4eba\u65e0\u7528\u4e4b\u4eba\uff0c\u4e3a\u4e86\u4f60\uff0c\u4e09\u4e24\u676f\u6d4a\u9152\u4e0b\u809a\uff0c\u4e5f\u60f3\u8bd5\u8bd5\u90a3\u4e9b\u6240\u8c13\u7684\u4e0d\u53ef\u80fd\uff0c\u4e0d\u4e8c\u4e0d\u91cd\u6765\u7684\u590f\u5929\u3002 \u6709\u6ca1\u6709\u53ef\u80fd\u6bcf\u4e2a\u4eba\u90fd\u662f\u4e00\u5bb6\u9910\u5385\uff0c\u4ece\u524d\u6709\u4e2a\u4e0d\u957f\u773c\u7684\u5ba2\u4eba\u662f\u5728\u665a\u4e0a\u4e03\u70b9\u4e00\u523b\u63a8\u95e8\u8fdb\u6765\uff0c\u5750\u5728\u5de6\u624b\u7b2c\u4e00\u684c\uff0c\u70b9\u4e00\u676f\u5927\u90fd\u4f1a\uff0c\u5979\u6628\u5929\u6765\u4eca\u5929\u6765\u5929\u5929\u6765\u3002\u4f60\u5c31\u5728\u5fc3\u91cc\u5e2e\u5979\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u7559\u51fa\u6765\uff0c\u97f3\u54cd\u88ab\u5979\u4e2d\u610f\u7684\u6b4c\u6162\u6162\u586b\u6ee1\uff0c\u706f\u5149\u548c\u773c\u5149\u90fd\u504f\u5fc3\u5730\u6253\u5411\u5979\uff0c\u6574\u665a\u6574\u665a\u3002\u76f4\u5230\u6709\u5929\u5979\u4e0d\u518d\u6765\u4e86\uff0c\u4f46\u4f60\u7684\u9910\u5385\u8fd8\u662f\u8981\u5f00\uff0c\u4e5f\u4f1a\u6b4c\u821e\u5347\u5e73\uff0c\u4e5f\u4f1a\u6709\u4e86\u66f4\u591a\u65b0\u7684\u591c\u665a\uff0c\u65b0\u7684\u5ba2\u4eba\u3002\u4f46\u8fd9\u5e76\u4e0d\u59a8\u788d\u4f60\u6c38\u8fdc\u628a\u90a3\u5f20\u684c\u5b50\u7a7a\u51fa\u6765\uff0c\u4e5f\u5e76\u4e0d\u59a8\u788d\u4f60\u5728\u6253\u70ca\u7684\u65f6\u5019\uff0c\u5728\u64e6\u62ed\u97f3\u54cd\u7684\u65f6\u5019\uff0c\u671f\u5f85\u80cc\u540e\u5ffd\u7136\u4f20\u6765\u58f0\u97f3\uff0c\u558a\u4f60\u70b9\u4e00\u676f\u5927\u90fd\u4f1a\u914d\u5979\u6700\u7231\u7684\u8001\u6b4c\u3002 \u5982\u679c\u8eba\u5728\u5e8a\u4e0a\u5374\u4e0d\u7761\uff0c\u90a3\u8fd9\u6bb5\u65f6\u95f4\u4f1a\u50cf\u662f\u4ece\u8c01\u624b\u91cc\u62a2\u8fc7\u6765\u7684\u4f3c\u7684\u3002\u767d\u5929\u7684\u6b63\u4e8b\u548c\u697c\u4e0b\u6c7d\u8f66\u9e23\u7b1b\u58f0\u4e00\u9f50\u6e10\u53d8\u6e10\u706d\uff0c\u591c\u665a\u50cf\u4e2a\u4eca\u671d\u6709\u9152\u4eca\u671d\u9189\u7684\u9157\u9152\u8005\uff0c\u9f13\u5439\u672b\u4e16\u7406\u8bba\uff0c\u300e\u5047\u5982\u592a\u9633\u4e0d\u518d\u5347\u8d77\u300f\u300e\u5047\u5982\u4eca\u665a\u4f1a\u65e0\u9650\u5ef6\u957f\u300f\u3002\u6211\u5f00\u59cb\u4e00\u573a\u4e0d\u4f5c\u671f\u9650\u7684\u6f02\u6d6e\uff0c\u4e0d\u5e26\u671f\u8bb8\u7684\u88ab\u78b0\u649e\uff0c\u98de\u8fdb\u5f02\u56fd\u4ed6\u4e61\u7684\u5730\u7a96\u91cc\uff0c\u6216\u662f\u88ab\u9501\u56de\u5341\u4e03\u5c81\u7684\u67d0\u4e2a\u6559\u5ba4\u91cc\uff0c\u58c1\u6a71\u91cc\u722c\u6ee1\u88ab\u503e\u7a7a\u7684\u9152\u74f6\uff0c\u4e00\u4e9b\u5b57\u53e5\u4ece\u6211\u5fc3\u91cc\u8dd1\u51fa\u6765\uff0c\u73b0\u5728\u53c8\u8eba\u5728\u5730\u4e0a\uff0c\u9c9c\u6709\u95ee\u6d25\u3002\u5982\u679c\u4eca\u665a\u5c31\u662f\u6700\u540e\u4e00\u665a\uff0c\u6211\u4f1a\u628a\u8fd9\u4e9b\u4e1c\u897f\u4e00\u4e00\u8d4e\u56de\uff0c\u7136\u540e\u505a\u4e00\u53ea\u7c92\u5b50\uff0c\u4e00\u53ea\u4e0d\u6653\u5f97\u81ea\u5df1\u4f1a\u98de\u5411\u4f55\u5904\u7684\u5fae\u5c0f\u7c92\u5b50\uff0c\u4e0d\u518d\u7559\u4e0b\u53e3\u8baf\uff0c\u4e0d\u518d\u7b49\u8c01\u3002 \u767d\u5929\u843d\u4e86\u4e00\u573a\u96e8\uff0c\u4e0d\u77e5\u9053\u6df1\u5733\u6e7e\u516c\u56ed\u662f\u5426\u4ecd\u65e7\u6324\u6ee1\u4e86\u4eba\uff0c\u65af\u91cc\u5170\u5361\u524d\u4e9b\u65e5\u5b50\u7206\u70b8\uff0c\u4ed6\u4eec\u662f\u5426\u4ecd\u65e7\u6709\u60b2\u6b4c\u555c\u6ce3\u3002\u4e16\u754c\u600e\u4e48\u4e0e\u6211\u65e0\u5173\uff0c\u6211\u600e\u4e48\u53ea\u60f3\u9a7e\u9a76\u4e00\u9897\u6d41\u661f\uff0c\u6765\u6362\u4f60\u60ca\u547c\u4e00\u4e0b\uff0c\u90a3\u4f60\u73b0\u5728\u5728\u54ea\u91cc\uff1f\u600e\u4e48\u6211\u8fd8\u7559\u5728\u8fd9\u7a7a\u65e0\u4e00\u4eba\u7684\u623f\u95f4\u62bd\u70df\u3002 \u590f\u5929\u96be\u514d\u8ba9\u4eba\u60f3\u9003\u3002\u8d81\u7740\u590f\u98ce\u5317\u4e0a\uff0c\u591c\u665a\u4f1a\u53d8\u77ed\u6d45\uff0c\u5982\u4f60\u6de1\u6de1\u7684\u7709\u68a2\uff0c\u4ef2\u590f\u591c\u5220\u53bb\u6ebd\u70ed\uff0c\u5220\u53bb\u866b\u9e23\uff0c\u7559\u4e0b\u98de\u9e1f\u6251\u68f1\u7fc5\u8180\u540e\u4e30\u6ee1\u7684\u7fbd\u6bdb\uff0c\u8f7b\u62ff\u8f7b\u653e\u3002\u4f46\u8fd9\u4e5f\u6ca1\u6709\u4ec0\u4e48\u4e24\u6837\uff0c\u76db\u590f\u6c38\u8fdc\u5728\u6211\u8111\u5185\u793c\u82b1\u9f50\u653e\uff0c\u55b7\u6cc9\u6cbe\u67d3\u9713\u8679\uff0c\u4eba\u5f71\u61a7\u61a7\uff0c\u6211\u53cd\u590d\u80cc\u8bf5\u7b2c\u4e00\u89c1\u4f60\u65f6\u7684\u5bf9\u767d\uff0c\u65f6\u95f4\u55e1\u55e1\u4f5c\u54cd\uff0c\u9152\u74f6\u54d0\u54d0\u54d0\u54d0\u3002 \u200b \u6ebd\u6691\u96be\u6d88\uff0c\u592a\u9633\u767e\u65e0\u804a\u8d56\u88ab\u4eba\u540a\u6b7b\u5728\u5929\u7a7a\uff0c\u7b49\u5f85\u4e00\u4e2a\u6708\u4eae\u6765\u6551\u3002\u533b\u751f\u8bf4\u6211\u6ca1\u6709\u75c5\uff0c\u53ea\u662f\u4e0d\u8be5\u4e00\u4e2a\u4eba\u5446\u592a\u4e45\uff0c\u6211\u5bf9\u75c7\u670d\u4e0b\u4e00\u4e9b\u9152\u7cbe\uff0c\u6253\u5f00\u624b\u673a\uff0c\u591c\u665a\u7ae5\u53df\u65e0\u6b3a\uff0c\u5c06\u572819:47\u964d\u4e34\uff0c\u53ef\u6211\u6653\u5f97\u90a3\u4e0d\u662f\u6211\u7684\u6708\u4eae\uff0c\u4eca\u5929\u7684\u6211\u4ecd\u65e7\u88ab\u60ac\u5728\u5929\u4e0a\uff0c\u53cc\u811a\u60ac\u7a7a\uff0c\u67af\u7b49\u4e00\u4e2a\u4f60\u6708\u5149\u8fd4\u7167\u3002 \u200b\u200b\u200b \u4eba\u7c7b\u6bcf\u65f6\u6bcf\u523b\u90fd\u5728\u8001\u53bb\uff0c\u800c\u8fdf\u949d\u7684\u57ce\u5e02\u76f8\u5bf9\u4e8e\u6211\u4eec\u51e0\u4e4e\u662f\u9759\u6b62\u7684\u3002\u7a7f\u8fc7\u4e0d\u8001\u7684\u8857\u533a\uff0c\u53bb\u5230\u5f02\u56fd\u6c38\u6052\u7684\u55b7\u6cc9\uff0c\u7ed5\u4e86\u4e00\u5927\u5708\uff0c\u56de\u5230\u5341\u4e03\u5c81\u7684\u90a3\u6761\u8857\uff0c\u73b0\u5728\u8fd8\u662f\u53eb\u505a\u53f0\u5317\u8def\u3002\u540e\u6765\u6211\u4e5f\u53bb\u5230\u4e00\u4e9b\u964c\u751f\u7684\u57ce\u5e02\uff0c\u6bcf\u6bcf\u60f3\u5230\u4f60\u4e5f\u66fe\u5728\u8fd9\u6761\u8def\u4e0a\u8d70\u8fc7\uff0c\u5ffd\u7136\u5c31\u5bf9\u8fd9\u6761\u9053\u8def\u4eb2\u5207\u8d77\u6765\uff0c\u4e0d\u77e5\u9053\u4f60\u80fd\u4e0d\u80fd\u660e\u767d\uff0c\u8fd9\u79cd\u611f\u89c9\u5c31\u50cf\u4e00\u53ea\u732b\uff0c\u5f53\u6211\u60f3\u5ff5\u4f60\u7684\u65f6\u5019\uff0c\u5c31\u628a\u88ab\u4f60\u629a\u6478\u8fc7\u7684\u6bdb\uff0c\u7ec6\u543b\u4e00\u904d\u3002 \u5176\u5b9e\u4e5f\u6ca1\u6709\u90a3\u4e48\u559c\u6b22\u9152\uff0c\u6211\u662f\u4e0d\u6210\u763e\u7684\u4f53\u8d28\u3002\u6211\u53ea\u662f\u7231\u597d\u865a\u5e7b\uff0c\u6c89\u6e4e\u4e8e\u4e0d\u771f\u5b9e\uff0c\u592a\u7a7a\u6f02\u6d6e\u7684\u7231\u597d\u8005\uff0c\u5730\u7403\u6bcd\u4eb2\u91cd\u529b\u7684\u5f03\u513f\u3002\u9152\u7cbe\u7ed9\u6211\u7684\uff0c\u50cf\u662f\u65e0\u60c5\u65e0\u5c3d\u7684\u6697\u6de1\u5b87\u5b99\uff0c\u6f2b\u65e0\u76ee\u7684\u7684\u6f02\u6d41\uff0c\u76f4\u5230\u4f60\u662f\u552f\u4e00\u7684\u98de\u8239\u3002 \u8fc7\u4e86\u5f88\u4e45\u540e\uff0c\u6211\u624d\u540e\u77e5\u540e\u89c9\uff0c\u8bb0\u5fc6\u4e2d\u6de1\u91d1\u8272\u7684\u65e7\u65e5\u5b50\u662f\u4e0d\u662f\u4e0d\u4f1a\u518d\u6765\u4e86\u3002\u800c\u6211\u559c\u6b22\u4e0a\u4f60\u7684\u90a3\u5929\uff0c\u7a7a\u4e2d\u51fa\u73b0\u4e86\u7eef\u7ea2\u8272\u7684\u665a\u971e\u3002\u665a\u971e\u592a\u591a\u4e86\uff0c\u4f46\u8fd9\u79cd\u7a0b\u5ea6\u7ea2\uff0c\u6211\u518d\u4e5f\u6ca1\u6709\u89c1\u8fc7\u3002\u6ca1\u6709\u4ec0\u4e48\u4e1c\u897f\u53ef\u4ee5\u7528\u6765\u6000\u5ff5\u4f60\uff0c\u6000\u5ff5\u5f80\u65e5\uff0c\u628a\u4f60\u4f9b\u4e0a\u795e\u9f9b\uff0c\u732e\u4e0a\u4e13\u5c5e\u7684\u8272\u5ea6\u3002\u6211\u53ef\u80fd\u662f\u574f\u4e86\u773c\u775b\uff0c\u95ed\u4e0a\u773c\u4ecd\u5e38\u5e38\u770b\u89c1\u4f60\u5728\u8fd9\u91cc\u6253\u8f6c\uff0c\u6628\u65e5\u91cd\u73b0\u3002 \u200b\u200b\u200b \u200b\u200b\u200b\u200b  ",
        "description": "",
        "id": 106,
        "section": "posts",
        "tags": [
            "\u6458\u6284",
            "\u70ed\u5e26\u6c7d\u6c34"
        ],
        "title": "\u70ed\u5e26\u6c7d\u6c34",
        "uri": "/posts/journals/88/"
    },
    {
        "content": " \u672c\u6765\u65e0\u4e00\u7269\uff0c\u4f55\u5904\u60f9\u5c18\u57c3\u3002\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u5915\u6620\u3048\u3092\u5f85\u3061\u306a\u304c\u3089 - \u56e0\u5e61\u6643\",\rartist: \"\u56e0\u5e61\u6643\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E5%A4%95%E6%98%A0%E3%81%88%E3%82%92%E5%BE%85%E3%81%A1%E3%81%AA%E3%81%8C%E3%82%89%20-%20%E5%9B%A0%E5%B9%A1%E6%99%83-fbadd4-Ag.mp3\",\rcover: \"https://p1.music.126.net/Ekx7D9n_bu7eh-8Xvgd9cA==/2376044627679390.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E5%A4%95%E6%98%A0%E3%81%88%E3%82%92%E5%BE%85%E3%81%A1%E3%81%AA%E3%81%8C%E3%82%89-%E5%9B%A0%E5%B9%A1%E6%99%83-c4f2ab-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r \u00a0 2019.10.22\u00a0\u60f3\u60f3\u4e24\u4e2a\u4eba\u90fd\u53d8\u4e86\uff0c\u5927\u6982\u4e5f\u662f\u4ef6\u96be\u8fc7\u7684\u4e8b\uff0c\u4e4b\u540e\u5403\u987f\u996d\u770b\u4e2a\u7b11\u8bdd\u5c31\u5fd8\u4e86\u5bf9\u65b9\u3002 2019.10.23 \u5982\u679c\u5feb\u4e50\u592a\u96be\uff0c\u90a3\u4e48\u795d\u4f60\u5e73\u5b89\u3002 2019.10.24 \u6211\u77e5\u9053\uff0c\u90a3\u4e9b\u590f\u5929\uff0c\u5c31\u50cf\u4f60\u4e00\u6837\u56de\u4e0d\u6765\uff0c\u6211\u5df2\u4e0d\u4f1a\u518d\u5bf9\u8c01\u6ee1\u6000\u671f\u5f85\u3002\u6211\u77e5\u9053\uff0c\u8fd9\u4e2a\u4e16\u754c\uff0c\u6bcf\u5929\u90fd\u6709\u592a\u591a\u9057\u61be\uff0c\u6240\u4ee5\uff0c\u4f60\u597d\uff0c\u518d\u89c1\u3002 -\u5b89\u6cb3\u6865\u00b7\u5b8b\u51ac\u91ce 2019.10.25 \u83e9\u63d0\u672c\u65e0\u6811\uff0c\u660e\u955c\u4ea6\u975e\u53f0\u3002\u672c\u6765\u65e0\u4e00\u7269\uff0c\u4f55\u5904\u60f9\u5c18\u57c3\u3002 2019.10.26 \u66fe\u7ecf\u6ca7\u6d77\u96be\u4e3a\u6c34\uff0c\u9664\u5374\u5deb\u5c71\u4e0d\u662f\u4e91\u3002\u53d6\u6b21\u4e1b\u4e2d\u61d2\u56de\u987e\uff0c\u534a\u7f18\u4fee\u9053\u534a\u7f18\u541b\u3002 2019.10.27 \u4e0d\u8981\u56e0\u4e3a\u8d70\u592a\u8fdc\u800c\u5fd8\u8bb0\u4e3a\u4ec0\u4e48\u51fa\u53d1\u3002 2019.10.28 \u4eba\u5fc3\u4e0d\u4f1a\u592a\u5dee\uff0c\u4f46\u4e5f\u4e0d\u4f1a\u50cf\u4f60\u60f3\u8c61\u7684\u90a3\u4e48\u7f8e\u597d\u3002\u505a\u4e00\u4e2a\u6027\u60c5\u51c9\u8584\u4e4b\u4eba\u3002 2019.10.29 \u5f00\u5fc3\u4e00\u5929\u4e5f\u662f\u8fc7\uff0c\u5931\u843d\u4e00\u5929\u4e5f\u662f\u8fc7\u3002\u4e3a\u4ec0\u4e48\u4e0d\u5f00\u5fc3\u4e00\u4e9b\u5462\u3002 2019.10.30 \u767d\u7259 2019.10.31 \u7231\u592a\u6ee1 \u9057\u61be\u592a\u957f  ",
        "description": "",
        "id": 107,
        "section": "posts",
        "tags": [
            "\u5f00\u59cb",
            "\u6bcf\u65e5\u4e00\u53e5",
            "\u6539\u53d8"
        ],
        "title": "2019-10",
        "uri": "/posts/journals/102/"
    },
    {
        "content": " \u96c5\u601d\u590d\u4e60\u8fc7\u7a0b\u4e2d\uff08\u5927/\u5c0f\uff09\u4f5c\u6587\u7ec3\u4e60\n Rural-to-urban Shift  2019.10.3 Many people are moving from rural areas to big cities. Why has this happened? To what extent do you think it is a good trend?  These days many people choice to migrate to big cities from rural areas. They may believe that they can find a more satisfied employment and enjoy a better quality of life in urban areas. However, this trend can lead to a lot of problems.\nThere are two main reasons why people tend to move to cities. First, cities own dense population and there are more working chances available in cities, so people can make more money. This also means that they can imporve their life standards and afford more consumer goods ever before. In comparsion, in rural areas, there are less employment opportunities since many industries are lack of development and many dwellers' buy power is limited. Another reason is that urban residents are more accessible to public services, such as education and healthcare, and enjoy better standards of living. Young couples intend to bring their children to cities to accept better educations, so as to get rid of poverty.\nHowever, the increasing number of population in cities many put great pressure on cities' infrastructures and lead to serious housing problem. The lands in some cities are limited, so difficult to absorb in too many people. For example, many migrants live in slums and have to endure poor living conditions because they cannot afford a house in cities. Moreover, people are prone to sickeness because of the undevelopment of urban infrastructures. People cannot use enough clean water and household garbages as well as waste water are fail to be disposed.\nAnother main question associated with rural-to-urban shift is the increasing gap between urban and rural incomes. Ambitious, energetic, industrial and creative people tend to move to cities in serarch of educational and employment opportunities, causing the lack of working force in rural areas and it becoming more difficult to develop rural economics. Moreover, some young people will commit crimes because of increasing gap between rich and poor in cities.\nIn conclusion, poor employment prospects and undeveloped economics in rural areas lead to people moving to cities. I claim that this is a worrying trend.\nLow-cost Air Travel  2019.10.7  Cheap air travel enable us to travel acorss border with low expenditure. In my view, cheap air service can benefit ordinary people, although unnecessary travels are not suggested.\nPeople are able to go to different countries by air flights, increasing (enriching) their knowledge of these countries and acquiring more employment opportunities. For example, some people who has gone to other countries may find better jobs and earn more money (earn higher salaries). Some small business owners, for another instance, may find (discover) some business opportunities during traveling (their trips), and they can get more money (earn profits) by importing or exporting products. However, the high-cost air flight would make them lose (miss) these opportunies.\nOn the other hand, many individuals argue that raising the price of air travel can reduce the environmental effects (impact) of air flight. High-cost price of air ticket will make people give up their travel plans. As results, the greenhouse gases generated (produced) by planes can seriouly reduce (decrease). Moreover, other air related issues, such as noise pollution and environmental demages for building airports or related infrastructures, can be greatly improved (mitigated).\nIn my personal point, I don&rsquo;t think it is necessary to raise the price of air tickets, since ordinary people can have opportunies to travel to some beautiful spots for relaxation. Many people, especially those who live in big cities, are busy in their works and widely under great pleasure. With low-cost air travel, they can go to somewhere distant on holidays. For example, many Chinese travellers are likely to go to some tropical countries and take a taste on local foods, instead of staying at home.\nIn conclusion, my argument is that restriction on air flights is not rational, since air travel with low-cost price is benefical to most ordinary people. What&rsquo;s more, air companies may take some measures to reduce the environmental pressure by technology innovation.\nLaw and Sociaty  2019.10.9  Law refer to the rules implied on people in society. Although legislation is of great importance to (play a important role in) rule people&rsquo;s behaviors, I think it limits the freedom of individuals.\nIf social individuals do not obey laws, the society would lost its principles and economics would be difficult to develop. For example, people disobey traffic rules, resulting in soaring traffic events and further traffic jam. Moreover, if the people who sell fake medications are not been hardly punished, customs would not dare to buy anything and the economic development would be hindered accordingly.\nThere would be a serious lack of respect and trust between people if they do not follow ethical principles and social behaviors. Since people sometimes would do somethings which harm others driving by their benefits. For instance, if people always betray their friends, they would not have any cooperations, resulting the lack of social cohesion. What&rsquo;s more, assuming that more and more people tend to be dishonest, they would feel difficult to do bussiness together and frequent controveries between them also would pose a threat to productivity and creativity.\nSometimes, however (on the other hand), laws or rules will limit people&rsquo;s freedom inevitably, even hindering the social development. For example, if the country make varieties of rules on commerce, the commercial behaviors would be difficult to be active. Moreover, assuming that people with high incomes have to (are subject to) commit high taxes high tax rates, they may have no ambitions (motivation) to make effort to eran more money (increase their income). In this issue, governments should give off up (relax) some limitations properly and encouage creativity to benefit social development.\nIn my view, the standpoint that without laws or rules the socity would be diffcult to function (operate) well is rational. Although laws do not allow people to do whatever they want, the main target (purpose) of legislation is to create a harmonious sociaty which we both accept.\nDistance Education  2019.10.16 Nowadays, distance-learning programs are commonplace, but some people argue that they are not as good as those attending in a college or university in person. To what extent do you agree or disagree?  The coming (advent) of Internet has changed the ways people live their lives or work. A growing number of people are now looking forward to (considering) distance education, which allows them to complete a degree at home. Although distance-learning is different from traditional education of college or university, distance-learning has some advantages in some situations (aspects).\nCompared with traditional education, distance-learning is more flexible and easily access people to accept a education by this way. The students can read related meterials and have a lesson by watching vedios. When they have any questions, they could suspend that vedio or replay other vedios until they fully understand the puzzling issues. This distanced courses are opened for students every time of every day. Therefore, it is a very desired way for the completely busy individuals to abtain knowledge.\nThe development of distance education also creates great opportunities for students to ask questions to distanced teachers. Students can ack questions by communicating tools in virtual courses and emailing to their teachers. As a result, they can easily obtain the guidances of the teachers and finish their courses in a better way. Even distance education allows them to communicate with scholars of famous colleges, who actually live in different countries.\nHowever, a significant downside of distance education is that the students' communicating skill is difficult to enhance, since this education generally has no group works. The students fininsh their homeworks by themselves and are unable to meet other students. As a result, they have no chance to expend their relationships and their vocational prospect would be potentially impacted.\nIn my view, distance education provides more and more individuals with great accessibility to the college education because of its flexibility. However, downsides, such as lack of communications, also exist. Therefore, it can&rsquo;t achieve equal effects like traditional college education.\nGovernment Tax  2019.10.24 Some people believe that they should be able to keep all the money they earn and should no pay any tax to the state. To what extent do you agree or disagree?  Many people may complain that tax is a heavy burden to them because tax decreases their incomes. I claim that paying tax to the state is greatly necessary. If we pay no tax, the society we depend will be difficult to run.\nWith taxes, governments can fund variety of public service projects, such as road facilities, educational services and public healthcare. Firstly if we don&rsquo;t have a good public transportation system, people commuting will be diffcult and traffic jams seriously influence people&rsquo;s working efficience. Secondly public schools provide children with opportunities to access to education and acquire knowledge, which benefits the development of economy. However, the above pulice service projects generally are not funded by private companies because these projects always have low profits. Moreover, we could also realise that the government can redivide the social fortunes by tax. For instance, in many countries, high-income individuals always pay higher taxes than low-income, people who even be supplied by governments.\nGovernments can also behave people&rsquo;s behaviors by taxes. For example, some people may feel difficult to give up bad habits such as drinking and smoking. However, governments levying heavy taxes on cigarettes and alcohols enable people to decrease the consumption of these items. Therefore, people have to gradually give up these habits. People tend to be less ill and the public healthcare seems to under less pressures.\nHowever, heavy tax can limits the development of the economy. If the government always leavy heavy tax on people, they will be under great burdens for making livings and have no time and passion to achieve their dreams. As a result, the society might face the danger of declination.\nI am convinced that the tax always has great priority of the development of our society and economy, although heavy tax poses negative impacts to some extent.\nVolunteer Works  2019.11.5  Volunteer work has been extensively promoted by many schools, and even in some schools, it become a definate requirement for graduation. On my personal sense, although volunteer work has some negative impact, it can exert postive influence on volunteers as well as the whole society.\nOn one side, by taking part in volunteer work, young students can develop some postive qualities. To be more specific, young individuals may be confronted with varieties of problems and challenges, which are rare at school, when they are involved in these voluntary services. For example, when rasing funds for charities, they need to learn how to communicate with benefactors, organise an acitivity and cooperate with all kinds of folks. As a result, these activites can directly boost their confidence and improve their abilities of solving problems.\nOn another, young people can also/meanwhile improve their sense of responsibility and find enjoyment in serving the community. In other words, only if they realize that their volunteer works can greatly be fovorable for other members in society, they would recognize the sense of community. For example, helping disadvantaged students to receive a good education is a kind of social responsibilities, in which voluntary students would be fulfilled with achievement since their volunteer works can make a fair and happy society. Consequently, it help create a close-knit community.\nHowever, we shouldn&rsquo;t ignore the fact that voluntary services may waste lots of volunteers' times and energies, if not well-organized. This kind of volunteer work is tedious and strenuous, instead of funny and significannt. Consequently, they would be not willing to devote their times and energies to voluntary services because they can&rsquo;t realize the value of what they do. Moreover, students might argue that volunteer work is hard and time consuming, and interferes their studies.\nOverall, in my eyes, it is important for students to take part in volunteer work for their improvement of abilities and their employment prospects. However, schools should ensure that volunteer work suit students' needs.\nPrison Term  2019.11.6  Imposing sentences is considered as a way to punish those who commit serious crimes and sometimes as a correctional method. Although this method may be effective to some extent, other approaches are suggested to reform offenders.\nSupporters with stiff sentences maintain that serious punishment exert deterrent impact (\u9707\u6151\u529b) on potiential criminals or habitual offenders. Imposing sentences means those who violate laws will lose freedom, a result that no rational person is willing to take. The criminal record can also negatively influence their lives including their career. Consequently, they will not commit crimes because they fear of the long prison term.\nAlthough prison term sometimes help us fight crime, we can consider community service (service\u4e0d\u53ef\u6570) as an alternative. By taking part in community service, many offenders, especially who commit minor crimes, have chance to become law-abiding citizens (\u5b88\u6cd5\u7684\u5e02\u6c11). In contrast, if they are sentenced to prison, they might reoffend (\u91cd\u8e48\u8986\u8f99) after being released, which can pose a threat to other members of society.\nMeanwhile we can provide educational opportunities and vocational training for them, improving their interpersonal skills and job skills. It is worth noting that many young offenders or first-time criminals break the law because of their lack of social experience (experience\u4e0d\u53ef\u6570) or their low socio-economic status. However, if they able to find a job or understand legal responsibilities, crime is no longer an option. In contrast, prison term isolates offenders from society, and preventing them from acquiring employability.\nOverall, my view is that a longer prison term can deter crime, but it is not the best approach. Through other correctional programs like community service, we can build a happy and stable society.\nLiving Away From Parents  2019.11.8  Many university students today have either chosen university accommondation or shared a flat with their friends. I think it is a rite of passage although young individual is difficult to maintain frequent contact with their parents.\nLiving away from parents means that young individuals are supported to learn how to live an independent life. They have to develop some basic living skills, such as doing houseworks, making financial budgets and getting along with flatmates. With these skills, they can also deal well with problems once they enter the workforce. For instance, those who used to clean their bedrooms are more likely to keep everything organised.\nIn addition, college students can enjoy their freedom in social lives and make new friends. Since they needn&rsquo;t to go back home every day, they have time to take part in more activities with their friends, including going to gym, attending lectures, going to the library and even doing a part-time job. Consequently, not only can they improve their social skills, but they have many personal resources to draw upon in the future.\nHowever, the choice that students living away from home might cause some adverse impact. Because they do not live with parents, young individuals have less and less contacts with parents, resulting vulnerable relationship between them and their parents. Sepecifically, children rarely have meals with their parents and cannot keep up to date with the news about the family. As a result, young individuals may feel helpless when they cannot work out some problems, which affects their attitude towards family.\nOverall, I am convinced that college students living away from home is a good decision, although it may have a damaging effect on their family relationships.\nFast Food  2019.11.9  People today are more likely to eat at fast food restaurants because of fast life pace and irregular working hours. In my view, fast food has posed negative threat to traditional food in many countries, which should be greatly concerned.\nFast food has been a kind of severe healthy issues in many countries like America, where the number of overweight individuals has been increasing uncontrolledly. Because fast food, which is served in large protions, is high in sugar, fat, salt and calories. In general, those who suffer from obesity are more likely to contract heart diseases than normal-weight people. This means that governments are suggested to pay much funds in health care, which may influence the development of enconomy.\nAnother problem is that fast food can change people&rsquo;s lifestyle including dietary habits. Traditional foods pay more attentions to materials, cooking styles and varieties of taste, suggesting the evolution of cuisine in different countries. However, the majority of fast food restaurants provide American or Eureapon foods, such as humberger, fried chicken an pizza. Consequently, people&rsquo;s diet is increasingly monotonous, which some traditional recipes may vanish.\nFast food also exert adverse impact on family relationship since family members do not have frequent meals together like before. Family meals provide family members with opportunity to communicate with each other and imporve mutual understanding. If people always eat outside, they cannot keep up to date with family issues and response to emotion needs of other family members. Consequently, people may feel helpless when they involved in troubles but obtain no help from family members.\nTherefore, I am convinced that the popularity of fast food is a kind of serious problems, which should be noticed by contemporary individuals. Fast food is damaging not only to people&rsquo;s health, but also to cooking cultures and social relationships.\nUniversity Education And Success  2019.11.11  People always have diverse views about the contributions of theoretical knowledge to their employments. It is reasonable that there are many individuals who succeed in their careers actually do not complete their university education. Howecer, I am convinced that the knowledge we obtained at university is vitally important to a fulfilling career.\nVia theoretical knowledge, people can acquire the concepts and principles of subjects, which allow them to built expertise in their majors. For example, if a psychologist do not master the theories about psychological diseases, he or she can not make effective therapies. It means that the majority of theories are developed based on practical experiments and experiences, therefore they are significant and count much for humans. Besides, those who are familiar with these theories can improve their job prospects and even get a fortun because of the innovations they have advanced.\nLearning knowledge from theories allows people to enhance their problem-solving abilities. For instance, college students can gather information on different subject matters and consequently improve their research skills. Morevoer, theories can extend students' horizons and improve their thinking skills, which encourages them to push forward the boundaries of knowledge. In contrast, those who did not go to university may deal with some ordinary problems by receiving some pratical training, but they would have no ideas when in the face of irregular issues.\nHowever, we should recognise the fact that theoretical knowledge is not the only key of success. It is interesting to note that many successful folks seem to have some similiar characters. For example, a person who is positive, industrial, active and good at communication generally do better in overcoming all kinds of troubles and cooperating with others to achieve their success. Another important factor may be the social network, by which people can acquire a great variety of information, thoughts and resources. It means that some businesspeople tell them how to maintain a good relationship with governments, but books can not.\nOverall, university education seems to be undervalued and people can work out many problems in more efficient and creative approach. what we should be considered is that people&rsquo;s characters and social relationships are also important factors to achieve success.\nEducation Tuition Fees  2019.11.16  Receiving an university education is important to many people, because they can find empolyment easily in the fature. People who support government spending on university education may contend that some students cannot go to a college because they are not able to afford tuition fees. In my view, students are supposed to pay tuition fees themselves, while those from disadvantaged backgrounds can receive financial assistance from the government.\nIf higher education is not free of charge, students will feel precious about this educational opportunity and study much hard. In general, students aware that going to a college is costly, and therefore they will try their best to study tesks and pass all exams in order to gain the qualification on time. In contrast, students whose tuition fees paid by the government would take it for granted and may frequently fail exams.\nMoreover, another benefit of self-funding is that it can ease the burden on the government. The government can put more investment into secondary and primary education, which can reduce the number of illiterate folks, and allow elders to go to a college. Also the government can provide postgraduate students with more funds and promote the technological innovation.\nHowever, the government can bear the cost of education for the disadvantaged students. Young students are encouraged to go to a college to acquire knowledge and improve sociable skills, which can boost their career prospects. Moreover, this can close the gap between haves and have-nots and help build a fair society. In contrast, if these students give up their university education just because of higher tuition fees, they would be difficult to discovery their potential abilities.\nOverall, the government should provide students with financial support according to their needs and backgrounds to ensure that they have fair access to university education.\nChildren&rsquo;s Advertisements  2019.11.17  Nowadays most of children are exposed to a variety of commercial advertisements, which encourage them to buy snacks, toys and computer games. My view is that advertisements aimed at kids should be seriously limited or even banned.\nIf children&rsquo;s advertisements are not widely allowed, kids would not ask their parents to buy some kinds of things with less value. Many children actually are not sensitive to prices while parents are more likely to meet their needs. For example, many children prefer to expensive toys and girls like to buy fashionable clothes. These behaviours can bring a heavier burden on disadvantaged families. However, this issue could be avoided if kids have less access to advertisements.\nAlso advertisements are responsible for many behaviours problems and lifestyle issues among children. Kids prefer to fast food since they are always attracted by snack advertisements. Moreover, many kids become easy to get angry because they play violent computer games which promoted by advertising firms. These issues can pose a negative impact on children&rsquo;s health.\nThere are, without any doubts, some advertisements which can benefit kids. For instance, some advertisements encourage nourishing foods, such as milk and vegetable foods. Other advertisements promote books, computer games and toys of educational value. As a result, parents can purchase some valuable products even though they are not familiar with those products.\nOverall, I contend that advertisements aimed at children, especially those which are harmful to kids, should be not allowed. However, the government can encourage some educational advertisements.\nImport Products  2019.11.19  Our world is becoming more and more globalised and the exchange of commodities across the borader is processing at an astounding rate. In my view, this trend can help imporve living standards of customers.\nCustomers can be benefited from import products in many aspects. The first one is that the price of these products is competitive. These countries who export products generally reduce the cost of goods by improving technologies to ensure a cheaper price. For example, Chinese textile products, in many other countries, usually have a cheaper price than the local ones because China specialises in textile. Moreover, import products can challenge the dominant status of domestic firms and cause competition, which enforce manufactures to cut price. This can be great beneficial to domestic customers because of decling living costs. It is worth noting that customers have more choices when they go shopping. Import foods, for instance, can mitigate the shortage of foods when they suffer from abnormal climates in some regions.\nHowever, the downside of import goods is serious and can not be neglected. The country who heavily relies on import goods may suffer from underdevelopment of some industries in home. If customers prefer to buy import comupters, the local manufactures may be bankrupted. This pose a severe threat on domestic self-funded enconomy. Moreover, the air transportation of import goods can cause considerable contamination to the environment.\nTherefore, it is reasonable to think that importing products from other countries has a postive influence on customers. Some local firms may be in danger of bankruptcy, but domestic customers can buy products with much cheaper prices.\nThe Spread of English  2019.11.26  English has developed into a global language, which has been used as a vehicle for cross-cultural communication all over the world. For my part, the spread of English can be viewed in a positive light, althought it might have it negative effect.\nThe wide use of English broosts the global cooperation, as it can help people overcome the obstcles under the international environment. Folks from different countries can conduct business and discuss how to operate a company and import products, regardless of their native languages. Moreover, English has been identified as the main language by many international conferences and research groups. This means that scholars are able to share knowledge and ideas or even cooperate to complete projects in different areas.\nIn addition, the spread of English can help people expand knowledge and broaden horizons. About 80% of world&rsquo;s websits are post in English, so folks who master English can read newspapers, magazines and books on the Internet and keep up to date with our world. They can travel in different parts of the world and deepen their understanding of customs of these places.\nAlthough the English language has vast contribution to globalisation, sometimes it&rsquo;s considered as the main reason of the reduction of cultural diversity. This idea lies in the fact that increasing young people make an effort to study English instead of their native languages. As the dominant language of international medium, English language has been bringing the lifestyle, sense of value and belief of English countries to the every corner of the world, which might have a negative impact on cultural diversity. For example, many native therapies, recipes, religious practices and ceremonies have been vanishing because of the spread of English language, so our knowledge about the world will be limited if these cultures graduately disappear.\nOverall, English plays an important role in communication and cooperation among people from different countries, although some people suspect that English will endanger some native languages.\nAustralian People&rsquo;s Physical Activity  2019.12.4  The chart compares Australian men and women in terms of the percentage of doing exercise in 2010.\nOver 52.8% of 15-24-year-old men were involved into regular physical activity in this country, compared with 47.7% of women in the same age group, but they saw a different trend with age. The percentage of women increased steadily and peaked (53.3%) for those aged 45-54, while the figure for men dropped significantly and fell to the lowest point at 39.5% for those aged 35-44.\nAfter the men reached the age of 45, the percentage of those who did regular physical activity increased gradually from 39.5% to 46.7%, but the proportion of women decreased to 47.1%.\nOverall, women in different age group were more active than men, with exception of the 15-24 age group. As people got older, the gap between men and women gradually narrowed.\nPopulations Of Yemen And Italy  2019.12.4  The charts compare Yemen and Italy in terms of the ages of the populations in 2002 and 2050.\nIn Yemen, the figure of the people aged 15-59 is expected to increase from 46.3% to 57.3%. This age group will also make up with the largest proportion of Italy&rsquo;s population (46.2%) in 2050, despite a significantly drop from 61.6% in 2002. These figures for these aged 0-14 seem to decrease in both countries. The proportion of this age group in Yemen is predicted to drop from 50.1% to 37.0%, while in Italy the percentage drop slightly from 14.3% to 11.5%.\nThere are likely to see increases in the proportion of over-60-year-old people. In Yemen, the figure of this age group is predicted to increase to 5.7%, although they make up with the smallest proportion of population. The figure in this age group in Italy seem to rise nearly twofold, with around 42.3% in 2050.\nOverall, the population of both countries is predicted to become older. Italy had older population than Yemen in 2002, and the same is predicted in 2050.\n",
        "description": "",
        "id": 108,
        "section": "posts",
        "tags": [
            "\u5199\u4f5c",
            "\u96c5\u601d"
        ],
        "title": "\u96c5\u601d\u82f1\u8bed\u5199\u4f5c\u7ec3\u4e60",
        "uri": "/posts/notes/133/"
    },
    {
        "content": " \u6c11\u56fd\u65f6\u671f\u5a5a\u4e66\u4e0a\u7684\u9898\u5b57\u3002\u5341\u5206\u559c\u6b22\u3002\n \u5176\u4e00  \u4e24\u59d3\u8054\u59fb\uff0c\u4e00\u5802\u7f14\u7ea6\uff0c\u826f\u7f18\u6c38\u7ed3\uff0c\u5339\u914d\u540c\u79f0\uff0c\u770b\u6b64\u65e5\u6843\u82b1\u707c\u707c\uff0c\u5b9c\u5ba4\u5b9c\u5bb6\uff0c\u535c\u4ed6\u5e74\u74dc\u74de\u7ef5\u7ef5\uff0c\u5c14\u660c\u5c14\u70bd\uff0c\u8c28\u4ee5\u767d\u5934\u4e4b\u7ea6\uff0c\u4e66\u5411\u7ea2\u7b3a\uff0c\u597d\u5c06\u7ea2\u53f6\u4e4b\u76df\uff0c\u8f7d\u660e\u9e33\u8c31\u3002\u6b64\u8bc1\u3002\n \u4e0d\u540c\u59d3\u6c0f\u7684\u4e24\u5bb6\u8054\u59fb\uff0c\u5728\u4e00\u8d77\u7f14\u7ed3\u5a5a\u7ea6\uff0c\u7ed3\u6210\u826f\u7f18\uff0c\u662f\u5f97\u79f0\u7684\u5339\u914d\u3002\u6843\u82b1\u76db\u5f00\u4e4b\u9645\uff0c\u6b63\u5b9c\u5a5a\u5ac1(\u5f15\u81ea\u8bd7\u7ecf)\uff0c\u9884\u6599\u5c06\u6765\u4e00\u5b9a\u5b50\u5b59\u50cf\u74dc\u8513\u7ef5\u5ef6\uff0c\u5b50\u5b50\u5b59\u5b59\u4e16\u4ee3\u660c\u76db(\u5f15\u81ea\u8bd7\u7ecf)\u3002\u5c06\u767d\u5934\u5230\u8001\u7684\u7ea6\u5b9a\u4e66\u5199\u5728\u7eb8\u4e0a\uff0c\u50cf\u7ea2\u53f6\u9898\u8bd7\u4e00\u6837\u7684\u5929\u8d50\u826f\u7f18\uff0c\u8bb0\u8f7d\u4e8e\u9e33\u9e2f\u8c31\u4e0a\u3002\u4ee5\u6b64\u8bc1\u660e\u3002\n\u5176\u4e8c  \u559c\u4eca\u65e5\u5609\u793c\u521d\u6210\uff0c\u826f\u7f18\u9042\u7f14\u3002\u8bd7\u548f\u5173\u96ce\uff0c\u96c5\u6b4c\u9e9f\u8dbe\u3002\u745e\u53f6\u4e94\u4e16\u5176\u660c\uff0c\u7965\u5f00\u4e8c\u5357\u4e4b\u5316\u3002\u540c\u5fc3\u540c\u5fb7\uff0c\u5b9c\u5ba4\u5b9c\u5bb6\u3002\u76f8\u656c\u5982\u5bbe\uff0c\u6c38\u8c10\u9c7c\u6c34\u4e4b\u6b22\u3002\u4e92\u52a9\u7cbe\u8bda\uff0c\u5171\u76df\u9e33\u9e2f\u4e4b\u8a93\u3002\u6b64\u8bc1\u3002\n \u5728\u8fd9\u559c\u5e86\u7684\u65e5\u5b50\u91cc\uff0c\u795d\u8d3a\u4e24\u4f4d\u65b0\u4eba\u559c\u7ed3\u826f\u7f18\u3002\u7528\u8bd7\u6b4c\u6765\u8d5e\u7f8e\u300a\u5173\u96ce\u300b\u3001\u300a\u9e9f\u4e4b\u8dbe\u300b\u4e2d\u6240\u63cf\u5199\u7684\u7231\u60c5\u3002\u8fd9\u5a5a\u59fb\u7684\u7ed3\u5408\uff0c\u7965\u745e\u7ef5\u6cfd\u4e94\u4ee3\u5b50\u5b59\uff0c\u4f7f\u5176\u5bb6\u65cf\u660c\u76db\uff0c\u5e76\u5f00\u521b\u5723\u8d24\u4f3c\u7684\u6559\u5316\u3002\u5e0c\u671b\u4ed6\u4eec\u65e5\u540e\u80fd\u591f\u540c\u5fc3\u540c\u5fb7\uff0c\u592b\u59bb\u4e00\u4f53\uff0c\u76f8\u656c\u5982\u5bbe\uff0c\u6c38\u8fdc\u751c\u871c\uff0c\u643a\u624b\u5171\u8fdb\uff0c\u5171\u8d74\u9e33\u9e2f\u4e00\u822c\u7684\u5a5a\u8a93\u3002\u4ee5\u6b64\u8bc1\u660e\u3002\n\u5176\u4e09  \u4ece\u5179\u7f14\u7ed3\u826f\u7f18\uff0c\u8ba2\u6210\u4f73\u5076\uff0c\u8d64\u7ef3\u65e9\u7cfb\uff0c\u767d\u9996\u6c38\u5055\uff0c\u82b1\u597d\u6708\u5706\uff0c\u6b23\u71d5\u5c14\u4e4b\uff0c\u5c06\u6cf3\u6d77\u67af\u77f3\u70c2\uff0c\u6307\u9e33\u4fa3\u800c\u5148\u76df\uff0c\u8c28\u8ba2\u6b64\u7ea6\u3002\n \u4ece\u73b0\u5728\u7f14\u7ed3\u7f8e\u597d\u7684\u59fb\u7f18\uff0c\u8ba2\u5a5a\u6210\u4e3a\u4f18\u79c0\u7684\u4f34\u4fa3\uff0c\uff08\u5343\u91cc\u59fb\u7f18\uff09\u4e00\u6761\u7ea2\u7ebf\u65e9\u5df2\u7275\u7cfb\uff0c\u6c38\u8fdc\u7ed3\u4f34\u540c\u884c\u76f4\u5230\u6ee1\u5934\u767d\u53d1\u3002\u6b63\u662f\u82b1\u513f\u6012\u653e\u6708\u513f\u5706\u6ee1\u7684\u65f6\u5019\uff0c\u6446\u5bb4\u996e\u9152\u5927\u5bb6\u5feb\u4e50\u6781\u4e86\uff0c\u613f\u5c06\u6b64\u7f8e\u597d\u4e00\u76f4\u5230\u5927\u6d77\u67af\u5e72\u77f3\u5934\u8150\u70c2\uff0c\u9762\u5bf9\u7740\u4e00\u5bf9\u9e33\u9e2f\u6765\u76df\u8a93\uff0c\u90d1\u91cd\u5730\u7b7e\u4e0b\u5408\u7ea6\u3002\n\u5176\u56db  \u793c\u540c\u638c\u5224\uff0c\u5408\u4e8c\u59d3\u4ee5\u5609\u59fb\uff0c\u8bd7\u548f\u5b9c\u5bb6\uff0c\u6566\u767e\u5e74\u4e4b\u9759\u597d\uff0c\u6b64\u8bc1\uff01\n \u5176\u4e94  \u559c\u4eca\u65e5\u8d64\u7ef3\u7cfb\u5b9a\uff0c\u73e0\u8054\u74a7\u5408\u3002\u535c\u4ed6\u5e74\u767d\u5934\u6c38\u5055\uff0c\u6842\u99a5\u5170\u99a8\u3002\n \u79bb\u5a5a  \u51e1\u4e3a\u592b\u5987\u4e4b\u56e0\uff0c\u524d\u4e16\u4e09\u751f\u7ed3\u7f18\uff0c\u59cb\u914d\u4eca\u751f\u4e4b\u592b\u5987\u3002\u82e5\u7ed3\u7f18\u4e0d\u5408\uff0c\u6bd4\u662f\u51a4\u5bb6\uff0c\u6545\u6765\u76f8\u5bf9\u3002\u65e2\u4ee5\u4e8c\u5fc3\u4e0d\u540c\uff0c\u96be\u5f52\u4e00\u610f\uff0c\u5feb\u4f1a\u53ca\u8bf8\u4eb2\uff0c\u5404\u8fd8\u672c\u9053\u3002\u613f\u5a18\u5b50\u76f8\u79bb\u4e4b\u540e\uff0c\u91cd\u68b3\u5a75\u9b13\uff0c\u7f8e\u626b\u86fe\u7709\uff0c\u5de7\u5448\u7a88\u7a95\u4e4b\u59ff\uff0c\u9009\u8058\u9ad8\u5b98\u4e4b\u4e3b\u3002\u89e3\u6028\u91ca\u7ed3\uff0c\u66f4\u83ab\u76f8\u618e\u3002\u4e00\u522b\u4e24\u5bbd\uff0c\u5404\u751f\u6b22\u559c\u3002\n ",
        "description": "",
        "id": 109,
        "section": "posts",
        "tags": [
            "\u5a5a\u4e66",
            "\u6587\u8a00\u6587"
        ],
        "title": "\u6c11\u56fd\u7ed3\u5a5a\u8bc1\u4e66",
        "uri": "/posts/notes/90/"
    },
    {
        "content": " 2019\u5e747\u6708\u4e2d\uff0c\u751f\u65e5\u65c5\u884c\u3002\u5728\u82cf\u5dde\u3002\n \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"aplayer_a\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"\u79bb\u9a9a\",\rartist: \"\u5947\u7136,\u6c88\u8c27\u4ec1,NL\u4e0d\u5206,\u5f90\u8fdc\u4e66\",\rurl: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%A6%BB%E9%AA%9A%20-%20%E5%A5%87%E7%84%B6%2C%E6%B2%88%E8%B0%A7%E4%BB%81%2CNL%E4%B8%8D%E5%88%86%2C%E5%BE%90%E8%BF%9C%E4%B9%A6-12d234-Ag.mp3\",\rcover: \"https://p1.music.126.net/NQBaw13hHiaTh41QQUYsQg==/109951162922231753.jpg?param=300x300\",\rlrc: \"https://cdn.jsdelivr.net/gh/xunhs-hosts/media@master/%E7%A6%BB%E9%AA%9A-%E5%A5%87%E7%84%B6%2C%E6%B2%88%E8%B0%A7%E4%BB%81%2CNL%E4%B8%8D%E5%88%86%2C%E5%BE%90%E8%BF%9C%E4%B9%A6-64e19f-Ag.lrc\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r \r\rfunction loadAPlayer() {\rconst ap = new APlayer({\rcontainer: document.getElementById(\"\"),\rloop: false ,\rmutex: true,\rtheme: '#e9e9e9',\rlrcType: 3,\raudio: [{\rname: \"name\",\rartist: \"artist\",\rurl: \"\",\rcover: \"\",\rlrc: \"\",\r}]\r});\r}\rdocument.addEventListener('DOMContentLoaded', loadAPlayer, !1);\r ",
        "description": "",
        "id": 110,
        "section": "posts",
        "tags": [
            "\u65c5\u6e38",
            "\u82cf\u5dde",
            "\u76f8\u518c"
        ],
        "title": "2019.7-\u82cf\u5dde\u6e38\u8bb0",
        "uri": "/posts/journals/103/"
    },
    {
        "content": " \u95f4\u9694\u597d\u4e45\u6ca1\u6709\u5199\u65e5\u5fd7\u3002\n qwer\n  --- DON'T MODIFY THIS LINE --- \u539f\u56e0\u662f\u6bcf\u5929\u7684\u201c\u65e5\u8bb0\u201d\u5199\u7684\u5f88\u65e0\u5473\u3002\u867d\u7136\u6700\u521d\u7684\u60f3\u6cd5\u53ea\u662f\u4e3a\u4e86\u517b\u6210\u4e00\u79cd\u8bb0\u5f55\u65e5\u8bb0\u7684\u4e60\u60ef\uff0c\u4f46\u662f\u8d8a\u53d1\u7684\u611f\u89c9\u8fd9\u79cd\u8bb0\u5f55\u662f\u591a\u4f59\u7684\u3001\u65e0\u8da3\u7684\u3002\u800c\u4e14\u65e5\u5e38\u5077\u61d2\u8fd8\u662f\u6709\u7684\u3002\u65e9\u4e0a\u8bb0\u5f55\u8ba1\u5212\u3002\u7b2c\u4e8c\u5929\u65e9\u4e0a\u603b\u7ed3\u524d\u4e00\u65e5\u7684\u5de5\u4f5c\u540e\u518d\u505a\u8ba1\u5212\u3002\u5f88\u591a\u8ba1\u5212\u90fd\u4e0d\u80fd\u5b8c\u6210\u3002\u4e5f\u5c31\u5931\u53bb\u4e86\u6240\u8c13\u505a\u8ba1\u5212\u7684\u610f\u4e49\u5427\u3002\u8fd8\u6709\u5c31\u662f\uff0c\u5468\u672b\u65f6\u957f\u5077\u61d2\uff0c\u4e0d\u53bb\u505a\u65e5\u8bb0\u3002\u4eff\u4f5b\u5468\u672b\u7684\u65f6\u5149\u4ece\u535a\u5ba2\u91cc\u5254\u9664\u4e86\u4e00\u822c\uff0c\u8bb0\u5f55\u5728\u865a\u62df\u4e16\u754c\u7684\u65f6\u95f4\u6bd4\u73b0\u5b9e\u751f\u6d3b\u5c11\u4e86\u8bb8\u591a\u3002\u8fd9\u4e5f\u662f\u5bf9\u8bb0\u5f55\u8fd9\u79cd\u884c\u4e3a\u3001\u5bf9\u65e5\u8bb0\u8fd9\u79cd\u4ea7\u51fa\u7684\u7269\u54c1\u7684\u4e00\u79cd\u4e0d\u516c\u5427\u3002 \u4ee5\u4e0a\u5e76\u975e\u6211\u5bf9\u5077\u61d2\u7684\u501f\u53e3\u3002 \u65f6\u81f3\u516d\u6708\uff0c\u6691\u671f\u5feb\u8981\u6765\u5230\u4e86\u3002\u4ea6\u6216\u662f\uff0c\u6691\u671f\u5df2\u7ecf\u5230\u6765\u3002 \u7ed9\u81ea\u5df1\u5236\u5b9a\u4e00\u4e2a\u5468\u8ba1\u5212\u600e\u6837\u3002 \u60f3\u7684\u662f\u3002 \u6bcf\u5468\u53ef\u4ee5\u505a\u4e00\u4e9b\u9605\u8bfb\u3002 \u6bcf\u5468\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e9b\u7f16\u7a0b\u7684\u5de5\u4f5c\u3002 \u65e2\u4e0d\u4f1a\u5728\u9605\u8bfb\u4e0a\u751f\u758f\u3002 \u4e5f\u4e0d\u4f1a\u5728\u4ee3\u7801\u4e0a\u65f6\u5e38\u5fd8\u8bb0\u3002 \u53ef\u662f\uff0c\u8981\u8bbe\u5b9a\u591a\u5c11\u624d\u662f\u5408\u9002\u5462\u3002 \u5148\u6765\u4e2a\u521d\u59cb\u503c\u5427\uff0c\u600e\u6837\u3002 \u9605\u8bfb\u8bba\u6587\u4e09\u7bc7\u3002 \u4ee3\u7801\u9879\u76ee\u600e\u6837\u91cf\u5316\u5462\u3002 \u5148\u53bb\u4e86\u89e3\uff0c\u53bb\u505a\u5c31\u662f\u4e86\u3002 \u601d\u8def\u5199\u5230\u4e00\u534a\uff0c\u7136\u540e\u53bb\u6253\u4e86\u6e38\u620f\uff0c\u5199\u7684\u90fd\u5fd8\u8bb0\u4e86\u3002 \u518d\u8c08\u8c08\u9057\u5fd8\u7684\u611f\u60c5\u5427\u3002 \u6210\u719f\u7684\u8def\u4e0a\u5bf9\u4e8e\u6765\u8bb2\u8fd8\u771f\u662f\u5f88\u6f2b\u957f\u5462\u3002 \u6211\u60f3\u91cd\u65b0\u6811\u7acb\u4ef7\u503c\u89c2\u4e86\u5427\u3002 \u5e0c\u671b\u81ea\u5df1\u53ef\u4ee5\u53d8\u5f97\u5b89\u9759\u4e00\u4e9b\u3002 \u5c11\u4e9b\u73a9\u7b11\u3002 \u5c11\u4e9b\u65e0\u804a\u7684\u8c08\u8bdd\u3002 \u4e0d\u60f3\u5411\u522b\u4eba\u8868\u9732\u81ea\u5df1\u3002 \u5e0c\u671b\u81ea\u5df1\u53ef\u4ee5\u505a\u4e00\u4e2a\u5b89\u9759\u7684\u7537\u751f\u3002 \u4e5f\u4e0d\u662f\u5c01\u95ed\u81ea\u5df1\u3002 \u53ea\u662f\u6709\u4e9b\u7d2f\u4e86\u5411\u522b\u4eba\u4ecb\u7ecd\u81ea\u5df1\u3002 \u53ea\u662f\u770b\u4e0d\u8fc7\u4ed6\u4eba\u7684\u79bb\u53bb\u3002 \u4f60\u8bf4\u8fd9\u6837\u597d\u4e0d\u597d\u5440\u3002 \u4eca\u5929\u4e0a\u5348\uff08\u51c6\u786e\u7684\u8bf4\u662f\u665a\u4e0a\u4e00\u4e2a\u534a\u5c0f\u65f6+\u4e0a\u5348\u7761\u9192\u540e\u534a\u4e2a\u5c0f\u65f6\uff09\u8865\u4e86\u4e00\u4e0b\u300a\u54e5\u65af\u62c9\u300b\u7b2c\u4e00\u90e8\u3002\u770b\u5b8c\u540e\u8fd8\u662f\u89c9\u5f97\u86ee\u597d\u770b\u7684\u3002\u4e70\u4e86\u4e2a\u4e0b\u5348\u54e5\u65af\u62c9\u7684\u7b2c\u4e8c\u90e8\u3002\u8fd8\u662f\u86ee\u597d\u770b\u7684\u3002\u662f\u6211\u559c\u6b22\u7684\u79d1\u5e7b\u7c7b\u578b\u3002\u5f88\u70ab\u9177\u3001\u5f88\u5b8f\u5927\u7684\u573a\u9762\u548c\u7279\u6548\u3002\u6545\u4e8b\u7ebf\u8fd8\u662f\u90a3\u4e48\u5c34\u5c2c\u3002\u3002\u3002\u53cd\u6b63\u6211\u4e5f\u662f\u5954\u7740\u7279\u6548\u53bb\u770b\u7684\u3002\u5176\u5b9e\u81ea\u5df1\u770b\u7535\u5f71\uff0c\u81ea\u5df1\u901b\u8857\u4e5f\u6ca1\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\u3002\u6ca1\u6709\u611f\u53d7\u5230\u5b64\u72ec\u3002\u6ca1\u6709\u611f\u53d7\u5230\u65e0\u8da3\u3002\u4e5f\u6ca1\u6709\u5fc5\u8981\u4f9d\u8d56\u522b\u4eba\u5427\u3002\u4e70\u4e00\u676f\u5723\u4ee3\u3002\u8d70\u5728\u8def\u4e0a\u611f\u53d7\u521d\u590f\u3002\u7528\u624b\u673a\u5728\u5317\u8857\u6355\u6349\u5230\u590f\u65e5\u7684\u9633\u5149\u3002\u8fd8\u662f\u60f3\u53bb\u6d77\u8fb9\u3002\u60f3\u53bb\u8ffd\u9010\u6d77\u98ce\u3002\u60f3\u53bb\u6293\u8d77\u6c99\u6ee9\u3002\u66f4\u6216\u8bb8\u9759\u9759\u5750\u5728\u6c34\u8fb9\u5c31\u597d\u3002   ",
        "description": "",
        "id": 111,
        "section": "posts",
        "tags": null,
        "title": "2019.6.2 \u968f\u7b14",
        "uri": "/posts/journals/131/"
    },
    {
        "content": " \u7eaa\u5ff5\u7b2c\u4e00\u7bc7\u4e00\u4f5c\u5427\u3002\n \u8bba\u6587\u603b\u7ed3  \u7b80\u4ecb\uff1a\u57fa\u4e8ePOI\u6570\u636e\uff0c\u5c06\u57ce\u5e02\u533a\u5757\u7c7b\u6bd4\u4e3a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e2d\u7684\u6587\u6863\uff0c\u8fdb\u4e00\u6b65\u501f\u9274\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7684\u65b9\u6cd5\uff08\u5982LDA\u6a21\u578b\u548cWord2vec\u6a21\u578b\uff09\u63d0\u53d6\u57ce\u5e02\u529f\u80fd\u533a\u57df\uff0c\u5df2\u7ecf\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u7814\u7a76\u3002\u5728\u81ea\u7136\u8bed\u8a00\u6587\u6863\u4e2d\uff0c\u540c\u4e00\u5355\u8bcd\u5728\u4e0d\u540c\u6587\u6863\u4e2d\u5b58\u5728\u591a\u4e49\u6027\u4ee5\u53ca\u6b67\u4e49\u6027\u7b49\u7279\u6027\uff0c\u884d\u751f\u81f3\u57ce\u5e02\u529f\u80fd\u533a\u57df\u6316\u6398\uff0c\u540c\u6837\u5b58\u5728\u6b64\u7c7b\u95ee\u9898\u3002\u672c\u6587\u5f15\u5165\u4e86\u4e00\u79cdtopic word embedding\u7684\u65b9\u6cd5\uff0c\u7ed3\u5408\u6587\u6863\u4e3b\u9898\u6a21\u578b\u548c\u8bcd\u5411\u91cf\u6280\u672f\uff0c\u57fa\u4e8e\u57ce\u5e02\u6d77\u91cfPOI\u6570\u636e\uff0c\u81f4\u529b\u4e8e\u89e3\u51b3\u57ce\u5e02\u529f\u80fd\u7684\u201c\u591a\u4e49\u6027\u201d\u95ee\u9898\uff0c\u4f7f\u5f97\u81ea\u7136\u8bed\u8a00\u5904\u7406\u7684\u6a21\u578b\u66f4\u597d\u7684\u670d\u52a1\u4e8e\u57ce\u5e02\u529f\u80fd\u533a\u57df\u6316\u6398\u3002 \u8bba\u6587\u57fa\u672c\u7ed3\u6784  Introduction (\u5b8c\u6210\uff0c\u5f85\u6574\u7406) Study Area and data (\u672a\u5199) Methodology (\u90e8\u5206\u5b8c\u6210) Implementation and results (\u90e8\u5206\u5b8c\u6210) Discussion (\u672a\u5199) Conclusion (\u672a\u5199)     \u8fd1\u671f\u5199\u4f5c\u8ba1\u5212  \u8bba\u6587\u57fa\u672c\u7ed3\u6784\u6574\u7406  Abstract (\u672a\u5199) Introduction (\u5b8c\u6210\uff0c\u5f85\u6574\u7406) Study Area and data (\u672a\u5199) Methodology (\u90e8\u5206\u5b8c\u6210)  Building of urban functions corpus (\u5b8c\u6210\uff0c\u5f85\u6574\u7406) Word embeddings representation model (\u5b8c\u6210\uff0c\u5f85\u6574\u7406) Similarity measurement and clustering method (\u672a\u5199)   Implementation and results (\u90e8\u5206\u5b8c\u6210)  Implementation of study (\u672a\u5199) Topic modeling analysis (\u5b8c\u6210\uff0c\u5f85\u6574\u7406) POI categories correlation analysis (\u5b8c\u6210\uff0c\u5f85\u6574\u7406) Clustering results (\u672a\u5199)   Discussion (\u672a\u5199)  \u5173\u4e8e\u805a\u7c7b\u65b9\u6cd5\u7684\u8ba8\u8bba (\u672a\u5199) Word2vec\u548cTWE\u5411\u91cf\u5e94\u7528\u5728hdbscan\u7684\u805a\u7c7b\u6548\u679c\u5bf9\u6bd4 (\u672a\u5199) \u5173\u4e8eLDA\u53c2\u6570\u7684\u786e\u5b9a (\u672a\u5199)   Conclusion (\u672a\u5199)   \u5199\u4f5c\u8ba1\u5212\uff08\u4e24\u661f\u671f\u8ba1\u5212\uff09  Clustering results - 3\u5929 Discussion + Conclusion - 3 \u5929 Implementation of study - 1 \u5929 Similarity measurement and clustering method - 1 \u5929 Study Area and data - 1 \u5929 Abstract - 1 \u5929 \u5168\u6587\u3001\u56fe\u8868\u3001\u683c\u5f0f\u7b49\u76f8\u5173\u6574\u7406 - 4 \u5929    ",
        "description": "",
        "id": 112,
        "section": "posts",
        "tags": [
            "\u8bba\u6587",
            "\u5199\u4f5c\u8ba1\u5212"
        ],
        "title": "\u8bba\u6587\u5199\u4f5c\u603b\u7ed3\u53ca\u8fd1\u671f\u5199\u4f5c\u8ba1\u5212",
        "uri": "/posts/notes/128/"
    },
    {
        "content": " \u6574\u7406\u535a\u5ba2\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u4e00\u4e9b\u7b14\u8bb0\u3002\n \u6587\u672c\u6316\u6398\u7684\u5206\u8bcd\u539f\u7406  \u5206\u8bcd\u7684\u57fa\u672c\u539f\u7406\uff1a\u5229\u7528\u8bed\u6599\u5e93\u5efa\u7acb\u7684\u7edf\u8ba1\u6982\u7387\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u65b0\u7684\u53e5\u5b50\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u5404\u79cd\u5206\u8bcd\u65b9\u6cd5\u5bf9\u5e94\u7684\u8054\u5408\u5206\u5e03\u6982\u7387\uff0c\u627e\u5230\u6700\u5927\u6982\u7387\u5bf9\u5e94\u7684\u5206\u8bcd\u65b9\u6cd5\uff0c\u5373\u4e3a\u6700\u4f18\u5206\u8bcd\u3002 N\u5143\u6a21\u578b \u7ef4\u7279\u6bd4\u7b97\u6cd5\u4e0e\u5206\u8bcd\uff1a\u7ef4\u7279\u6bd4\u7b97\u6cd5\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u6c42\u51fa\u6700\u4f18\u5206\u8bcd\u7684\u65f6\u95f4 \u5e38\u7528\u5206\u8bcd\u5de5\u5177\uff1a\u82f1\u6587\u5206\u8bcd\u63a8\u8350\u4f7f\u7528nltk\u3002\u5bf9\u4e8e\u4e2d\u6587\u5206\u8bcd\uff0c\u5219\u63a8\u8350\u7528\u7ed3\u5df4\u5206\u8bcd\uff08jieba\uff09  \u5206\u8bcd\u662f\u6587\u672c\u6316\u6398\u7684\u9884\u5904\u7406\u7684\u91cd\u8981\u7684\u4e00\u6b65\uff0c\u5206\u8bcd\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u505a\u4e00\u4e9b\u5176\u4ed6\u7684\u7279\u5f81\u5de5\u7a0b\uff0c\u6bd4\u5982\u5411\u91cf\u5316\uff08vectorize\uff09\uff0cTF-IDF\u4ee5\u53caHash trick\uff0c\u8fd9\u4e9b\u6211\u4eec\u540e\u9762\u518d\u8bb2\u3002\n\u5411\u91cf\u5316\u4e0eHash Trick  \u8bcd\u888b\u6a21\u578b(Bag of Words), \u8bcd\u96c6\u6a21\u578b(Set of Words) \u8bcd\u888b\u6a21\u578b\u7684\u4e09\u90e8\u66f2\uff1a  \u5206\u8bcd\uff08tokenizing\uff09 TF-IDF\u7edf\u8ba1\u4fee\u8ba2\u8bcd\u7279\u5f81\u503c\uff08counting\uff09 \u6807\u51c6\u5316\uff08normalizing\uff09    \u8fd9\u91cc\u6211\u4eec\u5bf9\u5411\u91cf\u5316\u4e0e\u5b83\u7684\u7279\u4f8bHash Trick\u505a\u4e00\u4e2a\u603b\u7ed3\u3002\u5728\u7279\u5f81\u9884\u5904\u7406\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4ec0\u4e48\u65f6\u5019\u7528\u4e00\u822c\u610f\u4e49\u7684\u5411\u91cf\u5316\uff0c\u4ec0\u4e48\u65f6\u5019\u7528Hash Trick\u5462\uff1f\u6807\u51c6\u4e5f\u5f88\u7b80\u5355\u3002\n\u4e00\u822c\u6765\u8bf4\uff0c\u53ea\u8981\u8bcd\u6c47\u8868\u7684\u7279\u5f81\u4e0d\u81f3\u4e8e\u592a\u5927\uff0c\u5927\u5230\u5185\u5b58\u4e0d\u591f\u7528\uff0c\u80af\u5b9a\u662f\u4f7f\u7528\u4e00\u822c\u610f\u4e49\u7684\u5411\u91cf\u5316\u6bd4\u8f83\u597d\u3002\u56e0\u4e3a\u5411\u91cf\u5316\u7684\u65b9\u6cd5\u89e3\u91ca\u6027\u5f88\u5f3a\uff0c\u6211\u4eec\u77e5\u9053\u6bcf\u4e00\u7ef4\u7279\u5f81\u5bf9\u5e94\u54ea\u4e00\u4e2a\u8bcd\uff0c\u8fdb\u800c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528TF-IDF\u5bf9\u5404\u4e2a\u8bcd\u7279\u5f81\u7684\u6743\u91cd\u4fee\u6539\uff0c\u8fdb\u4e00\u6b65\u5b8c\u5584\u7279\u5f81\u7684\u8868\u793a\u3002\n\u800cHash Trick\u7528\u5927\u89c4\u6a21\u673a\u5668\u5b66\u4e60\u4e0a\uff0c\u6b64\u65f6\u6211\u4eec\u7684\u8bcd\u6c47\u91cf\u6781\u5927\uff0c\u4f7f\u7528\u5411\u91cf\u5316\u65b9\u6cd5\u5185\u5b58\u4e0d\u591f\u7528\uff0c\u800c\u4f7f\u7528Hash Trick\u964d\u7ef4\u901f\u5ea6\u5f88\u5feb\uff0c\u964d\u7ef4\u540e\u7684\u7279\u5f81\u4ecd\u7136\u53ef\u4ee5\u5e2e\u6211\u4eec\u5b8c\u6210\u540e\u7eed\u7684\u5206\u7c7b\u548c\u805a\u7c7b\u5de5\u4f5c\u3002\u5f53\u7136\u7531\u4e8e\u5206\u5e03\u5f0f\u8ba1\u7b97\u6846\u67b6\u7684\u5b58\u5728\uff0c\u5176\u5b9e\u4e00\u822c\u6211\u4eec\u4e0d\u4f1a\u51fa\u73b0\u5185\u5b58\u4e0d\u591f\u7684\u60c5\u51b5\u3002\u56e0\u6b64\uff0c\u5b9e\u9645\u5de5\u4f5c\u4e2d\u6211\u4f7f\u7528\u7684\u90fd\u662f\u7279\u5f81\u5411\u91cf\u5316\u3002\n\u5411\u91cf\u5316\u4e0eHash Trick\u5c31\u4ecb\u7ecd\u5230\u8fd9\u91cc\uff0c\u4e0b\u4e00\u7bc7\u6211\u4eec\u8ba8\u8bbaTF-IDF\u3002\u5206\u8bcd\u662f\u6587\u672c\u6316\u6398\u7684\u9884\u5904\u7406\u7684\u91cd\u8981\u7684\u4e00\u6b65\uff0c\u5206\u8bcd\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u505a\u4e00\u4e9b\u5176\u4ed6\u7684\u7279\u5f81\u5de5\u7a0b\uff0c\u6bd4\u5982\u5411\u91cf\u5316\uff08vectorize\uff09\uff0cTF-IDF\u4ee5\u53caHash trick\uff0c\u8fd9\u4e9b\u6211\u4eec\u540e\u9762\u518d\u8bb2\u3002\nTF-IDF \u5982\u679c\u6211\u4eec\u76f4\u63a5\u5c06\u7edf\u8ba1\u8bcd\u9891\u540e\u768419\u7ef4\u7279\u5f81\u505a\u4e3a\u6587\u672c\u5206\u7c7b\u7684\u8f93\u5165\uff0c\u4f1a\u53d1\u73b0\u6709\u4e00\u4e9b\u95ee\u9898\u3002\u6bd4\u5982\u7b2c\u4e00\u4e2a\u6587\u672c\uff0c\u6211\u4eec\u53d1\u73b0\u201dcome\u201d,\u201dChina\u201d\u548c\u201cTravel\u201d\u5404\u51fa\u73b01\u6b21\uff0c\u800c\u201cto\u201c\u51fa\u73b0\u4e86\u4e24\u6b21\u3002\u4f3c\u4e4e\u770b\u8d77\u6765\u8fd9\u4e2a\u6587\u672c\u4e0e\u201dto\u201c\u8fd9\u4e2a\u7279\u5f81\u66f4\u5173\u7cfb\u7d27\u5bc6\u3002\u4f46\u662f\u5b9e\u9645\u4e0a\u201dto\u201c\u662f\u4e00\u4e2a\u975e\u5e38\u666e\u904d\u7684\u8bcd\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u6587\u672c\u90fd\u4f1a\u7528\u5230\uff0c\u56e0\u6b64\u867d\u7136\u5b83\u7684\u8bcd\u9891\u4e3a2\uff0c\u4f46\u662f\u91cd\u8981\u6027\u5374\u6bd4\u8bcd\u9891\u4e3a1\u7684\u201dChina\u201d\u548c\u201cTravel\u201d\u8981\u4f4e\u7684\u591a\u3002\u5982\u679c\u6211\u4eec\u7684\u5411\u91cf\u5316\u7279\u5f81\u4ec5\u4ec5\u7528\u8bcd\u9891\u8868\u793a\u5c31\u65e0\u6cd5\u53cd\u5e94\u8fd9\u4e00\u70b9\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u9884\u5904\u7406\u6765\u53cd\u5e94\u6587\u672c\u7684\u8fd9\u4e2a\u7279\u5f81\uff0c\u800c\u8fd9\u4e2a\u9884\u5904\u7406\u5c31\u662fTF-IDF\u3002IDF\u5c31\u662f\u6765\u5e2e\u52a9\u6211\u4eec\u6765\u53cd\u5e94\u8fd9\u4e2a\u8bcd\u7684\u91cd\u8981\u6027\u7684\uff0c\u8fdb\u800c\u4fee\u6b63\u4ec5\u4ec5\u7528\u8bcd\u9891\u8868\u793a\u7684\u8bcd\u7279\u5f81\u503c\u3002\nTF-IDF\u662f\u975e\u5e38\u5e38\u7528\u7684\u6587\u672c\u6316\u6398\u9884\u5904\u7406\u57fa\u672c\u6b65\u9aa4\uff0c\u4f46\u662f\u5982\u679c\u9884\u5904\u7406\u4e2d\u4f7f\u7528\u4e86Hash Trick\uff0c\u5219\u4e00\u822c\u5c31\u65e0\u6cd5\u4f7f\u7528TF-IDF\u4e86\uff0c\u56e0\u4e3aHash Trick\u540e\u6211\u4eec\u5df2\u7ecf\u65e0\u6cd5\u5f97\u5230\u54c8\u5e0c\u540e\u7684\u5404\u7279\u5f81\u7684IDF\u7684\u503c\u3002\u4f7f\u7528\u4e86IF-IDF\u5e76\u6807\u51c6\u5316\u4ee5\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528\u5404\u4e2a\u6587\u672c\u7684\u8bcd\u7279\u5f81\u5411\u91cf\u4f5c\u4e3a\u6587\u672c\u7684\u7279\u5f81\uff0c\u8fdb\u884c\u5206\u7c7b\u6216\u8005\u805a\u7c7b\u5206\u6790\u3002\n\u5f53\u7136TF-IDF\u4e0d\u5149\u53ef\u4ee5\u7528\u4e8e\u6587\u672c\u6316\u6398\uff0c\u5728\u4fe1\u606f\u68c0\u7d22\u7b49\u5f88\u591a\u9886\u57df\u90fd\u6709\u4f7f\u7528\u3002\u56e0\u6b64\u503c\u5f97\u597d\u597d\u7684\u7406\u89e3\u8fd9\u4e2a\u65b9\u6cd5\u7684\u601d\u60f3\u3002\n\u4e2d\u6587\u6587\u672c\u6316\u6398\u9884\u5904\u7406\u6d41\u7a0b\u603b\u7ed3  \u4e2d\u6587\u6587\u672c\u6316\u6398\u9884\u5904\u7406\u7279\u70b9 \u6570\u636e\u6536\u96c6\uff1a\u4e3b\u9898\u722c\u866b\u2014-ache\uff0cache\u5141\u8bb8\u6211\u4eec\u7528\u5173\u952e\u5b57\u6216\u8005\u4e00\u4e2a\u5206\u7c7b\u7b97\u6cd5\u6765\u8fc7\u6ee4\u51fa\u6211\u4eec\u9700\u8981\u7684\u4e3b\u9898\u8bed\u6599\uff0c\u6bd4\u8f83\u5f3a\u5927\u3002 \u9664\u53bb\u6570\u636e\u4e2d\u975e\u6587\u672c\u90e8\u5206 \u5904\u7406\u4e2d\u6587\u7f16\u7801\u95ee\u9898 \u4e2d\u6587\u5206\u8bcd\uff1a\u53ef\u4ee5\u5e2ejieba\u52a0\u5165\u8bcd\u6c47 \u5f15\u5165\u505c\u7528\u8bcd \u7279\u5f81\u5904\u7406 \u5efa\u7acb\u5206\u6790\u6a21\u578b  \u6f5c\u5728\u8bed\u4e49\u7d22\u5f15\uff08LSI\uff09 LSI\u662f\u6700\u65e9\u51fa\u73b0\u7684\u4e3b\u9898\u6a21\u578b\u4e86\uff0c\u5b83\u7684\u7b97\u6cd5\u539f\u7406\u5f88\u7b80\u5355\uff0c\u4e00\u6b21\u5947\u5f02\u503c\u5206\u89e3\u5c31\u53ef\u4ee5\u5f97\u5230\u4e3b\u9898\u6a21\u578b\uff0c\u540c\u65f6\u89e3\u51b3\u8bcd\u4e49\u7684\u95ee\u9898\uff0c\u975e\u5e38\u6f02\u4eae\u3002\u4f46\u662fLSI\u6709\u5f88\u591a\u4e0d\u8db3\uff0c\u5bfc\u81f4\u5b83\u5728\u5f53\u524d\u5b9e\u9645\u7684\u4e3b\u9898\u6a21\u578b\u4e2d\u5df2\u57fa\u672c\u4e0d\u518d\u4f7f\u7528\u3002\n\u901a\u8fc7\u4e00\u6b21SVD\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u6587\u6863\u548c\u4e3b\u9898\u7684\u76f8\u5173\u5ea6\uff0c\u8bcd\u548c\u8bcd\u4e49\u7684\u76f8\u5173\u5ea6\u4ee5\u53ca\u8bcd\u4e49\u548c\u4e3b\u9898\u7684\u76f8\u5173\u5ea6\u3002\nk\u662f\u6211\u4eec\u5047\u8bbe\u7684\u4e3b\u9898\u6570\uff0c\u4e00\u822c\u8981\u6bd4\u6587\u672c\u6570\u5c11\u3002\n\u4e3b\u8981\u7684\u95ee\u9898\u6709\uff1a\n SVD\u8ba1\u7b97\u975e\u5e38\u7684\u8017\u65f6\uff0c\u5c24\u5176\u662f\u6211\u4eec\u7684\u6587\u672c\u5904\u7406\uff0c\u8bcd\u548c\u6587\u672c\u6570\u90fd\u662f\u975e\u5e38\u5927\u7684\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u9ad8\u7ef4\u5ea6\u77e9\u9635\u505a\u5947\u5f02\u503c\u5206\u89e3\u662f\u975e\u5e38\u96be\u7684\u3002 \u4e3b\u9898\u503c\u7684\u9009\u53d6\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\u975e\u5e38\u5927\uff0c\u5f88\u96be\u9009\u62e9\u5408\u9002\u7684k\u503c\u3002 LSI\u5f97\u5230\u7684\u4e0d\u662f\u4e00\u4e2a\u6982\u7387\u6a21\u578b\uff0c\u7f3a\u4e4f\u7edf\u8ba1\u57fa\u7840\uff0c\u7ed3\u679c\u96be\u4ee5\u76f4\u89c2\u7684\u89e3\u91ca\u3002  \u5bf9\u4e8e\u95ee\u98981\uff09\uff0c\u4e3b\u9898\u6a21\u578b\u975e\u8d1f\u77e9\u9635\u5206\u89e3\uff08NMF\uff09\u53ef\u4ee5\u89e3\u51b3\u77e9\u9635\u5206\u89e3\u7684\u901f\u5ea6\u95ee\u9898\u3002\u5bf9\u4e8e\u95ee\u98982\uff09\uff0c\u8fd9\u662f\u8001\u5927\u96be\u4e86\uff0c\u5927\u90e8\u5206\u4e3b\u9898\u6a21\u578b\u7684\u4e3b\u9898\u7684\u4e2a\u6570\u9009\u53d6\u4e00\u822c\u90fd\u662f\u51ed\u7ecf\u9a8c\u7684\uff0c\u8f83\u65b0\u7684\u5c42\u6b21\u72c4\u5229\u514b\u96f7\u8fc7\u7a0b\uff08HDP\uff09\u53ef\u4ee5\u81ea\u52a8\u9009\u62e9\u4e3b\u9898\u4e2a\u6570\u3002\u5bf9\u4e8e\u95ee\u98983\uff09\uff0c\u725b\u4eba\u4eec\u6574\u51fa\u4e86pLSI(\u4e5f\u53ebpLSA)\u548c\u9690\u542b\u72c4\u5229\u514b\u96f7\u5206\u5e03(LDA)\u8fd9\u7c7b\u57fa\u4e8e\u6982\u7387\u5206\u5e03\u7684\u4e3b\u9898\u6a21\u578b\u6765\u66ff\u4ee3\u57fa\u4e8e\u77e9\u9635\u5206\u89e3\u7684\u4e3b\u9898\u6a21\u578b\u3002\n\u56de\u5230LSI\u672c\u8eab\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u89c4\u6a21\u8f83\u5c0f\u7684\u95ee\u9898\uff0c\u5982\u679c\u60f3\u5feb\u901f\u7c97\u7c92\u5ea6\u7684\u627e\u51fa\u4e00\u4e9b\u4e3b\u9898\u5206\u5e03\u7684\u5173\u7cfb\uff0c\u5219LSI\u662f\u6bd4\u8f83\u597d\u7684\u4e00\u4e2a\u9009\u62e9\uff0c\u5176\u4ed6\u65f6\u5019\uff0c\u5982\u679c\u4f60\u9700\u8981\u4f7f\u7528\u4e3b\u9898\u6a21\u578b\uff0c\u63a8\u8350\u4f7f\u7528LDA\u548cHDP\u3002\nGensim LSI\u5b9e\u73b0\uff1a\n \u4e2d\u6587\uff1ahttps://blog.csdn.net/ld326/article/details/78508162 \u82f1\u6587\uff1ahttps://www.52nlp.cn/tag/lsi\uff1b\u5b98\u7f51\uff1ahttps://radimrehurek.com/gensim/wiki.html#id6  \u975e\u8d1f\u77e9\u9635\u5206\u89e3\uff08NMF\uff09 NMF\u4f5c\u4e3a\u4e00\u4e2a\u6f02\u4eae\u7684\u77e9\u9635\u5206\u89e3\u65b9\u6cd5\uff0c\u5b83\u53ef\u4ee5\u5f88\u597d\u7684\u7528\u4e8e\u4e3b\u9898\u6a21\u578b\uff0c\u5e76\u4e14\u4f7f\u4e3b\u9898\u7684\u7ed3\u679c\u6709\u57fa\u4e8e\u6982\u7387\u5206\u5e03\u7684\u89e3\u91ca\u6027\u3002\u4f46\u662fNMF\u4ee5\u53ca\u5b83\u7684\u53d8\u79cdpLSA\u867d\u7136\u53ef\u4ee5\u4ece\u6982\u7387\u7684\u89d2\u5ea6\u89e3\u91ca\u4e86\u4e3b\u9898\u6a21\u578b\uff0c\u5374\u90fd\u53ea\u80fd\u5bf9\u8bad\u7ec3\u6837\u672c\u4e2d\u7684\u6587\u672c\u8fdb\u884c\u4e3b\u9898\u8bc6\u522b\uff0c\u800c\u5bf9\u4e0d\u5728\u6837\u672c\u4e2d\u7684\u6587\u672c\u662f\u65e0\u6cd5\u8bc6\u522b\u5176\u4e3b\u9898\u7684\u3002\u6839\u672c\u539f\u56e0\u5728\u4e8eNMF\u4e0epLSA\u8fd9\u7c7b\u4e3b\u9898\u6a21\u578b\u65b9\u6cd5\u6ca1\u6709\u8003\u8651\u4e3b\u9898\u6982\u7387\u5206\u5e03\u7684\u5148\u9a8c\u77e5\u8bc6\uff0c\u6bd4\u5982\u6587\u672c\u4e2d\u51fa\u73b0\u4f53\u80b2\u4e3b\u9898\u7684\u6982\u7387\u80af\u5b9a\u6bd4\u54f2\u5b66\u4e3b\u9898\u7684\u6982\u7387\u8981\u9ad8\uff0c\u8fd9\u70b9\u6765\u6e90\u4e8e\u6211\u4eec\u7684\u5148\u9a8c\u77e5\u8bc6\uff0c\u4f46\u662f\u65e0\u6cd5\u544a\u8bc9NMF\u4e3b\u9898\u6a21\u578b\u3002\u800cLDA\u4e3b\u9898\u6a21\u578b\u5219\u8003\u8651\u5230\u4e86\u8fd9\u4e00\u95ee\u9898\uff0c\u76ee\u524d\u6765\u8bf4\uff0c\u7edd\u5927\u591a\u6570\u7684\u6587\u672c\u4e3b\u9898\u6a21\u578b\u90fd\u662f\u4f7f\u7528LDA\u4ee5\u53ca\u5176\u53d8\u4f53\u3002\u4e0b\u4e00\u7bc7\u6211\u4eec\u5c31\u6765\u8ba8\u8bbaLDA\u4e3b\u9898\u6a21\u578b\u3002\n",
        "description": "",
        "id": 113,
        "section": "posts",
        "tags": [
            "\u9605\u8bfb\u7b14\u8bb0",
            "NLP",
            "\u5218\u5efa\u5e73"
        ],
        "title": "\u5218\u5efa\u5e73\u535a\u5ba2NLP-\u9605\u8bfb\u7b14\u8bb0",
        "uri": "/posts/notes/93/"
    },
    {
        "content": " \u8fd9\u7bc7\u6587\u7ae0\u662f\u5e94\u8be5\u662f\u6628\u5929\u5f00\u59cb\u5199\u7684\u3002\u4f46\u662f\u6ca1\u6709\u5934\u7eea\uff08lan\uff09\uff0c\u62d6\u5230\u4eca\u5929\u52a8\u7b14\u3002\u4e0d\u77e5\u9053\u5199\u4ec0\u4e48\uff0c\u4e0d\u60f3\u56de\u5fc6\u4ec0\u4e48\uff0c\u8fd9\u51e0\u5929\u7684\u5fc3\u60c5\u4e5f\u662f\u7cdf\u7cd5\u900f\u4e86\u3002\u521a\u521a\u770b\u8fc7\u300a\u5199\u57282018\u5e74\u7684\u7b2c\u4e00\u5929\u300b\uff0c\u4e0d\u81ea\u89c9\u7684\u5c31\u7b11\u4e86\u3002\u770b\u7740\u6700\u540e\u7f57\u5217\u7684\u65b0\u5e74\u5fc3\u613f\u7b80\u76f4\u53ef\u7b11\u3002\u7b2c\u4e00\uff0c\u6ca1\u6709\u5b8c\u6210\u3002\u7b2c\u4e8c\uff0c\u5173\u4e8e\u6700\u540e\u4e00\u9879\uff0c\u9047\u5230\u5fc3\u7231\u4e4b\u4eba\u3002\u662f\u7684\uff0c\u53ea\u662f\u9047\u5230\u4e86\uff0c\u4e5f\u602a\u6211\u6ca1\u6709\u4e89\u53d6\u5427\u3002\n \u8fd9\u6b21\u4ece\u5e74\u672b\u5f00\u59cb\u5012\u53d9\u5427\u3002\nqwer\n  --- DON'T MODIFY THIS LINE --- 2018\u5e74\u7684\u5e74\u672b\u7b80\u76f4\u662f\u72fc\u72c8\u3002\u6ca1\u6709\u6bd4\u8fd9\u4e2a\u8bcd\u66f4\u597d\u7684\u8bf4\u660e\u5427\u3002\u975e\u5e38\u9ad8\u5174\u80fd\u591f\u8ba4\u8bc6\u5979\uff0c\u4e5f\u89c9\u5f97\u548c\u5979\u5728\u4e00\u8d77\u975e\u5e38\u5f00\u5fc3\uff0c\u5979\u662f\u4e00\u4e2a\u53ef\u7231\u3001\u5f00\u6717\u7684\u5973\u5b69\u5b50\uff0c\u540c\u65f6\u4e5f\u975e\u5e38\u4e0d\u820d\u4e0d\u80fd\u548c\u5979\u5728\u4e00\u8d77\u3002\u6211\u6df1\u9677\u5176\u4e2d\uff0c\u6bcf\u65e5\u80e1\u601d\u4e71\u60f3\uff0c\u4e0d\u613f\u7b49\u5f85\u6d88\u606f\u7684\u8fc7\u7a0b\uff0c\u5341\u5206\u714e\u71ac\uff0c\u6700\u540e\u7ea6\u5979\u4e5f\u88ab\u5979\u7406\u7531\u56de\u7edd\u4e86\u3002\u6211\u6709\u9884\u5146\u5979\u4e0d\u559c\u6b22\u6211\uff0c\u56e0\u6b64\u6211\u6700\u540e\u7684\u201c\u8868\u767d\u201d\u4e5f\u53ea\u662f\u4e3a\u4e86\u5f97\u5230\u4e00\u4e2a\u80af\u5b9a\u7684\u7b54\u6848\u5427\u3002\u6ee1\u6253\u6ee1\u7b97\u662f\u4e00\u4e2a\u661f\u671f\u65f6\u95f4\u5427\u3002\u76f8\u8bc6\uff0c\u5374\u4e0d\u80fd\u76f8\u77e5\uff0c\u7231\u800c\u4e0d\u5f97\uff0c\u6211\u544a\u8bc9\u670b\u53cb\u6211\u4e0d\u518d\u76f8\u4fe1\u7231\u60c5\u4e86\u3002\n12\u6708\u6bd4\u8f83\u91cd\u8981\u7684\u4e8b\u60c5\u5c31\u662f\u53bb\u7f8e\u56fd\u7684\u4e00\u4e2a\u661f\u671f\u4e86\u3002\u4ee5AGU\u4f1a\u8bae\u4e3a\u540d\uff0c\u5b9e\u5219\u5404\u79cd\u5a31\u4e50\u3002\u771f\u7684\u4e0d\u559c\u6b22\u90a3\u8fb9\u7684\u751f\u6d3b\uff0c\u5403\u996d\u4e0d\u5408\u80c3\u53e3\uff0c\u6e38\u73a9\u4e5f\u4e0d\u662f\u5f88\u5f00\u5fc3\uff0c\u751a\u81f3\u6709\u4e9b\u5b64\u72ec\u3002\u6765\u56de\u98de\u673a\u4e0a\u96be\u53d7\u768424+\u5c0f\u65f6\u3002\u8fd8\u6709\u56de\u56fd\u7684\u5012\u4e86\u597d\u4e45\u7684\u65f6\u5dee\u3002\u4f60\u8bf4\uff0c\u90a3\u4e9b\u4e00\u4e2a\u4eba\u65c5\u884c\u7684\u4eba\u4eec\u554a\uff0c\u4f60\u4eec\u662f\u600e\u6837\u62d2\u7edd\u5b64\u72ec\u7684\u5462\uff1f\n11\u6708\uff0c\u6709\u4ec0\u4e48\u597d\u56de\u5fc6\u7684\u5462\u3002\u4e2d\u671f\u8003\u6838\u548c\u53bb\u5317\u4eac\u51fa\u5dee\u5427\u3002\u4e2d\u671f\u8003\u6838\uff0c\u8bf4\u662f\u5f62\u5f0f\u4e0a\u7684\u8d70\u8fc7\u7a0b\uff0c\u4f46\u662f\u5bfc\u5e08\u7684\u8981\u6c42\u8fd8\u662f\u86ee\u82db\u523b\u7684\u3002\u4e5f\u662f\u7b2c\u4e00\u6b21\u4e0e\u5434\u8001\u5e08\u6539\u4e86\u8fd9\u4e48\u591a\u6b21ppt\u4e14\u4e0d\u6ee1\u610f\u5427\u3002\u5bf9\u4e4b\u524d\u7684\u5de5\u4f5c\u7814\u7a76\u505a\u4e86\u4e00\u4e2a\u603b\u7ed3\uff0c\u540c\u65f6\u4e5f\u521d\u6b65\u786e\u5b9a\u4e86\u57ce\u5e02\u529f\u80fd\u533a\u57df\u5212\u5206\u8fd9\u4e2a\u7814\u7a76\u65b9\u5411\u3002\u6708\u672b\u662f\u5730\u7406\u5927\u6570\u636e\u7684\u9879\u76ee\uff0c\u548c\u4f55\u8001\u5e08\u3001\u8c22\u8001\u5e08\u53bb\u5317\u4eac\u611f\u53d7\u4e86\u4e09\u5929\u7684\u5bd2\u51b7\u3002\u90a3\u4e9b\u5929\u8fd8\u597d\uff0c\u5317\u4eac\u7684\u98ce\u6ca1\u6709\u90a3\u4e48\u77eb\u60c5\uff0c\u8bb0\u5fc6\u6bd4\u8f83\u6df1\u7684\u662f\u5403\u7684\u90a3\u6b21\u8001\u5317\u4eac\u6dae\u7f8a\u8089~\u5728\u5bd2\u51b7\u7684\u51ac\u5929\uff0c\u6696\u9633\u548c\u706b\u9505\u76f8\u5f97\u76ca\u5f70\u3002\n10\u6708\u521d\u53bb\u4e86\u5e7f\u5dde\u3002\u529e\u7b7e\u8bc1\u3002\u4e09\u5929\u4f4f\u5b85\u6bdb\u6bdb\u7684\u516c\u5bd3\u91cc\u3002\u73a9\u7684\u6bd4\u8f83\u5f00\u5fc3\u3002\u6bdb\u5b50\u5f88\u771f\u8bda\u3002\u7b7e\u8bc1\u529e\u7406\u7684\u5f88\u987a\u5229\uff0c\u4e00\u4e0b\u5b50\u62ff\u4e0b\u4e86\u5341\u5e74\u7b7e\u3002\u5e7f\u5dde\u8fd9\u5ea7\u57ce\u5e02\u7559\u4e0b\u7684\u5370\u8c61\u4e5f\u975e\u5e38\u6df1\u523b\u3002\u6e05\u6de1\u7684\u996e\u98df\u3002\u76f4\u5230\u4e2d\u5348\u4e0b\u5348\u7684\u65e9\u8336\u3002\u6e05\u723d\u7684\u5929\u6c14\u3002\u975e\u5e38\u5b9c\u5c45\u7684\u4e00\u5ea7\u57ce\u5e02\u3002\u5982\u679c\u6ca1\u6709\u623f\u4ef7\u7684\u70e6\u607c\u3002\u5e0c\u671b\u4ee5\u540e\u4e5f\u4e0d\u4f1a\u88ab\u6b64\u6240\u70e6\u607c\u3002\n\u53d1\u751f\u5728\u5341\u6708\u5e95\u7684\u5c31\u662f\u6625\u513f\u7684\u5a5a\u793c\u4e86\u3002\u53bb\u5e74\u7b2c\u4e8c\u6b21\u53bb\u5b9c\u660c\u3002\u540c\u6837\u975e\u5e38\u559c\u6b22\u5b9c\u660c\u8fd9\u5ea7\u57ce\u5e02\u3002\u4ed6\u6709\u6500\u6bd4\u6b66\u6c49\u7684\u7e41\u8363\uff0c\u5374\u6ca1\u6709\u6b66\u6c49\u90a3\u4e48\u55a7\u56a3\uff0c\u6ca1\u6709\u90a3\u4e48\u62e5\u6324\u3002\u6709\u6c5f\u6c34\u4e3a\u4f34\uff0c\u73af\u5883\u5341\u5206\u8212\u9002\u3002\u5a5a\u793c\u529e\u5f97\u5341\u5206\u9686\u91cd\uff0c\u76db\u5178\u3001\u8c6a\u8f66\u3001\u7f8e\u98df\uff0c\u8fd9\u6b21\u5b9c\u660c\u4e4b\u884c\u6ca1\u9519\u4e86\u3002\n\u4e5d\u6708\u4efd\u662f\u7acbflag\u7684\u6700\u591a\u7684\u65e5\u5b50\u3002\u5065\u8eabflag\uff0c\u96c5\u601dflag\uff0c\u65e5\u5fd7flag\u3002\u96c5\u601dflag\u76ee\u524d\u6ca1\u6709\u8fdb\u884c\uff0c\u4e0e\u5176\u8bf4\u662f\u6ca1\u65f6\u95f4\uff0c\u5176\u5b9e\u8fd8\u662f\u6ca1\u575a\u6301\u3002\u5065\u8eabflag\u548c\u65e5\u5fd7flag\u65ad\u65ad\u7eed\u7eed\u7684\u5728\u575a\u6301\u3002\u4e5f\u7b97\u662f\u4e00\u79cd\u8fdb\u6b65\u4e86\u3002\u5f88\u5f00\u5fc3\u53ef\u4ee5\u628a\u4e4b\u524d\u6240\u6709\u7684\u4e1c\u897f\u8bb0\u5f55\u4e0b\u6765\u3002\u5148\u4e0d\u8003\u8651\u5176\u662f\u5426\u6709\u903b\u8f91\uff0c\u6bd4\u8f83\u5403\u60ca\u7684\u662f\u81ea\u5df1\u7adf\u7136\u53ef\u4ee5\u5199\u8fd9\u4e48\u591a\u6587\u5b57\u3002\u867d\u7136\u6709\u65f6\u4e0d\u60f3\u56de\u9996\uff0c\u4f46\u603b\u662f\u4e00\u79cd\u7ecf\u5386\u5427\u3002\u54e6\u5bf9\u4e86\uff0c\u4e5d\u6708\u521d\u53c8\u53bb\u4e86\u4e00\u8d9f\u5317\u4eac\uff0c\u53bb\u4e86\u4e00\u8d9f\u5706\u660e\u56ed\uff0c\u6e05\u534e\u5927\u5b66\u3002\u90a3\u65f6\u5019\u7684\u5929\u7a7a\uff0c\u771f\u7f8e\u3002\n\u4e03\u516b\u6708\u4efd\u6700\u4e3a\u6d6e\u8e81\u3002\u6bcf\u5929\u90fd\u4f1a\u6765\u516c\u53f8\uff08\u516b\u6708\u4efd\u8fd8\u662f\u6ee1\u52e4\uff0c\u96be\u5f97\uff09\uff0c\u6bcf\u5929\u8c8c\u4f3c\u90fd\u5f88\u5fd9\u7684\u6837\u5b50\uff0c\u5374\u4e0d\u77e5\u9053\u81ea\u5df1\u5728\u5fd9\u4ec0\u4e48\u3002\u4e5f\u6ca1\u6709\u4efb\u4f55\u6210\u679c\u3002\u6709\u65f6\u5019\u4f1a\u50bb\u50bb\u7684\u5f00\u5fc3\uff0c\u6709\u65f6\u5019\u7a81\u7136\u7684\u5931\u843d\u3002\u8fd8\u662f\u90a3\u79cd\u4e0d\u6210\u719f\u7684\u6837\u5b50\u3002\u671f\u95f4\u56de\u5bb6\u4e86\u4e00\u6b21\uff0c\u56e0\u4e3a\u5927\u59d0\u5e26\u7740\u6668\u9732\u6668\u66e6\u6765\u6731\u6cb3\u770b\u7238\u5988\u3002\n\u4e03\u6708\u5e95\u4ee5\u8fc7\u751f\u65e5\u4e3a\u7531\uff0c\u53bb\u4e86\u4e00\u8d9f\u4e0a\u6d77\u3002\u90a3\u65f6\u5019\u71d5\u8fd8\u5728\u4e0a\u6d77\u5b9e\u4e60\u3002\u548c\u5979\u5ea6\u8fc7\u4e86\u4e09\u5929\u65f6\u95f4\u3002\u4e5f\u7b97\u8d70\u904d\u4e86\u4e0a\u6d77\u5927\u90e8\u5206\u5730\u65b9\uff0c\u5403\u8fc7\u4e86\u6bd4\u8f83\u51fa\u540d\u548c\u597d\u5403\u7684\u7f8e\u98df\u3002\u6700\u7ec8\u5979\u8fd8\u662f\u7559\u5728\u897f\u5b89\u3002\u6211\u4eec\u4e5f\u6ca1\u6709\u7ee7\u7eed\u3002\n\u516d\u6708\u4efd\u53c8\u5230\u4e86\u6bd5\u4e1a\u5b63\u3002\u53c8\u9001\u8d70\u4e00\u6279\u4eba\u3002\u4eca\u5e74\u8fd9\u4e2a\u65f6\u5019\u6ca1\u6709\u5f80\u5e74\u90a3\u4e48\u4f24\u611f\u4e86\u3002\u6bd5\u7adf\u5b66\u6821\u91cc\u9762\u4e5f\u5c31\u53ea\u6709\u81ea\u5df1\u4e86\u3002\u516d\u6708\u521d\u53bb\u4ed9\u6843\u53c2\u52a0\u9f9a\u5e0c\u7684\u5a5a\u793c\uff0c\u73a9\u7684\u5f88\u6109\u5feb\u3002\u54e6\uff0c\u5bf9\u4e86\uff0c\u5fd8\u8bb0\u4e86\u516c\u53f8\u7ec4\u7ec7\u7684\u5b9c\u660c\u51fa\u6e38\u3002\n\u4e94\u6708\u4efd\u662f\u6625\u5929\u8981\u8d70\uff0c\u590f\u5929\u8981\u6765\u7684\u65f6\u5019\uff0c\u4ee5\u670b\u53cb\u4e3a\u540d\u53bb\u4e86\u897f\u5b89\uff0c\u627e\u71d5\u73a9\u3002\u4f60\u8bf4\uff0c\u6211\u548c\u5176\u4ed6\u5973\u751f\u4e3a\u4ec0\u4e48\u4f1a\u6709\u201c\u5c2c\u804a\u201d\u5462\u3002\u4f46\u662f\u548c\u5979\u6ca1\u6709\u5c2c\u804a\u3002\u6211\u89c9\u5f97\u4e0e\u81ea\u5df1\u6709\u5f88\u5927\u7684\u539f\u56e0\u3002\u662f\u5931\u5fc6\u4e86\u4e48\uff0c\u8fd8\u662f\u4e0d\u60f3\u56de\u5fc6\u4e86\u3002\u897f\u5b89\u662f\u5ea7\u7f8e\u597d\u7684\u57ce\u5e02\u3002\u4f46\u662f\u8fd1\u4e9b\u5e74\u5374\u4e0d\u60f3\u9760\u8fd1\u4e86\u3002\n\u56db\u6708\u4efd\u4ee5\u53ca\u4e4b\u524d\uff0c\u56de\u5fc6\u4e0d\u8d77\u6765\u4e86\u3002\u7167\u7247\u4e5f\u6ca1\u6709\u3002\u6216\u8bb8\u6ca1\u4ec0\u4e48\u5927\u4e8b\u5427\u3002 \u4e8c\u59d0\u5e26\u7740\u6c90\u6c90\u6765\u6b66\u6c49\uff0c\u7136\u540e\u6211\u5e26\u7740\u5979\u4fe9\u56de\u5bb6\u3002\n\u65e2\u71362018\u5df2\u7ecf\u8fc7\u53bb\u4e86\uff0c\u90a3\u5c31\u8ba9\u5979\u8fc7\u53bb\u5427\u3002\u65f6\u95f4\u662f\u4e2a\u6e29\u67d4\u7684\u59d1\u5a18\uff0c\u5979\u4f1a\u65e0\u65f6\u65e0\u523b\u4e00\u76f4\u966a\u4f34\u4f60\u5de6\u53f3\u3002\u65f6\u95f4\u53c8\u662f\u4e00\u4e2a\u6b8b\u9177\u7684\u5973\u4eba\uff0c\u5979\u4f1a\u5728\u4f60\u5f00\u5fc3\u7684\u65f6\u5019\u6084\u6084\u7684\u6e9c\u8d70\uff0c\u5728\u4f60\u96be\u8fc7\u7684\u65f6\u5019\u8ba9\u773c\u6cea\u65e0\u6cd5\u51dd\u7ed3\u3002\u6211\u65e0\u6cd5\u65ad\u8a002018\u5e74\u8fc7\u7684\u597d\u4e0d\u597d\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u7f57\u5217\u4e86\u8fd9\u4e48\u591a\u6211\u8be5\u600e\u6837\u5f62\u5bb9\u8fc7\u53bb\u7684\u8fd9\u4e00\u5e74\u3002\u4e00\u5e74\u7684\u65f6\u95f4\u5f88\u957f\uff0c\u957f\u7684\u4f60\u53bb\u770b\u8fc7\u6c5f\u6cb3\uff0c\u6e38\u5386\u5927\u5c71\u3002\u53ef\u5979\u53c8\u504f\u504f\u5f88\u77ed\uff0c\u77ed\u7684\u50cf\u4e00\u5929\u7684\u4e0b\u5348\u8336\uff0c\u7a0d\u5fae\u6253\u4e00\u4e2a\u76f9\u5c31\u6ca1\u4e86\u8e2a\u5f71\u3002\n  \u4eba\u60c5\u51b7\u6696\uff0c\u771f\u5fc3\u5c31\u597d\u3002\n\u65b0\u5e74\u613f\u666f\uff1a\n \u6210\u719f \u5b66\u4f1a\u91ca\u6000 \u4e60\u60ef\u5b64\u72ec \u4e13\u5fc3 \u4e0d\u518d\u7b49\u5f85 \u6ca1\u5fc3\u6ca1\u80ba \u5b5d\u656c\u7236\u6bcd \u53bb\u770b\u4e00\u573a\u6f14\u5531\u4f1a \u73a9\u5409\u4ed6 \u96c5\u601d \u81f3\u5c11\u71ac\u51fa\u4e00\u7bc7paper \u575a\u6301\u5199\u65e5\u5fd7  \u56de\u5fc6\u5c31\u7ee7\u7eed\u5728\u8fd9\u5377\u78c1\u5e26\u4e2d\u5427\u3002\nPhoto by Stas Knop from Pexels\n\u00a0\u00a0",
        "description": "",
        "id": 114,
        "section": "posts",
        "tags": [
            "\u968f\u8bb0"
        ],
        "title": "\u5199\u57282019\u5e74\u7684\u7b2c\u4e00\u5929",
        "uri": "/posts/journals/2019-01-02-%E5%86%99%E5%9C%A82019%E5%B9%B4%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/"
    },
    {
        "content": " \u8fd9\u662f\u7b2c\u4e8c\u6b21\u6765\u5b9c\u660c\u4e86\u3002\u4e5f\u662f\u4eca\u5e74\u7b2c\u4e8c\u6b21\u6765\u5b9c\u660c\u3002\u76ee\u7684\u662f\u53c2\u52a0\u6625\u7684\u5a5a\u793c~\n \u6211\u548c\u6743\u5927\u5468\u516d\u65e9\u4e0a\u65e9\u65e9\u51fa\u53d1\uff0c\u6628\u5929\u665a\u4e0a\u56de\u5230\u6b66\u6c49\u3002\u77ed\u77ed\u4e24\u5929\u7684\u201c\u65c5\u884c\u201d\uff0c\u611f\u89e6\u5f88\u5927\u3002\n\u7b2c\u4e00\u5929\u4e0a\u5348\u5230\u7684\uff0c\u5148\u5230\u4e86\u6625\u7684\u65b0\u623f\uff0c\u7a0d\u5fae\u5b89\u987f\u4e86\u4e00\u4e0b\u7136\u540e\u53bbCBD\u9644\u8fd1\uff0c\u7ed9\u4f34\u90ce\u8bd5\u8863\u670d\u3002\u53ef\u4ee5\u8bf4\u4f34\u90ce\u7684\u8863\u670d\u771f\u7684\u5f88\u50cf\u670d\u52a1\u751f\u3002\u4e5f\u662f\uff0c\u4f34\u90ce\u672c\u6765\u5c31\u662f\u886c\u65b0\u90ce\u7684\u561b\u3002\u4e2d\u5348\u53bb\u4e86\u4e00\u5bb6\u9910\u5385\u5403\u996d\uff0c\u771f\u7684\u5473\u9053\u633a\u4e0d\u9519\u7684\u3002\u90fd\u662f\u5bb6\u5e38\u83dc\uff0c\u4e0d\u8fc7\u505a\u7684\u5f88\u6709\u5473\u9053\u3002\u6625\u8bf4\u5e38\u5403\u8fd9\u5bb6\u7684\u83dc\uff0c\u6709\u65f6\u5019\u7ecf\u5e38\u70b9\u8fd9\u5bb6\u7684\u5916\u5356\u3002\u5403\u5b8c\u996d\u540e\u6765\u5230\u65b0\u623f\uff0c\u6211\u4eec\u51e0\u4e2a\u548c\u4f34\u90ce\u4e00\u8d77\u5e03\u7f6e\u65b0\u623f\u3002\u65b0\u623f\u7684\u4f4d\u7f6e\u975e\u5e38\u597d\uff0c\u5728\u9633\u53f0\u4e0a\u4e00\u773c\u671b\u53bb\u5c31\u662f\u957f\u6c5f\u548c\u5b9c\u660c\u7684\u5927\u6865\u3002\u5439\u6c14\u7403\uff0c\u8d34\u5899\u7eb8\uff0c\u5927\u5bb6\u8fb9\u804a\u8fb9\u5fd9\u7740\u3002\u6211\u80fd\u770b\u51fa\u867d\u7136\u4e0d\u662f\u4ed6\u4eec\u81ea\u5df1\u7684\u5a5a\u793c\uff0c\u4f46\u662f\u4ed6\u4eec\u5e03\u7f6e\u65b0\u623f\u7684\u65f6\u5019\u8fd8\u662f\u5f88\u8bb2\u7a76\u7684\u3002\u5bf9\u4e8e\u6211\u6765\u8bf4\u53ef\u80fd\u5f88\u968f\u610f\uff0c\u90fd\u53ef\u4ee5\u7684\u4e8b\u60c5\uff0c\u4ed6\u4eec\u4f1a\u5f88\u8ba4\u771f\uff0c\u5e76\u6821\u6b63\u591a\u6b21\u3002\u6bd4\u5982\u8bf4\uff0c\u8d34\u5899\u7eb8\u7684\u65f6\u5019\u4ed6\u4eec\u4f1a\u5171\u540c\u8c0b\u7b56\u600e\u4e48\u66f4\u597d\u770b\u4e00\u4e9b\uff0c\u662f\u4e0d\u662f\u6b6a\u4e86\u7b49\u7b49\u3002\u53ef\u80fd\u5982\u679c\u6211\u4e00\u4e2a\u4eba\u505a\u8fd9\u79cd\u4e8b\u60c5\u7684\u8bdd\uff0c\u89c9\u5f97\u600e\u6837\u90fd\u597d\u5427\u3002\u4ed6\u4eec\u8fd9\u79cd\u8ba4\u771f\uff0c\u4e0d\u77e5\u662f\u51fa\u81ea\u81ea\u5df1\u672c\u8eab\u8ba4\u771f\u7684\u6001\u5ea6\uff0c\u8fd8\u662f\u51fa\u4e8e\u5bf9\u6625\u7684\u53cb\u8c0a\u3002\u4e24\u65b9\u9762\u90fd\u6709\u5427\u3002\u7136\u540e\u5fd9\u5230\u516d\u70b9\u591a\u5de6\u53f3\u6211\u4eec\u6765\u5230\u9152\u5e97\u5403\u996d\u3002\u9152\u5e97\u91cc\u5f88\u8c6a\u534e\uff0c\u7b2c\u4e8c\u5929\u611f\u89e6\u66f4\u52a0\u6df1\u5207\u3002\u89c1\u5230\u4e86\u6625\u7684\u7236\u6bcd\u7b49\u4eb2\u670b\u3002\u5403\u7684\u996d\u83dc\u4e5f\u90fd\u5341\u5206\u53ef\u53e3\u3002\u5403\u8fc7\u4e4b\u540e\u5c31\u53bb\u9152\u5e97\u623f\u95f4\u4e86\u3002\u7ec8\u4e8e\u8eba\u5728\u5e8a\u4e0a\u597d\u597d\u4f11\u606f\u4e86~\u4e2d\u95f4\u8fd8\u6709\u4e00\u4ef6\u4e8b\u60c5\u5c31\u662f\u9676\u8001\u5e08\u5206\u914d\u7684\u7533\u8bf7\u7701\u79d1\u6280\u4e13\u9879\u7684\u4efb\u52a1\u3002\u665a\u996d\u4e4b\u524d\u6539\u4e86\u521d\u7a3f\uff0c\u7136\u540e\u665a\u4e0a\u53c8\u6539\u4e86\u4e00\u7a3f\u3002\u628a\u4e4b\u524d\u7684idea\u5199\u4e86\u8fdb\u53bb\uff0c\u753b\u4e86\u4e00\u4e2a\u6d41\u7a0b\u56fe\u3002\n\u7b2c\u4e8c\u5929\u65e9\u65e9\u7684\u8d77\u6765\uff0c\u7b49\u5f85\u7740\u63a5\u4eb2\u7684\u961f\u4f0d\u3002\u4f34\u90ce\u65e9\u65e9\u7684\u968f\u65b0\u90ce\u53d6\u5316\u5986\u4e86\u5e76\u505a\u51c6\u5907\uff0c\u6211\u548c\u6625\u7684\u4e00\u4e9b\u5176\u4ed6\u7684\u670b\u53cb\u540c\u884c\u3002\u611f\u89c9\u6ca1\u6709\u4ec0\u4e48\u8bdd\u804a\u3002\u4ed6\u4eec\u90fd\u662f\u8001\u540c\u5b66\uff0c\u6240\u4ee5\u804a\u5f97\u5f88\u5f00\u5fc3\uff0c\u800c\u6211\u4e0d\u77e5\u9053\u600e\u4e48\u548c\u4ed6\u4eec\u540c\u804a\u3002\u6709\u4e00\u4e2a\u5bb6\u4f19\u89c9\u5f97\u6027\u683c\u633a\u597d\u7684\uff0c\u5e73\u5e38\u6709\u7684\u6ca1\u6709\u548c\u4ed6\u804a\u4e00\u4e24\u53e5\uff0c\u4f46\u662f\u4ed6\u4e5f\u4e0d\u662f\u5065\u8c08\u7684\u7c7b\u578b\u3002\u65e9\u4e0a\u4e00\u8d77\u5403\u7684\u5c0f\u9762\uff0c\u65e9\u5c31\u542c\u8bf4\u5b9c\u660c\u7684\u5c0f\u9762\u597d\u5403\u3002\u867d\u7136\u662f\u968f\u610f\u5c31\u8fd1\u7684\u4e00\u5bb6\u8def\u8fb9\u9762\u9986\uff0c\u4f46\u662f\u8fd8\u662f\u5f88\u597d\u5403\u3002\u6211\u6ca1\u6709\u52a0\u8fa3\u6912\uff0c\u5473\u9053\u5f88\u4e0d\u9519\u3002\u65e9\u4e0a\u770b\u5230\u5a5a\u8f66\u7684\u65f6\u5019\u662f\u5341\u5206\u8be7\u5f02\u7684\u3002\u63a5\u4eb2\u7684\u8f66\u662f\u52b3\u65af\u83b1\u65af\u5e7b\u5f71\u7cfb\u5217\uff0c\u540e\u9762\u7684\u8f66\u6e05\u4e00\u8272\u7684\u9ed1\u8272\u5954\u9a70\u3002\u6211\u7684\u5929\uff01\u8fd9\u662f\u6211\u76ee\u524d\u89c1\u6211\u6700\u9ad8\u914d\u4e86\u5427\u3002\u6211\u8fd8\u7279\u610f\u624b\u673a\u67e5\u4e86\u4e00\u4e0b\u52b3\u65af\u83b1\u65af\u3002\u7b49\u4e86\u4e0d\u4e45\u4e4b\u540e\u89c1\u5230\u4e86\u65b0\u90ce\u548c\u4f34\u90ce\u961f\u4f0d\uff0c\u7136\u540e\u5c31\u662f\u51fa\u53d1\u524d\u5f80\u65b0\u5a18\u7684\u9152\u5e97\u3002\u65b0\u5a18\u5f88\u6f02\u4eae\u3002\u63a5\u65b0\u5a18\u7684\u65f6\u5019\u73a9\u4e86\u51e0\u4e2a\u633a\u6709\u610f\u601d\u7684\u6e38\u620f\uff0c\u6574\u7684\u4f34\u90ce\u548c\u65b0\u90ce\u3002\u8fd9\u6bd4\u4e00\u5473\u7684\u8981\u7ea2\u5305\u4e5f\u8bb8\u597d\u591a\u4e86\u5427\u3002\u4e4b\u540e\u63a5\u65b0\u5a18\u6765\u65b0\u623f\u3002\u4ed6\u4eec\u8fd9\u8fb9\u7684\u4e60\u4fd7\u6709\u4e00\u4e2a\u4e0d\u592a\u4e00\u6837\u7684\u5730\u65b9\u3002\u5728\u65b0\u5a18\u63a5\u4eb2\u7684\u5730\u65b9\u7ed9\u5973\u65b9\u7236\u6bcd\u656c\u8336\uff0c\u5728\u65b0\u623f\u7ed9\u7537\u65b9\u7236\u6bcd\u656c\u8336\u3002\u6211\u89c1\u8fc7\u4e4b\u524d\u7684\u90fd\u662f\u5728\u9152\u5e97\u5178\u793c\u7684\u65f6\u5019\u656c\u8336\u3002\u7136\u540e\u5c31\u662f\u5230\u8fbe\u6843\u82b1\u5cad\u9152\u5e97\uff0c\u542c\u8bf4\u662f\u4e60\u5927\u5927\u6765\u5b9c\u660c\u7684\u65f6\u5019\u4f4f\u7684\u9152\u5e97\u3002\u786e\u5b9e\u5f88\u8c6a\u534e\u3002\u5178\u793c\u5927\u5385\uff0c\u771f\u7684\u5f88\u5927\uff0c\u88c5\u9970\u5f88\u7f8e\u3002\u5f88\u6392\u573a\u3002\u4e0d\u4e45\u4e4b\u540e\u5f00\u59cb\u4e86\u5178\u793c\uff0c\u5185\u5bb9\u975e\u5e38\u4e30\u5bcc\u3002\u6709\u4ed6\u4eec\u7684VCR\uff0c\u6709\u706f\u5149\u79c0\uff0c\u4f34\u5a18\u4f34\u90ce\u4f34\u821e\u7b49\u7b49\u3002\u4e2d\u95f4\u6625\u8bf4\u5230\u81ea\u5df1\u7684\u7237\u7237\u7ed9\u81ea\u5df1\u7559\u7684\u6212\u6307\u7684\u65f6\u5019\uff0c\u6b62\u4e0d\u4f4f\u7684\u54ed\u4e86\u3002\u5f53\u65f6\u4e5f\u786e\u5b9e\u4e3a\u4ed6\u611f\u52a8\u3002\u5f88\u771f\u631a\u3002\u6211\u7ed9\u6625\u5fae\u4fe1\u53d1\u4e86500\u7684\u7ea2\u5305\uff0c\u7531\u8877\u7684\u53d1\u4e86\u795d\u798f\u3002\u4e0d\u4e45\u5a5a\u793c\u996d\u5e2d\u7ed3\u675f\u4e86\u3002\u6211\u548c\u6743\u6536\u62fe\u6536\u62fe\u4e5f\u79bb\u5f00\u4e86\u9152\u5e97\u3002\u56e0\u4e3a\u662f\u665a\u4e0a6\u70b9\u7684\u9ad8\u94c1\u3002\u8fd8\u6709\u4e24\u4e2a\u591a\u5c0f\u65f6\u6ca1\u4ec0\u4e48\u505a\u7684\u3002\u6211\u5c31\u63d0\u8bae\u53bb\u6d17\u811a\u4f11\u606f\u4e00\u4e0b\u3002\u6743\u5927\u4e5f\u540c\u610f\u4e86\u3002\u4e4b\u540e\u5c31\u662f\u5750\u9ad8\u94c1\u56de\u6b66\u6c49\u4e86\u3002\n\u5a5a\u793c\u7ed9\u6211\u6700\u5927\u7684\u611f\u53d7\u5c31\u662f\u76db\u5927\uff0c\u8c6a\u534e\uff0c\u771f\u631a\u3002\u8fd9\u662f\u6211\u89c1\u8fc7\uff0c\u76ee\u524d\u6700\u76db\u5927\u7684\u5a5a\u793c\u5427\u3002\u4e0d\u7981\u8ba9\u6211\u4e0e\u534a\u4e2a\u6708\u524d\u8868\u54e5\u7684\u5a5a\u793c\u8fdb\u884c\u6bd4\u8f83\uff0c\u89c9\u5f97\u8868\u54e5\u7684\u5a5a\u793c\u8f83\u968f\u610f\u4e00\u4e9b\u5427\u3002\u5fc3\u4e2d\u4e5f\u6709\u60f3\u6cd5\uff0c\u5e0c\u671b\u81ea\u5df1\u4ee5\u540e\u7684\u5a5a\u793c\u53ef\u4ee5\u76db\u5927\u4e00\u4e9b\uff0c\u53ef\u4ee5\u6c14\u6d3e\u4e00\u4e9b\uff0c\u53ef\u4ee5\u975e\u5e38\u771f\u631a\u3002\u73b0\u5728\u8fd8\u662f\u597d\u597d\u8d5a\u94b1\u5427\u3002\u4e3a\u4e86\u4ee5\u540e\u76db\u5927\u7684\u5a5a\u793c\uff0c\u54c8\u54c8\u3002\n\u867d\u7136\u5b9c\u660c\u662f\u7b2c\u4e8c\u6b21\u6765\u4e86\uff0c\u8fd8\u662f\u975e\u5e38\u559c\u6b22\u8fd9\u5ea7\u57ce\u5e02\u7684\uff0c\u800c\u4e14\u662f\u8d8a\u53d1\u7684\u559c\u6b22\u3002\u7b2c\u4e00\u6b21\u6765\u8bb0\u5f97\u662f\u516d\u6708\u521d\u4e2d\u5730\u5e73\u53f0\u7ec4\u7ec7\u7684\u51fa\u6e38\u6e38\u73a9\u3002\u4e5f\u662f\u4e24\u5929\u7684\u65f6\u95f4\uff0c\u5168\u7a0b\u53c2\u56e2\u8ddf\u5bfc\u6e38\u59b9\u5b50\u8d70\u3002\u867d\u7136\u4f4f\u5728\u5e02\u91cc\u4e00\u4e2a\u9152\u5e97\uff0c\u4f46\u662f\u5927\u90e8\u5206\u65f6\u95f4\u4e5f\u90fd\u662f\u5728\u5c71\u6c34\u98ce\u666f\u4e4b\u5730\u3002\u8fd9\u6b21\u4e24\u5929\u7684\u65f6\u95f4\u597d\u597d\u7684\u611f\u53d7\u4e86\u5e02\u91cc\u7684\u201c\u6c14\u606f\u201d\u3002\u559c\u6b22\u8fd9\u5ea7\u57ce\u5e02\uff0c\u9053\u8def\u975e\u5e38\u5bbd\u9614\uff0c\u8def\u4e0a\u8f66\u4e0d\u591a\uff0c\u4e0d\u5835\u3002\u57ce\u533a\u65b0\u65e7\u5efa\u7b51\u6cfe\u6e2d\u5206\u660e\u3002\u65b0\u697c\u9ad8\u8038\uff0c\u65e7\u533a\u7834\u65e7\u8bb8\u591a\u3002\u5728\u5b9c\u660c\u7684\u51e0\u987f\u996d\u90fd\u5403\u7684\u975e\u5e38\u8212\u670d\u3002\u5bf9\u6bd4\u5728\u5cb3\u9633\u5403\u7684\u4e0d\u4e60\u60ef\u800c\u8a00\uff0c\u4e0d\u61c2\u5f97\u7167\u987e\u4e00\u4e9b\u4eba\u7684\u996e\u98df\u3002\u5ef6\u8fb9\u7684\u957f\u6c5f\uff0c\u6c5f\u8fb9\u7684\u516c\u56ed\uff0c\u603b\u80fd\u7ed9\u884c\u4eba\u4e00\u4e9b\u60ec\u610f\u3002\u4e5f\u8bb8\u559c\u6b22\u4e00\u4e2a\u5730\u65b9\u6709\u65f6\u5019\u5c31\u76f8\u5f53\u7b80\u5355\u5427\u3002\u4e0d\u7f3a\u5c11\u57ce\u5e02\u7684\u7e41\u8363\uff0c\u5374\u6709\u4e61\u95f4\u7684\u5b89\u9038\u3002\u6709\u57ce\u5e02\u7684\u53d1\u5c55\uff0c\u4e0d\u7f3a\u5c11\u4e61\u95f4\u7684\u81ea\u7531\u3002\n",
        "description": "",
        "id": 117,
        "section": "posts",
        "tags": [
            "\u65c5\u884c",
            "\u5b9c\u660c"
        ],
        "title": "\u5b9c\u660c\u5a5a\u793c\u4e4b\u884c",
        "uri": "/posts/journals/2018-10-29-%E5%AE%9C%E6%98%8C%E5%A9%9A%E7%A4%BC%E4%B9%8B%E8%A1%8C/"
    },
    {
        "content": " \u53c2\u8003\u4e86\r\u8fd9\u91cc\uff0c\r\u8fd9\u91cc\uff0c\u4e3b\u8981\u662f\u6574\u7406\u590d\u5236\u7684\r\u8fd9\u91cc\n \u76ee\u5f55\n[TOC]\nIntroduction to Graph What is a Graph?  Graphs can be used to represent:  social networks web pages biological networks \u2026   What can we do on a graph?  study topology and connectivity community detection identification of central nodes \u2026    pre-built graph-karate What does this graph represent? \u201cA social network of a karate club was studied by Wayne W. Zachary for a period of three years from 1970 to 1972. The network captures 34 members of a karate club, documenting links between pairs of members who interacted outside the club. During the study, a conflict arose between the administrator \u201cJohn A\u201d and instructor \u201cMr. Hi\u201d (pseudonyms), which led to the split of the club into two. Half of the members formed a new club around Mr. Hi; members from the other part found a new instructor or gave up karate. Based on collected data Zachary correctly assigned all but one member of the club to the groups they joined after the split.\u201d\n1 2 3 4 5 6 7 8 9 10 11 12 13  import numpy as np import random import networkx as nx from IPython.display import Image import matplotlib.pyplot as plt import warnings warnings.filterwarnings(&#39;ignore&#39;) G_karate = nx.karate_club_graph() pos = nx.spring_layout(G_karate); nx.draw(G_karate, cmap = plt.get_cmap(&#39;rainbow&#39;), with_labels=True, pos=pos)   retrieve the basic information from this graph  On average, each person in the graph is connected to 4.6 persons.  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  degree_sequence = list(G_karate.degree()) nb_nodes = len(G_karate.nodes()) nb_arr = len(G_karate.edges()) avg_degree = np.mean(np.array(degree_sequence)[:,1]) med_degree = np.median(np.array(degree_sequence)[:,1]) max_degree = max(np.array(degree_sequence)[:,1]) min_degree = np.min(np.array(degree_sequence)[:,1]) print(&#34;Number of nodes : &#34; + str(nb_nodes)) print(&#34;Number of edges : &#34; + str(nb_arr)) print(&#34;Maximum degree : &#34; + str(max_degree)) print(&#34;Minimum degree : &#34; + str(min_degree)) print(&#34;Average degree : &#34; + str(avg_degree)) print(&#34;Median degree : &#34; + str(med_degree))     out:\nNumber of nodes : 34 Number of edges : 78 Maximum degree : 17 Minimum degree : 1 Average degree : 4.588235294117647 Median degree : 3.0    plot the histogram of the degrees the histograms of degrees are quite important to determine the kind of graph we are looking at\n1 2 3 4 5 6 7 8  degree_freq = np.array(nx.degree_histogram(G_karate)).astype(&#39;float&#39;) plt.figure(figsize=(12, 8)) plt.stem(degree_freq) plt.ylabel(&#34;Frequence&#34;) plt.xlabel(&#34;Degree&#34;) plt.show()   Graph Analysis   2020.3.10 \u4e0d\u77e5\u9053\u4f5c\u8005\u4e3a\u5565\u8fd9\u91cc\u7a81\u7136\u8bb2\u5230\u968f\u673a\u56fe\uff0c\u8fd9\u4e2a\u6709\u86ee\u96be\u7684\u3002Tutorial\u8df3\u8fc7\u3002\n  We can analyze a graph at different scales:\n using the global properties of the network using communities and clusters or by looking at individual nodes    The main descriptive measures we\u2019ll explore will be:\n the degree distribution the clustering coefficient the \u201csmall world\u201d phenomena the centrality of a node the diameter of the graph \u2026    Erdos-R\u00e9nyi model(\rER\u968f\u673a\u7f51\u7edc\u6a21\u578b) Defination In an Erdos-R\u00e9nyi model, we build a random graph model with n nodes. The graph is generated by drawing an edge between a pair of nodes (i,j) independently with probability p. We, therefore, have 2 parameters: n the number of nodes and p\nG(n, p)\u6a21\u578b\u7684\u4e24\u4e2a\u4e3b\u8981\u5047\u8bbe\uff08\u8fde\u8fb9\u72ec\u7acb\uff0c\u6bcf\u6761\u8fde\u8fb9\u53ef\u80fd\u6027\u76f8\u540c\uff09\u53ef\u80fd\u4e0d\u9002\u5408\u4e3a\u67d0\u4e9b\u73b0\u5b9e\u751f\u6d3b\u4e2d\u7684\u73b0\u8c61\u5efa\u6a21\u3002\u5c24\u5176\u662fER\u56fe\u7684\u5ea6\u5206\u5e03\u6ca1\u6709\u539a\u5c3e\uff0c\u800c\u8bb8\u591a\u5b9e\u9645\u7f51\u7edc\u7684\u5206\u5e03\u662f\u539a\u5c3e\u7684\u3002\u6b64\u5916\uff0c\u4e0e\u8bb8\u591a\u793e\u4ea4\u7f51\u7edc\u4e0d\u540c\uff0cER\u56fe\u96c6\u805a\u7cfb\u6570\u8f83\u4f4e\u3002\u5176\u4ed6\u8f83\u597d\u7684\u66ff\u4ee3\u6a21\u578b\u53ef\u89c1BA\u7f51\u7edc\u6a21\u578b\uff08Barab\u00e1si\u2013Albert model\uff09\u548cWS\u5c0f\u4e16\u754c\u7f51\u7edc\u6a21\u578b\uff08Watts and Strogatz model\uff09\n1 2 3 4 5 6 7 8  n = 150 p = 0.1 G_erdos = nx.erdos_renyi_graph(n,p, seed =100) # Plot the graph plt.figure(figsize=(12,8)) nx.draw(G_erdos, node_size=10)   Degree distribution Let pk the probability that a randomly selected node has a degree k. Due to the random way the graphs are built, the distribution of the degrees of the graph is binomial. The distribution of the number of degrees per node should be close to the mean. The probability of high nodes decreases exponentially.\n1 2 3 4 5 6 7 8  degree_freq = np.array(nx.degree_histogram(G_erdos)).astype(&#39;float&#39;) plt.figure(figsize=(12, 8)) plt.stem(degree_freq) plt.ylabel(&#34;Frequence&#34;) plt.xlabel(&#34;Degree&#34;) plt.show()   Descriptive statistics  The average degree is given by n\u00d7p. The degree expectation is given by (n\u22121)\u00d7p The maximum degree is concentrated around the average  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  # Get the list of the degrees degree_sequence_erdos = list(G_erdos.degree()) nb_nodes = len(G_erdos.nodes()) nb_arr = len(G_erdos.edges()) avg_degree = np.mean(np.array(degree_sequence_erdos)[:,1]) med_degree = np.median(np.array(degree_sequence_erdos)[:,1]) max_degree = max(np.array(degree_sequence_erdos)[:,1]) min_degree = np.min(np.array(degree_sequence_erdos)[:,1]) esp_degree = (nb_nodes-1)*p print(&#34;Number of nodes : &#34; + str(nb_nodes)) print(&#34;Number of edges : &#34; + str(nb_arr)) print(&#34;Maximum degree : &#34; + str(max_degree)) print(&#34;Minimum degree : &#34; + str(min_degree)) print(&#34;Average degree : &#34; + str(avg_degree)) print(&#34;Expected degree : &#34; + str(esp_degree)) print(&#34;Median degree : &#34; + str(med_degree))    out:\nNumber of nodes : 150\nNumber of edges : 1135\nMaximum degree : 25\nMinimum degree : 8\nAverage degree : 15.133333333333333\nExpected degree : 14.9\nMedian degree : 15.0  Barabasi-Albert model (\u65e0\u6807\u5ea6\u7f51\u7edc) Definition \u8fd9\u4e2a\u56fe\u7684\u76ee\u6807\u662f\u5efa\u6a21\u4f18\u5148\u8fde\u63a5\uff08preferential attachment\uff09\uff0c\u771f\u5b9e\u4e16\u754c\u7f51\u7edc\u4e2d\u5e38\u4f1a\u89c2\u5bdf\u5230\u8fd9\u4e00\u70b9\u3002\uff08\u6ce8\uff1a\u4f18\u5148\u8fde\u63a5\u662f\u6307\u6839\u636e\u5404\u4e2a\u4e2a\u4f53\u6216\u5bf9\u8c61\u5df2\u6709\u7684\u91cf\u6765\u5206\u914d\u67d0\u4e2a\u91cf\uff0c\u8fd9\u901a\u5e38\u4f1a\u8fdb\u4e00\u6b65\u52a0\u5927\u4f18\u52bf\u4e2a\u4f53\u7684\u4f18\u52bf\u3002\uff09\n\u65e0\u6807\u5ea6\u7f51\u7edc(scale-free network)\u662f\u4e00\u79cd\u5ea6\u5206\u5e03\uff08\u5373\u5bf9\u590d\u6742\u7f51\u7edc\u4e2d\u8282\u70b9\u5ea6\u6570\u7684\u603b\u4f53\u63cf\u8ff0\uff09\u670d\u4ece\u6216\u8005\u63a5\u8fd1\u5e42\u5f8b\u5206\u5e03\u7684\u590d\u6742\u7f51\u7edc\u3002\n \u65e0\u6807\u5ea6\u7f51\u7edc\u7684\u7279\u6027\u662f\u666e\u904d\u5b58\u5728\u5ea6\u8fdc\u9ad8\u4e8e\u5e73\u5747\u503c\u7684\u8282\u70b9\u3002\u5ea6\u6700\u9ad8\u7684\u8282\u70b9\u901a\u5e38\u79f0\u4e3a\u67a2\u7ebd\uff08hub\uff09\uff0c\u88ab\u8ba4\u4e3a\u5728\u7f51\u7edc\u4e2d\u8d77\u5230\u7279\u6b8a\u4f5c\u7528 \u65e0\u6807\u5ea6\u7f51\u7edc\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u7279\u6027\u662f\u968f\u8282\u70b9\u5ea6\u6570\u5347\u9ad8\u800c\u964d\u4f4e\u7684\u805a\u96c6\u7cfb\u6570(clustering coefficient)\u5206\u5e03\u3002\u8fd9\u4e2a\u5206\u5e03\u4e5f\u670d\u4ece\u5e42\u5f8b\u5206\u5e03\u3002 \u8bb8\u591a\u771f\u5b9e\u4e16\u754c\u7684\u7f51\u7edc\u88ab\u8ba4\u4e3a\u662f\u65e0\u6807\u5ea6\u7684  1 2 3 4 5 6 7 8 9 10  # Generate the graph n = 150 m = 3 G_barabasi = nx.barabasi_albert_graph(n,m) # Plot the graph plt.figure(figsize=(12,8)) nx.draw(G_barabasi, node_size=10)   Degree distribution  The distribution is now heavy-tailed. There is a large number of nodes that have a small degree, but a significant number of nodes have a high degree. The distribution is said to be scale-free, in the sense that the average degree is not informative.  1 2 3 4 5 6 7  degree_freq = np.array(nx.degree_histogram(G_barabasi)).astype(&#39;float&#39;) plt.figure(figsize=(12, 8)) plt.stem(degree_freq) plt.ylabel(&#34;Frequence&#34;) plt.xlabel(&#34;Degree&#34;) plt.show()   Descriptive statistics 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85  # Get the list of the degrees degree_sequence_erdos = list(G_erdos.degree()) nb_nodes = len(G_erdos.nodes()) nb_arr = len(G_erdos.edges()) avg_degree = np.mean(np.array(degree_sequence_erdos)[:,1]) med_degree = np.median(np.array(degree_sequence_erdos)[:,1]) max_degree = max(np.array(degree_sequence_erdos)[:,1]) min_degree = np.min(np.array(degree_sequence_erdos)[:,1]) esp_degree = (nb_nodes-1)*p print(&#34;Number of nodes : &#34; + str(nb_nodes)) print(&#34;Number of edges : &#34; + str(nb_arr)) print(&#34;Maximum degree : &#34; + str(max_degree)) print(&#34;Minimum degree : &#34; + str(min_degree)) print(&#34;Average degree : &#34; + str(avg_degree)) print(&#34;Expected degree : &#34; + str(esp_degree)) print(&#34;Median degree : &#34; + str(med_degree))``` - out: Number of nodes : 150 Number of edges : 1135 Maximum degree : 25 Minimum degree : 8 Average degree : 15.133333333333333 Expected degree : 14.9 Median degree : 15.0 ## Graph Algorithms explore the main graph algorithms and several use cases in a visual way with direct examples in Python. - To understand the context, here are some use cases for graph algorithms : - real-time fraud detection - real-time recommendations - streamline regulatory compliance - management and monitoring of complex networks - identity and access management - social applications/features - \u2026 - 3 main categories of graph algorithms are currently supported in most frameworks (networkx in Python, or Neo4J for example) : - pathfinding: identify the optimal path, evaluate route availability and quality. This can be used to identify the quickest route or traffic routing for example. - **centrality**: determine the importance of the nodes in the network. This can be used to identify influencers in social media for example or identify potential attack targets in a network. - **community detection**: evaluate how a group is clustered or partitioned. This can be used to segment customers and detect fraud for example. ### Pathfinding and Graph Search Algorithms - Pathfinding algorithms try to find the shortest path between two nodes by minimizing the number of hops. - Search Algorithms does not give the shortest path. Instead, they explore graphs considering neighbors or depths of a graph. #### Search Algorithms - Breadth-First Search (BFS) that explore each node\u2019s neighbor first, then neighbors or the neighbors\u2026 - Depth-First Search (DFS) which try to go down a path as much as possible, and visit new neighbors if possible \u6839\u636e\u53ef\u7528\u6027\u548c\u8d28\u91cf\u7b49\u6761\u4ef6\u786e\u5b9a\u6700\u4f18\u8def\u5f84\u3002\u6211\u4eec\u4e5f\u5c06\u641c\u7d22\u7b97\u6cd5\u5305\u542b\u5728\u8fd9\u4e00\u7c7b\u522b\u4e2d\u3002\u8fd9\u53ef\u7528\u4e8e\u786e\u5b9a\u6700\u5feb\u8def\u7531\u6216\u6d41\u91cf\u8def\u7531\u3002 - \u5bfb\u8def\u7b97\u6cd5\u662f\u901a\u8fc7\u6700\u5c0f\u5316\u8df3\uff08hop\uff09\u7684\u6570\u91cf\u6765**\u5bfb\u627e\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84**\u3002 - \u6700\u77ed\u8def\u5f84\uff1a \u6700\u77ed\u8def\u5f84\u8ba1\u7b97\u7684\u662f\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u7684\u52a0\u6743\uff08\u5982\u679c\u56fe\u6709\u52a0\u6743\u7684\u8bdd\uff09\u8def\u5f84\u3002\u8fd9\u53ef\u7528\u4e8e\u786e\u5b9a\u6700\u4f18\u7684\u9a7e\u9a76\u65b9\u5411\u6216\u793e\u4ea4\u7f51\u7edc\u4e0a\u4e24\u4e2a\u4eba\u4e4b\u95f4\u7684\u5206\u79bb\u7a0b\u5ea6\u3002 - \u641c\u7d22\u7b97\u6cd5\u4e0d\u662f\u7ed9\u51fa\u6700\u77ed\u8def\u5f84\uff0c\u800c\u662f\u6839\u636e\u56fe\u7684\u76f8\u90bb\u60c5\u51b5\u6216\u6df1\u5ea6\u6765\u63a2\u7d22\u56fe\u3002\u8fd9\u53ef\u7528\u4e8e\u4fe1\u606f\u68c0\u7d22\u3002 - \u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\uff08BFS\uff09\uff1a\u9996\u5148\u63a2\u7d22\u6bcf\u4e2a\u8282\u70b9\u7684\u76f8\u90bb\u8282\u70b9\uff0c\u7136\u540e\u63a2\u7d22\u76f8\u90bb\u8282\u70b9\u7684\u76f8\u90bb\u8282\u70b9 - \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08DFS\uff09\uff1a\u4f1a\u5c1d\u8bd5\u5c3d\u53ef\u80fd\u5730\u6df1\u5165\u4e00\u6761\u8def\u5f84\uff0c\u5982\u6709\u53ef\u80fd\u4fbf\u8bbf\u95ee\u65b0\u7684\u76f8\u90bb\u8282\u70b9 ![](https://gitee.com/xunhs/xunhs/raw/master/pics/2020/spring/20200309084645.png) #### Pathfinding algorithms - Shortest Path calculates the shortest weighted (if the graph is weighted) path between a pair of nodes. It is used to identify optimal driving directions or degree of separation between two people on a social network for example. - Single-Source Shortest Path The Single Source Shortest Path (SSSP) computes the shortest path from a given node to all other nodes in the graph. It is often used for routing protocol for IP networks for example. - All Pairs Shortest Path The All Pairs Shortest Path (APSP) algorithm computes the shortest path length between all pairs of nodes. It is quicker than calling the Single Source Shortest Path for every pair of nodes. ```python # Returns the shortest path between each node nx.shortest_path(G_karate) # Returns shortest path length between each node list(nx.all_pairs_shortest_path_length(G_karate))   Minimum Weight Spanning Tree (\u6700\u5c0f\u751f\u6210\u6811)   \r\u5173\u4e8e\u56fe\u7684\u51e0\u4e2a\u6982\u5ff5\u5b9a\u4e49\uff1a\n\u8fde\u901a\u56fe\uff1a\u5728\u65e0\u5411\u56fe\u4e2d\uff0c\u82e5\u4efb\u610f\u4e24\u4e2a\u9876\u70b9$$v_i$$\u4e0e$$v_j$$\u90fd\u6709\u8def\u5f84\u76f8\u901a\uff0c\u5219\u79f0\u8be5\u65e0\u5411\u56fe\u4e3a\u8fde\u901a\u56fe\u3002\n\u5f3a\u8fde\u901a\u56fe\uff1a\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u82e5\u4efb\u610f\u4e24\u4e2a\u9876\u70b9$$v_i$$\u4e0e$$v_j$$\u90fd\u6709\u8def\u5f84\u76f8\u901a\uff0c\u5219\u79f0\u8be5\u6709\u5411\u56fe\u4e3a\u5f3a\u8fde\u901a\u56fe\u3002\n\u8fde\u901a\u7f51\uff1a\u5728\u8fde\u901a\u56fe\u4e2d\uff0c\u82e5\u56fe\u7684\u8fb9\u5177\u6709\u4e00\u5b9a\u7684\u610f\u4e49\uff0c\u6bcf\u4e00\u6761\u8fb9\u90fd\u5bf9\u5e94\u7740\u4e00\u4e2a\u6570\uff0c\u79f0\u4e3a\u6743\uff1b\u6743\u4ee3\u8868\u7740\u8fde\u63a5\u8fde\u4e2a\u9876\u70b9\u7684\u4ee3\u4ef7\uff0c\u79f0\u8fd9\u79cd\u8fde\u901a\u56fe\u53eb\u505a\u8fde\u901a\u7f51\u3002\n\u751f\u6210\u6811\uff1a\u4e00\u4e2a\u8fde\u901a\u56fe\u7684\u751f\u6210\u6811\u662f\u6307\u4e00\u4e2a\u8fde\u901a\u5b50\u56fe\uff0c**\u5b83\u542b\u6709\u56fe\u4e2d\u5168\u90e8$$n$$\u4e2a\u9876\u70b9\uff0c\u4f46\u53ea\u6709\u8db3\u4ee5\u6784\u6210\u4e00\u68f5\u6811\u7684$$n-1$$\u6761\u8fb9\u3002**\u4e00\u9897\u6709$$n$$\u4e2a\u9876\u70b9\u7684\u751f\u6210\u6811\u6709\u4e14\u4ec5\u6709$$n-1$$\u6761\u8fb9\uff0c\u5982\u679c\u751f\u6210\u6811\u4e2d\u518d\u6dfb\u52a0\u4e00\u6761\u8fb9\uff0c\u5219\u5fc5\u5b9a\u6210\u73af\u3002\n\u6700\u5c0f\u751f\u6210\u6811\uff1a\u5728\u8fde\u901a\u7f51\u7684\u6240\u6709\u751f\u6210\u6811\u4e2d\uff0c\u6240\u6709\u8fb9\u7684\u4ee3\u4ef7\u548c\u6700\u5c0f\u7684\u751f\u6210\u6811\uff0c\u79f0\u4e3a\u6700\u5c0f\u751f\u6210\u6811\u3002\n  \u4e24\u79cd\u7b97\u6cd5\n Kruskal\u7b97\u6cd5 Prim\u7b97\u6cd5    \u610f\u4e49\uff08\u6848\u4f8b\uff09\n \u7f51\u7edcG\u8868\u793an\u5404\u57ce\u5e02\u4e4b\u95f4\u7684\u901a\u4fe1\u7ebf\u8def\u7f51\u7ebf\u8def\uff08\u5176\u4e2d\u9876\u70b9\u8868\u793a\u57ce\u5e02\uff0c\u8fb9\u8868\u793a\u4e24\u4e2a\u57ce\u5e02\u4e4b\u95f4\u7684\u901a\u4fe1\u7ebf\u8def\uff0c\u8fb9\u4e0a\u7684\u6743\u503c\u8868\u793a\u7ebf\u8def\u7684\u957f\u5ea6\u6216\u9020\u4ef7\u3002\u53ef\u901a\u8fc7\u6c42\u8be5\u7f51\u7edc\u7684\u6700\u5c0f\u751f\u6210\u6811\u8fbe\u5230\u6c42\u89e3\u901a\u4fe1\u7ebf\u8def\u6216\u603b\u4ee3\u4ef7\u6700\u5c0f\u7684\u6700\u4f73\u65b9\u6848(\r\u53c2\u8003)\u3002 \u8d70\u904d\u5168\u90e8\u57ce\u5e02\u7684\u8f66\u8d39\u6216\u8005\u8def\u7a0b\u6700\u5c0f\u3002    1 2 3  from networkx.algorithms import tree mst = tree.minimum_spanning_edges(G_karate, algorithm=&#39;prim&#39;, data=False) edgelist = list(mst);edgelist   Community detection(\u793e\u533a\u53d1\u73b0/\u68c0\u6d4b)  2020.3.10 \u4ece\u5177\u4f53\u7684\u4efb\u52a1\u6765\u770b\u6211\u4eec\u4e0d\u59a8\u628a\u793e\u533a\u53d1\u73b0\u5206\u6210\u4ee5\u4e0b\u56db\u7c7b\uff1a  \u56fe\u5206\u5272\n\u56fe\u5206\u5272\u7684\u76f8\u5173\u5de5\u4f5c\u8ba4\u4e3a\u793e\u533a\u7684\u6210\u56e0\u662f\u56e0\u4e3a\u7f51\u7edc\u8fde\u8fb9\u4e4b\u95f4\u5b58\u5728\u201c\u5f3a\u5f31\u8fde\u8fb9\u5173\u7cfb\u201d\uff0c\u4e3b\u8981\u6709\u4e24\u70b9\uff1a\u201c\u4e09\u5143\u95ed\u5305\u201d\u5173\u7cfb\u4e0b\u6f14\u5316\u51fa\u6765\u7684\u3001\u8282\u70b9\u4e4b\u95f4\u76f8\u4e92\u535a\u5f08\u751f\u6210\u7684\u3002\u56e0\u6b64\u5728\u56fe\u5206\u5272\u89c6\u89d2\u4e0b\u7684\u79d1\u5b66\u95ee\u9898\u5c31\u662f\u201c\u5982\u4f55\u8bc6\u522b\u5f3a\u5f31\u8fde\u8fb9\u5173\u7cfb\u201d\uff0c\u4ee3\u8868\u7684\u65b9\u6cd5\u6709betweenness\u3001min-cut\u548c\u4f18\u5316Modularity\u7684\u65b9\u6cd5\u3001CPM\u7b49\u3002\u5176\u4e2d\u5bf9Modulairty\u7684\u4f18\u5316\u53ef\u4ee5\u66f4\u597d\u7684\u89e3\u91ca\u4ec0\u4e48\u662f\u597d\u7684\u793e\u533a\uff0c\u4ee5\u540e\u7684\u5f88\u591a\u65b9\u6cd5\u5305\u62ec\u57fa\u4e8e\u7edf\u8ba1\u6a21\u578b\u7684block model\u90fd\u53ef\u4ee5\u6700\u7ec8\u5f52\u7ed3\u4e3a\u662f\u4f18\u5316Modularity\u7684\u76ee\u6807\u51fd\u6570\u3002Louvain\u5219\u662f\u5c06Modularity\u7684\u4f18\u5316\u8fdb\u884c\u4e86scalable\uff0c\u53ef\u4ee5\u5feb\u901f\u7684\u5e94\u7528\u5728\u5927\u89c4\u6a21\u7684\u7f51\u7edc\u4e0a\u3002Modularity\u7684\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\u5c31\u662f\u5b58\u5728\u8bc6\u522b\u6781\u9650\u7684\u95ee\u9898\u3002 \u56fe\u805a\u7c7b \u56fe\u805a\u7c7b\u7684\u76f8\u5173\u5de5\u4f5c\u5927\u81f4\u7684\u601d\u8def\u662fembedding+\u805a\u7c7b\u3002\u4ee3\u8868\u7684\u65b9\u6cd5\u662f\u8c31\u805a\u7c7b\u3002\u5b83\u5173\u6ce8\u7684\u79d1\u5b66\u95ee\u9898\u662f\u201c\u8282\u70b9\u7684\u7a7a\u95f4\u6620\u5c04\u95ee\u9898\u201d\u3002\u5176\u5b9eNewman\u81ea\u5df1\u4e5f\u8bc1\u660e\u4e86Modularity\u5176\u5b9e\u662f\u5bf9\u6a21\u5757\u5ea6\u77e9\u9635\u8fdb\u884c\u4e00\u4e2a\u8c31\u5206\u6790\u3002\u8fd9\u4e5f\u4f53\u73b0\u4e86Modularity\u65b9\u6cd5\u7684\u666e\u9002\u6027\u548c\u826f\u597d\u7684\u53ef\u89e3\u91ca\u6027\u3002\n \u8282\u70b9\u8868\u8fbe \u7136\u800c\uff0c\u4e0a\u8ff0\u7684\u65b9\u6cd5\u90fd\u662f\u4ece\u5efa\u6a21\u7f51\u7edc\u8fde\u8fb9\u5bc6\u5ea6\u5165\u624b\u7684\uff0c\u6ca1\u6709\u5b9e\u9645\u5efa\u6a21\u7f51\u7edc\u8fde\u8fb9\u7684\u751f\u6210\u8fc7\u7a0b\u3002\u800c\u4e14\u4e0a\u8ff0\u65b9\u6cd5\u8ba4\u4e3a\u6bcf\u4e2a\u8282\u70b9\u4ec5\u4ec5\u5c5e\u4e8e\u4e00\u4e2a\u793e\u533a\uff0c\u5ffd\u7565\u4e86\u793e\u533a\u4e2d\u5b58\u5728\u7684\u91cd\u53e0\u73b0\u8c61\uff0c\u56e0\u6b64\uff0c\u8282\u70b9\u8868\u8fbe\u7684\u601d\u8def\u5c31\u662f\u8ba4\u4e3a\u6bcf\u4e2a\u8282\u70b9\u90fd\u662f\u4e00\u4e2ak\u4e2a\u793e\u533a\u7684assignment\u7684\u8868\u8fbe\u3002\u8fd9\u91cc\u7684\u79d1\u5b66\u95ee\u9898\u5c31\u662f\u201c\u5982\u4f55\u901a\u8fc7\u89c2\u6d4b\u7f51\u7edc\u5b66\u4e60\u5f97\u5230\u8fd9\u79cd\u8282\u70b9\u7684\u9690\u5f0f\u8868\u8fbe\u201d\uff0c\u501f\u9274LDA\u7684\u601d\u60f3Blei\u7b49\u4eba\u63d0\u51fa\u4e86Mixture membership block model\uff08MMSB\uff09\uff0c\u8fd9\u79cd\u57fa\u4e8e\u6982\u7387\u7edf\u8ba1\u65b9\u6cd5\u7684\u751f\u6210\u5f0f\u6a21\u578b\u66f4\u597d\u7684\u89e3\u91ca\u4e86\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u662f\u5982\u4f55\u751f\u6210\u7684\u4ee5\u53ca\u6574\u4e2a\u7f51\u7edc\u662f\u5982\u4f55\u751f\u6210\u7684\uff0c\u901a\u8fc7\u673a\u5668\u5b66\u4e60\u6765\u5b66\u5230\u9690\u53d8\u91cf\u3002\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u7f51\u7edc\u7684\u91cd\u53e0\u5212\u5206\u3002\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u7f51\u7edc\u7684\u89e3\u91ca\u6027\u66f4\u597d\uff0c\u552f\u4e00\u7684\u7f3a\u70b9\u5c31\u662f\u4f18\u5316\u901f\u5ea6\u6162\uff0c\u53ef\u80fd\u4f1a\u4f18\u5316\u5230\u5c40\u90e8\u6700\u4f18\u30022013\u5e74Gopalan\u7b49\u4eba\u5df2\u7ecf\u5c06\u8be5\u6a21\u578b\u8fdb\u884c\u4e86\u52a0\u901f\u53ef\u4ee5\u5904\u7406\u767e\u4e07\u89c4\u6a21\u7684\u7f51\u7edc\u3002\u9664\u6b64\u4e4b\u5916\u7684\u751f\u6210\u6a21\u578b\u8fd8\u6709\u5229\u7528poisson\u5206\u5e03\u5efa\u6a21multigraph\u7684\u4e00\u4e9b\u5de5\u4f5c\uff0c\u8fd9\u6837\u7684\u6a21\u578b\u76f8\u5bf9\u7b80\u5355\u800c\u4e14\u5047\u8bbe\u9650\u5236\u6bd4MMSB\u8981\u5c0f\u4e00\u4e9b\uff0c\u6bd4\u5982Brain Ball 2011 PRE\u7684\u5de5\u4f5c\u548cBrain Karrer \u7684Degree corrected\u7684\u76f8\u5173\u5de5\u4f5c\u3002\n \u5e7f\u4e49\u793e\u533a\u53d1\u73b0 \u9664\u6b64\u4e4b\u5916\uff0c\u7f51\u7edc\u4e2d\u53ef\u80fd\u5171\u5b58\u9664\u793e\u533a\u7ed3\u6784\u4e4b\u5916\u7684\u5176\u4ed6\u805a\u56e2\u7ed3\u6784\uff0c\u6bd4\u5982\u4e8c\u90e8\u7ed3\u6784\u3001\u4e2d\u5fc3-\u8fb9\u7f18\u7ed3\u6784\u7b49\uff0c\u56e0\u6b64\uff0c\u5e7f\u4e49\u793e\u533a\u53d1\u73b0\u7684\u4efb\u52a1\u5c31\u662f\u53d1\u73b0\u7f51\u7edc\u4e2d\u6240\u6709\u7684\u8fde\u8fb9\u6a21\u5f0f\u3002\u6bd4\u5982\u7ecf\u5178\u7684Mixture model\u4ee5\u53caNewman\u7b49\u4eba2015\u5e74\u7684\u76f8\u5173\u5de5\u4f5c\u3002\n    Defination Community detection is a process by which we partition the nodes into a set of groups/clusters according to a certain quality criterion. It is typically used to identify social communities, customers behaviors or web pages topics.\nThe process to identify communities is the following:\n define a quality criterion design an algorithm to optimize this criterion  Quality criteria Quality criteria might be based on :\n internal connections  Internal density of edges Average internal degree   external connections  Expansion Ratio Cut   both  Conductance Normalized cut Modularity    Girvan Newman algorithm A common algorithm to find communities is the Girvan Newman algorithm. It identifies communities by progressively removing edges within the network. We\u2019ll refer to betweenness as the \u201cedge betweenness\u201d. It is a score proportional to the number of shortest paths between pairs of nodes that go through this edge.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  from networkx.algorithms import community import itertools communities_generator = community.girvan_newman(G_karate) top_level_communities = next(communities_generator) next_level_communities = next(communities_generator) third_level_communities = next(communities_generator) # ... more level communities partition = {} for no_com, com in enumerate(top_level_communities): for c in com: partition[c]= no_com pos = nx.spring_layout(G_karate) plt.figure(figsize=(8, 8)) plt.axis(&#39;off&#39;) nx.draw_networkx_nodes(G_karate, pos, node_size=600, cmap=plt.cm.RdYlBu, node_color=list(partition.values())) nx.draw_networkx_edges(G_karate, pos, alpha=0.3) plt.show(G_karate)   Louvain Modularity Modularity is a measure of how well groups have been partitioned into clusters. The only thing we\u2019re doing is to group the closest nodes so that we optimize the modularity criteria.\n1 2 3 4 5 6 7 8 9 10  import community partition = community.best_partition(G_karate) pos = nx.spring_layout(G_karate) plt.figure(figsize=(8, 8)) plt.axis(&#39;off&#39;) nx.draw_networkx_nodes(G_karate, pos, node_size=600, cmap=plt.cm.RdYlBu, node_color=list(partition.values())) nx.draw_networkx_edges(G_karate, pos, alpha=0.3) plt.show(G_karate)   Hierarchical Clustering The idea is to analyze community structures at different scales. We build the dendrogram bottom-up. We start with a cluster at each node and merge the two \u201cclosest\u201d nodes.\n define the matrix of distances between each node identify hierarchical clustering  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31  n = len(G_karate.nodes()) pcc_longueurs = list(nx.all_pairs_shortest_path_length(G_karate)) distances = np.zeros((n, n)) # distances[i, j] is the length of the shortest path between i and j for i in range(n): for j in range(n): distances[i, j] = pcc_longueurs[i][1][j] # --------- # from sklearn.cluster import AgglomerativeClustering clustering = AgglomerativeClustering( n_clusters=4, linkage=&#39;average&#39;, affinity=&#39;precomputed&#39;).fit_predict(distances) partition = {} for clu, node in zip(clustering, G_karate.nodes()): partition[node] = clu pos = nx.spring_layout(G_karate) plt.figure(figsize=(8, 8)) plt.axis(&#39;off&#39;) nx.draw_networkx_nodes(G_karate, pos, node_size=600, cmap=plt.cm.RdYlBu, node_color=list(partition.values())) nx.draw_networkx_edges(G_karate, pos, alpha=0.3) plt.show(G_karate) # nx.draw(G_karate, node_color = clustering)   Clustering Coefficient The clustering coefficient measures how well two nodes tend to cluster together.\n A local clustering coefficient\nThe local clustering coefficient is a ratio of the number of triangles centered at node i over the number of triples centered at node i. A global coefficient measures\nthe density of triangles (local clusters) in the graph  1 2 3 4 5  # List of local clustering coefficients list(nx.clustering(G_karate).values()) # Global clustering coefficient nx.average_clustering(G_karate)   Centrality algorithms ( SNA\u793e\u4f1a\u5173\u7cfb\u7f51\u7edc\u5206\u6790) Centrality measures how important a node is. This is not a clear definition, but it\u2019s useful when we want to identify important web pages, bottlenecks in transportation networks\u2026\nDegree Centrality (\u5ea6\u4e2d\u5fc3\u5ea6) Degree Centrality counts the number of walks of length 1 ending at node $$i$$ (\u76f4\u63a5\u76f8\u8fde). It measures incoming and outgoing relationship.Degree Centrality is used to identify the most influential persons on a social network for example\n\r\u4f8b\u5b50\uff1a\n\u8bbe\u60f3\u4e00\u4e0b\uff0c\u4f60\u5728\u5fae\u4fe1\u4e0a\u6709\u4e2a\u8d26\u53f7\uff0c\u90a3\u4e48\u662f\u4e0d\u662f\u610f\u5473\u7740\u5fae\u4fe1\u597d\u53cb\u6570\u91cf\u8d8a\u591a\uff0c\u90a3\u4e48\u4f60\u7684\u793e\u4ea4\u5708\u5b50\u8d8a\u5e7f\uff1f\uff08\u5047\u8bbe\u90fd\u662f\u771f\u5b9e\u597d\u53cb\uff0c\u4e0d\u8003\u8651\u5fae\u5546\u795e\u9a6c\u7684\u5947\u8469\u60c5\u51b5\uff09\u6bd4\u5982\u6211\u670920\u4e2a\u597d\u53cb\uff0c\u90a3\u4e48\u610f\u5473\u774020\u4e2a\u7ed3\u70b9\u4e0e\u6211\u76f8\u8fde\u3002\u5982\u679c\u4f60\u670950\u4e2a\u597d\u53cb\uff0c\u90a3\u4e48\u610f\u5473\u7740\u4f60\u7684\u70b9\u5ea6\u4e2d\u5fc3\u5ea6\u6bd4\u6211\u9ad8\uff0c\u793e\u4ea4\u5708\u5b50\u6bd4\u6211\u5e7f\u3002\u8fd9\u4e2a\u5c31\u662f\u70b9\u5ea6\u4e2d\u5fc3\u6027\u7684\u6982\u5ff5\u3002\u5f53\u7136\uff0c\u521a\u624d\u8fd9\u4e2a\u60c5\u51b5\u662f\u65e0\u5411\u56fe\u7684\u60c5\u5f62\uff0c\u5982\u679c\u662f\u6709\u5411\u56fe\uff0c\u9700\u8981\u8003\u8651\u7684\u51fa\u5ea6\u548c\u5165\u5ea6\u7684\u95ee\u9898\u3002\u5728\u521a\u624d\u7684\u57fa\u7840\u4e0a\u62d3\u5c55\u4e00\u4e0b\uff0c\u5047\u5982\u6211\u4eec\u8981\u6bd4\u8f83\u4f60\u5728\u5fae\u535a\u548c\u5fae\u4fe1\u4e0a\u7684\u70b9\u5ea6\u4e2d\u5fc3\u5ea6\uff0c\u521a\u624d\u7684\u65b9\u6cd5\u662f\u5426\u9002\u7528\uff1f\u5982\u679c\u8bf4\u4f7f\u7528\u5fae\u4fe1\u4e0e\u5fae\u535a\u7684\u4eba\u6570\u5dee\u4e0d\u591a\uff0c\u90a3\u4e48\u7684\u786e\u53ef\u4ee5\u3002\u4f46\u662f\u5982\u679c\u8bf4\u7528\u6237\u6570\u91cf\u4e0d\u4e00\u6837\u5462\uff1f\u90a3\u4e48\u6211\u4eec\u9700\u8981\u8003\u8651\u5230\u53bb\u89c4\u6a21\u5316\u7684\u95ee\u9898\uff0c\u8fd9\u5c31\u662f\u6807\u51c6\u5316\u7684\u70b9\u5ea6\u4e2d\u5fc3\u6027\u7684\u7406\u5ff5\u3002\n1 2  c_degree = nx.degree_centrality(G_karate) c_degree = list(c_degree.values())   PageRank Algorithm PageRank estimates a current node\u2019s importance from its linked neighbors and then again from their respective neighbors.\nPageRank is** usually computed on directed graphs**. However, it will also execute on undirected graphs by converting each edge in the directed graph to two edges.\n\u4f60\u53ef\u4ee5\u5f88\u8f7b\u6613\u5730\u627e\u5230\u6700\u53d7\u6b22\u8fce\u7684\u7f51\u9875\u3002\u4f46\u662f\uff0cPageRank\u7684\u601d\u60f3\u8ba4\u4e3a\uff0c\u6307\u6807\u6700\u597d\u8fd8\u9700\u8981\u8003\u8651\u5230\u6307\u5411\u4f60\u7684\u90a3\u4e9b\u7f51\u9875\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c**\u6765\u81ea\u53d7\u6b22\u8fce\u7684\u7f51\u9875\u7684\u8df3\u8f6c\u5e94\u8be5\u91cd\u4e8e\u4e0d\u592a\u53d7\u6b22\u8fce\u7684\u7f51\u9875\u7684\u8df3\u8f6c\u3002**\u8fd9\u5c31\u662fPageRank\u601d\u60f3\u7684\u7cbe\u534e\uff0cGoogle\u5c31\u662f\u5229\u7528\u8fd9\u4e00\u601d\u60f3\u6765\u7ed9\u7f51\u7ad9\u6392\u540d\u7684\u3002\u8fd9\u91cc\u7684\u601d\u60f3\u4f9d\u636e\u548c\u7279\u5f81\u5411\u91cf\u4e2d\u5fc3\u6027\u5176\u5b9e\u662f\u4e00\u81f4\u7684(\r\u53c2\u8003)\u3002\n\u53c2\u8003\n1 2 3 4 5 6 7 8 9 10  pr = nx.pagerank(G_karate, alpha=0.9) pr = list(pr.values()) pos = nx.spring_layout(G_karate) nx.draw(G_karate, cmap=plt.get_cmap(&#39;inferno&#39;), node_color=pr, node_size=600, pos=pos, with_labels=True)   Eigenvector Centrality (\u7279\u5f81\u5411\u91cf\u4e2d\u5fc3\u5ea6) \u7279\u5f81\u5411\u91cf\u5f97\u5206\u8f83\u9ad8\u610f\u5473\u7740\u8be5\u8282\u70b9\u4e0e\u8bb8\u591a\u81ea\u8eab\u5f97\u5206\u8f83\u9ad8\u7684\u8282\u70b9\u76f8\u8fde\u63a5\u3002\nEigenvector centrality is a measure of the influence of a node in a network. It assigns relative scores to all nodes in the network based on the concept that connections to high-scoring nodes contribute more to the score of the node in question than equal connections to low-scoring nodes. Google&rsquo;s PageRank is a variant of the Eigenvector centrality measure. Another closely related centrality measure is Katz centrality.\n1 2  c_eigenvector = nx.eigenvector_centrality(G_karate) c_eigenvector = list(c_eigenvector.values())   Closeness Centrality (\u63a5\u8fd1\u5ea6\u4e2d\u5fc3\u5ea6) Closeness Centrality detects nodes that are can spread information efficiently through a graph.It can be used to identify fake news accounts or in terrorist cells to isolate the individuals that can spread information to the rest of the graph.\n\u4f8b\u5b50\uff1a\n\u5bf9\u4e8e\u4e86\u89e3\u56fe\u8bba\u7684\u670b\u53cb\u800c\u8a00\uff0c\u6700\u77ed\u8def\u8fd9\u4e2a\u6982\u5ff5\u4e00\u5b9a\u4e0d\u964c\u751f\u3002\u6211\u4eec\u8bbe\u60f3\u4e00\u4e2a\u5b9e\u9645\u751f\u6d3b\u4e2d\u7684\u573a\u666f\uff0c\u6bd4\u5982\u4f60\u8981\u5efa\u4e00\u4e2a\u5927\u578b\u7684\u5a31\u4e50\u5546\u573a\uff0c\u4f60\u53ef\u80fd\u4f1a\u5e0c\u671b\u5468\u56f4\u7684\u987e\u5ba2\u5230\u8fbe\u8fd9\u4e2a\u5546\u573a\u7684\u8ddd\u79bb\u90fd\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u77ed\u3002\u8fd9\u4e2a\u5c31\u6d89\u53ca\u5230\u63a5\u8fd1\u4e2d\u5fc3\u6027\u7684\u6982\u5ff5\uff0c\u63a5\u8fd1\u4e2d\u5fc3\u6027\u7684\u503c\u4e3a\u8def\u5f84\u957f\u5ea6\u7684\u5012\u6570\u3002\u63a5\u8fd1\u4e2d\u5fc3\u6027\u9700\u8981\u8003\u91cf\u6bcf\u4e2a\u7ed3\u70b9\u5230\u5176\u5b83\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u7684\u5e73\u5747\u957f\u5ea6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u7ed3\u70b9\u800c\u8a00\uff0c\u5b83\u8ddd\u79bb\u5176\u5b83\u7ed3\u70b9\u8d8a\u8fd1\uff0c\u90a3\u4e48\u5b83\u7684\u4e2d\u5fc3\u5ea6\u8d8a\u9ad8\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u90a3\u79cd\u9700\u8981\u8ba9\u5c3d\u53ef\u80fd\u591a\u7684\u4eba\u4f7f\u7528\u7684\u8bbe\u65bd\uff0c\u5b83\u7684\u63a5\u8fd1\u4e2d\u5fc3\u5ea6\u4e00\u822c\u662f\u6bd4\u8f83\u9ad8\u7684\u3002\n1 2  c_closeness = nx.closeness_centrality(G_karate) list(c_closeness.values())   Betweenness Centrality (\u5c45\u95f4\u6027\u4e2d\u5fc3\u5ea6/\u4e2d\u4ecb\u4e2d\u5fc3\u6027) Betweenness Centrality detects the amount of influence a node has over the flow of information in a graph. It is often used to find nodes that serve as a bridge from one part of a graph to another, for example in the package delivery processor in a telecommunication network, or in the propagation of fake news. The betweenness centrality measures the number of times a node acts as a bridge between two nodes\n\u4f8b\u5b50:\n\u8fd9\u4e2a\u5ea6\u91cf\u5f88\u6709\u610f\u601d\u3002\u8fd9\u4e2a\u6709\u70b9\u50cf\u662f\u6211\u4eec\u8eab\u8fb9\u90a3\u79cd\u793e\u4ea4\u8fbe\u4eba\uff0c\u6211\u4eec\u8ba4\u8bc6\u7684\u4e0d\u5c11\u670b\u53cb\u53ef\u80fd\u90fd\u662f\u901a\u8fc7\u4ed6/\u5979\u8ba4\u8bc6\u7684\uff0c\u8fd9\u4e2a\u4eba\u8d77\u5230\u4e86\u4e2d\u4ecb\u7684\u4f5c\u7528\u3002\u4e2d\u4ecb\u4e2d\u5fc3\u6027\u6307\u7684\u662f\u4e00\u4e2a\u7ed3\u70b9\u62c5\u4efb\u5176\u5b83\u4e24\u4e2a\u7ed3\u70b9\u4e4b\u95f4\u6700\u77ed\u8def\u7684\u6865\u6881\u7684\u6b21\u6570\u3002\u4e00\u4e2a\u7ed3\u70b9\u5145\u5f53\u201c\u4e2d\u4ecb\u201d\u7684\u6b21\u6570\u8d8a\u9ad8\uff0c\u5b83\u7684\u4e2d\u4ecb\u4e2d\u5fc3\u5ea6\u5c31\u8d8a\u5927\u3002\u5982\u679c\u8981\u8003\u8651\u6807\u51c6\u5316\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ed3\u70b9\u627f\u62c5\u6700\u77ed\u8def\u6865\u6881\u7684\u6b21\u6570\u9664\u4ee5\u6240\u6709\u7684\u8def\u5f84\u6570\u91cf\u3002\n1 2  c_betweenness = nx.betweenness_centrality(G_karate) list(c_betweenness.values())   \u6765\u6e90\ngraph learning There are two main tasks in graph learning :\n Link prediction Node labeling  Linke prediction (\u94fe\u8def\u9884\u6d4b) Predictions are useful to predict future relations or missing edges when the graph is not fully observed for example.\ndifferent similarity scores\n Jaccard Coefficient\nCommon Neighbors =&gt; a normalized common neighbors version Adamic-Adar index\ncommon elements with very large neighborhoods are less significant when predicting a connection between two nodes compared to elements shared between a small number of nodes Preferential attachement  How do we evaluate the link prediction? We must hide a subset of node pairs, and predict their links based on the rules defined above. We then evaluate the proportion of correct predictions for dense graphs, or use Area under the Curve criteria for Sparse graphs.\n1 2 3 4 5 6 7 8 9 10 11  from sklearn.metrics import roc_curve, roc_auc_score import matplotlib.pyplot as plt n = G_karate.number_of_nodes() m = G_karate.number_of_edges() print(&#34;Number of nodes : %d&#34; % n) print(&#34;Number of edges : %d&#34; % m) # \u8fde\u901a\u5206\u91cf ??? print(&#34;Number of connected components : %d&#34; % nx.number_connected_components(G_karate))    out:\nNumber of nodes : 34\nNumber of edges : 78\nNumber of connected components : 1  1 2 3 4 5 6 7 8 9 10 11 12 13 14  # Remove 20% of the edges proportion_edges = 0.2 edge_subset = random.sample(G_karate.edges(), int(proportion_edges * G_karate.number_of_edges())) # Create a copy of the graph and remove the edges G_karate_train = G_karate.copy() G_karate_train.remove_edges_from(edge_subset) plt.figure(figsize=(12,8)) nx.draw(G_karate_train) edge_subset_size = len(list(edge_subset)) print(&#34;Number of edges deleted : %d&#34; % edge_subset_size) print(&#34;Number of edges remaining : %d&#34; % (m - edge_subset_size))    out:\nNumber of edges deleted : 15\nNumber of edges remaining : 63  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55  # Make prediction using Jaccard Coefficient pred_jaccard = list(nx.jaccard_coefficient(G_karate_train)) &#39;&#39;&#39; pred_jaccard: a first node, a second node and a jaccard score [ (0, 32, 0.15), (0, 33, 0.125), ... ] &#39;&#39;&#39; # label_jaccard: whether the node tuple(n,v) is in edge_subset score_jaccard, label_jaccard = zip(*[(s, (u,v) in edge_subset) for (u,v,s) in pred_jaccard]) &#39;&#39;&#39; Compute the ROC AUC Score fpr: False positive rate, tpr: True postive rate, auc: the area under the ROC curve &#39;&#39;&#39; fpr_jaccard, tpr_jaccard, _ = roc_curve(label_jaccard, score_jaccard) auc_jaccard = roc_auc_score(label_jaccard, score_jaccard) # Prediction using Adamic Adar  pred_adamic = list(nx.adamic_adar_index(G_karate_train)) score_adamic, label_adamic = zip(*[(s, (u,v) in edge_subset) for (u,v,s) in pred_adamic]) # Compute the ROC AUC Score fpr_adamic, tpr_adamic, _ = roc_curve(label_adamic, score_adamic) auc_adamic = roc_auc_score(label_adamic, score_adamic) # Compute the Preferential Attachment pred_pref = list(nx.preferential_attachment(G_karate_train)) score_pref, label_pref = zip(*[(s, (u,v) in edge_subset) for (u,v,s) in pred_pref]) fpr_pref, tpr_pref, _ = roc_curve(label_pref, score_pref) auc_pref = roc_auc_score(label_pref, score_pref) plt.figure(figsize=(10,8)) plt.plot([0, 1], [0, 1], &#39;k--&#39;) plt.plot(fpr_jaccard, tpr_jaccard, label=&#39;jaccard(auc: {:.3})&#39;.format(auc_jaccard)) plt.plot(fpr_adamic, tpr_adamic, label=&#39;adamic(auc: {:.3})&#39;.format(auc_adamic)) plt.plot(fpr_pref, tpr_pref, label=&#39;pref(auc: {:.3})&#39;.format(auc_pref)) plt.xlabel(&#39;False positive rate&#39;) plt.ylabel(&#39;True positive rate&#39;) plt.title(&#39;ROC curve&#39;) plt.legend(loc=&#39;best&#39;) plt.show()   \u53c2\u8003: 1, 2\nNode Labeling Given a graph where some nodes are not labeled, we want to predict their labels. This is in some sense a semi-supervised learning problem.\nOne common way to deal with such problems is to assume that there is a certain smoothness on the graph. The Smoothness assumption states that points connected via a path through high-density regions on the data are likely to have similar labels. This is the main hypothesis behind the Label Propagation Algorithm(LPA). LPA is a fast algorithm for finding communities in a graph using network structure alone as its guide, without any predefined objective function or prior information about the communities.\ngraph embedding we saw ways to learn in graphs, i.e. make node labeling and edge prediction. One of the limitations of graphs remains the absence of vector features. Just like in NLP, we face structured data. But just like in NLP, we can learn an embedding of the graph! There are several levels of embedding in a graph:\n Embedding graph components (nodes, edges, features\u2026) (\rNode2Vec) Embedding sub-parts of a graph or a whole graph (\rGraph2Vec)  After learning an embedding, it can be used as features for several tasks :\n classification recommender systems  Embedding process Node Embedding According to the authors: \u201cnode2vec is an algorithmic framework for representational learning on graphs. Given any graph, it can learn continuous feature representations for the nodes, which can then be used for various downstream machine learning tasks.\u201d How does Node2Vec work? The model learns low-dimensional representations for nodes by optimizing a neighborhood preserving objective, using random walks.\n1 2 3 4 5 6 7 8 9 10  from node2vec import Node2Vec node2vec = Node2Vec(G_karate, dimensions=64, walk_length=30, num_walks=200, workers=4) model = node2vec.fit(window=10, min_count=1, batch_words=4) # get the vector of a node model.wv.get_vector(&#39;2&#39;) # identify the most similar node model.wv.most_similar(&#39;2&#39;)   Edge Embedding 1 2 3 4 5 6 7 8 9 10  from node2vec.edges import HadamardEmbedder edges_embs = HadamardEmbedder(keyed_vectors=model.wv) # get the vector of an edge edges_embs[(&#39;1&#39;, &#39;2&#39;)] # identify the most similar edges edges_kv = edges_embs.as_keyed_vectors() edges_kv.most_similar(str((&#39;1&#39;, &#39;2&#39;)))   Graph Embedding There are also ways to embed a graph or a sub-graph directly. Graph embedding techniques take graphs and embed them in a lower-dimensional continuous latent space before passing that representation through a machine learning model.\nAn approach has been developed in the Graph2Vec paper and is useful to represent graphs or sub-graphs as vectors, thus allowing graph classification or graph similarity measures for example.\n",
        "description": "",
        "id": 118,
        "section": "posts",
        "tags": [
            "\u5b66\u4e60\u7b14\u8bb0",
            "\u56fe\u8bba",
            "graph",
            "complex network"
        ],
        "title": "\u5b66\u4e60\u7b14\u8bb0-Graph Learning(\u56fe\u8bba) Tutorial",
        "uri": "/posts/notes/124/"
    },
    {
        "content": " 12\u6708\u4efd\u8981\u53bb\u7f8e\u56fd\u534e\u76db\u987f\u7279\u533a\u53c2\u52a0AGU Fall Meeting\uff0c\u5341\u4e00\u6536\u5230\u9080\u8bf7\u51fd\uff0c\u4e4b\u540e\u5c31\u5f00\u59cb\u7d27\u5f20\u7684\u51c6\u5907\u7f8e\u7b7e\u6750\u6599\u3002\u5728\u51c6\u5907\u4e00\u661f\u671f\u4e4b\u540e\uff0c\u7533\u8bf7\u4e8610.15\u7684\u7b7e\u8bc1\u9762\u8bd5\u3002\u60f3\u7740\u6ca1\u53bb\u8fc7\u5e7f\u5dde\uff0c\u7136\u540e\u6bdb\u6bdb\u5728\u90a3\u8fb9\uff0c\u5c31\u60f3\u8d81\u7740\u5468\u672b\u65e9\u4e24\u5929\u8fc7\u53bb\u6d6a\u4e00\u5708~\n 12\u53f7\u6df1\u591c\u5750\u706b\u8f66\u51fa\u53d1\uff0c13\u53f7\u4e0a\u534810\u70b9\u534a\u5de6\u53f3\u5230\u7684\u5e7f\u5dde\u7ad9\uff0c\u6bdb\u6bdb\u5df2\u7ecf\u5230\u51fa\u7ad9\u53e3\u7b49\u6211\u4e86\u3002\u611f\u89c9\u6709\u4e9b\u610f\u5916\uff0c\u4e5f\u6709\u4e9b\u611f\u52a8\u7684\u3002\u56e0\u4e3a\u5979\u65e9\u4e0a\u53bb\u4e0a\u73ed\u4e86\uff0c\u7a7f\u7740\u4e00\u8eab\u6b63\u88c5\u5c31\u8fc7\u6765\u4e86\u3002\u5979\u7a7f\u6b63\u88c5\u633a\u597d\u770b\u7684\uff0c\u4e5f\u663e\u6210\u719f\uff0c\u4f46\u662f\u6211\u603b\u662f\u770b\u4e0d\u4e60\u60ef\uff0c\u53ef\u80fd\u662f\u56e0\u4e3a\u5979\u5728\u6211\u5fc3\u4e2d\u4e00\u76f4\u90fd\u662f\u5c0f\u59b9\u59b9\u7684\u7f18\u6545\u5427\u3002\u5230\u4e86\u5979\u5bbf\u820d\u5927\u7ea611\u70b9\u534a\u5de6\u53f3\u4e86\u5427\u3002\u8ddf\u5979\u5728\u9644\u8fd1\u4e70\u4e86\u4e00\u4e9b\u83dc\uff0c\u7136\u540e\u4e0b\u53a8\u7ed9\u6211\u7092\u4e86\u4e09\u4e2a\u83dc\uff0c\u5473\u9053\u975e\u5e38\u68d2~\n\u5750\u706b\u8f66\u7761\u5f97\u4e0d\u597d\uff0c\u5403\u5b8c\u996d\u540e\u5c31\u53bb\u7761\u4e86\u4e00\u89c9\u3002\u7a0d\u5fae\u4f11\u606f\u4e86\u4e00\u4f1a\u5c31\u6253\u7b97\u51fa\u53bb\u8d70\u8d70\u4e86\u3002\u56e0\u4e3a\u65f6\u95f4\u6bd4\u8f83\u77ed\uff0c\u4e5f\u6ca1\u6709\u8ba1\u5212\u8d70\u592a\u8fdc\uff0c\u5c31\u5728\u9644\u8fd1\u7684\u66a8\u5357\u5927\u5b66\u7684\u4e00\u4e2a\u4e8c\u7ea7\u5b66\u9662\u968f\u4fbf\u8f6c\u4e86\u8f6c\u3002\u968f\u4fbf\u804a\u4e86\u804a\uff0c\u611f\u89c9\u4e5f\u5c31\u6ca1\u90a3\u4e48\u62d8\u675f\u4e86\u3002\u4e4b\u540e\u5230\u4e86\u63a5\u8fd1\u5348\u996d\u7684\u65f6\u95f4\uff0c\u6211\u4eec\u53bb\u7684\u4e00\u5bb6\u6f6e\u6c55\u725b\u8089\u706b\u9505\u3002\u5473\u9053\u786e\u5b9e\u4e0d\u9519\u3002\u56e0\u4e3a\u4e2d\u5348\u5403\u7684\u6bd4\u8f83\u9971\u7684\u7f18\u6545\uff0c\u706b\u9505\u6ca1\u6709\u5403\u592a\u591a\u3002\u5403\u5b8c\u706b\u9505\u540e\uff0c\u6bdb\u5b50\u63d0\u8bae\u53bb\u770b\u7535\u5f71\uff0c\u5979\u8bf4\u5979\u5728\u8fd9\u8fb9\u5de5\u4f5c\u8fd9\u4e48\u4e45\uff0c\u4e00\u76f4\u90fd\u662f\u4e00\u4e2a\u4eba\u770b\u7535\u5f71\uff0c\u4e00\u4e2a\u4eba\u5403\u996d\uff0c\u4e00\u4e2a\u4eba\u4e0a\u73ed\uff0c\u60f3\u8ba9\u6211\u966a\u5979\u770b\u7535\u5f71\u3002\u6211\u8bf4\u597d\u5440\u3002\u6211\u4eec\u5c31\u5728\u706b\u9505\u5e97\u9644\u8fd1\u7684\u4e00\u4e2a\u7535\u5f71\u9662\u770b\u7684\u3002\u671f\u95f4\u6211\u4eec\u53bb\u4e86\u4e00\u5bb6\u5ba0\u7269\u5e97\uff0c\u56e0\u4e3a\u6211\u8bf4\u4f60\u53ef\u4ee5\u4e70\u4e00\u53ea\u5ba0\u7269\u966a\u7740\u4f60\u5440\u3002\u4f46\u662f\u5979\u56e0\u4e3a\u6bcf\u4e2a\u6708\u90fd\u8981\u53bb\u51e0\u5929\u676d\u5dde\u7684\u7f18\u6545\uff0c\u90a3\u6bb5\u65f6\u95f4\u4e0d\u80fd\u966a\u5b83\u3002\u770b\u5979\u7684\u6837\u5b50\u8fd8\u662f\u86ee\u559c\u6b22\u5ba0\u7269\u7684\u3002\u4e4b\u540e\u6211\u4eec\u53bb\u770b\u4e86\u7535\u5f71\uff0c\u55dd\u55dd\u8001\u5e08\u3002\u5370\u5ea6\u7535\u5f71\uff0c\u8bb2\u5e08\u751f\u5173\u7cfb\uff0c\u6559\u80b2\u65b9\u5f0f\u7684\uff0c\u6574\u4e2a\u7535\u5f71\u9662\u91cc\u5927\u591a\u6570\u90fd\u662f\u5bb6\u957f\u5e26\u7740\u5b69\u5b50\u6765\u7684\uff0c\u5c31\u6211\u548c\u6bdb\u6bdb\u4e24\u4e2a\u4eba\u4e0d\u662f\u3002\u3002\u3002\u54c8\u54c8\u3002\u770b\u5b8c\u611f\u89c9\u8fd8\u662f\u633a\u4e0d\u9519\u7684\uff0c\u7b11\u70b9\u5145\u8db3\uff0c\u5267\u60c5\u6709\u4e9b\u8001\u5957 \u3002\u770b\u5b8c\u7535\u5f71\u4e4b\u540e\u5c31\u56de\u5230\u5bbf\u820d\u4f11\u606f\u4e86\uff0c\u78b0\u5230\u4e86\u5979\u4eec\u540c\u4f4f\u7684\u820d\u53cb\u3002\u867d\u7136\u90fd\u6709\u72ec\u81ea\u7684\u623f\u95f4\uff0c\u4f46\u662f\u611f\u89c9\u7537\u5973\u540c\u4f4f\u4e00\u4e2a\u5957\u95f4\u8fd8\u662f\u86ee\u5c34\u5c2c\u7684\u3002\u665a\u4e0a\u7761\u89c9\u6709\u4e9b\u4e0d\u81ea\u5728\u3002\u665a\u4e0a2\u70b9\u591a\u88ab\u868a\u5b50\u53ee\u8d77\u6765\u4e86\u3002\u5fcd\u4e86\u4e00\u4f1a\u53d7\u4e0d\u4e86\u4e86\u5c31\u8d77\u6765\u5f00\u706f\u6253\u868a\u5b50\u3002\u770b\u81ea\u5df1\u8eab\u4e0a\u88ab\u54ac\u4e86\u7ea2\u4e00\u7247\u7ea2\u4e00\u7247\u7684\u3002\u53cd\u6b63\u7761\u4e0d\u7740\uff0c\u73a9\u4e86\u4f1a\u624b\u673a\u3002\u542c\u542c\u6b4c\uff0c\u73a9\u7d2f\u4e86\u6ca1\u4e00\u4f1a\u5c31\u7761\u7740\u4e86\u3002\n\u7b2c\u4e8c\u5929\u6bdb\u5b50\u8bf7\u5047\u4e86\u3002\u5e26\u6211\u73a9\u4e86\u4e00\u6574\u5929\u3002\u65e9\u4e0a\u6211\u65e9\u65e9\u7684\u8d77\u5e8a\u4e86\u3002\u5728\u5ba2\u5385\u73a9\u624b\u673a\u3002\u770b\u4e86\u770b\u77e5\u4e4e\u4e0a\u9762\u7b7e\u7684\u4e00\u4e9b\u5206\u4eab\u3002\u6574\u7406\u4e86\u4e00\u4e9b\u5e38\u95ee\u95ee\u9898\u548c\u7b54\u6848\u3002\u5730\u7406\u5927\u6570\u636e\u7684\u53cc\u6708\u62a5\u4e5f\u6574\u7406\u597d\u4e86\u53d1\u7ed9\u9676\u8001\u5e08\u3002\u5927\u7ea610\u70b9\u949f\u5de6\u53f3\uff0c\u6bdb\u5b50\u8d77\u6765\u4e86\uff0c\u6536\u62fe\u4e00\u4f1a\u5c31\u51fa\u53d1\u5403\u201c\u65e9\u8336\u201d\u5566\u3002\u53bb\u7684\u9644\u8fd1\u4e00\u4e2a\u996d\u5e97\uff0c\u91cc\u9762\u505a\u4e86\u597d\u591a\u4eba\u3002\u5927\u591a\u90fd\u662f\u8001\u5934\u8001\u592a\u592a\uff0c\u56f4\u5728\u4e00\u684c\u804a\u5929\u3002\u5076\u5c14\u6709\u4e00\u684c\u662f\u5e74\u8f7b\u4eba\u3002\u6bdb\u5b50\u8bf4\u8fd9\u8fb9\u5403\u65e9\u70b9\u7684\u5f88\u591a\u8001\u4eba\u3002\u4ece\u65e9\u4e0a\u70b9\u5355\u53ef\u4ee5\u4e00\u76f4\u505a\u5230\u4e0b\u5348\u3002\u55ef\uff0c\u8fd9\u8fb9\u8001\u5e74\u4eba\u7684\u751f\u6d3b\u65b9\u5f0f\u786e\u5b9e\u60a0\u95f2\u3002\u4e0a\u7684\u201c\u65e9\u70b9\u201d\u90fd\u5f88\u7cbe\u81f4\uff0c\u53e3\u5473\u504f\u6e05\u6de1\uff0c\u5473\u9053\u5f88\u4e0d\u9519\uff08\u6211\u559c\u6b22\u5403\u6e05\u6de1\uff09\u3002\u8fd9\u8fb9\u7684\u80a0\u7c89\u5473\u9053\u5f88\u597d\uff0c\u521a\u5f00\u59cb\u6211\u4ee5\u4e3a\u80a0\u7c89\u662f\u52a0\u5927\u80a0\u7684\u7ec6\u7c89\u6216\u8005\u5bbd\u7c89\uff0c\u770b\u5230\u4e4b\u540e\u5c31\u77e5\u9053\u7406\u89e3\u9519\u4e86\u3002\u539f\u6765\u662f\u7c7b\u4f3c\u4e8e\u201c\u80a0\u201d\u7684\u3002\u8fd8\u6709\u4e00\u4e2a\u828b\u5934\u84b8\u6392\u9aa8\u3002\u5473\u9053\u4e5f\u4e0d\u9519\u3002\u51e4\u722a\u6211\u6ca1\u5403\uff0c\u5979\u5168\u5305\u4e86\u3002\n\u5403\u996d\u540e\u5927\u7ea6\u4e2d\u5348\u4e86\u3002\u6211\u4eec\u505a\u5728\u9644\u8fd1\u5750\u516c\u4ea4\u8f6c\u5730\u94c1\uff0c\u7136\u540e\u5230\u4e86\u4e2d\u5c71\u5927\u5b66\u7684\u4e00\u4e2a\u5c0f\u95e8\uff0c\u987a\u7740\u4eba\u6d41\u5c31\u6e9c\u8fdb\u53bb\u4e86\uff08\u4e4b\u540e\u8d70\u5927\u95e8\u4e0d\u8ba9\u8fdb\uff09\u3002\u91cc\u9762\u73af\u5883\u633a\u4e0d\u9519\u7684\u3002\u975e\u5e38\u5e7d\u96c5\u60c5\u666f\uff0c\u7eff\u5316\u505a\u7684\u975e\u5e38\u597d\uff0c\u6570\u76ee\u90fd\u5f88\u633a\u76f4\uff0c\u7c97\u5927\uff0c\u770b\u7740\u975e\u5e38\u60a0\u4e45\u7684\u6837\u5b50\u3002\u5efa\u7b51\u975e\u5e38\u53e4\u5178\uff0c\u4e0e\u73b0\u4ee3\u5efa\u7b51\u6837\u5f0f\u4e0d\u540c\uff0c\u6ca1\u6709\u90a3\u79cd\u5446\u677f\u7684\u6559\u5b66\u697c\u7684\u6837\u5b50\u3002\u5916\u8868\u7684\u7ea2\u8272\u5899\u4f53\u7ed9\u4eba\u4e00\u79cd\u5fc3\u65f7\u795e\u6021\u7684\u611f\u89c9\u3002\u50cf\u662f\u4e00\u4f4d\u5750\u5728\u957f\u6905\u4e0a\u7684\u8001\u5e08\uff0c\u662f\u8ba9\u4eba\u8083\u7136\u8d77\u656c\u7684\u6837\u5b50\u3002\u201c\u516c\u56ed\u201d\u91cc\u7684\u96d5\u5851\u90fd\u5f88\u6709\u795e\u97f5\uff0c\u6ca1\u6709\u7279\u522b\u5927\u7684\u4f53\u79ef\uff0c\u5374\u7ed9\u4eba\u4e00\u79cd\u6df1\u6df1\u7684\u81ea\u8c6a\u611f\u3002\n\u5728\u5b66\u6821\u7684\u5496\u5561\u5e97\u5750\u4e86\u5750\u3002\u70b9\u4e86\u4e00\u4e9b\u6c34\u679c\u548c\u8336\u70b9\u3002\u73af\u5883\u633a\u4e0d\u9519\u7684\uff0c\u53ef\u80fd\u662f\u4e2d\u5348\u7684\u7f18\u6545\uff0c\u4eba\u4e0d\u662f\u5f88\u591a\u3002\u7b49\u4e86\u4e00\u6bb5\u65f6\u95f4\u8336\u70b9\u8fd8\u6ca1\u6709\u4e0a\uff0c\u6211\u4eec\u5c31\u53d6\u6d88\u7136\u540e\u79bb\u5f00\u4e86\u3002\u4ece\u53e6\u4e00\u95e8\u51fa\u6765\u5c31\u80fd\u770b\u5230\u4e2d\u5c71\u5927\u5b66\u7684\u724c\u574a\uff0c\u7acb\u5728\u5927\u5b66\u95e8\u53e3\u548c\u73e0\u6c5f\u4e4b\u95f4\u3002\u4e4b\u540e\u6211\u4eec\u9a91\u7740\u6469\u62dc\u5355\u8f66\uff0c\u6cbf\u7740\u73e0\u6c5f\u8fb9\u5411\u5e7f\u5dde\u5854\u65b9\u5411\u524d\u884c\u3002\u4e00\u8def\u6d77\u98ce\u76f8\u4f34\uff0c\u975e\u5e38\u8212\u9002\u3002\u7b2c\u4e8c\u5929\u91cd\u6e29\u6b64\u8def\u7ebf\u4f9d\u65e7\u5982\u6b64\u3002\n\u6ca1\u6709\u591a\u4e45\u5230\u4e86\u5e7f\u5dde\u5854\u3002\u767d\u5929\u7684\u5e7f\u5dde\u5854\uff0c\u4fe8\u7136\u662f\u4e00\u5ea7\u9ad8\u8038\u7684\u96d5\u50cf\u3002\u522b\u81f4\u7684\u66f2\u7ebf\u3002\u7ec6\u817b\u7684\u5efa\u7b51\u3002\u6ca1\u6709\u706f\u5149\u53d8\u5316\u7684\u4fee\u9970\uff0c\u4e5f\u522b\u65e0\u4ed6\u8272\u3002\u6211\u4eec\u5750\u7740\u6709\u8f68\u7535\u8f66\u6cbf\u7740\u98ce\u666f\u7ebf\u5750\u5230\u4e86\u7ec8\u70b9\u7ad9\uff0c\u7136\u540e\u53c8\u5750\u4e86\u56de\u6765\u3002\u4e4b\u540e\u5230\u4e86\u4e00\u4e2a\u5c0f\u5403\u8857\u3002\u6211\u5fd8\u8bb0\u662f\u4ec0\u4e48\u540d\u5b57\uff0c\u5177\u4f53\u7684\u4f4d\u7f6e\u4e86\u3002\u4e0d\u8fc7\u597d\u5403\u7684\u5f88\u591a\uff0c\u714e\u997c\u679c\u5b50\u3002\u53ef\u53e3\u7684\u751c\u70b9\uff0c\u597d\u5403\u7684\u62ab\u8428\u3002\u8d70\u4e86\u4e00\u5929\u771f\u7684\u597d\u7d2f\uff0c\u4e4b\u540e\u6211\u4eec\u5c31\u56de\u5230\u4e86\u5bbf\u820d\u3002\u665a\u4e0a\u5728\u5bbf\u820d\u6bdb\u6bdb\u5c31\u76f4\u63a5\u53bb\u7761\u89c9\u4e86\u3002\u6211\u5374\u7cbe\u795e\u4e86\u8d77\u6765\u3002\u770b\u4e86\u4e00\u665a\u4e0a\u7684\u7535\u89c6\u3002\u770b\u7684\u300a\u6597\u7834\u82cd\u7a79\u300b\u3002\u7535\u89c6\u5267\u7ffb\u62cd\u7684\u5c0f\u8bf4\u3002\u6211\u53ef\u4ee5\u8bf4\u4e0d\u597d\u770b\u4e48\u3002\u4f46\u662f\u89c9\u5f97\u7535\u89c6\u5267\u80fd\u62cd\u6210\u8fd9\u4e2a\u6837\u5b50\u5176\u5b9e\u4e5f\u633a\u597d\u7684\u4e86\uff0c\u6253\u53d1\u65f6\u95f4\u53ef\u4ee5\u3002\u8fd8\u8bb0\u5f97\u90a3\u53e5\u7ecf\u5178\u7684\u53f0\u8bcd\uff1a\u4e09\u5341\u5e74\u6cb3\u4e1c\uff0c\u4e09\u5341\u5e74\u6cb3\u897f\uff0c\u83ab\u6b3a\u5c11\u5e74\u7a77\u3002\n\u7b2c\u4e8c\u5929\u65e9\u4e0a\u8d77\u6765\u5403\u4e86\u80a0\u7c89\uff0c\u54e6\u4e4b\u524d\u90a3\u4e2a\u597d\u50cf\u53eb\u201c\u7c89\u80a0\u201d\u3002\u53c8\u4e00\u4e2a\u201c\u4eba\u95f4\u7f8e\u98df\u201d\u3002\u6ca1\u591a\u4e45\u5d14\u59d0\u548c\u6587\u4f73\u5148\u540e\u5230\u4e86\u8fd9\u8fb9\uff0c\u6211\u4eec\u7a0d\u5fae\u6574\u7406\u4e86\u4e00\u4e0b\uff0c\u6536\u62fe\u4e0b\u4e1c\u897f\u5c31\u51fa\u53d1\u524d\u5f80\u5927\u4f7f\u9986\u9644\u8fd1\u4e86\u3002\u5f53\u5929\u7684\u6e29\u5ea6\u5c1a\u53ef\uff0c\u6709\u70b9\u6bdb\u6bdb\u7ec6\u96e8\u3002\u65f6\u800c\u4e0b\uff0c\u65f6\u800c\u51e0\u6ef4\u5212\u8fc7\u3002\u5927\u4f7f\u9986\u9644\u8fd1\u8fd8\u662f\u5f88\u7e41\u534e\u7684\u3002\u9ad8\u8038\u7684\u5efa\u7b51\u63d2\u5165\u4e91\u9704\u3002\u62cd\u4e0d\u51fa\u90a3\u79cd\u611f\u89c9\u3002\u4e0d\u8fc7\u73b0\u573a\u770b\u7740\u5b9e\u662f\u7f8e\u5999\u3002\u6211\u4eec\u627e\u4e86\u4e00\u4e0b\u7ca4\u83dc\u9986\u5403\u996d\u3002\u597d\u50cf\u53eb\u201c\u70b9\u90fd\u5fb7\u201d\uff0c\u7f51\u4e0a\u8bc4\u8bba\u5f88\u9ad8\u3002\u4f46\u662f\u83dc\u5355\u91cc\u9762\u4e5f\u90fd\u662f\u201c\u8336\u70b9\u201d\u3002\u5df2\u7ecf\u597d\u4e45\u6ca1\u5403\u7c73\u996d\u548c\u201c\u83dc\u201d\u4e86\u3002\u3002\u3002\u4e3a\u4e86\u6ee1\u8db3\u5979\u4fe9\uff0c\u6211\u4eec\u70b9\u4e86\u4e00\u684c\u201c\u8336\u70b9\u201d\uff0c\u53ef\u80fd\u662f\u7b2c\u4e8c\u6b21\u5403\u7684\u7f18\u6545\uff0c\u611f\u89c9\u8fd9\u91cc\u7684\u8336\u70b9\u6ca1\u6709\u6628\u5929\u7684\u597d\u5403\u3002\u4e0d\u8fc7\u5473\u9053\u8fd8\u662f\u4e0d\u9519\u7684\u3002\n\u5403\u996d\u540e\u5c31\u5c31\u76f4\u63a5\u6765\u5230\u7f8e\u56fd\u5927\u4f7f\u9986\u8fd9\u8fb9\u6392\u961f\u4e86\u3002\u6211\u4eec\u662f\u9884\u7ea6\u7684\u662f\u4e09\u70b9\u534a\u5de6\u53f3\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u7b49\u5230\u4e86\u4e24\u70b9\u591a\u624d\u6392\u961f\u3002\u7136\u540e\u53c8\u662f\u6392\u961f\u3002\u91cc\u9762\u7684\u4eba\u66f4\u591a\u3002\u5ba1\u67e5\u5f88\u4e25\u683c\u3002\u67e5\u57fa\u672c\u8bc1\u4ef6\u3001\u8fc7\u5b89\u68c0\u3001\u5f55\u6307\u7eb9\uff0c\u7136\u540e\u624d\u5230\u4e86\u5ba4\u5185\u3002\u6700\u540e\u53c8\u6392\u5f88\u957f\u7684\u5bf9\u51c6\u5907\u6700\u540e\u7684\u9762\u8bd5\u3002\u6211\u4eec\u4e09\u4e2a\u662f\u4e00\u8d77\u9762\u8bd5\u7684\uff0c\u662f\u4e00\u4e2a\u5f88\u4e25\u8083\u7684\u5916\u56fd\u4eba\u7ed9\u6211\u4eec\u9762\u7684\uff0c\u4e0d\u8fc7\u9762\u8bd5\u6211\u4eec\u7684\u65f6\u5019\uff0c\u611f\u89c9\u4ed6\u5e76\u4e0d\u662f\u5f88\u4e25\u8083\u3002\u800c\u4e14\u8bf4\u8bdd\u633a\u6e29\u67d4\u7684\u3002\u975e\u5e38\u767d\u51c0\u3002\u7b80\u5355\u95ee\u4e86\u6211\u4eec\u4e09\u4e2a\u51e0\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u4e09\u4e2a\u4e5f\u51e0\u4e4e\u90fd\u662f\u540c\u65f6\u56de\u7b54\u7684\uff0c\u5f88\u6709\u9ed8\u5951\u7684\u6837\u5b50\u3002\u6ca1\u6709\u4e24\u5206\u949f\uff0c\u9762\u8bd5\u5b98\u9012\u8fc7\u6765\u4e00\u5f20\u9ec4\u8272\u7eb8\u6761\uff0c\u544a\u8bc9\u6211\u4eec\u901a\u8fc7\u4e86\u3002\u54c7\uff0c\u5f53\u65f6\u771f\u7684\uff0c\u975e\u5e38\u5f00\u5fc3\u3002\n\u9762\u8bd5\u7ed3\u675f\u540e\u975e\u5e38\u5f00\u5fc3\u3001\u653e\u677e\u4e86\u3002\u5e94\u5979\u4fe9\u5f3a\u70c8\u8981\u6c42\uff0c\u5e26\u7740\u4ed6\u4eec\u4e24\u4e2a\u53c8\u53bb\u4e86\u4e2d\u5c71\u5927\u5b66\uff0c\u7136\u540e\u662f\u5e7f\u5dde\u5854\u7684\u91cd\u590d\u8def\u7ebf\u3002\u4e0d\u8fc7\u8fd9\u6b21\u770b\u5230\u7684\u591c\u666f\u4e5f\u975e\u5e38\u7f8e\u5999\u3002\u7136\u540e\u6211\u4eec\u53bb\u4e86\u5317\u4eac\u8def\u6b65\u884c\u8857\u3002\u7199\u7199\u6518\u6518\u7684\u4eba\u7fa4\u548c\u706f\u706b\u901a\u660e\u7684\u95f9\u5e02\uff0c\u8d70\u5728\u8def\u4e0a\u975e\u5e38\u5f00\u5fc3\u3002\u7531\u4e8e11\u70b9\u5de6\u53f3\u7684\u706b\u8f66\uff0c\u6ca1\u6709\u591a\u505c\u7559\u4fbf\u53bb\u8d76\u706b\u8f66\u4e86\u3002\u548c\u8868\u59b9\u7b80\u5355\u544a\u522b\uff0c\u62d6\u7740\u75b2\u60eb\u7684\u8eab\u4f53\uff0c\u6765\u5230\u5e7f\u5dde\u4e1c\u7ad9\u771f\u7684\u5413\u4e00\u8df3\uff0c\u8fd9\u662f\u6211\u89c1\u8fc7\u201c\u4eba\u6700\u591a\u201d\u7684\u706b\u8f66\u7ad9\u5019\u8f66\u5385\u4e86\u3002\u6211\u4eec\u6ca1\u6709\u7b49\u76f4\u63a5\u4e0a\u706b\u8f66\u4e86\u3002\n\u7b2c\u4e8c\u5929\u5927\u7ea6\u4e0a\u5348\u5341\u70b9\u534a\u5de6\u53f3\u5230\u7684\u6b66\u660c\u3002\u6211\u548c\u5d14\u5230\u5b66\u6821\u670911\u70b9\u534a\u5de6\u53f3\u4e86\uff0c\u7b80\u5355\u5403\u8fc7\u996d\u5c31\u53bb\u5348\u7761\u4e86\u3002\u56e0\u4e3a\u4eca\u5929\u4e0b\u5348\u8fd8\u6709\u5173\u8001\u5e08\u7684\u79d1\u6280\u8bba\u6587\u5199\u4f5c\u8bfe\u3002\u3002\u4e0a\u5b8c\u8bfe\u540e\u53bb\u5065\u8eab\u623f\u8f6c\u4e86\u8f6c\u3002\u62c9\u4f38\u4e86\u4e00\u4e0b\u8eab\u4f53\u3002\u8fd8\u662f\u5668\u68b0\u3002\u4e0b\u62c9\u5668\u548cpickup\u30022.5km\u8dd1\u6b65\u3002\u4e00\u4e2a\u5c0f\u65f6\u4e0b\u6765\u5f88\u662f\u8212\u670d\u3002\u56de\u5230\u5bbf\u820d\u4e4b\u540e\u6574\u7406\u4e86\u4e00\u4e0b\u8863\u670d\uff0c\u6d17\u4e86\u4e00\u665a\u4e0a\u7684\u8863\u670d\u3002\n\u5065\u8eab\u65f6\u957f\uff1a 17/85\n",
        "description": "",
        "id": 119,
        "section": "posts",
        "tags": [
            "\u7b7e\u8bc1",
            "\u65c5\u884c",
            "\u5e7f\u5dde"
        ],
        "title": "\u5e7f\u5dde\u9762\u7b7e\u4e4b\u884c",
        "uri": "/posts/journals/2018-10-17-%E5%B9%BF%E5%B7%9E%E9%9D%A2%E7%AD%BE%E4%B9%8B%E8%A1%8C/"
    },
    {
        "content": "\u8fc7\u5b8c\u5341\u4e00\u957f\u5047\uff0c\u4eca\u5929\u4e2d\u5348\u56de\u5b66\u6821\u3002\n\u8bb0\u5f97\u662f9.30\u53f7\u4e2d\u5348\u53bb\u822a\u6d77\u6c7d\u8f66\u7ad9\u5750\u7684\u8f66\uff0c\u56e0\u4e3a\u5835\u8f66\uff0c\u665a\u4e0a6\u30017\u70b9\u624d\u5230\u5bb6\uff0c\u56de\u5230\u5bb6\u7238\u5988\u6b63\u5728\u5403\u996d\uff0c\u4e5f\u5c31\u8ddf\u7740\u7b80\u7b80\u5355\u5355\u5403\u4e86\u4fbf\u996d\u3002\u521a\u56de\u5230\u5bb6\u662f\u4e0d\u4e60\u60ef\u65e9\u7761\u7684\u3002\u7ffb\u6765\u8986\u53bb\u7761\u4e0d\u7740\u89c9\u3002\u611f\u89c9\u8fd9\u51e0\u5929\u4e00\u76f4\u7761\u4e0d\u597d\u3002\u6700\u4e0d\u597d\u7684\u5c31\u662f4\u53f7\u665a\u4e0a\u5728\u5927\u8205\u5988\u5bb6\uff0c\u51e0\u4e2a\u8205\u8205\u8205\u5988\u5435\u6210\u4e00\u56e2\uff0c\u6839\u672c\u6ca1\u6cd5\u7761\u89c9\u3002\n\u8fd9\u4e2a\u957f\u5047\u8fc7\u7684\u975e\u5e38\u81ea\u7531\u3001\u8212\u9002\u4e86\uff0c\u9664\u4e86AGU\u4f1a\u8bae\u548c\u57fa\u91d1\u8bc4\u5ba1\u7684\u4e8b\uff0c\u771f\u7684\u6ca1\u505a\u522b\u7684\u4e8b\u60c5\u3002\u996e\u98df\u4e0a\uff0c\u57fa\u672c\u662f\u996d\u6765\u5f20\u53e3\uff0c\u60f3\u5403\u4ec0\u4e48\u8ddf\u8001\u5988\u8bf4\u5c31\u597d\uff0c\u8001\u5988\u505a\u7684\u4e5f\u90fd\u662f\u5e73\u65f6\u559c\u6b22\u5403\u7684\u83dc\u3002\u4e0d\u8fc7\u4e0d\u77e5\u9053\u662f\u83dc\u4e2d\u8fa3\u6912\u592a\u591a\u8fd8\u662f\u5bb6\u91cc\u592a\u5e72\u71e5\u7684\u7f18\u6545\uff0c\u8fd9\u51e0\u5929\u4e00\u76f4\u5728\u4e0a\u706b\uff0c\u9f3b\u5b50\uff08\u9f3b\u8154\uff09\u975e\u5e38\u5e72\u3002\u5176\u6b21\u662f\u5e2e\u5bb6\u91cc\u5e72\u6d3b\uff0c\u51fa\u9505\u3001\u62cc\u9ad8\u7cb1\u7b49\u96f6\u96f6\u6563\u6563\u7684\u4f53\u529b\u6d3b\u505a\u4e86\u5f88\u591a\uff0c\u57fa\u672c\u4e0a\u8001\u5988\u505a\u7684\u4f53\u529b\u6d3b\u6211\u90fd\u4ee3\u52b3\u4e86\u3002\u53d1\u73b0\u8fd9\u6bb5\u65f6\u95f4\u5065\u8eab\u8fd8\u662f\u6709\u6548\u679c\u7684\uff0c\u6ca1\u6709\u4e4b\u524d\u505a\u4e00\u70b9\u4f53\u529b\u6d3b\u5c31\u9178\u75db\u4e86\u3002\u8bba\u6587\u4e0a\u771f\u7684\u4e0d\u60f3\u8bf4\u5565\uff0c\u672c\u6765\u6253\u7b97\u6bcf\u5929\u90fd\u5199\u4e00\u70b9\uff0c\u4e89\u53d6\u8fc7\u5b8c\u8282\u5199\u5b8c\uff0c\u6211\u5c31\u5475\u5475\u4e86\u3002\u81ea\u5df1\u653e\u5047\u4e00\u4e2a\u5b57\u90fd\u6ca1\u6709\u52a8\u3002\u4ee5\u540e\u8fd8\u662f\u4e0d\u8981\u592a\u81ea\u4fe1\u4e3a\u597d\u3002\u5f53\u7136\uff0c\u4f60\u4f1a\u95ee\u6211\uff0c\u4f60\u8fd9\uff0c\u5565\u4e5f\u6ca1\u505a\uff0c\u90a3\u4f60\u5728\u5bb6\u5e73\u65f6\u5e72\u5565&mdash;-\u73a9\u6e38\u620f\u3002\u738b\u8005\u8363\u8000\u548c\u6d77\u5c9b\u5947\u5175\u3002\u8fd9\u8981\u662f\u8fd9\u4e24\u4e2a\u3002\u738b\u8005\u8363\u8000\u81ea\u5df1\u8fde\u80dc\u5230\u94bb\u77f3\uff0c\u5728\u94bb\u77f3\u53d1\u73b0\u8f93\u4e00\u628a\u8d62\u4e00\u628a\u975e\u5e38\u6ca1\u52b2\uff0c\u8fd9\u4e2a\u65f6\u5019\u771f\u7684\u5c31\u9700\u8981\u961f\u53cb\u4e00\u8d77\u4e0a\u5206\u4e86\u3002\u81ea\u5df1\u6253\u4e5f\u6ca1\u52b2\uff0c\u4e4b\u540e\u7684\u51e0\u5929\u5c31\u6ca1\u6709\u73a9\u3002\u6d77\u5c9b\u5947\u5175\u6bcf\u5929\u57fa\u672c\u5237\u5237\u4efb\u52a1\uff0c\u62a2\u593a\u56fe\u4e0a\u7684\u51e0\u4e2a\u8d44\u6e90\u5c9b\u3002\u3002\u3002\u6240\u4ee5\u8bf4\uff0c\u8fd9\u51e0\u5929\u662f\uff0c\u771f\u7684\uff0c\u81ea\u7531\u3001\u8212\u9002\u3002\u3002\u3002\u3002\n\u5176\u5b9e\uff0c\u8fd9\u79cd\u81ea\u7531\u548c\u8212\u9002\u603b\u662f\u611f\u89c9\u975e\u5e38\u7a7a\u865a\u7684\u3002\u5e76\u6ca1\u6709\u89c9\u5f97\u52b3\u7d2f\u4e4b\u540e\u7684\u8212\u9002\uff0c\u5e76\u6ca1\u6709\u89c9\u5f97\u88ab\u56f0\u4e86\u597d\u4e45\u7684\u8212\u9002\uff0c\u800c\u662f\u4e00\u79cd\u653e\u7eb5\u3001\u653e\u8086\uff0c\u800c\u5e76\u6ca1\u6709\u65e0\u5fe7\u65e0\u8651\u7684\u90a3\u79cd\u3002\u6709\u65f6\u5019\uff0c\u771f\u7684\u60f3\u50cf\u529d\u8bf4\u522b\u4eba\u90a3\u6837\u7684\u81ea\u7531\u548c\u6d12\u8131\u3002\u4e0d\u7528\u8003\u8651\u5e74\u7eaa\uff0c\u4e0d\u7528\u8003\u8651\u5b66\u5386\uff0c\u4e0d\u7528\u8003\u8651\u65f6\u95f4\u6210\u672c\uff0c\u4e0d\u7528\u8003\u8651\u3002\u3002\u3002\u6bcf\u5929\u603b\u89c9\u5f97\u81ea\u5df1\u65f6\u95f4\u4e0d\u591a\u4e86\u3002\u597d\u6bd4\u4e00\u4e2a\u5c06\u6b7b\u4e4b\u4eba\u3002\u6bcf\u5929\u5de5\u4f5c\u7684\u65f6\u5019\u660e\u660e\u6709\u8ba1\u5212\uff0c\u5374\u603b\u662f\u5b8c\u4e0d\u6210\uff0c\u98d8\u98d8\u5ffd\u5ffd\u3002\u65e0\u6240\u5fcc\u60ee\u3002\u3002\u3002\u597d\u6bd4\u4e00\u4e2a\u690d\u7269\u4eba\u3002\u3002\u9ebb\u6728\u3002\n\u6211\u662f\u5f88\u60f3\u6539\u53d8\u8fd9\u79cd\u72b6\u6001\u3002\n\u554a\uff0c\u4e2d\u5348\u5c31\u5230\u5b66\u6821\u4e86\uff0c\u53bb\u98df\u5802\u5403\u4e86\u4e2a\u996d\uff0c\u6d17\u5b8c\u8863\u670d\uff0c\u7761\u4e86\u5348\u89c9\uff0c\u7136\u540e\u5c31\u53bb\u56fe\u4e66\u9986\u4e86\u3002\u903c\u81ea\u5df1\u5199\u8bba\u6587\u3002\u53d1\u73b0\u771f\u7684\u771f\u7684\u618b\u4e0d\u51fa\u6765\u3002\u3002\u5199\u4e0d\u51fa\u793e\u4f1a\u610f\u4e49\u4e4b\u7c7b\u7684\u8bdd\u3002\u3002\u770b\u4e86\u4e00\u7bc7\u4e2d\u6587\u6458\u8981\uff0c\u9f99\u701b\u7684\u4ec0\u4e48\u201c\u5927\u6a21\u5f0f\u201d\u6846\u67b6\uff1f\u8bb2\u5927\u6570\u636e\u5728\u57ce\u5e02\u79d1\u5b66\u4e2d\u7684\u5e94\u7528\u7684\u4e00\u4e9b\u7efc\u8ff0\uff0c\u611f\u89c9\u8fd8\u662f\u86ee\u597d\u7684\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u6846\u67b6\u548c\u627e\u7814\u7a76\u70b9\u6765\u770b\u3002\u5df2\u7ecf\u6536\u7387\u5728zotero\u4e2d\u4e86\u3002\n\u665a\u4e0a\u575a\u6301\u53bb\u5065\u8eab\u623f\u4e86\u3002\u4e3a\u81ea\u5df1\u53c8\u575a\u6301\u4e00\u5929\u505a\u51fa\u7684\u52aa\u529b\u6253call\u3002\u6211\u77e5\u9053\u575a\u6301\u505a\u4e00\u4ef6\u4e8b\u60c5\u975e\u5e38\u56f0\u96be\uff0c\u4f46\u662f\u53ea\u8981\u662f\u5728\u6539\u53d8\uff0c\u5c31\u7b97\u662f\u8fdb\u6b65\u3002\u76f8\u6bd4\u590d\u6742\u7684\u5fc3\u7406\u6d3b\u52a8\uff0c\u53ef\u80fd\u7b80\u7b80\u5355\u5355\u7684\u575a\u6301\u4e00\u4ef6\u4e8b\u60c5\u66f4\u52a0\u56f0\u96be\u5f97\u591a\u3002\u4eca\u5929\u5065\u8eab\u623f\u4eba\u7092\u9e21\u5c11\uff0c\u5404\u79cd\u5668\u68b0\u968f\u4fbf\u7528\u3002\u4eca\u5929\u505a\u7684\u9879\u76ee\u6709\uff1a2.5km\u3001\u4e0b\u62c9\u5668\uff0c\u4e0a\u63a8\u5668\uff0c\u8fd8\u6709\u4e00\u4e2a\u4ec0\u4e48chin up\u7684\u5668\u68b0\uff0c\u4e5f\u662f\u7ec3\u4e60\u80cc\u90e8\u808c\u8089\u7684\u3002\n\u665a\u4e0a\u56de\u5bbf\u820d\uff0c\u63a5\u7740\u770b\u5b8c\u4e86\u300a\u523a\u5ba2\u4f0d\u516d\u4e03\u300b\uff0c\u8fd9\u90e8\u56fd\u6f2b\u771f\u7684\u5f88\u4e0d\u9519\uff0c\u641e\u7b11\uff0c\u5404\u79cd\u6897\uff0c\u5e7f\u4e1c\u8bdd\uff0c\u5f88\u6709\u610f\u601d\u7684\u3002\u7b2c\u4e00\u5b63\u52a0\u4e0a\u756a\u5916\u670914\uff0c\u6bcf\u96c610\u5206\u949f\u5de6\u53f3\u7684\u6837\u5b50\u3002\u5750\u7b49\u7b2c\u4e8c\u5b63\u66f4\u65b0\u5566\u3002\u540e\u6765\u6363\u9f13\u4e86\u4e00\u4e0bwordpress\u535a\u5ba2\uff0c\u4ee5\u540e\u6253\u7b97\u5c31\u7528wordpress\u5566\uff0c\u867d\u7136\u540e\u53f0\u5361\u987f\u4e86\u4e00\u4e9b\uff0c\u4f46\u662f\u6bd5\u7adf\u7528\u7684\u4eba\u591a\uff0c\u51fa\u95ee\u9898\u4e5f\u597d\u89e3\u51b3\u5566\u3002\n\u00a0\u5065\u8eab\u65f6\u957f\uff1a15/85\n",
        "description": "",
        "id": 120,
        "section": "posts",
        "tags": [
            "\u603b\u7ed3",
            "\u5047\u671f"
        ],
        "title": "\u5341\u4e00\u957f\u5047\u603b\u7ed3",
        "uri": "/posts/journals/2018-10-06-%E5%8D%81%E4%B8%80%E9%95%BF%E5%81%87%E6%80%BB%E7%BB%93/"
    },
    {
        "content": " \u8bb0\u4e8b\u3002\n \u505a\u4e86\u4ec0\u4e48\u4e8b\u60c5   \u642d\u5efaTypecho\u535a\u5ba2\uff0c\u5e76\u575a\u6301\u6bcf\u5929\u5199\u65e5\u62a5\uff08\u8ba1\u5212\u3001\u5de5\u4f5c\u3001\u5065\u8eab\uff09\u4e24\u4e2a\u661f\u671f\uff1b\u535a\u5ba2\u5907\u4efd\u3002\n  \u5b8c\u5584\u535a\u5ba2\u6846\u67b6\uff0c\u5305\u62ec\u535a\u5ba2\u4e3b\u9898\u3001\u63d2\u4ef6\u7b49\u3002\u4e3b\u9898\u504f\u6587\u827a\u98ce\uff0c\u63d2\u4ef6\u4e0d\u591a\uff0c\u65e5\u5e38\u63d2\u4ef6\uff0c\u6bcf\u7bc7\u65e5\u5e38\u914d\u56fe\uff1b\u5b8c\u5584\u535a\u5ba2\u5185\u5bb9\uff0c\u9664\u65e5\u62a5\u5916\uff0c\u8fd8\u5305\u62ec\u4e00\u4e9b\u8d44\u6599\uff0c\u4e00\u4e9b\u968f\u7b14\uff0c\u968f\u7b14\u504f\u6458\u6284\uff0c\u8bb0\u5f55\u4e2a\u4eba\u6bd4\u8f83\u559c\u6b22\u7684\u4e1c\u897f\uff08Personal Preferences\uff09\uff0c\u8d44\u6599\u662f\u81ea\u5df1\u5728\u67e5\u627e\u6587\u732e\u3001\u77e5\u4e4e\u7b49\u8d44\u6599\u7684\u65f6\u5019\u505a\u7684\u76f8\u5173\u6574\u7406\uff0c\u65b9\u4fbf\u65e5\u540e\u67e5\u770b\u3002\n  \u719f\u6089\u96c5\u601d\u8003\u8bd5\uff0c\u786e\u5b9a\u96c5\u601d\u8003\u8bd5\u65f6\u95f4\uff0c\u5236\u5b9a\u5168\u5c40\u5b66\u4e60\u8ba1\u5212\u3002\n  \u5728\u5168\u5c40\u8ba1\u5212\u7684\u63a7\u5236\u8303\u56f4\u5185\uff0c\u5236\u5b9a\u4e86\u542c\u529b\u548c\u5199\u4f5c\u7684\u5177\u4f53\u5230\u5929\u7684\u5b66\u4e60\u8ba1\u5212\u3002\n  \u719f\u6089\u5730\u7406\u63a2\u6d4b\u5668\uff0c\u9605\u8bfb\u76f8\u5173\u6587\u732e\uff0c\u4e86\u89e3\u5730\u7406\u63a2\u6d4b\u5668\u90fd\u662f\u600e\u4e48\u7528\u7684\u3002\n  \u575a\u6301\u5065\u8eab\uff0c\u603b\u5065\u8eab\u65f6\u957f7\u5c0f\u65f6\u3002\n  \u786e\u5b9a\u8bba\u6587\u5199\u4f5c\u5b8c\u6210\u4e4b\u95f4\uff0c\u5e76\u5236\u5b9a\u5199\u4f5c\u7684\u8ba1\u5212\u3002\n  \u975e\u8ba1\u5212\u4e2d\u4efb\u52a1\uff1a\n W\u8001\u5e08\u57fa\u91d1\u9884\u7b97\u6574\u7406\uff0c\u548cM\u5e08\u5144\u4e00\u8d77\u3002 W\u8001\u5e08\u5be8\u5361\u75c5\u6bd2\u76f8\u5173\u8bba\u6587\u5ba1\u9605\u3002 \u6298\u817e\u9ed1\u82f9\u679c\u3002dell\u673a\u6ca1\u6210\u529f\u3002\u5728\u5c0f\u7c73Pro\u4e0a\u6210\u529f\u4e86\u3002\u82f9\u679c\u7cfb\u7edf\u771f\u7684\u5f88\u597d\u770b\uff0c\u4e0d\u8fc7\u7528\u8d77\u6765\u8fd8\u662f\u8981\u4e60\u60ef\u4e00\u6bb5\u65f6\u95f4\u3002    \u5b8c\u6210\u60c5\u51b5\u603b\u7ed3 \u603b\u4f53\u611f\u89c9\u5b8c\u6210\u60c5\u51b5\u4e2d\u7b49\u504f\u597d\uff0c\u524d\u51e0\u5929\u548c\u540e\u51e0\u5929\u5b8c\u6210\u60c5\u51b5\u4e0d\u597d\uff0c\u4e2d\u671f\u6bd4\u8f83\u597d\u3002\u524d\u51e0\u5929\u6ca1\u8ba1\u5212\u597d\u65e5\u5de5\u4f5c\u91cf\uff0c\u540e\u51e0\u5929\u6709\u4e9b\u5077\u61d2\u4e86\u3002\u5176\u5b9e\u7b97\u7b97\u8fd914\u5929\u81ea\u5df1\u8fd8\u662f\u505a\u4e86\u86ee\u591a\u4e8b\u60c5\u7684\uff0c\u5f53\u7136\u5c31\u5f88\u5145\u5b9e\uff0c\u5f88\u6709\u610f\u4e49\u5566\u3002\u3002\u3002\u4e0b\u4e2a\u534a\u6708\u7740\u91cd\u5b8c\u6210\u8bba\u6587\u5199\u4f5c\u3001\u8fd8\u6709\u82f1\u8bed\u5b66\u4e60\u4e0a\u3002\u8fd8\u6709\u5c31\u662f\u6bcf\u5929\u65e9\u4e0a\u53bb\u516c\u53f8\u4e0d\u60f3\u505a\u4e8b\u60c5\uff0c\u6bd4\u8f83\u6d6e\u8e81\uff0c\u501f\u4e86\u4e00\u672c\u66fc\u6606\u7684\u7ecf\u6d4e\u5b66\u57fa\u7840\uff0c\u53ef\u4ee5\u5728\u65e9\u4e0a\u7684\u65f6\u95f4\u770b\u4e00\u770b\uff0c\u6743\u5f53\u6253\u53d1\u65f6\u95f4\u4e86~\u5355\u8bcd\u8981\u575a\u6301\u80cc\u554a\uff0c\u4f60\u7684\u5355\u8bcd\u91cf\u548c\u9519\u8bef\u7387\u771f\u7684\u662f\u5947\u5dee\u4e86\u3002\u3002\u62bd\u65f6\u95f4\u4e00\u5b9a\u8981\u611f\u53d7\u4e00\u4e0b\u771f\u9898\u5e26\u6765\u7684\u75db\u82e6\u3002\u3002\u3002\n\u8fd9\u4e24\u5929\u5f00\u5b66\uff0c\u6765\u4e86\u5f88\u591a\u65b0\u5b66\u751f\u3002\u539f\u672c\u5b89\u9759\u7684\u6821\u56ed\u7a81\u7136\u7199\u7199\u6518\u6518\u7684\u90fd\u662f\u4eba\u3002\u3002\u867d\u7136\u6bcf\u5929\u8dd1\u516c\u53f8\uff0c\u4f46\u662f\u8fd8\u662f\u80fd\u660e\u663e\u611f\u89c9\u5230\u5b66\u6821\u7684\u53d8\u5316\u3002\u60f3\u8d77\u81ea\u5df1\u5927\u5b66\u5165\u5b66\u7684\u65f6\u5019\u7684\u573a\u666f\uff0c\u4f46\u662f\u5fd8\u8bb0\u4e86\u5f53\u65f6\u662f\u600e\u6837\u7684\u5fc3\u60c5\u3002\u6216\u5e73\u6de1\u3001\u6216\u65e0\u6240\u8c13\u3002\u53c8\u60f3\u8d77\u4e86\u81ea\u5df1\u7814\u7a76\u751f\u5165\u5b66\u7684\u65f6\u5019\u7684\u573a\u666f\uff0c\u5fc3\u4e2d\u8e0c\u8e87\u6ee1\u5fd7\uff0c\u60f3\u5b66\u4e1a\u6709\u6210\uff0c\u60f3\u6536\u83b7\u611f\u60c5\u3002\u8bf4\u5b9e\u8bdd\u5176\u5b9e\u81ea\u5df1\u7814\u7a76\u751f\u8fd9\u4e24\u5e74\u8bfb\u7684\u662f\u6709\u4e9b\u75db\u82e6\u7684\uff0c\u4f46\u662f\u7740\u5b9e\u5728\u8fd9\u4e24\u5e74\u91cc\u81ea\u5df1\u5b66\u4f1a\u4e86\u5f88\u591a\u4e1c\u897f\uff0c\u611f\u60c5\u4e0a\uff0c\u751f\u6d3b\u4e0a\uff0c\u79cd\u79cd\u3002\u5fc3\u6027\u4e5f\u53d1\u751f\u53d8\u5316\u4e86\u3002\u5927\u5b66\u7684\u65f6\u5019\u5eb8\u5eb8\u788c\u788c\uff0c\u5404\u79cd\u4e8b\u90fd\u62b1\u7740\u65e0\u6240\u8c13\u7684\u6001\u5ea6\u3002\u8bfb\u7814\u4e4b\u540e\uff0c\u6d6e\u8e81\u4e86\u5f88\u591a\uff0c\u60f3\u4ec0\u4e48\u90fd\u6bd4\u522b\u4eba\u597d\uff0c\u80fd\u529b\u4e0a\u5374\u6bd4\u522b\u4eba\u5dee\u5f88\u591a\uff0c\u77e5\u9053\u81ea\u5df1\u5dee\u5374\u4e0d\u53bb\u884c\u52a8\u3002\u5c31\u8fd9\u6837\u81ea\u4e0d\u91cf\u529b\u3001\u6d6e\u8e81\u4e86\u4e24\u4e09\u5e74\u3002\u4e3a\u4ec0\u4e48\u662f\u4e09\u5e74\u5462\uff0c\u56e0\u4e3a\u535a\u4e00\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u4e5f\u662f\u8fd9\u79cd\u72b6\u6001\uff0c\u53ea\u662f\u8f6c\u6362\u6765\u8f6c\u6362\u53bb\uff0c\u5fc3\u91cc\u786e\u5b9e\u6709\u4e9b\u7d2f\u4e86\u3002\u653e\u5fc3\u5427\uff0c\u4e0d\u662f\u4f60\u8bfb\u4e0d\u61c2\uff0c\u6211\u4e5f\u4e0d\u77e5\u9053\u6211\u5728\u8bf4\u4ec0\u4e48\u3002\u611f\u60c5\u4e0a\u59cb\u7ec8\u90fd\u662f\u4e00\u4e2a\u4eba\uff0c\u6ca1\u6709\u786e\u5b9a\u90a3\u79cd\u5173\u7cfb\u7684\uff0c\u5306\u5306\u788c\u788c\u8eab\u8fb9\u8def\u8fc7\u51e0\u4e2a\u5973\u5b69\u5b50\uff0c\u6709\u505c\u7559\u7684\u3001\u6709\u95ee\u5019\u7684\u3001\u6709\u543b\u4f60\u7684\u3001\u4f60\u5374\u59cb\u7ec8\u4e0d\u4e3a\u6240\u52a8\u3002\u518d\u4e5f\u6ca1\u6709\u7814\u7a76\u751f\u5165\u5b66\u65f6\u7684\u90a3\u79cd\u5411\u5f80\uff0c\u90a3\u79cd\u613f\u4e3a\u4e4b\u75af\u72c2\u7684\u529b\u91cf\u3002\u59cb\u7ec8\u4e00\u4e2a\u4eba\uff0c\u59cb\u7ec8\u89c9\u5f97\u81ea\u5df1\u5b64\u72ec\uff0c\u5374\u4e0d\u77e5\u9053\u53ea\u662f\u81ea\u5df1\u95f2\u7684\u86cb\u75bc\u800c\u5df2\u3002\u4f60TM\u5fd9\u8d77\u6765\u54ea\u6709\u529f\u592b\u50cf\u8fd9\u4e2a\u3002\u5f97\uff0c\u8bf4\u597d\u7684\u534a\u6708\u62a5\uff0c\u90fd\u5feb\u6210\u7814\u7a76\u751f\u751f\u6d3b\u603b\u7ed3\u5927\u4f1a\u4e86\u3002\u788e\u89c9\u5427\uff0c\u8bf4\u597d\u519915\u5206\u949f\u7684\uff0c\u786c\u751f\u751f\u5199\u4e8645\u5206\u949f\u4e86\u3002\u64a4\u4e86\u64a4\u4e86\u3002\n",
        "description": "",
        "id": 121,
        "section": "posts",
        "tags": [
            "\u8ba1\u5212"
        ],
        "title": "2018.8.20 - 2018.9.2 / 1st-half-month Report",
        "uri": "/posts/journals/2018-09-02-2018-8-20-2018-9-2___1st-half-month_report/"
    },
    {
        "content": " qwer\n  --- DON'T MODIFY THIS LINE --- W\u8001\u5e08\uff0c\u60a8\u597d\u3002 \u8f6c\u773c2018\u5e74\u53c8\u8fc7\u53bb\u4e86\u63a5\u8fd1\u5927\u534a\uff0c\u800c\u6211\u76ee\u524d\u5374\u6ca1\u6709\u957f\u8fdc\u7684\u76ee\u6807\uff0c\u6ca1\u6709\u8f83\u660e\u786e\u7684\u65b9\u5411\uff0c\u8bf4\u8d77\u6765\u5b9e\u5c5e\u4e0d\u5e94\u8be5\u3002\u5468\u4e94\u5728\u60a8\u529e\u516c\u5ba4\uff0c\u542c\u60a8\u4e00\u5e2d\u8bdd\u4e4b\u540e\uff0c\u786e\u5b9e\u611f\u89e6\u9887\u591a\uff0c\u81ea\u5df1\u7684\u72b6\u6001\u3001\u8ba4\u77e5\u4e5f\u8ba4\u7684\u66f4\u6e05\u4e00\u4e9b\u3002\u5468\u672b\u8fd9\u4e24\u5929\u53bb\u957f\u6c5f\u5927\u6865\u8f6c\u4e86\u8f6c\uff0c\u5728\u6c5f\u8fb9\u5750\u4e86\u597d\u4e45\uff0c\u4e00\u76f4\u5728\u601d\u8003\u4eba\u751f\u7684\u610f\u4e49\uff0c\u867d\u7136\u76ee\u524d\u5bf9\u6211\u800c\u8a00\u8fd8\u662f\u5f88\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u5982\u679c\u4e00\u65f6\u4e4b\u95f4\u80fd\u591f\u60f3\u660e\u767d\u4e5f\u4e0d\u81f3\u4e8e\u8ff7\u832b\u8fd9\u4e48\u4e45\u5427\uff1b\u5468\u5929\u4e5f\u8ddf\u7236\u4eb2\u3001\u6bcd\u4eb2\u804a\u4e86\u5f88\u4e45\uff0c\u5173\u4e8e\u4ee5\u540e\u7684\u6253\u7b97\u7b49\u7b49\u3002\u60f3\u7740\u4ee5\u540e\u7684\u4e8b\u60c5\u60f3\u4e0d\u660e\u767d\u7684\u8bdd\uff0c\u5c31\u7b49\u6709\u65f6\u95f4\u4e86\u5728\u60f3\uff0c\u73b0\u5728\u7684\u8bdd\u5148\u628a\u5230\u5e74\u5e95\u7684\u8ba1\u5212\u505a\u4e00\u4e0b\u3002\u6211\u662f\u4e00\u4e2a\u975e\u5e38\u61d2\u6563\u7684\u4eba\uff0c\u6240\u4ee5\u60a8\u63d0\u7684\u5b9a\u5236\u8ba1\u5212\u8868\u7684\u8fd9\u4e2a\u65b9\u6cd5\u53ef\u8c13\u662f\u975e\u5e38\u9002\u7528\u7684\u3002\u6211\u7b97\u4e86\u4e00\u4e0b\uff0c\u73b0\u5728\u662f2018\u5e748\u670819\u65e5\uff0c\u52302018\u5e7412\u670831\u65e5\u8fd8\u6709\u56db\u4e2a\u534a\u6708\u5de6\u53f3\uff0c\u51c6\u786e\u6765\u8bb2\u662f135\u5929\uff0c\u6240\u4ee5\u6211\u4e3a\u8fd9135\u5929\u505a\u4e86\u4e00\u4e2a\u8ba1\u5212\u53ca\u5b9e\u73b0\u65b9\u6cd5\uff08\u8fc7\u7a0b\uff09\uff1a - \u8ba1\u5212\u4e00\uff1a 8\u670820\u65e5-9\u670816\u65e5\uff0828\u5929\uff09\uff0c\u5b8c\u6210\u6709\u5173\u5171\u4eab\u5355\u8f66\u7684\u5b9e\u9a8c\u53ca\u6587\u7ae0\u521d\u7a3f\uff0c\u51c6\u5907\u6da6\u8272\u53ca\u6295\u7a3f\u3002 - \u8ba1\u5212\u4e8c\uff1a 9\u670817\u65e5-10\u670831\u65e5\uff0844\u5929\uff09\uff0c\u5b8c\u6210AGU\u4f1a\u8bae\u7684\u521d\u7a3f\u6216\u6d77\u62a5\uff0c\u4ee5\u53ca\u51fa\u56fd\u51c6\u5907\u7684\u8d44\u6599\u3001\u7b7e\u8bc1\u529e\u7406\u7b49\u3002 - \u8ba1\u5212\u4e09\uff1a\u5065\u8eab\u8ba1\u5212\u3002\u6211\u524d\u5e74\u7684\u65f6\u5019\u8ddf\u540c\u5b66\u4e00\u8d77\u529e\u8fc7\u4e00\u6b21\u5065\u8eab\u5361\uff0c\u5f53\u65f6\u8fde\u7eed\u53bb\u8fc7\u4e24\u4e2a\u6708\u5de6\u53f3\uff0c\u867d\u7136\u6ca1\u80fd\u575a\u6301\u4e0b\u6765\uff0c\u4f46\u662f\u6211\u89c9\u5f97\u6536\u83b7\u8fd8\u662f\u86ee\u5927\u7684\uff0c\u5c24\u5176\u662f\u5fc3\u7406\u8c03\u8282\u65b9\u9762\uff0c\u5f53\u65f6\u5f00\u6717\u4e86\u8bb8\u591a\uff1b\u56e0\u6b64\u6211\u8fd9\u6b21\u53c8\u529e\u7406\u4e00\u4e2a\u5065\u8eab\u5361\uff0c\u4e3a\u4e86\u80fd\u591f\u575a\u6301\u4e0b\u53bb\uff0c\u6211\u540c\u65f6\u5236\u5b9a\u4e86\u8fd9\u6837\u7684\u8ba1\u5212\uff1a\u4ece8\u670820\u65e5\u81f312\u670831\u65e5\u7684135\u5929\u5185\uff0c\u953b\u70bc\u65f6\u957f\u6700\u4f4e\u6807\u51c6\u4e0d\u5c11\u4e8e100\u4e2a\u5c0f\u65f6\uff0c \u4e00\u6b21\u953b\u70bc\u65f6\u95f4\u5728\u4e00\u4e2a\u5c0f\u65f6\uff08\u6700\u5c11\uff09\u5230\u4e24\u4e2a\u5c0f\u65f6\u5de6\u53f3\u3002\u540c\u6837\u6211\u5e0c\u671b\u8fd9\u4e2a\u5065\u8eab\u8ba1\u5212\u66f4\u591a\u7684\u662f\u53ef\u4ee5\u5f00\u9614\u6211\u7684\u5fc3\u6027\uff08\u4e0d\u8981\u90a3\u4e48\u6d6e\u8e81\uff09\u4ee5\u53ca\u57f9\u517b\u4e00\u79cd\u575a\u6301\u7684\u7cbe\u795e\uff0c\u540c\u65f6\u53ef\u4ee5\u953b\u70bc\u8eab\u4f53\uff08\u6709\u70b9\u9a7c\u80cc\uff0c\u540c\u65f6\u6709\u70b9\u53d1\u80d6\u4e86\uff09\u3002 - \u8ba1\u5212\u56db\uff1a\u82f1\u8bed\u5b66\u4e60\u3002\u8bb0\u5f97\u53bb\u5e74\u5728\u60a8\u8f66\u4e0a\uff0c\u60a8\u5f53\u65f6\u5c31\u63d0\u5230\u8fc7\u5173\u4e8e\u51fa\u56fd\u8054\u5408\u57f9\u517b\u7684\u60f3\u6cd5\u3002\u73b0\u5728\u60f3\u6765\uff0c\u4e0d\u7ba1\u4e4b\u524d\u7684\u6253\u7b97\u5982\u4f55\uff0c\u81f3\u5c11\u5728\u5f80\u540e\u7684\u4e09\u5e74\u5185\u81f3\u5c11\u62fc\u4e00\u628a\uff0c\u4e89\u53d6\u4e00\u4e0b\u51fa\u56fd\u8054\u5408\u57f9\u517b\u7684\u673a\u4f1a\u3002\u56e0\u6b64\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u82f1\u8bed\u5b66\u4e60\uff08\u6258\u798f\u8003\u8bd5\u7b49\uff09\u3002\u5176\u5b9e\u8fd9\u6b21\u5728\u5199\u8349\u7a3f\u7684\u65f6\u5019\u5c31\u89c9\u5f97\u5403\u529b\u5f88\u591a\uff0c\u534a\u5929\u618b\u4e0d\u51fa\u4e00\u53e5\u8bdd\u6765\uff0c\u53d1\u73b0\u53ea\u662f\u770b\u82f1\u6587\u6587\u732e\u771f\u7684\u662f\u4e0d\u7ba1\u7528\u7684\u3002\u7531\u4e8e\u4e4b\u524d\u6ca1\u6709\u51c6\u5907\u8fc7\u7c7b\u4f3c\u8003\u8bd5\uff0c\u56e0\u6b64\u6211\u6253\u7b97\u7ed9\u81ea\u5df1\u7559\u591a\u4e00\u4e9b\u5907\u8003\u65f6\u95f4\u3002\u4eca\u5e74\u4e0b\u534a\u5e74\u51c6\u5907\u5907\u8003\uff0c\u660e\u5929\u4e94\u6708\u4efd\u6216\u516d\u6708\u4efd\u8fdb\u884c\u7b2c\u4e00\u6b21\u8003\u8bd5\uff0c\u5b8c\u6574\u5907\u8003\u671f\u5927\u7ea610\u4e2a\u6708\u5de6\u53f3\u3002\u4eca\u5e74\u4e0b\u534a\u5e74\u5148\u4ece\u542c\u529b\uff08\u542c\u529b\u6700\u5dee\uff09\u548c\u5199\u4f5c\uff08\u56e0\u4e3a\u8981\u5199\u6587\u7ae0\uff0c\u53ef\u4ee5\u540c\u6b65\u8fdb\u884c\uff09\u5f00\u59cb\uff0c\u540e\u671f\u53e3\u8bed\u4e0e\u9605\u8bfb\u540c\u65f6\u8ddf\u8fdb\u3002\u5173\u4e8e\u5404\u79d1\u76ee\u7684\u8be6\u7ec6\u5b66\u4e60\u5e0c\u671b\u5728\u572810\u6708\u521d\uff08\u5927\u7ea6\u56fd\u5e86\u8282\u7684\u65f6\u5019\uff09\u4f5c\u66f4\u52a0\u7ec6\u81f4\u7684\u8ba1\u5212\u8868\u3002 - \u8ba1\u5212\u4e94\uff1a11\u67081\u65e5-12\u670831\u65e5\u3002\u4e13\u4e1a\u77e5\u8bc6\u5b66\u4e60\u3002\u5173\u4e8e\u673a\u5668\u5b66\u4e60\u7684\u5185\u5bb9\uff08\u7406\u8bba\u548c\u7f16\u7a0b\u5b9e\u8df5\uff09\u8981\u66f4\u52a0\u7cbe\u901a\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ee5\u5f80\u7684\u9762\u8bd5\u9898\u6765\u6d4b\u8bd5\uff1b\u4e86\u89e3\u57ce\u5e02\u79d1\u5b66(Urban Science)\u7684\u57fa\u7840\u3001\u7814\u7a76\u65b9\u5411\u3001\u7814\u7a76\u73b0\u72b6\uff0c\u53ef\u4ee5\u901a\u8fc7\u6587\u732e\u7efc\u8ff0\u6765\u6d4b\u8bd5\uff1b\u638c\u63e1\u9065\u611f\u57fa\u7840\u3002\u6211\u8bb0\u5f97\u6700\u521d\u63a5\u89e6\u9065\u611f\u662f\u5728\u5927\u4e09\u4e0a\u7684\u4e00\u8282\u8bfe\u300a\u9065\u611f\u5bfc\u8bba\u300b\uff0c\u5f53\u65f6\u89c9\u5f97\u9065\u611f\u90fd\u662f\u7eaf\u7406\u8bba\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u5e76\u4e0d\u559c\u6b22\uff0c\u76f4\u5230\u73b0\u5728\u4ecd\u7136\u662f\u4e0d\u61c2\uff08\u867d\u7136\u5e08\u5144\u5e08\u59d0\u90fd\u505a\u8fd9\u4e2a\uff09\u3002\u8fd8\u6709\u5c31\u662f\u4f5c\u4e3a\u4e00\u4e2aGISer\u4e0d\u61c2\u9065\u611f\u771f\u7684\u611f\u89c9\u6709\u4e9b\u7f9e\u6127\u3002\u56e0\u6b64\u9700\u8981\u597d\u597d\u8865\u5145\u8fd9\u65b9\u9762\u7684\u57fa\u7840\u3002 \u8fd9\u4e94\u4e2a\u8ba1\u5212\u4ecd\u7136\u662f\u6bd4\u8f83\u62bd\u8c61\u7684\u8ba1\u5212\uff0c\u5f88\u591a\u5176\u4ed6\u4e8b\u60c5\u548c\u65f6\u95f4\u70b9\uff08\u6bd4\u5982 12\u6708\u521d\u53bb\u53c2\u52a0AGU\u7b49\uff09\u90fd\u6ca1\u6709\u5217\u5165\uff0c\u4e2d\u95f4\u4e5f\u4f1a\u7a7f\u63d2\u5f88\u591a\u4e8b\u60c5\u7b49\u3002\u56e0\u6b64\u6211\u6253\u7b97\u4e00\u5929\u4e00\u5c0f\u8ba1\u5212\uff0c\u4e00\u5468\u4e00\u603b\u7ed3\uff0c\u4e00\u6708\u4e00\u62a5\u7684\u5f62\u5f0f\u6765\u603b\u7ed3\u81ea\u5df1\u5c0f\u9636\u6bb5\u7684\u6210\u679c\uff08\u7ed3\u679c\uff09\uff0c\u6bcf\u6b21\u7684\u6708\u62a5\u90fd\u4f1a\u53d1\u81f3\u60a8\u7684\u90ae\u7bb1\uff0c\u5e76\u4e14\u5f00\u4e00\u4e2a\u535a\u5ba2\u8bb0\u5f55\u8fd9\u4e9b\u5185\u5bb9\uff0c\u4ee5\u540e\u770b\u8fd9\u4e9b\u4e1c\u897f\u5e94\u8be5\u4e5f\u4f1a\u5f88\u6709\u611f\u89e6\u5427\u3002 W\u8001\u5e08\uff0c\u975e\u5e38\u611f\u8c22\u60a8\u5728\u767e\u5fd9\u4e4b\u4e2d\u4ecd\u7136\u5bf9\u6211\u5341\u5206\u7684\u7528\u5fc3\uff0c\u5173\u5fc3\u6211\u7684\u751f\u6d3b\u548c\u5b66\u4e60\u60c5\u51b5\uff0c\u8fd9\u5bf9\u4e8e\u6211\u6765\u8bf4\u662f\u83ab\u5927\u7684\u611f\u6fc0\u3002\u6211\u662f\u60a8\u6700\u7b28\u7684\u5b66\u751f\uff0c\u867d\u7136\u505a\u4e0d\u5230\u6210\u4e3a\u60a8\u6700\u7528\u529f\u7684\u5b66\u751f\uff0c\u4f46\u662f\u6211\u4f1a\u52aa\u529b\u505a\u597d\uff0c\u4e0d\u8f9c\u8d1f\u4e0e\u60a8\u5e08\u751f\u7684\u65f6\u5149\u3002 HS\uff0c\u656c\u4e0a\u3002 2018.8.19  ",
        "description": "",
        "id": 122,
        "section": "posts",
        "tags": [
            "\u4fe1\u4ef6",
            "\u8ba1\u5212"
        ],
        "title": "2018\u5e74\u4e0b\u534a\u5e74\u8ba1\u5212\u8868----\u81f3W\u8001\u5e08\u90ae\u4ef6",
        "uri": "/posts/journals/2018-08-22-2018%E5%B9%B4%E4%B8%8B%E5%8D%8A%E5%B9%B4%E8%AE%A1%E5%88%92%E8%A1%A8-%E8%87%B3w%E8%80%81%E5%B8%88%E9%82%AE%E4%BB%B6/"
    },
    {
        "content": "\u53bb\u5e74\uff082017\uff09\u7684\u6700\u540e\u51e0\u5929\u91cc\uff0c\u6211\u9009\u62e9\u9003\u79bb\u5230\u5176\u4ed6\u5730\u65b9\u3002\nqwer\n  --- DON'T MODIFY THIS LINE --- \u7b2c\u4e00\u5929\u53bb\u4e86\u8868\u59b9XX\u5bb6\u91cc\u3002\u6709\u4eba\u8bf4\uff0c\u505a\u4e8b\u90fd\u662f\u6709\u76ee\u7684\u7684\uff0c\u4f46\u662f\u8fd9\u6b21\u53bbXX\u5bb6\uff0c\u6211\u8bf4\u4e0d\u51fa\u6765\u6211\u7684\u76ee\u7684\uff0c\u540e\u6765\u6211\u751a\u81f3\u6000\u7591\u3001\u62b1\u6028\u6b64\u884c\u3002\u662f\u7684\uff0c\u6211\u4e1d\u6beb\u6ca1\u6709\u7cbe\u795e\uff0c\u4e0d\u5728\u72b6\u6001\u3002\u9047\u89c1CYM\uff0c\u793c\u8c8c\u6027\u5fae\u7b11\u6253\u62db\u547c\uff0c\u751a\u81f3\u6ca1\u8bf4\u534a\u53e5\u8bdd\uff0c\u6211\u4e0d\u77e5\u9053\u5e94\u8be5\u5bf9\u5979\u6709\u4ec0\u4e48\u6837\u7684\u72b6\u6001\uff0c\u4ec0\u4e48\u6837\u7684\u8868\u60c5\u3002\u8ddf\u7740XX\u51fa\u6765\uff0c\u5728\u8857\u4e0a\u3001\u5728\u5546\u573a\u3001\u5728\u661f\u5df4\u514b\uff0c\u4e1d\u6beb\u4e0d\u77e5\u9053\u6211\u5728\u505a\u4ec0\u4e48\uff0c\u5979\u5728\u8bf4\u4ec0\u4e48\u3002\u665a\u4e0a\uff0c\u6211\u5728\u5979\u4e0a\u73ed\u7684\u5730\u65b9\u7b49\u5979\u5f00\u5b8c\u4f1a\uff0c\u5750\u5728\u6c99\u53d1\u4e0a\u660f\u660f\u90c1\u90c1\u4e24\u4e2a\u5c0f\u65f6\u8fc7\u53bb\u4e86\u3002\u5979\u633a\u5fd9\u7684\uff0c\u6211\u633a\u95f2\u7684\u3002 \u4e0d\u8fc7\u6709\u4e00\u4ef6\u4e8b\u60c5\u975e\u5e38\u5f00\u5fc3\uff0c\u6211\u78b0\u5230\u5409\u4ed6\u4e86\u3002\u5979\u7b80\u5355\u7684\u6559\u6211\u73a9\u4e86\u4e24\u4e0b\u5409\u4ed6\u3002\u975e\u5e38\u7684\u5f00\u5fc3\u3002\u6211\u559c\u6b22\u542c\u7434\u5f26\u7684\u58f0\u97f3\uff0c\u7279\u522b\u662f2\u548c1\u7684\u58f0\u97f3\u3002\u6211\u6709\u5b66\u5409\u4ed6\u7684\u6253\u7b97\uff0c\u81f3\u5c11\u5728\u6211\u5199\u8fd9\u7bc7\u7684\u65f6\u5019\u8fd8\u5f88\u5f3a\u70c8\u3002 \u7b2c\u4e8c\u5929\u6211\u9003\u5230\u4e86\u5bb6\u91cc\u3002\u5988\u5988\u56e0\u4e3a\u6211\u7684\u5230\u6765\u5f88\u610f\u5916\uff0c\u56e0\u4e3a\u5e73\u65f6\u56de\u5bb6\u6211\u90fd\u4f1a\u4e8b\u5148\u901a\u77e5\u5979\u4eec\uff0c\u7136\u540e\u5988\u5988\u505a\u597d\u4e2d\u5348\u996d\u7b49\u6211\u56de\u5bb6\u3002\u6211\u6ca1\u6709\u548c\u7238\u5988\u4eb2\u53e3\u8bf4\u8fc7\u60f3\u5ff5\u4e4b\u7c7b\u7684\u8bcd\uff0c\u6211\u53ea\u662f\u5bf9\u7740\u5988\u5988\u7b11\uff0c\u542c\u7740\u5979\u8bf4\u7740\u4ec0\u4e48\uff0c\u6211\u53ea\u662f\u7b11\u3002 \u65f6\u95f4\u8fc7\u5f97\u5f88\u5feb\uff0c\u5728\u5bb6\u5446\u5750\u4e86\u4e24\u5929\uff0c\u505a\u4e86\u70b9\u4f53\u529b\u6d3b\uff0c\u4eca\u5929\u56de\u5230\u5b66\u6821\u3002\u4ed6\u6ca1\u5728\uff0c\u5bbf\u820d\u4f9d\u65e7\u51b0\u51b0\u51b7\u51b7\u3002\u4e2d\u5348\u6709\u4e9b\u997f\uff0c\u4e70\u7684\u96f6\u98df\u6ca1\u5403\u4e24\u53e3\uff0c\u8eba\u4e0b\u7761\u5348\u89c9\uff0c\u4f46\u597d\u50cf\u6ca1\u7761\u7740\u3002 \u665a\u4e0a\u996d\u540e\u628a\u8863\u670d\u6d17\u51c0\uff0c\u5750\u5728\u7535\u8111\u524d\u628ahexo\u5728\u65b0\u7535\u8111\u4e0a\u91cd\u65b0\u642d\u5efa\u8d77\u6765\u3002\u8d77\u5148\u4ec5\u4ec5\u60f3\u5199\u4e00\u4e0b\u65b0\u5e74\u613f\u671b\u7684\uff08\u627e\u4e0d\u5230\u4e86\uff09\uff0c\u5199\u7740\u5199\u7740\u5c31\u7d6e\u53e8\u5230\u73b0\u5728\u4e86\u3002\u9694\u58c1\u4e0d\u77e5\u9053\u54ea\u4e2a\u5bbf\u820d\u4f20\u6765\u7537\u7537\u5973\u5973\u201c\u9c7c\u9f99\u6df7\u6742\u201d\u7684\u7b11\u58f0\u3002 \u56de\u9996\u4e00\u4e0b2017\u5e74\u5427\u3002\u5148\u7f57\u5217\u81ea\u8ba4\u4e3a\u6bd4\u8f83\u91cd\u8981\u7684\u4e8b\u60c5\uff1a - 2\u6708\uff0c \u65b0\u5e74 - 3\u6708\uff0c \u5199\u6bd5\u8bbe\uff0c\u4e8b\u4e1a\u5355\u4f4d\u521d\u8bd5\uff08\u540e\u6765\u6ca1\u8fdb\u9762\u8bd5\uff09\uff0c\u7ed3\u8bc6\u8868\u59b9XX - 4\u6708\uff0c \u8003\u535a\u521d\u8bd5\uff0c \u53bb\u6210\u90fd\u627e\u5c0f\u5fd7\u73a9 - 5\u6708\uff0c \u8003\u535a\u590d\u8bd5\uff0c \u6bd5\u8bbe\u7b54\u8fa9 - 6\u6708\uff0c \u7855\u58eb\u6bd5\u4e1a\u4e86\uff0cYW - 7\u6708\uff0c \u53bb\u4e0a\u6d77\u4e09\u5929\uff08\u4ee5\u5f00\u4f1a\u5b66\u4e60\u4e3a\u7531\uff09 - 8\u6708\uff0c ZMY - 9\u6708\uff0c \u535a\u58eb\u5f00\u5b66 - 11\u6708\uff0c \u53bb\u5317\u4eac\u4e24\u5929\uff0c\u53bb\u957f\u6c99\u4e09\u5929 \u8fd9\u6837\u60f3\u60f3\u5176\u5b9e\u4e5f\u505a\u4e86\u633a\u591a\u4e8b\u60c5\u561b\u3002\u3002\u3002\u8fd8\u6709\u5f88\u591a\u4e0d\u592a\u8d77\u773c\u7684\u7ec6\u8282\u4e8b\u4ef6\u5427\uff0c\u73b0\u5728\u6ca1\u6709\u592a\u60f3\u8d77\u3002 \u6700\u540e\u7684\u4e24\u4e2a\u6708\u6709\u70b9\u6d88\u6781\uff0c\u7279\u522b\u662f12\u6708\uff0c\u5f88\u6d88\u6781\u3002\u540c\u65f6\uff0c\u5728\u516c\u53f8\u548c\u5979\u5f00\u59cb\u804a\u5929\u4e86\u3002\u6bcf\u5929\u90fd\u80fd\u9047\u5230\u5979\uff0c\u5fc3\u91cc\u8fd8\u662f\u4f1a\u8361\u8d77\u6d9f\u6f2a\u3002\u90fd\u8fd9\u4e48\u4e45\u4e86\uff0c\u81ea\u5df1\u7adf\u7136\u8fd8\u4f1a\u8fd9\u4e2a\u6837\u5b50\u3002 \u597d\u5566\u597d\u5566\uff0c2017\u5e74\u8fc7\u7684\u8fd8\u7b97\u5706\u6ee1\u4e86\u3002\u672c\u547d\u5e74\u8fc7\u53bb\u4e86\uff0c2018-1993=25\uff0c\u6211\u4e5f25\u4e86\u3002\u524d\u4e24\u5929\u8fd8\u5728\u670b\u53cb\u5708\u6d41\u884c18\u5c81\u7167\u7247\uff0c\u662f\u7684\uff0c\u6700\u540e\u4e00\u627990\u540e\u4e5f18\u5c81\u6210\u5e74\u4e86\u3002 2018\u5e74\u4f0a\u59cb\uff0c\u8bf4\u70b9\u597d\u542c\u7684\u5427\u3002  \u613f\u4f60\u6709\u9152\u6709\u8089\u6709\u59d1\u5a18\uff0c\u80fd\u8d2b\u80fd\u7b11\u80fd\u5e72\u67b6\uff0c\u6b64\u751f\u7eb5\u60c5\u8c41\u8fbe  \u613f\u8d2a\u5403\u4e0d\u80d6\uff0c\u613f\u957f\u751f\u4e0d\u8001\uff0c\u613f\u7f8e\u68a6\u4e0d\u7a7a\uff0c\u613f\u6df1\u60c5\u4e0d\u8d1f  \u6240\u6709\u5feb\u4e50\uff0c\u65e0\u9700\u5047\u88c5  \u6b64\u751f\u5c3d\u5174\uff0c\u8d64\u8bda\u5584\u826f   \u65b0\u5e74\u5fc3\u613f\uff1a\n \u4e00\u7bc7paper\n\u73a9\u4f1a\u795e\u7ecf\u7f51\u7edc\uff0c\u5165\u95e8\u6df1\u5ea6\u5b66\u4e60\n\u73a9\u4f1a\u5409\u4ed6\n\u6212\u6389\u4e00\u76f4\u4ee5\u6765\u7684\u574f\u6bdb\u75c5\n\u5b66\u4f1a\u91ca\u6000\n\u6258\u798f\uff08Orz,\u8fd9\u4e2a\u597d\u96be\uff09\n\u9047\u5230\u5fc3\u7231\u4e4b\u4eba\uff08\u540c\u6837\u96be\uff0c\uff09\n",
        "description": "",
        "id": 123,
        "section": "posts",
        "tags": null,
        "title": "\u5199\u57282018\u5e74\u7684\u7b2c\u4e00\u5929",
        "uri": "/posts/journals/2018-01-01-%E5%86%99%E5%9C%A82018%E5%B9%B4%E7%9A%84%E7%AC%AC%E4%B8%80%E5%A4%A9/"
    }
]